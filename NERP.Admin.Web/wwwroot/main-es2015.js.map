{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/accessories/views/accessory-details.html","./src/app/accessories/views/accessory-list.html","./src/app/activityLogs/views/activityLog-details.html","./src/app/activityLogs/views/activityLog-list.html","./src/app/app.component.html","./src/app/civilworks/views/civilwork-details.html","./src/app/civilworks/views/civilwork-list.html","./src/app/components/data-table/dt-pagination.html","./src/app/components/data-table/dt-search.html","./src/app/dashboard/views/dashboard.html","./src/app/entities/components/custom-fields.html","./src/app/entities/components/supplier.html","./src/app/entities/components/templateinfo.html","./src/app/entities/views/cable-details.html","./src/app/entities/views/chamber-details.html","./src/app/entities/views/duct-details.html","./src/app/entities/views/entity-list.html","./src/app/entities/views/fat-details.html","./src/app/entities/views/fdt-details.html","./src/app/entities/views/homepass-details.html","./src/app/entities/views/odf-details.html","./src/app/entities/views/pole-details.html","./src/app/entities/views/spliceClosure-details.html","./src/app/entities/views/splitter-details.html","./src/app/generalSettings/views/generalSetting-details.html","./src/app/groups/views/group-details.html","./src/app/groups/views/group-list.html","./src/app/layers/views/layer-details.html","./src/app/layers/views/layer-list.html","./src/app/roles/views/role-details.html","./src/app/roles/views/role-list.html","./src/app/users/views/user-details.html","./src/app/users/views/user-list.html","./node_modules/tslib/tslib.es6.js","./src/app/accessories/accessory.module.ts","./src/app/accessories/accessory.routes.ts","./src/app/accessories/models/accessory.ts","./src/app/accessories/services/accessory.service.ts","./src/app/accessories/views/accessory-details.ts","./src/app/accessories/views/accessory-list.ts","./src/app/activityLogs/activityLog.module.ts","./src/app/activityLogs/activityLog.routes.ts","./src/app/activityLogs/models/activityLog.ts","./src/app/activityLogs/services/activityLog.service.ts","./src/app/activityLogs/views/activityLog-details.ts","./src/app/activityLogs/views/activityLog-list.ts","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/app.routing.ts","./src/app/civilworks/civilwork.module.ts","./src/app/civilworks/civilwork.routes.ts","./src/app/civilworks/models/civilwork.ts","./src/app/civilworks/services/civilwork.service.ts","./src/app/civilworks/views/civilwork-details.ts","./src/app/civilworks/views/civilwork-list.ts","./src/app/common/auth/auth.service.ts","./src/app/common/helper.ts","./src/app/common/interceptors/cacheInterceptor.ts","./src/app/common/models/customField.ts","./src/app/common/models/dbBaseEntity.ts","./src/app/common/models/loginUser.ts","./src/app/common/models/paginationRequest.ts","./src/app/components/data-table/dt-pagination.ts","./src/app/components/data-table/dt-search.ts","./src/app/dashboard/services/dashboard.service.ts","./src/app/dashboard/views/dashboard.ts","./src/app/entities/components/custom-fields.ts","./src/app/entities/components/supplier.ts","./src/app/entities/components/templateinfo.ts","./src/app/entities/entities.module.ts","./src/app/entities/entities.routes.ts","./src/app/entities/models/baseNetworkEntity.ts","./src/app/entities/models/cable.ts","./src/app/entities/models/chamber.ts","./src/app/entities/models/duct.ts","./src/app/entities/models/fat.ts","./src/app/entities/models/fdt.ts","./src/app/entities/models/homepass.ts","./src/app/entities/models/installation.ts","./src/app/entities/models/odf.ts","./src/app/entities/models/optics.ts","./src/app/entities/models/owner.ts","./src/app/entities/models/pole.ts","./src/app/entities/models/spliceClosure.ts","./src/app/entities/models/splitter.ts","./src/app/entities/services/cable.service.ts","./src/app/entities/services/chamber.service.ts","./src/app/entities/services/duct.service.ts","./src/app/entities/services/fat.service.ts","./src/app/entities/services/fdt.service.ts","./src/app/entities/services/homepass.service.ts","./src/app/entities/services/odf.service.ts","./src/app/entities/services/pole.service.ts","./src/app/entities/services/spliceClosure.service.ts","./src/app/entities/services/splitter.service.ts","./src/app/entities/views/cable-details.ts","./src/app/entities/views/chamber-details.ts","./src/app/entities/views/duct-details.ts","./src/app/entities/views/entity-list.ts","./src/app/entities/views/fat-details.ts","./src/app/entities/views/fdt-details.ts","./src/app/entities/views/homepass-details.ts","./src/app/entities/views/odf-details.ts","./src/app/entities/views/pole-details.ts","./src/app/entities/views/spliceClosure-details.ts","./src/app/entities/views/splitter-details.ts","./src/app/generalSettings/generalSettings.module.ts","./src/app/generalSettings/generalSettings.routes.ts","./src/app/generalSettings/model/generalSettings.ts","./src/app/generalSettings/services/generalSettings.service.ts","./src/app/generalSettings/views/generalSettings-details.ts","./src/app/groups/group.module.ts","./src/app/groups/group.routes.ts","./src/app/groups/models/group.ts","./src/app/groups/services/group.service.ts","./src/app/groups/views/group-details.ts","./src/app/groups/views/group-list.ts","./src/app/layers/layer.module.ts","./src/app/layers/layer.routes.ts","./src/app/layers/models/layer.ts","./src/app/layers/services/layer.service.ts","./src/app/layers/views/layer-details.ts","./src/app/layers/views/layer-list.ts","./src/app/modules/services/module.service.ts","./src/app/roles/models/role.ts","./src/app/roles/role.module.ts","./src/app/roles/role.routes.ts","./src/app/roles/services/role.service.ts","./src/app/roles/views/role-details.ts","./src/app/roles/views/role-list.ts","./src/app/shared.module.ts","./src/app/users/models/user.ts","./src/app/users/services/user.service.ts","./src/app/users/user.module.ts","./src/app/users/user.routes.ts","./src/app/users/views/user-details.ts","./src/app/users/views/user-list.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \"<section class=\\\"content-header\\\">\\r\\n   <h1>Manage Accessories <small> {{title}} </small></h1>\\r\\n   <ol class=\\\"breadcrumb\\\">\\r\\n      <li><a [routerLink]=\\\"['/']\\\"><i class=\\\"fa fa-home\\\"></i> Home</a></li>\\r\\n      <li><a [routerLink]=\\\"['/accessories']\\\"> Accessories</a></li>\\r\\n   </ol>\\r\\n</section>\\r\\n<section class=\\\"content\\\">\\r\\n   <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-xs-12\\\">\\r\\n         <div class=\\\"box\\\">\\r\\n            <div class=\\\"box-header with-border ui-sortable-handle\\\">\\r\\n               <h3 class=\\\"box-title\\\">Accessory Details</h3>\\r\\n               <div class=\\\"box-tools pull-right\\\" data-original-title=\\\"Status\\\" data-toggle=\\\"tooltip\\\" title=\\\"\\\">\\r\\n                  <button class=\\\"btn btn-social-icon btn-xs btn-danger\\\" (click)=\\\"goBack()\\\">\\r\\n                     <i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                  </button>\\r\\n                  <button class=\\\"btn btn-social-icon btn-xs btn-success\\\" type=\\\"submit\\\" style=\\\"margin-left: 5px;\\\" (click)=\\\"save()\\\" [disabled]=\\\"form.invalid\\\">\\r\\n                     <i class=\\\"far fa-save\\\"></i>\\r\\n                  </button>\\r\\n               </div>\\r\\n            </div>\\r\\n            <form name=\\\"form\\\" action=\\\"javascript:{}\\\" #form=\\\"ngForm\\\" novalidate autocomplete=\\\"off\\\">\\r\\n               <div class=\\\"box-body\\\">\\r\\n                  <div class=\\\"panel panel-default\\\">\\r\\n                     <div class=\\\"panel-heading\\\">\\r\\n                        <h4 class=\\\"panel-title\\\">\\r\\n                           General Information\\r\\n                        </h4>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel-collapse collapse in\\\">\\r\\n                        <div class=\\\"panel-body\\\">\\r\\n                           <div class=\\\"form-group col-md-6\\\">\\r\\n                              <label for=\\\"name\\\" class=\\\"control-label\\\">Name <span style=\\\"color:red;\\\">*</span></label>\\r\\n                              <input type=\\\"text\\\" name=\\\"name\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"accessory.name\\\" required />\\r\\n                           </div>\\r\\n                           <div class=\\\"form-group col-md-6\\\">\\r\\n                              <label for=\\\"parentType\\\" class=\\\"control-label\\\">Parent Type</label>\\r\\n                              <mat-select name=\\\"parentType\\\" [(ngModel)]=\\\"accessory.parentEntityType\\\">\\r\\n                                 <mat-option>Select Parent Entity Type</mat-option>\\r\\n                                 <mat-option value=\\\"Cable\\\">Cable</mat-option>\\r\\n                                 <mat-option value=\\\"Chamber\\\">Chamber</mat-option>\\r\\n                                 <mat-option value=\\\"PoP\\\">PoP</mat-option>\\r\\n                                 <mat-option value=\\\"ODF\\\">ODF</mat-option>\\r\\n                                 <mat-option value=\\\"Pole\\\">Pole</mat-option>\\r\\n                                 <mat-option value=\\\"Duct\\\">Duct</mat-option>\\r\\n                                 <mat-option value=\\\"SpliceClosure\\\">Splice Closure</mat-option>\\r\\n                                 <mat-option value=\\\"Splitter\\\">Splitter</mat-option>\\r\\n                                 <mat-option value=\\\"Customer\\\">Customer</mat-option>\\r\\n                                 <mat-option value=\\\"Microduct\\\">Microduct</mat-option>\\r\\n                                 <mat-option value=\\\"Site\\\">Site</mat-option>\\r\\n                                 <mat-option value=\\\"Homepass\\\">Homepass</mat-option>\\r\\n                              </mat-select>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"panel-group\\\" id=\\\"accordion\\\">\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#make\\\">Make</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"make\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"type\\\" class=\\\"control-label\\\">Type</label>\\r\\n                                    <input type=\\\"text\\\" name=\\\"type\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"accessory.type\\\" />\\r\\n                                 </div>\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"brand\\\" class=\\\"control-label\\\">Brand</label>\\r\\n                                    <input type=\\\"text\\\" name=\\\"brand\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"accessory.brand\\\" />\\r\\n                                 </div>\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"model\\\" class=\\\"control-label\\\">Model</label>\\r\\n                                    <input type=\\\"text\\\" name=\\\"model\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"accessory.model\\\" />\\r\\n                                 </div>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#zoomSettings\\\">Zoom Settings</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"zoomSettings\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\" style=\\\"padding-top: 35px;\\\">\\r\\n                              <div class=\\\"col-sm-11\\\">\\r\\n                                 <mat-slider name=\\\"zoomLevel\\\" thumbLabel step=\\\"1\\\" min=\\\"0\\\" max=\\\"21\\\" style=\\\"width:100%\\\" [(ngModel)]=\\\"accessory.zoomLevel\\\"></mat-slider>\\r\\n                              </div>\\r\\n                              <div class=\\\"col-sm-1\\\" style=\\\"padding-top: 7px;\\\">\\r\\n                                 <input type=\\\"number\\\" min=\\\"0\\\" max=\\\"21\\\" class=\\\"form-control input-sm\\\" name=\\\"zoom\\\" [(ngModel)]=\\\"accessory.zoomLevel\\\">\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#pricing\\\">Pricing</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"pricing\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <div class=\\\"form-group\\\">\\r\\n                                    <table class=\\\"table table-bordered table-striped\\\">\\r\\n                                       <thead>\\r\\n                                          <tr>\\r\\n                                             <th style=\\\"width:200px\\\">Supplier</th>\\r\\n                                             <th style=\\\"width:200px\\\">SKU</th>\\r\\n                                             <th style=\\\"width:200px\\\">Price</th>\\r\\n                                             <th style=\\\"width: 140px;\\\">Valid From</th>\\r\\n                                             <th style=\\\"width: 140px;\\\">Valid To</th>\\r\\n                                             <th style=\\\"text-align: center;padding: 2px 0px;width: 50px;\\\">\\r\\n                                                <a (click)=\\\"addNewSupplier()\\\" style=\\\"cursor:pointer\\\">\\r\\n                                                   <i class=\\\"fas fa-plus-circle\\\" title=\\\"Add\\\" style=\\\"font-size: 20px; color: #3e53a4;margin: 5px;\\\"></i>\\r\\n                                                </a>\\r\\n                                             </th>\\r\\n                                          </tr>\\r\\n                                       </thead>\\r\\n                                       <tbody>\\r\\n                                          <ng-container *ngIf='accessory.suppliers && accessory.suppliers.length > 0'>\\r\\n                                             <tr *ngFor='let supplier of accessory.suppliers; let rowIndex = index;'>\\r\\n                                                <td><input type=\\\"text\\\" class=\\\"form-control input-sm\\\" autocomplete=\\\"off\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"supplier.name\\\"></td>\\r\\n                                                <td><input type=\\\"text\\\" class=\\\"form-control input-sm\\\" autocomplete=\\\"off\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"supplier.sku\\\"></td>\\r\\n                                                <td><input type=\\\"number\\\" class=\\\"form-control input-sm\\\" autocomplete=\\\"off\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"supplier.price\\\"></td>\\r\\n                                                <td><input type=\\\"date\\\" class=\\\"form-control input-sm\\\" autocomplete=\\\"off\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [ngModel]=\\\"supplier.validFrom | date:'yyyy-MM-dd'\\\" (ngModelChange)=\\\"supplier.validFrom = $event\\\"></td>\\r\\n                                                <td><input type=\\\"date\\\" class=\\\"form-control input-sm\\\" autocomplete=\\\"off\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [ngModel]=\\\"supplier.validTo | date:'yyyy-MM-dd'\\\" (ngModelChange)=\\\"supplier.validTo = $event\\\"></td>\\r\\n                                                <td style=\\\"text-align:center;padding-top: 14px;\\\">\\r\\n                                                   <a (click)=\\\"deleteSupplier(rowIndex)\\\" style=\\\"cursor:pointer\\\">\\r\\n                                                      <i class=\\\"fas fa-trash-alt\\\" title=\\\"Delete\\\" style=\\\"font-size: 15px; color: Red;\\\"></i>\\r\\n                                                   </a>\\r\\n                                                </td>\\r\\n                                             </tr>\\r\\n                                          </ng-container>\\r\\n                                          <tr *ngIf='accessory.suppliers == null || accessory.suppliers.length == 0'>\\r\\n                                             <td colspan=\\\"6\\\" class=\\\"check-mail\\\" style=\\\"text-align: center;\\\">\\r\\n                                                Supplier not defined\\r\\n                                             </td>\\r\\n                                          </tr>\\r\\n                                       </tbody>\\r\\n                                    </table>\\r\\n                                 </div>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n\\r\\n                  </div>\\r\\n\\r\\n               </div>\\r\\n               <div class=\\\"box-footer\\\">\\r\\n                  <div class=\\\"pull-right\\\">\\r\\n                     <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"goBack()\\\">Close</button>\\r\\n                     <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" style=\\\"margin-left:10px\\\" (click)=\\\"save()\\\" [disabled]=\\\"form.invalid\\\">Save</button>\\r\\n                  </div>\\r\\n               </div>\\r\\n            </form>\\r\\n         </div>\\r\\n      </div>\\r\\n   </div>\\r\\n</section>\\r\\n\"","export default \"<section class=\\\"content-header\\\">\\r\\n   <h1>Manage Accessories</h1>\\r\\n   <ol class=\\\"breadcrumb\\\">\\r\\n      <li><a [routerLink]=\\\"['/home']\\\"><i class=\\\"fas fa-home\\\"></i> Home</a></li>\\r\\n   </ol>\\r\\n</section>\\r\\n\\r\\n<section class=\\\"content\\\">\\r\\n   <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-xs-12\\\">\\r\\n         <div class=\\\"box\\\">\\r\\n            <div class=\\\"box-header with-border\\\">\\r\\n               <h3 class=\\\"box-title\\\">Accessory List</h3>\\r\\n               <div class=\\\"box-tools pull-right\\\" data-toggle=\\\"tooltip\\\" title=\\\"\\\" data-original-title=\\\"Status\\\">\\r\\n                  <button [routerLink]=\\\"['details']\\\" class=\\\"btn btn-block btn-xs btn-primary\\\"> New Accessory</button>\\r\\n               </div>\\r\\n            </div>\\r\\n            <div class=\\\"box-body\\\">\\r\\n               <dt-search [searchFields]=\\\"searchFields\\\" (onSearch)=\\\"search($event)\\\"></dt-search>\\r\\n               <dt-pagination [totalPages]=\\\"totalPages\\\" (onPageSizeChange)=\\\"onPageSizeChange($event)\\\" (onPageChange)=\\\"onPageChange($event)\\\"></dt-pagination>\\r\\n\\r\\n               <table class=\\\"table table-bordered table-striped\\\">\\r\\n                  <thead>\\r\\n                     <tr (click)=\\\"onColumnClick($event.target)\\\">\\r\\n                        <th data-column=\\\"Name\\\" class=\\\"table-sorter\\\" style=\\\"width: 200px;\\\">Name</th>\\r\\n                        <th data-column=\\\"ParentEntityType\\\" class=\\\"table-sorter\\\" style=\\\"max-width:300px\\\">Parent Type</th>\\r\\n                        <th data-column=\\\"UpdatedBy\\\" class=\\\"table-sorter\\\" style=\\\"width: 150px;\\\">Updated By</th>\\r\\n                        <th data-column=\\\"UpdatedDate\\\" class=\\\"table-sorter\\\" style=\\\"width: 125px;\\\">Updated On</th>\\r\\n                        <th style=\\\"width:60px\\\"></th>\\r\\n                     </tr>\\r\\n                  </thead>\\r\\n                  <tbody>\\r\\n                     <ng-container *ngIf='accessories && accessories.length > 0'>\\r\\n                        <tr *ngFor='let accessory of accessories'>\\r\\n                           <td>{{accessory.name}}</td>\\r\\n                           <td class=\\\"text-overflow-ellipsis\\\">{{accessory.parentEntityType}}</td>\\r\\n                           <td>{{accessory.updatedBy}}</td>\\r\\n                           <td>{{accessory.updatedDate | date:'dd/MM/yyyy'}}</td>\\r\\n                           <td>\\r\\n                              <a>\\r\\n                                 <i class=\\\"fa fa-edit\\\" [routerLink]=\\\"['details', accessory.id]\\\" title=\\\"Edit\\\" style=\\\"font-size: 14px; cursor:pointer\\\"></i>\\r\\n                              </a>&nbsp;\\r\\n                              <a>\\r\\n                                 <i class=\\\"fa fa-trash\\\" (click)=\\\"delete(accessory)\\\" title=\\\"Remove\\\" style=\\\"font-size: 14px; cursor:pointer; color:red\\\"></i>\\r\\n                              </a>\\r\\n                           </td>\\r\\n                        </tr>\\r\\n                     </ng-container>\\r\\n                     <tr *ngIf='accessories == null || accessories.length == 0'>\\r\\n                        <td colspan=\\\"5\\\" style=\\\"text-align: center;\\\">\\r\\n                           {{statusMessage}}\\r\\n                        </td>\\r\\n                     </tr>\\r\\n                  </tbody>\\r\\n               </table>\\r\\n            </div>\\r\\n         </div>\\r\\n      </div>\\r\\n   </div>\\r\\n</section>\\r\\n\"","export default \"<section class=\\\"content-header\\\">\\r\\n   <h1>Activity Log Details</h1>\\r\\n   <ol class=\\\"breadcrumb\\\">\\r\\n      <li><a [routerLink]=\\\"['/']\\\"><i class=\\\"fa fa-home\\\"></i> Home</a></li>\\r\\n      <li><a [routerLink]=\\\"['/activityLogs']\\\"> Activity Logs</a></li>\\r\\n   </ol>\\r\\n</section>\\r\\n\\r\\n<section class=\\\"content\\\">\\r\\n   <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-xs-12\\\">\\r\\n         <div class=\\\"box\\\">\\r\\n            <div class=\\\"box-header with-border ui-sortable-handle\\\">\\r\\n               <h3 class=\\\"box-title\\\">Activity Log Details</h3>\\r\\n               <div class=\\\"box-tools pull-right\\\" data-original-title=\\\"Status\\\" data-toggle=\\\"tooltip\\\" title=\\\"\\\">\\r\\n                  <button class=\\\"btn btn-social-icon btn-xs btn-danger\\\" (click)=\\\"goBack()\\\">\\r\\n                     <i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                  </button>\\r\\n               </div>\\r\\n            </div>\\r\\n            <form name=\\\"activityLogForm\\\" action=\\\"javascript:{}\\\" #activityLogForm=\\\"ngForm\\\" novalidate autocomplete=\\\"off\\\">\\r\\n               <div class=\\\"box-body\\\">\\r\\n                  <div>\\r\\n                     <div class=\\\"col-md-6 form-group\\\">\\r\\n                        <label for=\\\"createdDate\\\" class=\\\"control-label\\\">Activity Date</label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control input-sm\\\" name=\\\"loginId\\\" [ngModel]=\\\"activityLog.activityOn\\\" readonly>\\r\\n                     </div>\\r\\n                     <div class=\\\"col-md-6 form-group\\\">\\r\\n                        <label for=\\\"loginUser\\\" class=\\\"control-label\\\">Accessed By</label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control input-sm\\\" name=\\\"loginUser\\\" [ngModel]=\\\"activityLog.loginId\\\" readonly>\\r\\n                     </div>\\r\\n                     <div class=\\\"col-md-6 form-group\\\">\\r\\n                        <label for=\\\"webServer\\\" class=\\\"control-label\\\">Web Server</label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control input-sm\\\" name=\\\"webServer\\\" [ngModel]=\\\"activityLog.webServer\\\" readonly>\\r\\n                     </div>\\r\\n                     <div class=\\\"col-md-6 form-group\\\">\\r\\n                        <label for=\\\"ipAddress\\\" class=\\\"control-label\\\">Source IP Address</label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control input-sm\\\" name=\\\"ipAddress\\\" [ngModel]=\\\"activityLog.sourceIP\\\" readonly>\\r\\n                     </div>\\r\\n                     <div class=\\\"col-md-6 form-group\\\">\\r\\n                        <label for=\\\"application\\\" class=\\\"control-label\\\">Application</label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control input-sm\\\" name=\\\"application\\\" [ngModel]=\\\"activityLog.application\\\" readonly>\\r\\n                     </div>\\r\\n                     <div class=\\\"col-md-6 form-group\\\">\\r\\n                        <label for=\\\"module\\\" class=\\\"control-label\\\">Module/Function</label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control input-sm\\\" name=\\\"module\\\" [ngModel]=\\\"module_function\\\" readonly>\\r\\n                     </div>\\r\\n                     <div class=\\\"col-md-12 form-group\\\">\\r\\n                        <label for=\\\"otherInfo\\\" class=\\\"control-label\\\">Other Information (Parameters)</label>\\r\\n                        <textarea class=\\\"form-control\\\" rows=\\\"15\\\" name=\\\"otherInfo\\\" [ngModel]=\\\"otherInfo\\\" readonly></textarea>\\r\\n                     </div>\\r\\n                  </div>\\r\\n               </div>\\r\\n               <div class=\\\"box-footer\\\">\\r\\n                  <div class=\\\"pull-right\\\">\\r\\n                     <div>\\r\\n                        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"goBack()\\\">Close</button>\\r\\n                     </div>\\r\\n                  </div>\\r\\n               </div>\\r\\n            </form>\\r\\n         </div>\\r\\n      </div>\\r\\n   </div>\\r\\n</section>\\r\\n\"","export default \"<section class=\\\"content-header\\\">\\r\\n   <h1>Activity Logs</h1>\\r\\n   <ol class=\\\"breadcrumb\\\">\\r\\n      <li><a [routerLink]=\\\"['/home']\\\"><i class=\\\"fas fa-home\\\"></i> Home</a></li>\\r\\n   </ol>\\r\\n</section>\\r\\n\\r\\n<section class=\\\"content\\\">\\r\\n   <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-xs-12\\\">\\r\\n         <div class=\\\"box\\\">\\r\\n            <div class=\\\"box-header with-border\\\">\\r\\n               <h3 class=\\\"box-title\\\">Activity Logs</h3>\\r\\n            </div>\\r\\n            <div class=\\\"box-body\\\">\\r\\n\\r\\n               <dt-search [searchFields]=\\\"searchFields\\\" (onSearch)=\\\"search($event)\\\"></dt-search>\\r\\n               <dt-pagination [totalPages]=\\\"totalPages\\\" (onPageSizeChange)=\\\"onPageSizeChange($event)\\\" (onPageChange)=\\\"onPageChange($event)\\\"></dt-pagination>\\r\\n\\r\\n               <table id=\\\"groups\\\" class=\\\"table table-bordered table-striped\\\">\\r\\n                  <thead>\\r\\n                     <tr (click)=\\\"onColumnClick($event.target)\\\">\\r\\n                        <th data-column=\\\"ActivityOn\\\" class=\\\"table-sorter\\\" style=\\\"width: 200px;\\\">Activity Date</th>\\r\\n                        <th data-column=\\\"LoginId\\\" class=\\\"table-sorter\\\">Accessed By</th>\\r\\n                        <th data-column=\\\"SourceIP\\\" class=\\\"table-sorter\\\" style=\\\"width: 130px;\\\">Source IP</th>\\r\\n                        <th data-column=\\\"Application\\\" class=\\\"table-sorter\\\">Application</th>\\r\\n                        <th data-column=\\\"Module\\\" class=\\\"table-sorter\\\">Module</th>\\r\\n                        <th data-column=\\\"Action\\\" class=\\\"table-sorter\\\">Action</th>\\r\\n                        <th style=\\\"width:42px\\\"></th>\\r\\n                     </tr>\\r\\n                  </thead>\\r\\n                  <tbody>\\r\\n                     <ng-container *ngIf='activityLogs && activityLogs.length > 0'>\\r\\n                        <tr *ngFor='let activityLog of activityLogs'>\\r\\n                           <td>{{activityLog.createdDate | date:'dd-MM-yyyy'}} {{ activityLog.createdDate | date:'HH:mm:ss a'}}</td>\\r\\n                           <td>{{activityLog.loginId}}</td>\\r\\n                           <td>{{activityLog.sourceIP}}</td>\\r\\n                           <td class=\\\"text-overflow-ellipsis\\\">{{activityLog.application}}</td>\\r\\n                           <td class=\\\"text-overflow-ellipsis\\\">{{activityLog.module}}</td>\\r\\n                           <td class=\\\"text-overflow-ellipsis\\\">{{activityLog.action}}</td>\\r\\n                           <td>\\r\\n                              <a>\\r\\n                                 <i class=\\\"fa fa-edit\\\" [routerLink]=\\\"['details', activityLog.id]\\\" title=\\\"View\\\" style=\\\"font-size: 14px; cursor:pointer\\\"></i>\\r\\n                              </a>\\r\\n                           </td>\\r\\n                        </tr>\\r\\n                     </ng-container>\\r\\n                     <tr *ngIf='activityLogs == null || activityLogs.length == 0'>\\r\\n                        <td colspan=\\\"7\\\" style=\\\"text-align: center;\\\">\\r\\n                           {{statusMessage}}\\r\\n                        </td>\\r\\n                     </tr>\\r\\n                  </tbody>\\r\\n               </table>\\r\\n            </div>\\r\\n         </div>\\r\\n      </div>\\r\\n   </div>\\r\\n</section>\\r\\n\"","export default \"<div class=\\\"wrapper\\\">\\r\\n   <header class=\\\"main-header\\\">\\r\\n      <a href=\\\"/\\\" class=\\\"logo\\\">\\r\\n         <img src=\\\"images/logo.svg\\\" style=\\\"height: 35px;\\\">\\r\\n      </a>\\r\\n      <nav class=\\\"navbar\\\" role=\\\"navigation\\\">\\r\\n         <a href=\\\"#\\\" class=\\\"sidebar-toggle\\\" data-toggle=\\\"push-menu\\\" role=\\\"button\\\">\\r\\n            <i class=\\\"fas fa-bars\\\"></i>\\r\\n         </a>\\r\\n         <div class=\\\"navbar-custom-menu\\\">\\r\\n            <ul class=\\\"nav navbar-nav\\\">\\r\\n               <li>\\r\\n                  <a href=\\\"#\\\">\\r\\n                     <span class=\\\"hidden-xs\\\">{{loginUser.name}}</span>\\r\\n                  </a>\\r\\n               </li>\\r\\n               <li>\\r\\n                  <a [routerLink]=\\\"\\\" title=\\\"Logout\\\" class=\\\"nav-link\\\" (click)=\\\"onLogout()\\\"><i class=\\\"fas fa-sign-out-alt\\\"></i></a>\\r\\n               </li>\\r\\n            </ul>\\r\\n         </div>\\r\\n      </nav>\\r\\n   </header>\\r\\n   <aside class=\\\"main-sidebar\\\">\\r\\n      <section class=\\\"sidebar\\\">\\r\\n         <ul class=\\\"sidebar-menu\\\" data-widget=\\\"tree\\\">\\r\\n            <li class=\\\"header\\\">MAIN NAVIGATION</li>\\r\\n            <li [routerLinkActive]=\\\"['active']\\\"><a [routerLink]=\\\"['/home']\\\"><span>Home</span></a></li>\\r\\n            <li [routerLinkActive]=\\\"['active']\\\"><a [routerLink]=\\\"['/groups']\\\"><span>Groups</span></a></li>\\r\\n            <li [routerLinkActive]=\\\"['active']\\\"><a [routerLink]=\\\"['/roles']\\\"><span>Roles</span></a></li>\\r\\n            <li [routerLinkActive]=\\\"['active']\\\"><a [routerLink]=\\\"['/users']\\\"><span>Users</span></a></li>\\r\\n            <li [routerLinkActive]=\\\"['active']\\\"><a [routerLink]=\\\"['/entities']\\\"><span>Entities</span></a></li>\\r\\n            <li [routerLinkActive]=\\\"['active']\\\"><a [routerLink]=\\\"['/accessories']\\\"><span>Accessories</span></a></li>\\r\\n            <li [routerLinkActive]=\\\"['active']\\\"><a [routerLink]=\\\"['/civilworks']\\\"><span>Civil Works</span></a></li>\\r\\n            <!--<li [routerLinkActive]=\\\"['active']\\\"><a [routerLink]=\\\"['/layers']\\\"><span>Layers</span></a></li>-->\\r\\n            <li [routerLinkActive]=\\\"['active']\\\"><a [routerLink]=\\\"['/generalSettings']\\\"><span>General Settings</span></a></li>\\r\\n            <li [routerLinkActive]=\\\"['active']\\\"><a [routerLink]=\\\"['/activityLogs']\\\"><span>Activity Logs</span></a></li>\\r\\n         </ul>\\r\\n      </section>\\r\\n   </aside>\\r\\n   <div class=\\\"content-wrapper\\\">\\r\\n      <router-outlet></router-outlet>\\r\\n   </div>\\r\\n   <footer class=\\\"main-footer\\\">\\r\\n      <span>&copy; Pitney Bowes 2019</span>\\r\\n      <!--<div class=\\\"pull-right hidden-xs\\\">\\r\\n         <span>Best view with IE 11, Mozilla 51, Chrome 55 and Safari 10 and above</span>\\r\\n      </div>-->\\r\\n   </footer>\\r\\n</div>\\r\\n\"","export default \"<section class=\\\"content-header\\\">\\r\\n   <h1>Manage Civil Works <small> {{title}} </small></h1>\\r\\n   <ol class=\\\"breadcrumb\\\">\\r\\n      <li><a [routerLink]=\\\"['/']\\\"><i class=\\\"fa fa-home\\\"></i> Home</a></li>\\r\\n      <li><a [routerLink]=\\\"['/civilworks']\\\"> Civilworks</a></li>\\r\\n   </ol>\\r\\n</section>\\r\\n<section class=\\\"content\\\">\\r\\n   <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-xs-12\\\">\\r\\n         <div class=\\\"box\\\">\\r\\n            <div class=\\\"box-header with-border ui-sortable-handle\\\">\\r\\n               <h3 class=\\\"box-title\\\">Civil Work Details</h3>\\r\\n               <div class=\\\"box-tools pull-right\\\" data-original-title=\\\"Status\\\" data-toggle=\\\"tooltip\\\" title=\\\"\\\">\\r\\n                  <button class=\\\"btn btn-social-icon btn-xs btn-danger\\\" (click)=\\\"goBack()\\\">\\r\\n                     <i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                  </button>\\r\\n                  <button class=\\\"btn btn-social-icon btn-xs btn-success\\\" type=\\\"submit\\\" style=\\\"margin-left: 5px;\\\" (click)=\\\"save()\\\" [disabled]=\\\"form.invalid\\\">\\r\\n                     <i class=\\\"far fa-save\\\"></i>\\r\\n                  </button>\\r\\n               </div>\\r\\n            </div>\\r\\n            <form name=\\\"form\\\" action=\\\"javascript:{}\\\" #form=\\\"ngForm\\\" novalidate autocomplete=\\\"off\\\">\\r\\n               <div class=\\\"box-body\\\">\\r\\n                  <div class=\\\"panel panel-default\\\">\\r\\n                     <div class=\\\"panel-heading\\\">\\r\\n                        <h4 class=\\\"panel-title\\\">\\r\\n                           General Information\\r\\n                        </h4>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel-collapse collapse in\\\">\\r\\n                        <div class=\\\"panel-body\\\">\\r\\n                           <div class=\\\"form-group col-md-6\\\">\\r\\n                              <label for=\\\"name\\\" class=\\\"control-label\\\">Name <span style=\\\"color:red;\\\">*</span></label>\\r\\n                              <input type=\\\"text\\\" name=\\\"name\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"civilwork.name\\\" required  />\\r\\n                           </div>\\r\\n                           <div class=\\\"form-group col-md-6\\\">\\r\\n                              <label for=\\\"parentType\\\" class=\\\"control-label\\\">Parent Type</label>\\r\\n                              <mat-select name=\\\"parentType\\\" [(ngModel)]=\\\"civilwork.parentEntityType\\\">\\r\\n                                 <mat-option>Select Parent Entity Type</mat-option>\\r\\n                                 <mat-option value=\\\"Cable\\\">Cable</mat-option>\\r\\n                                 <mat-option value=\\\"Chamber\\\">Chamber</mat-option>\\r\\n                                 <mat-option value=\\\"PoP\\\">PoP</mat-option>\\r\\n                                 <mat-option value=\\\"ODF\\\">ODF</mat-option>\\r\\n                                 <mat-option value=\\\"Pole\\\">Pole</mat-option>\\r\\n                                 <mat-option value=\\\"Duct\\\">Duct</mat-option>\\r\\n                                 <mat-option value=\\\"SpliceClosure\\\">Splice Closure</mat-option>\\r\\n                                 <mat-option value=\\\"Splitter\\\">Splitter</mat-option>\\r\\n                                 <mat-option value=\\\"Customer\\\">Customer</mat-option>\\r\\n                                 <mat-option value=\\\"Microduct\\\">Microduct</mat-option>\\r\\n                                 <mat-option value=\\\"Site\\\">Site</mat-option>\\r\\n                                 <mat-option value=\\\"Homepass\\\">Homepass</mat-option>\\r\\n                              </mat-select>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"panel-group\\\" id=\\\"accordion\\\">\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#pricing\\\">Pricing</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"pricing\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <div class=\\\"form-group\\\">\\r\\n                                    <table class=\\\"table table-bordered table-striped\\\">\\r\\n                                       <thead>\\r\\n                                          <tr>\\r\\n                                             <th style=\\\"width:200px\\\">Contractor</th>\\r\\n                                             <th style=\\\"width:200px\\\">Service Cost</th>\\r\\n                                             <th style=\\\"width: 140px;\\\">Valid From</th>\\r\\n                                             <th style=\\\"width: 140px;\\\">Valid To</th>\\r\\n                                             <th style=\\\"text-align: center;padding: 2px 0px;width: 50px;\\\">\\r\\n                                                <a (click)=\\\"addNewSupplier()\\\" style=\\\"cursor:pointer\\\">\\r\\n                                                   <i class=\\\"fas fa-plus-circle\\\" title=\\\"Add\\\" style=\\\"font-size: 20px; color: #3e53a4;margin: 5px;\\\"></i>\\r\\n                                                </a>\\r\\n                                             </th>\\r\\n                                          </tr>\\r\\n                                       </thead>\\r\\n                                       <tbody>\\r\\n                                          <ng-container *ngIf='civilwork.suppliers && civilwork.suppliers.length > 0'>\\r\\n                                             <tr *ngFor='let supplier of civilwork.suppliers; let rowIndex = index;'>\\r\\n                                                <td><input type=\\\"text\\\" class=\\\"form-control input-sm\\\" autocomplete=\\\"off\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"supplier.name\\\"></td>\\r\\n                                                <td><input type=\\\"number\\\" class=\\\"form-control input-sm\\\" autocomplete=\\\"off\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"supplier.price\\\"></td>\\r\\n                                                <td><input type=\\\"date\\\" class=\\\"form-control input-sm\\\" autocomplete=\\\"off\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [ngModel]=\\\"supplier.validFrom | date:'yyyy-MM-dd'\\\" (ngModelChange)=\\\"supplier.validFrom = $event\\\"></td>\\r\\n                                                <td><input type=\\\"date\\\" class=\\\"form-control input-sm\\\" autocomplete=\\\"off\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [ngModel]=\\\"supplier.validTo | date:'yyyy-MM-dd'\\\" (ngModelChange)=\\\"supplier.validTo = $event\\\"></td>\\r\\n                                                <td style=\\\"text-align:center;padding-top: 14px;\\\">\\r\\n                                                   <a (click)=\\\"deleteSupplier(rowIndex)\\\" style=\\\"cursor:pointer\\\">\\r\\n                                                      <i class=\\\"fas fa-trash-alt\\\" title=\\\"Delete\\\" style=\\\"font-size: 15px; color: Red;\\\"></i>\\r\\n                                                   </a>\\r\\n                                                </td>\\r\\n                                             </tr>\\r\\n                                          </ng-container>\\r\\n                                          <tr *ngIf='civilwork.suppliers == null || civilwork.suppliers.length == 0'>\\r\\n                                             <td colspan=\\\"5\\\" class=\\\"check-mail\\\" style=\\\"text-align: center;\\\">\\r\\n                                                Contractor not added\\r\\n                                             </td>\\r\\n                                          </tr>\\r\\n                                       </tbody>\\r\\n                                    </table>\\r\\n                                 </div>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n\\r\\n                  </div>\\r\\n\\r\\n               </div>\\r\\n               <div class=\\\"box-footer\\\">\\r\\n                  <div class=\\\"pull-right\\\">\\r\\n                     <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"goBack()\\\">Close</button>\\r\\n                     <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" style=\\\"margin-left:10px\\\" (click)=\\\"save()\\\" [disabled]=\\\"form.invalid\\\">Save</button>\\r\\n                  </div>\\r\\n               </div>\\r\\n            </form>\\r\\n         </div>\\r\\n      </div>\\r\\n   </div>\\r\\n</section>\\r\\n\"","export default \"<section class=\\\"content-header\\\">\\r\\n   <h1>Manage Civil Works</h1>\\r\\n   <ol class=\\\"breadcrumb\\\">\\r\\n      <li><a [routerLink]=\\\"['/home']\\\"><i class=\\\"fas fa-home\\\"></i> Home</a></li>\\r\\n   </ol>\\r\\n</section>\\r\\n\\r\\n<section class=\\\"content\\\">\\r\\n   <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-xs-12\\\">\\r\\n         <div class=\\\"box\\\">\\r\\n            <div class=\\\"box-header with-border\\\">\\r\\n               <h3 class=\\\"box-title\\\">Civil Work List</h3>\\r\\n               <div class=\\\"box-tools pull-right\\\" data-toggle=\\\"tooltip\\\" title=\\\"\\\" data-original-title=\\\"Status\\\">\\r\\n                  <button [routerLink]=\\\"['details']\\\" class=\\\"btn btn-block btn-xs btn-primary\\\"> New Civilwork</button>\\r\\n               </div>\\r\\n            </div>\\r\\n            <div class=\\\"box-body\\\">\\r\\n               <dt-search [searchFields]=\\\"searchFields\\\" (onSearch)=\\\"search($event)\\\"></dt-search>\\r\\n               <dt-pagination [totalPages]=\\\"totalPages\\\" (onPageSizeChange)=\\\"onPageSizeChange($event)\\\" (onPageChange)=\\\"onPageChange($event)\\\"></dt-pagination>\\r\\n\\r\\n               <table class=\\\"table table-bordered table-striped\\\">\\r\\n                  <thead>\\r\\n                     <tr (click)=\\\"onColumnClick($event.target)\\\">\\r\\n                        <th data-column=\\\"Name\\\" class=\\\"table-sorter\\\" style=\\\"width: 200px;\\\">Name</th>\\r\\n                        <th data-column=\\\"ParentEntityType\\\" class=\\\"table-sorter\\\" style=\\\"max-width:300px\\\">Parent Type</th>\\r\\n                        <th data-column=\\\"UpdatedBy\\\" class=\\\"table-sorter\\\" style=\\\"width: 150px;\\\">Updated By</th>\\r\\n                        <th data-column=\\\"UpdatedDate\\\" class=\\\"table-sorter\\\" style=\\\"width: 125px;\\\">Updated On</th>\\r\\n                        <th style=\\\"width:72px\\\"></th>\\r\\n                     </tr>\\r\\n                  </thead>\\r\\n                  <tbody>\\r\\n                     <ng-container *ngIf='civilworks && civilworks.length > 0'>\\r\\n                        <tr *ngFor='let civilwork of civilworks'>\\r\\n                           <td>{{civilwork.name}}</td>\\r\\n                           <td class=\\\"text-overflow-ellipsis\\\">{{civilwork.parentEntityType}}</td>\\r\\n                           <td>{{civilwork.updatedBy}}</td>\\r\\n                           <td>{{civilwork.updatedDate | date:'dd/MM/yyyy'}}</td>\\r\\n                           <td>\\r\\n                              <a>\\r\\n                                 <i class=\\\"fa fa-edit\\\" [routerLink]=\\\"['details', civilwork.id]\\\" title=\\\"Edit\\\" style=\\\"font-size: 14px; cursor:pointer\\\"></i>\\r\\n                              </a>&nbsp;\\r\\n                              <a>\\r\\n                                 <i class=\\\"fa fa-trash\\\" (click)=\\\"delete(civilwork)\\\" title=\\\"Remove\\\" style=\\\"font-size: 14px; cursor:pointer; color:red\\\"></i>\\r\\n                              </a>\\r\\n                           </td>\\r\\n                        </tr>\\r\\n                     </ng-container>\\r\\n                     <tr *ngIf='civilworks == null || civilworks.length == 0'>\\r\\n                        <td colspan=\\\"5\\\" style=\\\"text-align: center;\\\">\\r\\n                           {{statusMessage}}\\r\\n                        </td>\\r\\n                     </tr>\\r\\n                  </tbody>\\r\\n               </table>\\r\\n            </div>\\r\\n         </div>\\r\\n      </div>\\r\\n   </div>\\r\\n</section>\\r\\n\"","export default \"<div class=\\\"pull-left\\\">\\r\\n   <span style=\\\"padding-right: 10px;font-size: small;\\\">Pages</span>\\r\\n   <div class=\\\"btn-group\\\" style=\\\"padding-right: 10px;\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-default dropdown-toggle btn-sm\\\" data-toggle=\\\"dropdown\\\" aria-expanded=\\\"false\\\">\\r\\n         <span style=\\\"padding-right: 5px;\\\"> {{pageSize}} </span>\\r\\n         <span class=\\\"caret\\\"></span>\\r\\n      </button>\\r\\n      <ul class=\\\"dropdown-menu\\\">\\r\\n         <li><a [routerLink]=\\\"\\\" (click)=\\\"pageSize = 10; pageSizeChange()\\\">10</a></li>\\r\\n         <li><a [routerLink]=\\\"\\\" (click)=\\\"pageSize = 20; pageSizeChange()\\\">20</a></li>\\r\\n         <li><a [routerLink]=\\\"\\\" (click)=\\\"pageSize = 50; pageSizeChange()\\\">50</a></li>\\r\\n         <li><a [routerLink]=\\\"\\\" (click)=\\\"pageSize = 100; pageSizeChange()\\\">100</a></li>\\r\\n      </ul>\\r\\n   </div>\\r\\n</div>\\r\\n<div class=\\\"pull-right\\\">\\r\\n   <span style=\\\"padding-right: 10px;font-size: small;\\\">Showing page {{currentPage}} of {{totalPages}}</span>\\r\\n   <div class=\\\"btn-group\\\" style=\\\"padding-bottom:5px\\\">\\r\\n      <button class=\\\"btn btn-default btn-sm\\\" type=\\\"button\\\" (click)=\\\"setPage(currentPage - 1)\\\" [ngClass]=\\\"{disabled:currentPage === 1}\\\"><i class=\\\"fa fa-chevron-left fa-fw\\\"></i></button>\\r\\n      <button class=\\\"btn btn-default btn-sm\\\" type=\\\"button\\\" (click)=\\\"setPage(currentPage + 1)\\\" [ngClass]=\\\"{disabled:currentPage === totalPages}\\\"><i class=\\\"fa fa-chevron-right fa-fw\\\"></i></button>\\r\\n   </div>\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"input-group input-group-sm\\\" style=\\\"padding-bottom:20px\\\">\\r\\n   <div class=\\\"input-group-btn\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-warning dropdown-toggle search-dropdown\\\" data-toggle=\\\"dropdown\\\" aria-expanded=\\\"false\\\">\\r\\n         {{selectedField.label}}\\r\\n         <span class=\\\"fa fa-caret-down\\\"></span>\\r\\n      </button>\\r\\n      <ul class=\\\"dropdown-menu\\\">\\r\\n         <ng-container *ngIf='searchFields && searchFields.length > 0'>\\r\\n            <li *ngFor='let searchField of searchFields'>\\r\\n               <a [routerLink]=\\\"\\\" (click)=setSearchField(searchField)>{{searchField.label}}</a>\\r\\n            </li>\\r\\n         </ng-container>\\r\\n         <li class=\\\"divider\\\"></li>\\r\\n         <li><a [routerLink]=\\\"\\\" data-toggle=\\\"modal\\\" data-target=\\\"#advancedSearch\\\">Advanced Search</a></li>\\r\\n\\r\\n      </ul>\\r\\n   </div>\\r\\n   <input [type]=selectedField.dataType class=\\\"form-control\\\" name=\\\"dateSearch\\\" [(ngModel)]=\\\"searchText\\\" autocomplete=\\\"off\\\">\\r\\n   <span class=\\\"input-group-btn\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-info btn-flat\\\" (click)=\\\"search()\\\"><i class=\\\"fas fa-search\\\"></i></button>\\r\\n   </span>\\r\\n</div>\\r\\n<ng-container *ngIf=\\\"searchFilter && searchFilter.filters.length > 0\\\">\\r\\n   <div style=\\\"padding-bottom: 8px; border-bottom: 1px solid #ddd; margin-bottom: 10px;\\\">\\r\\n      <label>Search Filters:</label>\\r\\n      <div class=\\\"row\\\">\\r\\n         <ng-container *ngFor='let filter of filterPills; let rowIndex = index;'>\\r\\n            <span class=\\\"search-param\\\">{{filter.propertyName}} = {{filter.value}} <a (click)=\\\"removeFilter(rowIndex)\\\" style=\\\"cursor:pointer\\\"><i class=\\\"fa fa-times\\\" title=\\\"Remove\\\" style=\\\"color: Red; padding-left: 10px;\\\"></i></a></span>\\r\\n         </ng-container>\\r\\n      </div>\\r\\n   </div>\\r\\n</ng-container>\\r\\n\\r\\n<div id=\\\"advancedSearch\\\" class=\\\"modal fade\\\" role=\\\"dialog\\\">\\r\\n   <div class=\\\"modal-dialog\\\">\\r\\n      <div class=\\\"modal-content\\\" style=\\\"border-radius:3px\\\">\\r\\n         <div class=\\\"modal-header\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\r\\n            <h4 class=\\\"modal-title\\\">Advanced Search</h4>\\r\\n         </div>\\r\\n         <div class=\\\"modal-body\\\">\\r\\n            <div class=\\\"pull-right\\\">\\r\\n               <span style=\\\"padding-right:5px; vertical-align: top;\\\">Condition</span>\\r\\n               <label class=\\\"switch\\\">\\r\\n                  <input type=\\\"checkbox\\\" [checked]=\\\"conditionOption\\\" [(ngModel)]=\\\"conditionOption\\\">\\r\\n                  <span class=\\\"slider round\\\"></span>\\r\\n               </label>\\r\\n            </div>\\r\\n            <table class=\\\"table table-bordered\\\">\\r\\n               <thead>\\r\\n                  <tr>\\r\\n                     <th style=\\\"width: 200px;\\\">Field</th>\\r\\n                     <th>Value</th>\\r\\n                  </tr>\\r\\n               </thead>\\r\\n               <tbody>\\r\\n                  <ng-container *ngIf='searchFields && searchFields.length > 0'>\\r\\n                     <tr *ngFor='let searchField of searchFields'>\\r\\n                        <td>{{searchField.label}}</td>\\r\\n                        <td><input [type]=searchField.dataType class=\\\"form-control input-sm\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"searchField.value\\\"></td>\\r\\n                     </tr>\\r\\n                  </ng-container>\\r\\n                  <tr *ngIf='searchFields == null || searchFields.length == 0'>\\r\\n                     <td colspan=\\\"2\\\" style=\\\"text-align: center;\\\">\\r\\n                        No search fields defined\\r\\n                     </td>\\r\\n                  </tr>\\r\\n               </tbody>\\r\\n            </table>\\r\\n         </div>\\r\\n         <div class=\\\"modal-footer\\\">\\r\\n            <button class=\\\"btn btn-info\\\" data-dismiss=\\\"modal\\\" type=\\\"button\\\" (click)=\\\"advancedSearch()\\\">Search</button>\\r\\n            <button class=\\\"btn btn-default pull-left\\\" data-dismiss=\\\"modal\\\" type=\\\"button\\\" (click)=\\\"clearSearch()\\\">Clear</button>\\r\\n         </div>\\r\\n      </div>\\r\\n   </div>\\r\\n</div>\\r\\n\"","export default \"<section class=\\\"content-header\\\">\\r\\n    <h1>Dashboard</h1>\\r\\n</section>\\r\\n\\r\\n<!--<section class=\\\"content\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n            <div class=\\\"box\\\">\\r\\n                <div class=\\\"box-header with-border ui-sortable-handle\\\">\\r\\n                    <h3 class=\\\"box-title\\\">Task</h3>\\r\\n                </div>\\r\\n                <div class=\\\"box-body\\\">\\r\\n                   <div class=\\\"row\\\">\\r\\n\\r\\n                   </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n</section>-->\\r\\n\"","export default \"<div class=\\\"form-group\\\">\\r\\n   <table class=\\\"table table-bordered table-striped\\\">\\r\\n      <thead>\\r\\n         <tr>\\r\\n            <th style=\\\"width:200px\\\">Category</th>\\r\\n            <th style=\\\"width:200px\\\">Display Name</th>\\r\\n            <th style=\\\"width: 140px;\\\">Control Type</th>\\r\\n            <th style=\\\"width: 140px;\\\">Data Type</th>\\r\\n            <th>Value(s)</th>\\r\\n            <th style=\\\"text-align: center;padding: 2px 0px;width: 50px;\\\">\\r\\n               <a (click)=\\\"addCustomField()\\\" style=\\\"cursor:pointer\\\">\\r\\n                  <i class=\\\"fas fa-plus-circle\\\" title=\\\"Add\\\" style=\\\"font-size: 20px; color: #3e53a4;margin: 5px;\\\"></i>\\r\\n               </a>\\r\\n            </th>\\r\\n         </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n         <ng-container *ngIf='customFields && customFields.length > 0'>\\r\\n            <tr *ngFor='let customField of customFields; let rowIndex = index;'>\\r\\n               <td><input type=\\\"text\\\" class=\\\"form-control input-sm\\\" autocomplete=\\\"off\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"customField.category\\\"></td>\\r\\n               <td><input type=\\\"text\\\" class=\\\"form-control input-sm\\\" autocomplete=\\\"off\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"customField.label\\\"></td>\\r\\n               <td>\\r\\n                  <mat-select [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"customField.controlType\\\">\\r\\n                     <mat-option [value]=1>Text</mat-option>\\r\\n                     <mat-option [value]=2>Dropdown</mat-option>\\r\\n                     <mat-option [value]=3>Date</mat-option>\\r\\n                     <mat-option [value]=4>Radio</mat-option>\\r\\n                     <mat-option [value]=5>Checkbox</mat-option>\\r\\n                     <!--<mat-option *ngFor=\\\"let control of keys(controlType)\\\" [value]=\\\"controlType[control]\\\">{{control}}</mat-option>-->\\r\\n                  </mat-select>\\r\\n               </td>\\r\\n               <td>\\r\\n                  <mat-select [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"customField.dataType\\\">\\r\\n                     <mat-option [value]=1>String</mat-option>\\r\\n                     <mat-option [value]=2>Number</mat-option>\\r\\n                     <mat-option [value]=3>Boolean</mat-option>\\r\\n                     <mat-option [value]=4>Date</mat-option>\\r\\n                  </mat-select>\\r\\n               </td>\\r\\n               <td><input type=\\\"text\\\" class=\\\"form-control input-sm\\\" autocomplete=\\\"off\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [disabled]=\\\"customField.controlType=='Date' || customField.controlType=='Text'\\\" [(ngModel)]=\\\"customField.values\\\"></td>\\r\\n               <td style=\\\"text-align:center;padding-top: 14px;\\\">\\r\\n                  <a (click)=\\\"deleteCustomField(rowIndex)\\\" style=\\\"cursor:pointer\\\">\\r\\n                     <i class=\\\"fas fa-trash-alt\\\" title=\\\"Delete\\\" style=\\\"font-size: 15px; color: Red;\\\"></i>\\r\\n                  </a>\\r\\n               </td>\\r\\n            </tr>\\r\\n         </ng-container>\\r\\n         <tr *ngIf='customFields == null || customFields.length == 0'>\\r\\n            <td colspan=\\\"6\\\" class=\\\"check-mail\\\" style=\\\"text-align: center;\\\">\\r\\n               Custom fields not defined\\r\\n            </td>\\r\\n         </tr>\\r\\n      </tbody>\\r\\n   </table>\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"form-group\\\">\\r\\n   <table class=\\\"table table-bordered table-striped\\\">\\r\\n      <thead>\\r\\n         <tr>\\r\\n            <th></th>\\r\\n            <th>Supplier</th>\\r\\n            <th>SKU</th>\\r\\n            <th>Stock Qty</th>\\r\\n            <th>Price</th>\\r\\n            <th>Currency</th>\\r\\n            <th>Valid From</th>\\r\\n            <th>Valid To</th>\\r\\n            <th style=\\\"text-align: center;padding: 2px 0px;width: 50px;\\\">\\r\\n               <a (click)=\\\"addNewSupplier()\\\" style=\\\"cursor:pointer\\\">\\r\\n                  <i class=\\\"fas fa-plus-circle\\\" title=\\\"Add\\\" style=\\\"font-size: 20px; color: #3e53a4;margin: 5px;\\\"></i>\\r\\n               </a>\\r\\n            </th>\\r\\n         </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n         <ng-container *ngIf='supplierList && supplierList.length > 0'>\\r\\n            <tr *ngFor='let supplier of supplierList; let rowIndex = index;'>\\r\\n               <td>             \\r\\n                  <mat-radio-group  [(ngModel)]=\\\"supplier.default\\\">                   \\r\\n                     <mat-radio-button class=\\\"example-radio-group default\\\" [checked]=\\\"rowIndex=='0'\\\" value=\\\"true\\\">\\r\\n                        {{rowIndex}}\\r\\n                     </mat-radio-button>\\r\\n                  </mat-radio-group>\\r\\n\\r\\n               </td>\\r\\n               <!--<td><input type=\\\"radio\\\" class=\\\"form-control input-sm\\\" autocomplete=\\\"off\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"supplier.default\\\" value=\\\"{{rowIndex}}\\\"></td>-->\\r\\n               <td><input type=\\\"text\\\" class=\\\"form-control input-sm\\\" autocomplete=\\\"off\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"supplier.name\\\"></td>\\r\\n               <td><input type=\\\"text\\\" class=\\\"form-control input-sm\\\" autocomplete=\\\"off\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"supplier.sku\\\"></td>\\r\\n               <td><input type=\\\"number\\\" class=\\\"form-control input-sm\\\" autocomplete=\\\"off\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"supplier.stockQty\\\"></td>\\r\\n               <td><input type=\\\"number\\\" class=\\\"form-control input-sm\\\" autocomplete=\\\"off\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"supplier.price\\\"></td>\\r\\n               <td><input type=\\\"text\\\" class=\\\"form-control input-sm\\\" autocomplete=\\\"off\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"supplier.currency\\\"></td>\\r\\n               <td><input type=\\\"date\\\" class=\\\"form-control input-sm\\\" autocomplete=\\\"off\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [ngModel]=\\\"supplier.validFrom | date:'yyyy-MM-dd'\\\" (ngModelChange)=\\\"supplier.validFrom = $event\\\"></td>\\r\\n               <td><input type=\\\"date\\\" class=\\\"form-control input-sm\\\" autocomplete=\\\"off\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [ngModel]=\\\"supplier.validTo | date:'yyyy-MM-dd'\\\" (ngModelChange)=\\\"supplier.validTo = $event\\\"></td>\\r\\n               <td style=\\\"text-align:center;padding-top: 14px;\\\">\\r\\n                  <a (click)=\\\"deleteSupplier(rowIndex)\\\" style=\\\"cursor:pointer\\\">\\r\\n                     <i class=\\\"fas fa-trash-alt\\\" title=\\\"Delete\\\" style=\\\"font-size: 15px; color: Red;\\\"></i>\\r\\n                  </a>\\r\\n               </td>\\r\\n            </tr>\\r\\n         </ng-container>\\r\\n         <tr *ngIf='supplierList == null || supplierList.length == 0'>\\r\\n            <td colspan=\\\"8\\\" class=\\\"check-mail\\\" style=\\\"text-align: center;\\\">\\r\\n               Supplier not defined\\r\\n            </td>\\r\\n         </tr>\\r\\n      </tbody>\\r\\n   </table>\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"form-group\\\">\\r\\n   <table class=\\\"table table-bordered table-striped\\\">\\r\\n      <thead>\\r\\n         <tr>\\r\\n            <th>Template Code</th>\\r\\n            <th>Template Name</th>\\r\\n            <th *ngIf=\\\"Flag=='Fat'\\\">Pigtail Count</th>\\r\\n            <th *ngIf=\\\"Flag=='Fdt'\\\">Odf Count</th>\\r\\n            <th>Splitter Count</th>\\r\\n            <!--<th>Created Date</th>-->\\r\\n            <th style=\\\"text-align: center;padding: 2px 0px;width: 50px;\\\">\\r\\n               <a (click)=\\\"addNewTemplate()\\\" style=\\\"cursor:pointer\\\">\\r\\n                  <i class=\\\"fas fa-plus-circle\\\" title=\\\"Add\\\" style=\\\"font-size: 20px; color: #3e53a4;margin: 5px;\\\"></i>\\r\\n               </a>\\r\\n            </th>\\r\\n         </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n         <ng-container *ngIf='template && template.length > 0'>\\r\\n            <tr *ngFor='let templat of template; let rowIndex = index;'>\\r\\n               <td><input type=\\\"text\\\" class=\\\"form-control input-sm\\\" autocomplete=\\\"off\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"templat.templateCode\\\"></td>\\r\\n               <td><input type=\\\"text\\\" class=\\\"form-control input-sm\\\" autocomplete=\\\"off\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"templat.templateName\\\"></td>\\r\\n               <td *ngIf=\\\"Flag=='Fat'\\\"><input type=\\\"number\\\" class=\\\"form-control input-sm\\\" autocomplete=\\\"off\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"templat.pigtailCount\\\"></td>\\r\\n               <td *ngIf=\\\"Flag=='Fdt'\\\"><input type=\\\"number\\\" class=\\\"form-control input-sm\\\" autocomplete=\\\"off\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"templat.odfCount\\\"></td>\\r\\n               <td><input type=\\\"number\\\" class=\\\"form-control input-sm\\\" autocomplete=\\\"off\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"templat.splitterCount\\\"></td>\\r\\n               <!--<td><input type=\\\"date\\\" class=\\\"form-control input-sm\\\" autocomplete=\\\"off\\\"\\r\\n                          [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                          [ngModel]=\\\"templat.updatedDate\\\"></td>-->\\r\\n               <td style=\\\"text-align:center;padding-top: 14px;\\\">\\r\\n                  <!--| date:'yyyy-MM-dd'-->\\r\\n                  <a (click)=\\\"deletetemplate(rowIndex)\\\" style=\\\"cursor:pointer\\\">\\r\\n                     <i class=\\\"fas fa-trash-alt\\\" title=\\\"Delete\\\" style=\\\"font-size: 15px; color: Red;\\\"></i>\\r\\n                  </a>\\r\\n               </td>\\r\\n            </tr>\\r\\n         </ng-container>\\r\\n         <tr *ngIf='template == null || template.length == 0'>\\r\\n            <td colspan=\\\"8\\\" class=\\\"check-mail\\\" style=\\\"text-align: center;\\\">\\r\\n               template not defined\\r\\n            </td>\\r\\n         </tr>\\r\\n      </tbody>\\r\\n   </table>\\r\\n</div>\\r\\n\"","export default \"<section class=\\\"content-header\\\">\\r\\n   <h1>Manage Entities <small> {{title}} </small></h1>\\r\\n   <ol class=\\\"breadcrumb\\\">\\r\\n      <li><a [routerLink]=\\\"['/']\\\"><i class=\\\"fa fa-home\\\"></i> Home</a></li>\\r\\n      <li><a [routerLink]=\\\"['/entities']\\\"> Entities</a></li>\\r\\n   </ol>\\r\\n</section>\\r\\n<section class=\\\"content\\\">\\r\\n   <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-xs-12\\\">\\r\\n         <div class=\\\"box\\\">\\r\\n            <div class=\\\"box-header with-border ui-sortable-handle\\\">\\r\\n               <h3 class=\\\"box-title\\\">Cable Details</h3>\\r\\n               <div class=\\\"box-tools pull-right\\\" data-original-title=\\\"Status\\\" data-toggle=\\\"tooltip\\\" title=\\\"\\\">\\r\\n                  <button class=\\\"btn btn-social-icon btn-xs btn-danger\\\" (click)=\\\"goBack()\\\">\\r\\n                     <i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                  </button>\\r\\n                  <button class=\\\"btn btn-social-icon btn-xs btn-success\\\" type=\\\"submit\\\" style=\\\"margin-left: 5px;\\\" (click)=\\\"save()\\\" [disabled]=\\\"form.invalid\\\">\\r\\n                     <i class=\\\"far fa-save\\\"></i>\\r\\n                  </button>\\r\\n               </div>\\r\\n            </div>\\r\\n            <form name=\\\"form\\\" action=\\\"javascript:{}\\\" #form=\\\"ngForm\\\" novalidate autocomplete=\\\"off\\\">\\r\\n               <div class=\\\"box-body\\\">\\r\\n                  <div class=\\\"panel panel-default\\\">\\r\\n                     <div class=\\\"panel-heading\\\">\\r\\n                        <h4 class=\\\"panel-title\\\">\\r\\n                           General Information\\r\\n                        </h4>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel-collapse collapse in\\\">\\r\\n                        <div class=\\\"panel-body\\\">\\r\\n                           <div class=\\\"form-group col-md-6\\\">\\r\\n                              <label for=\\\"name\\\" class=\\\"control-label\\\">Name <span style=\\\"color:red;\\\">*</span></label>\\r\\n                              <input type=\\\"text\\\" name=\\\"name\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"cable.name\\\" required/>\\r\\n                           </div>\\r\\n                           <div class=\\\"form-group col-md-6\\\">\\r\\n                              <label for=\\\"parentType\\\" class=\\\"control-label\\\">Parent Type</label>\\r\\n                              <mat-select name=\\\"parentType\\\" [(ngModel)]=\\\"cable.parentEntityType\\\">\\r\\n                                 <mat-option>Select Parent Entity Type</mat-option>\\r\\n                                 <mat-option value=\\\"Cable\\\">Cable</mat-option>\\r\\n                                 <mat-option value=\\\"Chamber\\\">Chamber</mat-option>\\r\\n                                 <mat-option value=\\\"Duct\\\">Duct</mat-option>\\r\\n                                 <mat-option value=\\\"ODF\\\">ODF</mat-option>\\r\\n                                 <mat-option value=\\\"Pole\\\">Pole</mat-option>\\r\\n                                 <mat-option value=\\\"SpliceClosure\\\">Splice Closure</mat-option>\\r\\n                                 <mat-option value=\\\"Splitter\\\">Splitter</mat-option>\\r\\n                                 <mat-option value=\\\"Fat\\\">Fat</mat-option>\\r\\n                                 <mat-option value=\\\"Fdt\\\">Fdt</mat-option>\\r\\n                              </mat-select>\\r\\n                           </div>\\r\\n                           <div class=\\\"form-group col-md-6\\\">\\r\\n                              <label for=\\\"isUnderground\\\" class=\\\"control-label\\\" style=\\\"width:100%\\\">&nbsp;</label>\\r\\n                              <mat-checkbox name=\\\"isUnderground\\\" [(ngModel)]=\\\"cable.isUnderground\\\" [checked]=\\\"cable.isUnderground\\\">Is Underground Cable</mat-checkbox>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"panel-group\\\" id=\\\"accordion\\\">\\r\\n\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#make\\\">Make</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"make\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"type\\\" class=\\\"control-label\\\">Type</label>\\r\\n                                    <input type=\\\"text\\\" name=\\\"type\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"cable.type\\\" />\\r\\n                                 </div>\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"brand\\\" class=\\\"control-label\\\">Brand</label>\\r\\n                                    <input type=\\\"text\\\" name=\\\"brand\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"cable.brand\\\" />\\r\\n                                 </div>\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"model\\\" class=\\\"control-label\\\">Model</label>\\r\\n                                    <input type=\\\"text\\\" name=\\\"model\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"cable.model\\\" />\\r\\n                                 </div>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#cableInfo\\\">Cable Information</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"cableInfo\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"noOfTubes\\\" class=\\\"control-label\\\">Number of Tubes</label>\\r\\n                                    <input type=\\\"number\\\" name=\\\"noOfTubes\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"cable.noOfTubes\\\" />\\r\\n                                 </div>\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"corePerTube\\\" class=\\\"control-label\\\">Core Per Tube</label>\\r\\n                                    <input type=\\\"number\\\" name=\\\"corePerTube\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"cable.corePerTube\\\" />\\r\\n                                 </div>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#optics\\\">Optical Information</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"optics\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"frequency\\\" class=\\\"control-label\\\">Frequency</label>\\r\\n                                    <input type=\\\"number\\\" name=\\\"frequency\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"cable.optics.frequency\\\" />\\r\\n                                 </div>\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"attenuationDb\\\" class=\\\"control-label\\\">Attenuation</label>\\r\\n                                    <input type=\\\"number\\\" name=\\\"attenuationDb\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"cable.optics.attenuationDb\\\" />\\r\\n                                 </div>\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"opticalInPutPower\\\" class=\\\"control-label\\\">Optical InPut Power</label>\\r\\n                                    <input type=\\\"number\\\" name=\\\"opticalInPutPower\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"cable.optics.opticalInPutPower\\\" />\\r\\n                                 </div>\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"opticalOutputPower\\\" class=\\\"control-label\\\">Optical Output Power</label>\\r\\n                                    <input type=\\\"number\\\" name=\\\"opticalOutputPower\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"cable.optics.opticalOutputPower\\\" />\\r\\n                                 </div>\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"resistanceOhm\\\" class=\\\"control-label\\\">Resistance</label>\\r\\n                                    <input type=\\\"number\\\" name=\\\"resistanceOhm\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"cable.optics.resistanceOhm\\\" />\\r\\n                                 </div>\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"wavelength\\\" class=\\\"control-label\\\">Wavelength</label>\\r\\n                                    <input type=\\\"number\\\" name=\\\"wavelength\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"cable.optics.wavelength\\\" />\\r\\n                                 </div>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#zoomSettings\\\">Zoom Settings</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"zoomSettings\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-11\\\">\\r\\n                                 <mat-slider name=\\\"zoomLevel\\\" thumbLabel step=\\\"1\\\" min=\\\"0\\\" max=\\\"21\\\" style=\\\"width:100%\\\" [(ngModel)]=\\\"cable.zoomLevel\\\"></mat-slider>\\r\\n                              </div>\\r\\n                              <div class=\\\"col-sm-1\\\" style=\\\"padding-top: 7px;\\\">\\r\\n                                 <input type=\\\"number\\\" min=\\\"0\\\" max=\\\"21\\\" class=\\\"form-control input-sm\\\" name=\\\"zoom\\\" [(ngModel)]=\\\"cable.zoomLevel\\\">\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#pricing\\\">Pricing</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"pricing\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <suppliers [supplierList]=\\\"cable.suppliers\\\"></suppliers>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#customFields\\\">Custom Fields</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"customFields\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <custom-fields [customFields]=\\\"cable.customFields\\\"></custom-fields>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                  </div>\\r\\n\\r\\n               </div>\\r\\n               <div class=\\\"box-footer\\\">\\r\\n                  <div class=\\\"pull-right\\\">\\r\\n                     <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"goBack()\\\">Close</button>\\r\\n                     <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" style=\\\"margin-left:10px\\\" (click)=\\\"save()\\\" [disabled]=\\\"form.invalid\\\">Save</button>\\r\\n                  </div>\\r\\n               </div>\\r\\n            </form>\\r\\n         </div>\\r\\n      </div>\\r\\n   </div>\\r\\n</section>\\r\\n\"","export default \"<section class=\\\"content-header\\\">\\r\\n   <h1>Manage Entities <small> {{title}} </small></h1>\\r\\n   <ol class=\\\"breadcrumb\\\">\\r\\n      <li><a [routerLink]=\\\"['/']\\\"><i class=\\\"fa fa-home\\\"></i> Home</a></li>\\r\\n      <li><a [routerLink]=\\\"['/entities']\\\"> Entities</a></li>\\r\\n   </ol>\\r\\n</section>\\r\\n<section class=\\\"content\\\">\\r\\n   <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-xs-12\\\">\\r\\n         <div class=\\\"box\\\">\\r\\n            <div class=\\\"box-header with-border ui-sortable-handle\\\">\\r\\n               <h3 class=\\\"box-title\\\">Chamber Details</h3>\\r\\n               <div class=\\\"box-tools pull-right\\\" data-original-title=\\\"Status\\\" data-toggle=\\\"tooltip\\\" title=\\\"\\\">\\r\\n                  <button class=\\\"btn btn-social-icon btn-xs btn-danger\\\" (click)=\\\"goBack()\\\">\\r\\n                     <i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                  </button>\\r\\n                  <button class=\\\"btn btn-social-icon btn-xs btn-success\\\" type=\\\"submit\\\" style=\\\"margin-left: 5px;\\\" (click)=\\\"save()\\\" [disabled]=\\\"form.invalid\\\">\\r\\n                     <i class=\\\"far fa-save\\\"></i>\\r\\n                  </button>\\r\\n               </div>\\r\\n            </div>\\r\\n            <form name=\\\"form\\\" action=\\\"javascript:{}\\\" #form=\\\"ngForm\\\" novalidate autocomplete=\\\"off\\\">\\r\\n               <div class=\\\"box-body\\\">\\r\\n                  <div class=\\\"panel panel-default\\\">\\r\\n                     <div class=\\\"panel-heading\\\">\\r\\n                        <h4 class=\\\"panel-title\\\">\\r\\n                           General Information\\r\\n                        </h4>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel-collapse collapse in\\\">\\r\\n                        <div class=\\\"panel-body\\\">\\r\\n                           <div class=\\\"form-group col-md-6\\\">\\r\\n                              <label for=\\\"name\\\" class=\\\"control-label\\\">Name <span style=\\\"color:red;\\\">*</span></label>\\r\\n                              <input type=\\\"text\\\" name=\\\"name\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"chamber.name\\\" required />\\r\\n                           </div>\\r\\n                           <div class=\\\"form-group col-md-6\\\">\\r\\n                              <label for=\\\"parentType\\\" class=\\\"control-label\\\">Parent Type</label>\\r\\n                              <mat-select name=\\\"parentType\\\" [(ngModel)]=\\\"chamber.parentEntityType\\\">\\r\\n                                 <mat-option>Select Parent Entity Type</mat-option>\\r\\n                                 <mat-option value=\\\"Cable\\\">Cable</mat-option>\\r\\n                                 <mat-option value=\\\"Chamber\\\">Chamber</mat-option>\\r\\n                                 <mat-option value=\\\"Duct\\\">Duct</mat-option>\\r\\n                                 <mat-option value=\\\"ODF\\\">ODF</mat-option>\\r\\n                                 <mat-option value=\\\"Pole\\\">Pole</mat-option>\\r\\n                                 <mat-option value=\\\"SpliceClosure\\\">Splice Closure</mat-option>\\r\\n                                 <mat-option value=\\\"Splitter\\\">Splitter</mat-option>\\r\\n                                 <mat-option value=\\\"Fat\\\">Fat</mat-option>\\r\\n                                 <mat-option value=\\\"Fdt\\\">Fdt</mat-option>\\r\\n                              </mat-select>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"panel-group\\\" id=\\\"accordion\\\">\\r\\n\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#make\\\">Make</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"make\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"type\\\" class=\\\"control-label\\\">Type</label>\\r\\n                                    <input type=\\\"text\\\" name=\\\"type\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"chamber.type\\\" />\\r\\n                                 </div>\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"brand\\\" class=\\\"control-label\\\">Brand</label>\\r\\n                                    <input type=\\\"text\\\" name=\\\"brand\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"chamber.brand\\\" />\\r\\n                                 </div>\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"model\\\" class=\\\"control-label\\\">Model</label>\\r\\n                                    <input type=\\\"text\\\" name=\\\"model\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"chamber.model\\\" />\\r\\n                                 </div>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#chamberInfo\\\">Chamber Information</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"chamberInfo\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"category\\\" class=\\\"control-label\\\">Category</label>\\r\\n                                    <input type=\\\"text\\\" name=\\\"category\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"chamber.chamberCategory\\\" />\\r\\n                                 </div>\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"closureType\\\" class=\\\"control-label\\\">Closure Type</label>\\r\\n                                    <input type=\\\"text\\\" name=\\\"closureType\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"chamber.chamberClosureType\\\" />\\r\\n                                 </div>\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"spliceTrayCount\\\" class=\\\"control-label\\\">Splice Tray Count</label>\\r\\n                                    <input type=\\\"text\\\" name=\\\"spliceTrayCount\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"chamber.spliceTrayCount\\\" />\\r\\n                                 </div>\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"isBuried\\\" class=\\\"control-label\\\" style=\\\"width:100%\\\">&nbsp;</label>\\r\\n                                    <mat-checkbox name=\\\"isBuried\\\" [(ngModel)]=\\\"chamber.isBuried\\\" [checked]=\\\"chamber.isBuried\\\">Is Buried</mat-checkbox>\\r\\n                                 </div>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#zoomSettings\\\">Zoom Settings</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"zoomSettings\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-11\\\">\\r\\n                                 <mat-slider name=\\\"zoomLevel\\\" thumbLabel step=\\\"1\\\" min=\\\"0\\\" max=\\\"21\\\" style=\\\"width:100%\\\" [(ngModel)]=\\\"chamber.zoomLevel\\\"></mat-slider>\\r\\n                              </div>\\r\\n                              <div class=\\\"col-sm-1\\\" style=\\\"padding-top: 7px;\\\">\\r\\n                                 <input type=\\\"number\\\" min=\\\"0\\\" max=\\\"21\\\" class=\\\"form-control input-sm\\\" name=\\\"zoom\\\" [(ngModel)]=\\\"chamber.zoomLevel\\\">\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#pricing\\\">Pricing</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"pricing\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <suppliers [supplierList]=\\\"chamber.suppliers\\\"></suppliers>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#customFields\\\">Custom Fields</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"customFields\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <custom-fields [customFields]=\\\"chamber.customFields\\\"></custom-fields>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                  </div>\\r\\n\\r\\n               </div>\\r\\n               <div class=\\\"box-footer\\\">\\r\\n                  <div class=\\\"pull-right\\\">\\r\\n                     <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"goBack()\\\">Close</button>\\r\\n                     <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" style=\\\"margin-left:10px\\\" (click)=\\\"save()\\\" [disabled]=\\\"form.invalid\\\">Save</button>\\r\\n                  </div>\\r\\n               </div>\\r\\n            </form>\\r\\n         </div>\\r\\n      </div>\\r\\n   </div>\\r\\n</section>\\r\\n\"","export default \"<section class=\\\"content-header\\\">\\r\\n   <h1>Manage Entities <small> {{title}} </small></h1>\\r\\n   <ol class=\\\"breadcrumb\\\">\\r\\n      <li><a [routerLink]=\\\"['/']\\\"><i class=\\\"fa fa-home\\\"></i> Home</a></li>\\r\\n      <li><a [routerLink]=\\\"['/entities']\\\"> Entities</a></li>\\r\\n   </ol>\\r\\n</section>\\r\\n<section class=\\\"content\\\">\\r\\n   <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-xs-12\\\">\\r\\n         <div class=\\\"box\\\">\\r\\n            <div class=\\\"box-header with-border ui-sortable-handle\\\">\\r\\n               <h3 class=\\\"box-title\\\">Duct Details</h3>\\r\\n               <div class=\\\"box-tools pull-right\\\" data-original-title=\\\"Status\\\" data-toggle=\\\"tooltip\\\" title=\\\"\\\">\\r\\n                  <button class=\\\"btn btn-social-icon btn-xs btn-danger\\\" (click)=\\\"goBack()\\\">\\r\\n                     <i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                  </button>\\r\\n                  <button class=\\\"btn btn-social-icon btn-xs btn-success\\\" type=\\\"submit\\\" style=\\\"margin-left: 5px;\\\" (click)=\\\"save()\\\" [disabled]=\\\"form.invalid\\\">\\r\\n                     <i class=\\\"far fa-save\\\"></i>\\r\\n                  </button>\\r\\n               </div>\\r\\n            </div>\\r\\n            <form name=\\\"form\\\" action=\\\"javascript:{}\\\" #form=\\\"ngForm\\\" novalidate autocomplete=\\\"off\\\">\\r\\n               <div class=\\\"box-body\\\">\\r\\n                  <div class=\\\"panel panel-default\\\">\\r\\n                     <div class=\\\"panel-heading\\\">\\r\\n                        <h4 class=\\\"panel-title\\\">\\r\\n                           General Information\\r\\n                        </h4>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel-collapse collapse in\\\">\\r\\n                        <div class=\\\"panel-body\\\">\\r\\n                           <div class=\\\"form-group col-md-6\\\">\\r\\n                              <label for=\\\"name\\\" class=\\\"control-label\\\">Name <span style=\\\"color:red;\\\">*</span></label>\\r\\n                              <input type=\\\"text\\\" name=\\\"name\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"duct.name\\\" required/>\\r\\n                           </div>\\r\\n                           <div class=\\\"form-group col-md-6\\\">\\r\\n                              <label for=\\\"parentType\\\" class=\\\"control-label\\\">Parent Type</label>\\r\\n                              <mat-select name=\\\"parentType\\\" [(ngModel)]=\\\"duct.parentEntityType\\\">\\r\\n                                 <mat-option>Select Parent Entity Type</mat-option>\\r\\n                                 <mat-option value=\\\"Cable\\\">Cable</mat-option>\\r\\n                                 <mat-option value=\\\"Chamber\\\">Chamber</mat-option>\\r\\n                                 <mat-option value=\\\"Duct\\\">Duct</mat-option>\\r\\n                                 <mat-option value=\\\"ODF\\\">ODF</mat-option>\\r\\n                                 <mat-option value=\\\"Pole\\\">Pole</mat-option>\\r\\n                                 <mat-option value=\\\"SpliceClosure\\\">Splice Closure</mat-option>\\r\\n                                 <mat-option value=\\\"Splitter\\\">Splitter</mat-option>\\r\\n                                 <mat-option value=\\\"Fat\\\">Fat</mat-option>\\r\\n                                 <mat-option value=\\\"Fdt\\\">Fdt</mat-option>\\r\\n                              </mat-select>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"panel-group\\\" id=\\\"accordion\\\">\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#make\\\">Make</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"make\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"type\\\" class=\\\"control-label\\\">Type</label>\\r\\n                                    <input type=\\\"text\\\" name=\\\"type\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"duct.type\\\" />\\r\\n                                 </div>\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"brand\\\" class=\\\"control-label\\\">Brand</label>\\r\\n                                    <input type=\\\"text\\\" name=\\\"brand\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"duct.brand\\\" />\\r\\n                                 </div>\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"model\\\" class=\\\"control-label\\\">Model</label>\\r\\n                                    <input type=\\\"text\\\" name=\\\"model\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"duct.model\\\" />\\r\\n                                 </div>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#ductInfo\\\">Duct Info</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"ductInfo\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"height\\\" class=\\\"control-label\\\">Height</label>\\r\\n                                    <input type=\\\"number\\\" name=\\\"height\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"duct.height\\\" />\\r\\n                                 </div>\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"width\\\" class=\\\"control-label\\\">Width</label>\\r\\n                                    <input type=\\\"number\\\" name=\\\"width\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"duct.width\\\" />\\r\\n                                 </div>\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"innerDiameter\\\" class=\\\"control-label\\\">Inner Diameter</label>\\r\\n                                    <input type=\\\"number\\\" name=\\\"innerDiameter\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"duct.innerDiameter\\\" />\\r\\n                                 </div>\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"outerDiameter\\\" class=\\\"control-label\\\">Outer Diameter</label>\\r\\n                                    <input type=\\\"number\\\" name=\\\"outerDiameter\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"duct.outerDiameter\\\" />\\r\\n                                 </div>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#zoomSettings\\\">Zoom Settings</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"zoomSettings\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-11\\\">\\r\\n                                 <mat-slider name=\\\"zoomLevel\\\" thumbLabel step=\\\"1\\\" min=\\\"0\\\" max=\\\"21\\\" style=\\\"width:100%\\\" [(ngModel)]=\\\"duct.zoomLevel\\\"></mat-slider>\\r\\n                              </div>\\r\\n                              <div class=\\\"col-sm-1\\\" style=\\\"padding-top: 7px;\\\">\\r\\n                                 <input type=\\\"number\\\" min=\\\"0\\\" max=\\\"21\\\" class=\\\"form-control input-sm\\\" name=\\\"zoom\\\" [(ngModel)]=\\\"duct.zoomLevel\\\">\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#pricing\\\">Pricing</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"pricing\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <suppliers [supplierList]=\\\"duct.suppliers\\\"></suppliers>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#customFields\\\">Custom Fields</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"customFields\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <custom-fields [customFields]=\\\"duct.customFields\\\"></custom-fields>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                  </div>\\r\\n\\r\\n               </div>\\r\\n               <div class=\\\"box-footer\\\">\\r\\n                  <div class=\\\"pull-right\\\">\\r\\n                     <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"goBack()\\\">Close</button>\\r\\n                     <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" style=\\\"margin-left:10px\\\" (click)=\\\"save()\\\" [disabled]=\\\"form.invalid\\\">Save</button>\\r\\n                  </div>\\r\\n               </div>\\r\\n            </form>\\r\\n         </div>\\r\\n      </div>\\r\\n   </div>\\r\\n</section>\\r\\n\"","export default \"<section class=\\\"content-header\\\">\\r\\n   <h1>Manage Entities</h1>\\r\\n   <ol class=\\\"breadcrumb\\\">\\r\\n      <li><a [routerLink]=\\\"['/home']\\\"><i class=\\\"fas fa-home\\\"></i> Home</a></li>\\r\\n   </ol>\\r\\n</section>\\r\\n\\r\\n<section class=\\\"content\\\">\\r\\n   <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-xs-12\\\">\\r\\n         <div class=\\\"box\\\">\\r\\n            <div class=\\\"box-header with-border\\\">\\r\\n               <h3 class=\\\"box-title\\\">Entity List</h3>\\r\\n               <div class=\\\"box-tools pull-right\\\">\\r\\n                  <div class=\\\"btn-group\\\" data-toggle=\\\"btn-toggle\\\">\\r\\n                     <button aria-expanded=\\\"false\\\" class=\\\"btn btn-primary btn-xs dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" style=\\\"text-align: left;\\\" type=\\\"button\\\">\\r\\n                        New Entity\\r\\n                     <div class=\\\"fa fa-caret-down pull-right\\\" style=\\\"padding-top: 2px;padding-right: 2px;padding-left: 10px;\\\"></div>\\r\\n                     </button>\\r\\n                     <ul class=\\\"dropdown-menu\\\">\\r\\n                        <li><a [routerLink]=\\\"['cable','']\\\">Cable</a></li>\\r\\n                        <li><a [routerLink]=\\\"['chamber','']\\\">Chamber</a></li>\\r\\n                        <li><a [routerLink]=\\\"['duct','']\\\">Duct</a></li>\\r\\n                        <li><a [routerLink]=\\\"['odf','']\\\">ODF</a></li>\\r\\n                        <li><a [routerLink]=\\\"['pole','']\\\">Pole</a></li>\\r\\n                        <!--<li><a [routerLink]=\\\"['pop','']\\\">POP</a></li>-->\\r\\n                        <li><a [routerLink]=\\\"['spliceclosure','']\\\">Splice Closure</a></li>\\r\\n                        <li><a [routerLink]=\\\"['splitter','']\\\">Splitter</a></li>\\r\\n                        <!--<li class=\\\"divider\\\"></li>-->\\r\\n                        <li><a [routerLink]=\\\"['homepass','']\\\">Homepass</a></li>\\r\\n                        <li><a [routerLink]=\\\"['fat','']\\\">Fat</a></li>\\r\\n                        <li><a [routerLink]=\\\"['fdt','']\\\">Fdt</a></li>\\r\\n                     </ul>\\r\\n                  </div>\\r\\n               </div>\\r\\n            </div>\\r\\n            <div class=\\\"box-body\\\">\\r\\n               <div class=\\\"input-group input-group-sm\\\" style=\\\"padding-bottom:20px\\\">\\r\\n                  <div class=\\\"input-group-btn\\\">\\r\\n                     <button type=\\\"button\\\" class=\\\"btn btn-primary dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" aria-expanded=\\\"false\\\" style=\\\"width:100px;text-align: left; border-radius: 3px;\\\">\\r\\n                        {{selectedEntityType}}\\r\\n                        <span class=\\\"fa fa-caret-down btn-caret-down\\\"></span>\\r\\n                     </button>\\r\\n                     <ul class=\\\"dropdown-menu\\\">\\r\\n                        <li><a [routerLink]=\\\"\\\" (click)=\\\"onEntityTypeChange('Cable')\\\">Cable</a></li>\\r\\n                        <li><a [routerLink]=\\\"\\\" (click)=\\\"onEntityTypeChange('Chamber')\\\">Chamber</a></li>\\r\\n                        <li><a [routerLink]=\\\"\\\" (click)=\\\"onEntityTypeChange('Duct')\\\">Duct</a></li>\\r\\n                        <li><a [routerLink]=\\\"\\\" (click)=\\\"onEntityTypeChange('ODF')\\\">ODF</a></li>\\r\\n                        <li><a [routerLink]=\\\"\\\" (click)=\\\"onEntityTypeChange('Pole')\\\">Pole</a></li>\\r\\n                        <li><a [routerLink]=\\\"\\\" (click)=\\\"onEntityTypeChange('SpliceClosure')\\\">Splice Closure</a></li>\\r\\n                        <li><a [routerLink]=\\\"\\\" (click)=\\\"onEntityTypeChange('Splitter')\\\">Splitter</a></li>\\r\\n                        <li><a [routerLink]=\\\"\\\" (click)=\\\"onEntityTypeChange('Homepass')\\\">Homepass</a></li>\\r\\n                        <li><a [routerLink]=\\\"\\\" (click)=\\\"onEntityTypeChange('Fat')\\\">Fat</a></li>\\r\\n                        <li><a [routerLink]=\\\"\\\" (click)=\\\"onEntityTypeChange('Fdt')\\\">Fdt</a></li>\\r\\n                     </ul>\\r\\n                  </div>\\r\\n                  <div class=\\\"input-group-btn\\\" style=\\\"padding-left:10px\\\">\\r\\n                     <button type=\\\"button\\\" class=\\\"btn btn-warning dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" aria-expanded=\\\"false\\\" style=\\\"width:100px;border-bottom-right-radius: 0px;border-top-right-radius: 0px;text-align: left;\\\">\\r\\n                        {{selectedField.label}}\\r\\n                        <span class=\\\"fa fa-caret-down btn-caret-down\\\"></span>\\r\\n                     </button>\\r\\n                     <ul class=\\\"dropdown-menu\\\">\\r\\n                        <ng-container *ngIf='searchFields && searchFields.length > 0'>\\r\\n                           <li *ngFor='let searchField of searchFields'>\\r\\n                              <a [routerLink]=\\\"\\\" (click)=setSearchField(searchField)>{{searchField.label}}</a>\\r\\n                           </li>\\r\\n                        </ng-container>\\r\\n                        <li class=\\\"divider\\\"></li>\\r\\n                        <li><a [routerLink]=\\\"\\\" data-toggle=\\\"modal\\\" data-target=\\\"#advancedSearch\\\">Advanced Search</a></li>\\r\\n\\r\\n                     </ul>\\r\\n                  </div>\\r\\n                  <input [type]=selectedField.dataType class=\\\"form-control\\\" name=\\\"dateSearch\\\" [(ngModel)]=\\\"searchText\\\" autocomplete=\\\"off\\\">\\r\\n                  <span class=\\\"input-group-btn\\\">\\r\\n                     <button type=\\\"button\\\" class=\\\"btn btn-info btn-flat\\\" (click)=\\\"currentPage = 1; search()\\\"><i class=\\\"fas fa-search\\\"></i></button>\\r\\n                  </span>\\r\\n               </div>\\r\\n               <div>\\r\\n                  <div class=\\\"pull-left\\\">\\r\\n                     <span style=\\\"padding-right: 10px;font-size: small;\\\">Pages</span>\\r\\n                     <div class=\\\"btn-group\\\" style=\\\"padding-right: 10px;\\\">\\r\\n                        <button type=\\\"button\\\" class=\\\"btn btn-default dropdown-toggle btn-sm\\\" data-toggle=\\\"dropdown\\\" aria-expanded=\\\"false\\\">\\r\\n                           <span style=\\\"padding-right: 5px;\\\"> {{pageSize}} </span>\\r\\n                           <span class=\\\"caret\\\"></span>\\r\\n                        </button>\\r\\n                        <ul class=\\\"dropdown-menu\\\">\\r\\n                           <li><a [routerLink]=\\\"\\\" (click)=\\\"pageSize = 10; getFormData()\\\">10</a></li>\\r\\n                           <li><a [routerLink]=\\\"\\\" (click)=\\\"pageSize = 20; getFormData()\\\">20</a></li>\\r\\n                           <li><a [routerLink]=\\\"\\\" (click)=\\\"pageSize = 50; getFormData()\\\">50</a></li>\\r\\n                           <li><a [routerLink]=\\\"\\\" (click)=\\\"pageSize = 100; getFormData()\\\">100</a></li>\\r\\n                        </ul>\\r\\n                     </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"pull-right\\\">\\r\\n                     <span style=\\\"padding-right: 10px;font-size: small;\\\">Showing page {{currentPage}} of {{totalPages}}</span>\\r\\n                     <div class=\\\"btn-group\\\" style=\\\"padding-bottom:5px\\\">\\r\\n                        <button class=\\\"btn btn-default btn-sm\\\" type=\\\"button\\\" (click)=\\\"setPage(currentPage - 1)\\\" [ngClass]=\\\"{disabled:currentPage === 1}\\\"><i class=\\\"fa fa-chevron-left fa-fw\\\"></i></button>\\r\\n                        <button class=\\\"btn btn-default btn-sm\\\" type=\\\"button\\\" (click)=\\\"setPage(currentPage + 1)\\\" [ngClass]=\\\"{disabled:currentPage === totalPages}\\\"><i class=\\\"fa fa-chevron-right fa-fw\\\"></i></button>\\r\\n                     </div>\\r\\n                  </div>\\r\\n               </div>\\r\\n               <table class=\\\"table table-bordered table-striped\\\">\\r\\n                  <thead>\\r\\n                     <tr (click)=\\\"onColumnClick($event.target)\\\">\\r\\n                        <th data-column=\\\"Name\\\" class=\\\"table-sorter\\\">Name</th>\\r\\n                        <th data-column=\\\"UpdatedBy\\\" class=\\\"table-sorter\\\" style=\\\"width: 150px;\\\">Updated By</th>\\r\\n                        <th data-column=\\\"UpdatedDate\\\" class=\\\"table-sorter\\\" style=\\\"width: 125px;\\\">Updated On</th>\\r\\n                        <th style=\\\"width:72px\\\"></th>\\r\\n                     </tr>\\r\\n                  </thead>\\r\\n                  <tbody>\\r\\n                     <ng-container *ngIf='entities && entities.length > 0'>\\r\\n                        <tr *ngFor='let entity of entities'>\\r\\n                           <td>{{entity.name}}</td>\\r\\n                           <td>{{entity.updatedBy}}</td>\\r\\n                           <td>{{entity.updatedDate | date:'dd/MM/yyyy'}}</td>\\r\\n                           <td>\\r\\n                              <a>\\r\\n                                 <i class=\\\"fa fa-edit\\\" [routerLink]=\\\"[selectedEntityType.toLowerCase(), entity.id]\\\" title=\\\"Edit\\\" style=\\\"font-size: 14px; cursor:pointer\\\"></i>\\r\\n                              </a>&nbsp;\\r\\n                              <a>\\r\\n                                 <i class=\\\"fa fa-trash\\\" (click)=\\\"delete(entity)\\\" title=\\\"Remove\\\" style=\\\"font-size: 14px; cursor:pointer; color:red\\\"></i>\\r\\n                              </a>\\r\\n                           </td>\\r\\n                        </tr>\\r\\n                     </ng-container>\\r\\n                     <tr *ngIf='entities == null || entities.length == 0'>\\r\\n                        <td colspan=\\\"4\\\" style=\\\"text-align: center;\\\">\\r\\n                           {{statusMessage}}\\r\\n                        </td>\\r\\n                     </tr>\\r\\n                  </tbody>\\r\\n               </table>\\r\\n            </div>\\r\\n         </div>\\r\\n      </div>\\r\\n   </div>\\r\\n</section>\\r\\n<div id=\\\"advancedSearch\\\" class=\\\"modal fade\\\" role=\\\"dialog\\\">\\r\\n   <div class=\\\"modal-dialog\\\">\\r\\n      <div class=\\\"modal-content\\\" style=\\\"border-radius:3px\\\">\\r\\n         <div class=\\\"modal-header\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\r\\n            <h4 class=\\\"modal-title\\\">Advanced Search</h4>\\r\\n         </div>\\r\\n         <div class=\\\"modal-body\\\">\\r\\n            <table class=\\\"table table-bordered\\\">\\r\\n               <thead>\\r\\n                  <tr>\\r\\n                     <th style=\\\"width: 200px;\\\">Field</th>\\r\\n                     <th>Value</th>\\r\\n                  </tr>\\r\\n               </thead>\\r\\n               <tbody>\\r\\n                  <ng-container *ngIf='searchFields && searchFields.length > 0'>\\r\\n                     <tr *ngFor='let searchField of searchFields'>\\r\\n                        <td>{{searchField.label}}</td>\\r\\n                        <td><input [type]=searchField.dataType class=\\\"form-control input-sm\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"searchField.value\\\"></td>\\r\\n                     </tr>\\r\\n                  </ng-container>\\r\\n                  <tr *ngIf='searchFields == null || searchFields.length == 0'>\\r\\n                     <td colspan=\\\"2\\\" style=\\\"text-align: center;\\\">\\r\\n                        No search fields defined\\r\\n                     </td>\\r\\n                  </tr>\\r\\n               </tbody>\\r\\n            </table>\\r\\n         </div>\\r\\n         <div class=\\\"modal-footer\\\">\\r\\n            <button class=\\\"btn btn-info\\\" data-dismiss=\\\"modal\\\" type=\\\"button\\\" (click)=\\\"advancedSearch()\\\">Search</button>\\r\\n            <button class=\\\"btn btn-default pull-left\\\" data-dismiss=\\\"modal\\\" type=\\\"button\\\" (click)=\\\"clearSearch()\\\">Close</button>\\r\\n         </div>\\r\\n      </div>\\r\\n   </div>\\r\\n</div>\\r\\n\"","export default \"<section class=\\\"content-header\\\">\\r\\n   <h1>Manage Entities <small> {{title}} </small></h1>\\r\\n   <ol class=\\\"breadcrumb\\\">\\r\\n      <li><a [routerLink]=\\\"['/']\\\"><i class=\\\"fa fa-home\\\"></i> Home</a></li>\\r\\n      <li><a [routerLink]=\\\"['/entities']\\\"> Entities</a></li>\\r\\n   </ol>\\r\\n</section>\\r\\n<section class=\\\"content\\\">\\r\\n   <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-xs-12\\\">\\r\\n         <div class=\\\"box\\\">\\r\\n            <div class=\\\"box-header with-border ui-sortable-handle\\\">\\r\\n               <h3 class=\\\"box-title\\\">FAT Details</h3>\\r\\n               <div class=\\\"box-tools pull-right\\\" data-original-title=\\\"Status\\\" data-toggle=\\\"tooltip\\\" title=\\\"\\\">\\r\\n                  <button class=\\\"btn btn-social-icon btn-xs btn-danger\\\" (click)=\\\"goBack()\\\">\\r\\n                     <i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                  </button>\\r\\n                  <button class=\\\"btn btn-social-icon btn-xs btn-success\\\" type=\\\"submit\\\" style=\\\"margin-left: 5px;\\\" (click)=\\\"save()\\\" [disabled]=\\\"form.invalid\\\">\\r\\n                     <i class=\\\"far fa-save\\\"></i>\\r\\n                  </button>\\r\\n               </div>\\r\\n            </div>\\r\\n            <form name=\\\"form\\\" action=\\\"javascript:{}\\\" #form=\\\"ngForm\\\" novalidate autocomplete=\\\"off\\\">\\r\\n               <div class=\\\"box-body\\\">\\r\\n                  <div class=\\\"panel panel-default\\\">\\r\\n                     <div class=\\\"panel-heading\\\">\\r\\n                        <h4 class=\\\"panel-title\\\">\\r\\n                           General Information\\r\\n                        </h4>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel-collapse collapse in\\\">\\r\\n                        <div class=\\\"panel-body\\\">\\r\\n                           <div class=\\\"form-group col-md-6\\\">\\r\\n                              <label for=\\\"name\\\" class=\\\"control-label\\\">Name <span style=\\\"color:red;\\\">*</span></label>\\r\\n                              <input type=\\\"text\\\" name=\\\"name\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"fat.name\\\" required/>\\r\\n                           </div>\\r\\n                           <div class=\\\"form-group col-md-6\\\">\\r\\n                              <label for=\\\"parentType\\\" class=\\\"control-label\\\">Parent Type</label>\\r\\n                              <mat-select name=\\\"parentType\\\" [(ngModel)]=\\\"fat.parentEntityType\\\">\\r\\n                                 <mat-option>Select Parent Entity Type</mat-option>\\r\\n                                 <mat-option value=\\\"Cable\\\">Cable</mat-option>\\r\\n                                 <mat-option value=\\\"Chamber\\\">Chamber</mat-option>\\r\\n                                 <mat-option value=\\\"Duct\\\">Duct</mat-option>\\r\\n                                 <mat-option value=\\\"ODF\\\">ODF</mat-option>\\r\\n                                 <mat-option value=\\\"Pole\\\">Pole</mat-option>\\r\\n                                 <mat-option value=\\\"SpliceClosure\\\">Splice Closure</mat-option>\\r\\n                                 <mat-option value=\\\"Splitter\\\">Splitter</mat-option>\\r\\n                                 <mat-option value=\\\"Homepass\\\">Homepass</mat-option>\\r\\n                                 <mat-option value=\\\"Fat\\\">Fat</mat-option>\\r\\n                                 <mat-option value=\\\"Fdt\\\">Fdt</mat-option>\\r\\n                              </mat-select>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"panel-group\\\" id=\\\"accordion\\\">\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#make\\\">Make</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"make\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"type\\\" class=\\\"control-label\\\">Type</label>\\r\\n                                    <input type=\\\"text\\\" name=\\\"type\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"fat.type\\\" />\\r\\n                                 </div>\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"brand\\\" class=\\\"control-label\\\">Brand</label>\\r\\n                                    <input type=\\\"text\\\" name=\\\"brand\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"fat.brand\\\" />\\r\\n                                 </div>\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"model\\\" class=\\\"control-label\\\">Model</label>\\r\\n                                    <input type=\\\"text\\\" name=\\\"model\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"fat.model\\\" />\\r\\n                                 </div>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#fatInfo\\\">Template Info</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"fatInfo\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <templateinfo [template]=\\\"fat.template\\\" [Flag]=\\\"Flag1\\\"></templateinfo>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#zoomSettings\\\">Zoom Settings</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"zoomSettings\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-11\\\">\\r\\n                                 <mat-slider name=\\\"zoomLevel\\\" thumbLabel step=\\\"1\\\" min=\\\"0\\\" max=\\\"21\\\" style=\\\"width:100%\\\" [(ngModel)]=\\\"fat.zoomLevel\\\"></mat-slider>\\r\\n                              </div>\\r\\n                              <div class=\\\"col-sm-1\\\" style=\\\"padding-top: 7px;\\\">\\r\\n                                 <input type=\\\"number\\\" min=\\\"0\\\" max=\\\"21\\\" class=\\\"form-control input-sm\\\" name=\\\"zoom\\\" [(ngModel)]=\\\"fat.zoomLevel\\\">\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#pricing\\\">Pricing</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"pricing\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <suppliers [supplierList]=\\\"fat.suppliers\\\"></suppliers>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#customFields\\\">Custom Fields</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"customFields\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <custom-fields [customFields]=\\\"fat.customFields\\\"></custom-fields>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                  </div>\\r\\n\\r\\n               </div>\\r\\n               <div class=\\\"box-footer\\\">\\r\\n                  <div class=\\\"pull-right\\\">\\r\\n                     <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"goBack()\\\">Close</button>\\r\\n                     <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" style=\\\"margin-left:10px\\\" (click)=\\\"save()\\\" [disabled]=\\\"form.invalid\\\">Save</button>\\r\\n                  </div>\\r\\n               </div>\\r\\n            </form>\\r\\n         </div>\\r\\n      </div>\\r\\n   </div>\\r\\n</section>\\r\\n\"","export default \"<section class=\\\"content-header\\\">\\r\\n   <h1>Manage Entities <small> {{title}} </small></h1>\\r\\n   <ol class=\\\"breadcrumb\\\">\\r\\n      <li><a [routerLink]=\\\"['/']\\\"><i class=\\\"fa fa-home\\\"></i> Home</a></li>\\r\\n      <li><a [routerLink]=\\\"['/entities']\\\"> Entities</a></li>\\r\\n   </ol>\\r\\n</section>\\r\\n<section class=\\\"content\\\">\\r\\n   <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-xs-12\\\">\\r\\n         <div class=\\\"box\\\">\\r\\n            <div class=\\\"box-header with-border ui-sortable-handle\\\">\\r\\n               <h3 class=\\\"box-title\\\">FDT Details</h3>\\r\\n               <div class=\\\"box-tools pull-right\\\" data-original-title=\\\"Status\\\" data-toggle=\\\"tooltip\\\" title=\\\"\\\">\\r\\n                  <button class=\\\"btn btn-social-icon btn-xs btn-danger\\\" (click)=\\\"goBack()\\\">\\r\\n                     <i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                  </button>\\r\\n                  <button class=\\\"btn btn-social-icon btn-xs btn-success\\\" type=\\\"submit\\\" style=\\\"margin-left: 5px;\\\" (click)=\\\"save()\\\" [disabled]=\\\"form.invalid\\\">\\r\\n                     <i class=\\\"far fa-save\\\"></i>\\r\\n                  </button>\\r\\n               </div>\\r\\n            </div>\\r\\n            <form name=\\\"form\\\" action=\\\"javascript:{}\\\" #form=\\\"ngForm\\\" novalidate autocomplete=\\\"off\\\">\\r\\n               <div class=\\\"box-body\\\">\\r\\n                  <div class=\\\"panel panel-default\\\">\\r\\n                     <div class=\\\"panel-heading\\\">\\r\\n                        <h4 class=\\\"panel-title\\\">\\r\\n                           General Information\\r\\n                        </h4>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel-collapse collapse in\\\">\\r\\n                        <div class=\\\"panel-body\\\">\\r\\n                           <div class=\\\"form-group col-md-6\\\">\\r\\n                              <label for=\\\"name\\\" class=\\\"control-label\\\">Name <span style=\\\"color:red;\\\">*</span></label>\\r\\n                              <input type=\\\"text\\\" name=\\\"name\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"fdt.name\\\" required />\\r\\n                           </div>\\r\\n                           <div class=\\\"form-group col-md-6\\\">\\r\\n                              <label for=\\\"parentType\\\" class=\\\"control-label\\\">Parent Type</label>\\r\\n                              <mat-select name=\\\"parentType\\\" [(ngModel)]=\\\"fdt.parentEntityType\\\">\\r\\n                                 <mat-option>Select Parent Entity Type</mat-option>\\r\\n                                 <mat-option value=\\\"Cable\\\">Cable</mat-option>\\r\\n                                 <mat-option value=\\\"Chamber\\\">Chamber</mat-option>\\r\\n                                 <mat-option value=\\\"Duct\\\">Duct</mat-option>\\r\\n                                 <mat-option value=\\\"ODF\\\">ODF</mat-option>\\r\\n                                 <mat-option value=\\\"Pole\\\">Pole</mat-option>\\r\\n                                 <mat-option value=\\\"SpliceClosure\\\">Splice Closure</mat-option>\\r\\n                                 <mat-option value=\\\"Splitter\\\">Splitter</mat-option>\\r\\n                                 <mat-option value=\\\"Homepass\\\">Homepass</mat-option>\\r\\n                                 <mat-option value=\\\"Fat\\\">Fat</mat-option>\\r\\n                                 <mat-option value=\\\"Fdt\\\">Fdt</mat-option>\\r\\n                              </mat-select>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"panel-group\\\" id=\\\"accordion\\\">\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#make\\\">Make</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"make\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"type\\\" class=\\\"control-label\\\">Type</label>\\r\\n                                    <input type=\\\"text\\\" name=\\\"type\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"fdt.type\\\" />\\r\\n                                 </div>\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"brand\\\" class=\\\"control-label\\\">Brand</label>\\r\\n                                    <input type=\\\"text\\\" name=\\\"brand\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"fdt.brand\\\" />\\r\\n                                 </div>\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"model\\\" class=\\\"control-label\\\">Model</label>\\r\\n                                    <input type=\\\"text\\\" name=\\\"model\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"fdt.model\\\" />\\r\\n                                 </div>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#fdtInfo\\\">Template Info</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"fdtInfo\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <templateinfo [template]=\\\"fdt.template\\\" [Flag]=\\\"Flag1\\\"></templateinfo>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#zoomSettings\\\">Zoom Settings</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"zoomSettings\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-11\\\">\\r\\n                                 <mat-slider name=\\\"zoomLevel\\\" thumbLabel step=\\\"1\\\" min=\\\"0\\\" max=\\\"21\\\" style=\\\"width:100%\\\" [(ngModel)]=\\\"fdt.zoomLevel\\\"></mat-slider>\\r\\n                              </div>\\r\\n                              <div class=\\\"col-sm-1\\\" style=\\\"padding-top: 7px;\\\">\\r\\n                                 <input type=\\\"number\\\" min=\\\"0\\\" max=\\\"21\\\" class=\\\"form-control input-sm\\\" name=\\\"zoom\\\" [(ngModel)]=\\\"fdt.zoomLevel\\\">\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#pricing\\\">Pricing</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"pricing\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <suppliers [supplierList]=\\\"fdt.suppliers\\\"></suppliers>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#customFields\\\">Custom Fields</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"customFields\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <custom-fields [customFields]=\\\"fdt.customFields\\\"></custom-fields>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                  </div>\\r\\n\\r\\n               </div>\\r\\n               <div class=\\\"box-footer\\\">\\r\\n                  <div class=\\\"pull-right\\\">\\r\\n                     <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"goBack()\\\">Close</button>\\r\\n                     <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" style=\\\"margin-left:10px\\\" (click)=\\\"save()\\\" [disabled]=\\\"form.invalid\\\">Save</button>\\r\\n                  </div>\\r\\n               </div>\\r\\n            </form>\\r\\n         </div>\\r\\n      </div>\\r\\n   </div>\\r\\n</section>\\r\\n\"","export default \"<section class=\\\"content-header\\\">\\r\\n   <h1>Manage Entities <small> {{title}} </small></h1>\\r\\n   <ol class=\\\"breadcrumb\\\">\\r\\n      <li><a [routerLink]=\\\"['/']\\\"><i class=\\\"fa fa-home\\\"></i> Home</a></li>\\r\\n      <li><a [routerLink]=\\\"['/entities']\\\"> Entities</a></li>\\r\\n   </ol>\\r\\n</section>\\r\\n<section class=\\\"content\\\">\\r\\n   <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-xs-12\\\">\\r\\n         <div class=\\\"box\\\">\\r\\n            <div class=\\\"box-header with-border ui-sortable-handle\\\">\\r\\n               <h3 class=\\\"box-title\\\">Homepass Details</h3>\\r\\n               <div class=\\\"box-tools pull-right\\\" data-original-title=\\\"Status\\\" data-toggle=\\\"tooltip\\\" title=\\\"\\\">\\r\\n                  <button class=\\\"btn btn-social-icon btn-xs btn-danger\\\" (click)=\\\"goBack()\\\">\\r\\n                     <i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                  </button>\\r\\n                  <button class=\\\"btn btn-social-icon btn-xs btn-success\\\" type=\\\"submit\\\" style=\\\"margin-left: 5px;\\\" (click)=\\\"save()\\\" [disabled]=\\\"form.invalid\\\">\\r\\n                     <i class=\\\"far fa-save\\\"></i>\\r\\n                  </button>\\r\\n               </div>\\r\\n            </div>\\r\\n            <form name=\\\"form\\\" action=\\\"javascript:{}\\\" #form=\\\"ngForm\\\" novalidate autocomplete=\\\"off\\\">\\r\\n               <div class=\\\"box-body\\\">\\r\\n                  <div class=\\\"panel panel-default\\\">\\r\\n                     <div class=\\\"panel-heading\\\">\\r\\n                        <h4 class=\\\"panel-title\\\">\\r\\n                           General Information\\r\\n                        </h4>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel-collapse collapse in\\\">\\r\\n                        <div class=\\\"panel-body\\\">\\r\\n                           <div class=\\\"form-group col-md-6\\\">\\r\\n                              <label for=\\\"name\\\" class=\\\"control-label\\\">Name <span style=\\\"color:red;\\\">*</span></label>\\r\\n                              <input type=\\\"text\\\" name=\\\"name\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"homepass.name\\\" required/>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"panel-group\\\" id=\\\"accordion\\\">\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#homepassInfo\\\">Homepass Info</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"homepassInfo\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"type\\\" class=\\\"control-label\\\">Type</label>\\r\\n                                    <input type=\\\"text\\\" name=\\\"type\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"homepass.type\\\" />\\r\\n                                 </div>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#zoomSettings\\\">Zoom Settings</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"zoomSettings\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-11\\\">\\r\\n                                 <mat-slider name=\\\"zoomLevel\\\" thumbLabel step=\\\"1\\\" min=\\\"0\\\" max=\\\"21\\\" style=\\\"width:100%\\\" [(ngModel)]=\\\"homepass.zoomLevel\\\"></mat-slider>\\r\\n                              </div>\\r\\n                              <div class=\\\"col-sm-1\\\" style=\\\"padding-top: 7px;\\\">\\r\\n                                 <input type=\\\"number\\\" min=\\\"0\\\" max=\\\"21\\\" class=\\\"form-control input-sm\\\" name=\\\"zoom\\\" [(ngModel)]=\\\"homepass.zoomLevel\\\">\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#customFields\\\">Custom Fields</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"customFields\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <custom-fields [customFields]=\\\"homepass.customFields\\\"></custom-fields>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                  </div>\\r\\n\\r\\n               </div>\\r\\n               <div class=\\\"box-footer\\\">\\r\\n                  <div class=\\\"pull-right\\\">\\r\\n                     <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"goBack()\\\">Close</button>\\r\\n                     <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" style=\\\"margin-left:10px\\\" (click)=\\\"save()\\\" [disabled]=\\\"form.invalid\\\">Save</button>\\r\\n                  </div>\\r\\n               </div>\\r\\n            </form>\\r\\n         </div>\\r\\n      </div>\\r\\n   </div>\\r\\n</section>\\r\\n\"","export default \"<section class=\\\"content-header\\\">\\r\\n   <h1>Manage Entities <small> {{title}} </small></h1>\\r\\n   <ol class=\\\"breadcrumb\\\">\\r\\n      <li><a [routerLink]=\\\"['/']\\\"><i class=\\\"fa fa-home\\\"></i> Home</a></li>\\r\\n      <li><a [routerLink]=\\\"['/entities']\\\"> Entities</a></li>\\r\\n   </ol>\\r\\n</section>\\r\\n<section class=\\\"content\\\">\\r\\n   <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-xs-12\\\">\\r\\n         <div class=\\\"box\\\">\\r\\n            <div class=\\\"box-header with-border ui-sortable-handle\\\">\\r\\n               <h3 class=\\\"box-title\\\">ODF Details</h3>\\r\\n               <div class=\\\"box-tools pull-right\\\" data-original-title=\\\"Status\\\" data-toggle=\\\"tooltip\\\" title=\\\"\\\">\\r\\n                  <button class=\\\"btn btn-social-icon btn-xs btn-danger\\\" (click)=\\\"goBack()\\\">\\r\\n                     <i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                  </button>\\r\\n                  <button class=\\\"btn btn-social-icon btn-xs btn-success\\\" type=\\\"submit\\\" style=\\\"margin-left: 5px;\\\" (click)=\\\"save()\\\" [disabled]=\\\"form.invalid\\\">\\r\\n                     <i class=\\\"far fa-save\\\"></i>\\r\\n                  </button>\\r\\n               </div>\\r\\n            </div>\\r\\n            <form name=\\\"form\\\" action=\\\"javascript:{}\\\" #form=\\\"ngForm\\\" novalidate autocomplete=\\\"off\\\">\\r\\n               <div class=\\\"box-body\\\">\\r\\n                  <div class=\\\"panel panel-default\\\">\\r\\n                     <div class=\\\"panel-heading\\\">\\r\\n                        <h4 class=\\\"panel-title\\\">\\r\\n                           General Information\\r\\n                        </h4>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel-collapse collapse in\\\">\\r\\n                        <div class=\\\"panel-body\\\">\\r\\n                           <div class=\\\"form-group col-md-6\\\">\\r\\n                              <label for=\\\"name\\\" class=\\\"control-label\\\">Name <span style=\\\"color:red;\\\">*</span></label>\\r\\n                              <input type=\\\"text\\\" name=\\\"name\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"odf.name\\\" required />\\r\\n                           </div>\\r\\n                           <div class=\\\"form-group col-md-6\\\">\\r\\n                              <label for=\\\"parentType\\\" class=\\\"control-label\\\">Parent Type</label>\\r\\n                              <mat-select name=\\\"parentType\\\" [(ngModel)]=\\\"odf.parentEntityType\\\">\\r\\n                                 <mat-option>Select Parent Entity Type</mat-option>\\r\\n                                 <mat-option value=\\\"Cable\\\">Cable</mat-option>\\r\\n                                 <mat-option value=\\\"Chamber\\\">Chamber</mat-option>\\r\\n                                 <mat-option value=\\\"Duct\\\">Duct</mat-option>\\r\\n                                 <mat-option value=\\\"ODF\\\">ODF</mat-option>\\r\\n                                 <mat-option value=\\\"Pole\\\">Pole</mat-option>\\r\\n                                 <mat-option value=\\\"SpliceClosure\\\">Splice Closure</mat-option>\\r\\n                                 <mat-option value=\\\"Splitter\\\">Splitter</mat-option>\\r\\n                                 <mat-option value=\\\"Fat\\\">Fat</mat-option>\\r\\n                                 <mat-option value=\\\"Fdt\\\">Fdt</mat-option>\\r\\n\\r\\n                              </mat-select>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"panel-group\\\" id=\\\"accordion\\\">\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#make\\\">Make</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"make\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"type\\\" class=\\\"control-label\\\">Type</label>\\r\\n                                    <input type=\\\"text\\\" name=\\\"type\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"odf.type\\\" />\\r\\n                                 </div>\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"brand\\\" class=\\\"control-label\\\">Brand</label>\\r\\n                                    <input type=\\\"text\\\" name=\\\"brand\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"odf.brand\\\" />\\r\\n                                 </div>\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"model\\\" class=\\\"control-label\\\">Model</label>\\r\\n                                    <input type=\\\"text\\\" name=\\\"model\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"odf.model\\\" />\\r\\n                                 </div>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#odfInfo\\\">ODF Info</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"odfInfo\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"noOfPorts\\\" class=\\\"control-label\\\">No Of Ports</label>\\r\\n                                    <input type=\\\"number\\\" name=\\\"noOfPorts\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"odf.noOfPorts\\\" />\\r\\n                                 </div>\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"mountingType\\\" class=\\\"control-label\\\">Mounting Type</label>\\r\\n                                    <input type=\\\"text\\\" name=\\\"mountingType\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"odf.mountingType\\\" />\\r\\n                                 </div>\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"height\\\" class=\\\"control-label\\\">Height</label>\\r\\n                                    <input type=\\\"number\\\" name=\\\"height\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"odf.height\\\" />\\r\\n                                 </div>\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"width\\\" class=\\\"control-label\\\">Width</label>\\r\\n                                    <input type=\\\"number\\\" name=\\\"width\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"odf.weidth\\\" />\\r\\n                                 </div>\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"length\\\" class=\\\"control-label\\\">Length</label>\\r\\n                                    <input type=\\\"number\\\" name=\\\"length\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"odf.length\\\" />\\r\\n                                 </div>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#zoomSettings\\\">Zoom Settings</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"zoomSettings\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-11\\\">\\r\\n                                 <mat-slider name=\\\"zoomLevel\\\" thumbLabel step=\\\"1\\\" min=\\\"0\\\" max=\\\"21\\\" style=\\\"width:100%\\\" [(ngModel)]=\\\"odf.zoomLevel\\\"></mat-slider>\\r\\n                              </div>\\r\\n                              <div class=\\\"col-sm-1\\\" style=\\\"padding-top: 7px;\\\">\\r\\n                                 <input type=\\\"number\\\" min=\\\"0\\\" max=\\\"21\\\" class=\\\"form-control input-sm\\\" name=\\\"zoom\\\" [(ngModel)]=\\\"odf.zoomLevel\\\">\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#pricing\\\">Pricing</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"pricing\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <suppliers [supplierList]=\\\"odf.suppliers\\\"></suppliers>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#customFields\\\">Custom Fields</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"customFields\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <custom-fields [customFields]=\\\"odf.customFields\\\"></custom-fields>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                  </div>\\r\\n\\r\\n               </div>\\r\\n               <div class=\\\"box-footer\\\">\\r\\n                  <div class=\\\"pull-right\\\">\\r\\n                     <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"goBack()\\\">Close</button>\\r\\n                     <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" style=\\\"margin-left:10px\\\" (click)=\\\"save()\\\" [disabled]=\\\"form.invalid\\\">Save</button>\\r\\n                  </div>\\r\\n               </div>\\r\\n            </form>\\r\\n         </div>\\r\\n      </div>\\r\\n   </div>\\r\\n</section>\\r\\n\"","export default \"<section class=\\\"content-header\\\">\\r\\n   <h1>Manage Entities <small> {{title}} </small></h1>\\r\\n   <ol class=\\\"breadcrumb\\\">\\r\\n      <li><a [routerLink]=\\\"['/']\\\"><i class=\\\"fa fa-home\\\"></i> Home</a></li>\\r\\n      <li><a [routerLink]=\\\"['/entities']\\\"> Entities</a></li>\\r\\n   </ol>\\r\\n</section>\\r\\n<section class=\\\"content\\\">\\r\\n   <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-xs-12\\\">\\r\\n         <div class=\\\"box\\\">\\r\\n            <div class=\\\"box-header with-border ui-sortable-handle\\\">\\r\\n               <h3 class=\\\"box-title\\\">Pole Details</h3>\\r\\n               <div class=\\\"box-tools pull-right\\\" data-original-title=\\\"Status\\\" data-toggle=\\\"tooltip\\\" title=\\\"\\\">\\r\\n                  <button class=\\\"btn btn-social-icon btn-xs btn-danger\\\" (click)=\\\"goBack()\\\">\\r\\n                     <i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                  </button>\\r\\n                  <button class=\\\"btn btn-social-icon btn-xs btn-success\\\" type=\\\"submit\\\" style=\\\"margin-left: 5px;\\\" (click)=\\\"save()\\\" [disabled]=\\\"form.invalid\\\">\\r\\n                     <i class=\\\"far fa-save\\\"></i>\\r\\n                  </button>\\r\\n               </div>\\r\\n            </div>\\r\\n            <form name=\\\"form\\\" action=\\\"javascript:{}\\\" #form=\\\"ngForm\\\" novalidate autocomplete=\\\"off\\\">\\r\\n               <div class=\\\"box-body\\\">\\r\\n                  <div class=\\\"panel panel-default\\\">\\r\\n                     <div class=\\\"panel-heading\\\">\\r\\n                        <h4 class=\\\"panel-title\\\">\\r\\n                           General Information\\r\\n                        </h4>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel-collapse collapse in\\\">\\r\\n                        <div class=\\\"panel-body\\\">\\r\\n                           <div class=\\\"form-group col-md-6\\\">\\r\\n                              <label for=\\\"name\\\" class=\\\"control-label\\\">Name <span style=\\\"color:red;\\\">*</span></label>\\r\\n                              <input type=\\\"text\\\" name=\\\"name\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"pole.name\\\" required/>\\r\\n                           </div>\\r\\n                           <div class=\\\"form-group col-md-6\\\">\\r\\n                              <label for=\\\"parentType\\\" class=\\\"control-label\\\">Parent Type</label>\\r\\n                              <mat-select name=\\\"parentType\\\" [(ngModel)]=\\\"pole.parentEntityType\\\">\\r\\n                                 <mat-option>Select Parent Entity Type</mat-option>\\r\\n                                 <mat-option value=\\\"Cable\\\">Cable</mat-option>\\r\\n                                 <mat-option value=\\\"Chamber\\\">Chamber</mat-option>\\r\\n                                 <mat-option value=\\\"Duct\\\">Duct</mat-option>\\r\\n                                 <mat-option value=\\\"ODF\\\">ODF</mat-option>\\r\\n                                 <mat-option value=\\\"Pole\\\">Pole</mat-option>\\r\\n                                 <mat-option value=\\\"SpliceClosure\\\">Splice Closure</mat-option>\\r\\n                                 <mat-option value=\\\"Splitter\\\">Splitter</mat-option>\\r\\n                                 <mat-option value=\\\"Fat\\\">Fat</mat-option>\\r\\n                                 <mat-option value=\\\"Fdt\\\">Fdt</mat-option>\\r\\n                              </mat-select>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"panel-group\\\" id=\\\"accordion\\\">\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#make\\\">Make</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"make\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"type\\\" class=\\\"control-label\\\">Type</label>\\r\\n                                    <input type=\\\"text\\\" name=\\\"type\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"pole.type\\\" />\\r\\n                                 </div>\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"brand\\\" class=\\\"control-label\\\">Brand</label>\\r\\n                                    <input type=\\\"text\\\" name=\\\"brand\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"pole.brand\\\" />\\r\\n                                 </div>\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"model\\\" class=\\\"control-label\\\">Model</label>\\r\\n                                    <input type=\\\"text\\\" name=\\\"model\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"pole.model\\\" />\\r\\n                                 </div>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#poleInfo\\\">Pole Info</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"poleInfo\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"height\\\" class=\\\"control-label\\\">Height</label>\\r\\n                                    <input type=\\\"number\\\" name=\\\"height\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"pole.poleHeight\\\" />\\r\\n                                 </div>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#zoomSettings\\\">Zoom Settings</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"zoomSettings\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-11\\\">\\r\\n                                 <mat-slider name=\\\"zoomLevel\\\" thumbLabel step=\\\"1\\\" min=\\\"0\\\" max=\\\"21\\\" style=\\\"width:100%\\\" [(ngModel)]=\\\"pole.zoomLevel\\\"></mat-slider>\\r\\n                              </div>\\r\\n                              <div class=\\\"col-sm-1\\\" style=\\\"padding-top: 7px;\\\">\\r\\n                                 <input type=\\\"number\\\" min=\\\"0\\\" max=\\\"21\\\" class=\\\"form-control input-sm\\\" name=\\\"zoom\\\" [(ngModel)]=\\\"pole.zoomLevel\\\">\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#pricing\\\">Pricing</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"pricing\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <suppliers [supplierList]=\\\"pole.suppliers\\\"></suppliers>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#customFields\\\">Custom Fields</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"customFields\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <custom-fields [customFields]=\\\"pole.customFields\\\"></custom-fields>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                  </div>\\r\\n\\r\\n               </div>\\r\\n               <div class=\\\"box-footer\\\">\\r\\n                  <div class=\\\"pull-right\\\">\\r\\n                     <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"goBack()\\\">Close</button>\\r\\n                     <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" style=\\\"margin-left:10px\\\" (click)=\\\"save()\\\" [disabled]=\\\"form.invalid\\\">Save</button>\\r\\n                  </div>\\r\\n               </div>\\r\\n            </form>\\r\\n         </div>\\r\\n      </div>\\r\\n   </div>\\r\\n</section>\\r\\n\"","export default \"<section class=\\\"content-header\\\">\\r\\n   <h1>Manage Entities <small> {{title}} </small></h1>\\r\\n   <ol class=\\\"breadcrumb\\\">\\r\\n      <li><a [routerLink]=\\\"['/']\\\"><i class=\\\"fa fa-home\\\"></i> Home</a></li>\\r\\n      <li><a [routerLink]=\\\"['/entities']\\\"> Entities</a></li>\\r\\n   </ol>\\r\\n</section>\\r\\n<section class=\\\"content\\\">\\r\\n   <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-xs-12\\\">\\r\\n         <div class=\\\"box\\\">\\r\\n            <div class=\\\"box-header with-border ui-sortable-handle\\\">\\r\\n               <h3 class=\\\"box-title\\\">SpliceClosure Details</h3>\\r\\n               <div class=\\\"box-tools pull-right\\\" data-original-title=\\\"Status\\\" data-toggle=\\\"tooltip\\\" title=\\\"\\\">\\r\\n                  <button class=\\\"btn btn-social-icon btn-xs btn-danger\\\" (click)=\\\"goBack()\\\">\\r\\n                     <i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                  </button>\\r\\n                  <button class=\\\"btn btn-social-icon btn-xs btn-success\\\" type=\\\"submit\\\" style=\\\"margin-left: 5px;\\\" (click)=\\\"save()\\\" [disabled]=\\\"form.invalid\\\">\\r\\n                     <i class=\\\"far fa-save\\\"></i>\\r\\n                  </button>\\r\\n               </div>\\r\\n            </div>\\r\\n            <form name=\\\"form\\\" action=\\\"javascript:{}\\\" #form=\\\"ngForm\\\" novalidate autocomplete=\\\"off\\\">\\r\\n               <div class=\\\"box-body\\\">\\r\\n                  <div class=\\\"panel panel-default\\\">\\r\\n                     <div class=\\\"panel-heading\\\">\\r\\n                        <h4 class=\\\"panel-title\\\">\\r\\n                           General Information\\r\\n                        </h4>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel-collapse collapse in\\\">\\r\\n                        <div class=\\\"panel-body\\\">\\r\\n                           <div class=\\\"form-group col-md-6\\\">\\r\\n                              <label for=\\\"name\\\" class=\\\"control-label\\\">Name <span style=\\\"color:red;\\\">*</span></label>\\r\\n                              <input type=\\\"text\\\" name=\\\"name\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"spliceClosure.name\\\" required />\\r\\n                           </div>\\r\\n                           <div class=\\\"form-group col-md-6\\\">\\r\\n                              <label for=\\\"parentType\\\" class=\\\"control-label\\\">Parent Type</label>\\r\\n                              <mat-select name=\\\"parentType\\\" [(ngModel)]=\\\"spliceClosure.parentEntityType\\\">\\r\\n                                 <mat-option>Select Parent Entity Type</mat-option>\\r\\n                                 <mat-option value=\\\"Cable\\\">Cable</mat-option>\\r\\n                                 <mat-option value=\\\"Chamber\\\">Chamber</mat-option>\\r\\n                                 <mat-option value=\\\"Duct\\\">Duct</mat-option>\\r\\n                                 <mat-option value=\\\"ODF\\\">ODF</mat-option>\\r\\n                                 <mat-option value=\\\"Pole\\\">Pole</mat-option>\\r\\n                                 <mat-option value=\\\"SpliceClosure\\\">Splice Closure</mat-option>\\r\\n                                 <mat-option value=\\\"Splitter\\\">Splitter</mat-option>\\r\\n                                 <mat-option value=\\\"Fat\\\">Fat</mat-option>\\r\\n                                 <mat-option value=\\\"Fdt\\\">Fdt</mat-option>\\r\\n                              </mat-select>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"panel-group\\\" id=\\\"accordion\\\">\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#make\\\">Make</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"make\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"type\\\" class=\\\"control-label\\\">Type</label>\\r\\n                                    <input type=\\\"text\\\" name=\\\"type\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"spliceClosure.type\\\" />\\r\\n                                 </div>\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"brand\\\" class=\\\"control-label\\\">Brand</label>\\r\\n                                    <input type=\\\"text\\\" name=\\\"brand\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"spliceClosure.brand\\\" />\\r\\n                                 </div>\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"model\\\" class=\\\"control-label\\\">Model</label>\\r\\n                                    <input type=\\\"text\\\" name=\\\"model\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"spliceClosure.model\\\" />\\r\\n                                 </div>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#spliceClosureInfo\\\">SpliceClosure Info</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"spliceClosureInfo\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"noOfPorts\\\" class=\\\"control-label\\\">No Of Ports</label>\\r\\n                                    <input type=\\\"number\\\" name=\\\"noOfPorts\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"spliceClosure.noOfPorts\\\" />\\r\\n                                 </div>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#zoomSettings\\\">Zoom Settings</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"zoomSettings\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-11\\\">\\r\\n                                 <mat-slider name=\\\"zoomLevel\\\" thumbLabel step=\\\"1\\\" min=\\\"0\\\" max=\\\"21\\\" style=\\\"width:100%\\\" [(ngModel)]=\\\"spliceClosure.zoomLevel\\\"></mat-slider>\\r\\n                              </div>\\r\\n                              <div class=\\\"col-sm-1\\\" style=\\\"padding-top: 7px;\\\">\\r\\n                                 <input type=\\\"number\\\" min=\\\"0\\\" max=\\\"21\\\" class=\\\"form-control input-sm\\\" name=\\\"zoom\\\" [(ngModel)]=\\\"spliceClosure.zoomLevel\\\">\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#pricing\\\">Pricing</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"pricing\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <suppliers [supplierList]=\\\"spliceClosure.suppliers\\\"></suppliers>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#customFields\\\">Custom Fields</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"customFields\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <custom-fields [customFields]=\\\"spliceClosure.customFields\\\"></custom-fields>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                  </div>\\r\\n\\r\\n               </div>\\r\\n               <div class=\\\"box-footer\\\">\\r\\n                  <div class=\\\"pull-right\\\">\\r\\n                     <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"goBack()\\\">Close</button>\\r\\n                     <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" style=\\\"margin-left:10px\\\" (click)=\\\"save()\\\" [disabled]=\\\"form.invalid\\\">Save</button>\\r\\n                  </div>\\r\\n               </div>\\r\\n            </form>\\r\\n         </div>\\r\\n      </div>\\r\\n   </div>\\r\\n</section>\\r\\n\"","export default \"<section class=\\\"content-header\\\">\\r\\n   <h1>Manage Entities <small> {{title}} </small></h1>\\r\\n   <ol class=\\\"breadcrumb\\\">\\r\\n      <li><a [routerLink]=\\\"['/']\\\"><i class=\\\"fa fa-home\\\"></i> Home</a></li>\\r\\n      <li><a [routerLink]=\\\"['/entities']\\\"> Entities</a></li>\\r\\n   </ol>\\r\\n</section>\\r\\n<section class=\\\"content\\\">\\r\\n   <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-xs-12\\\">\\r\\n         <div class=\\\"box\\\">\\r\\n            <div class=\\\"box-header with-border ui-sortable-handle\\\">\\r\\n               <h3 class=\\\"box-title\\\">Splitter Details</h3>\\r\\n               <div class=\\\"box-tools pull-right\\\" data-original-title=\\\"Status\\\" data-toggle=\\\"tooltip\\\" title=\\\"\\\">\\r\\n                  <button class=\\\"btn btn-social-icon btn-xs btn-danger\\\" (click)=\\\"goBack()\\\">\\r\\n                     <i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                  </button>\\r\\n                  <button class=\\\"btn btn-social-icon btn-xs btn-success\\\" type=\\\"submit\\\" style=\\\"margin-left: 5px;\\\" (click)=\\\"save()\\\" [disabled]=\\\"form.invalid\\\">\\r\\n                     <i class=\\\"far fa-save\\\"></i>\\r\\n                  </button>\\r\\n               </div>\\r\\n            </div>\\r\\n            <form name=\\\"form\\\" action=\\\"javascript:{}\\\" #form=\\\"ngForm\\\" novalidate autocomplete=\\\"off\\\">\\r\\n               <div class=\\\"box-body\\\">\\r\\n                  <div class=\\\"panel panel-default\\\">\\r\\n                     <div class=\\\"panel-heading\\\">\\r\\n                        <h4 class=\\\"panel-title\\\">\\r\\n                           General Information\\r\\n                        </h4>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel-collapse collapse in\\\">\\r\\n                        <div class=\\\"panel-body\\\">\\r\\n                           <div class=\\\"form-group col-md-6\\\">\\r\\n                              <label for=\\\"name\\\" class=\\\"control-label\\\">Name <span style=\\\"color:red;\\\">*</span></label>\\r\\n                              <input type=\\\"text\\\" name=\\\"name\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"splitter.name\\\" required />\\r\\n                           </div>\\r\\n                           <div class=\\\"form-group col-md-6\\\">\\r\\n                              <label for=\\\"parentType\\\" class=\\\"control-label\\\">Parent Type</label>\\r\\n                              <mat-select name=\\\"parentType\\\" [(ngModel)]=\\\"splitter.parentEntityType\\\">\\r\\n                                 <mat-option>Select Parent Entity Type</mat-option>\\r\\n                                 <mat-option value=\\\"Cable\\\">Cable</mat-option>\\r\\n                                 <mat-option value=\\\"Chamber\\\">Chamber</mat-option>\\r\\n                                 <mat-option value=\\\"Duct\\\">Duct</mat-option>\\r\\n                                 <mat-option value=\\\"ODF\\\">ODF</mat-option>\\r\\n                                 <mat-option value=\\\"Pole\\\">Pole</mat-option>\\r\\n                                 <mat-option value=\\\"SpliceClosure\\\">Splice Closure</mat-option>\\r\\n                                 <mat-option value=\\\"Splitter\\\">Splitter</mat-option>\\r\\n                                 <mat-option value=\\\"Fat\\\">Fat</mat-option>\\r\\n                                 <mat-option value=\\\"Fdt\\\">Fdt</mat-option>\\r\\n                              </mat-select>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"panel-group\\\" id=\\\"accordion\\\">\\r\\n\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#make\\\">Make</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"make\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"type\\\" class=\\\"control-label\\\">Type</label>\\r\\n                                    <input type=\\\"text\\\" name=\\\"type\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"splitter.type\\\" />\\r\\n                                 </div>\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"brand\\\" class=\\\"control-label\\\">Brand</label>\\r\\n                                    <input type=\\\"text\\\" name=\\\"brand\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"splitter.brand\\\" />\\r\\n                                 </div>\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"model\\\" class=\\\"control-label\\\">Model</label>\\r\\n                                    <input type=\\\"text\\\" name=\\\"model\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"splitter.model\\\" />\\r\\n                                 </div>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#splitterInfo\\\">Splitter Information</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"splitterInfo\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"splitterRatio\\\" class=\\\"control-label\\\">Splitter Ratio</label>\\r\\n                                    <input type=\\\"text\\\" name=\\\"splitterRatio\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"splitter.splitterRatio\\\" />\\r\\n                                 </div>\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"lossValue\\\" class=\\\"control-label\\\">Loss Value</label>\\r\\n                                    <input type=\\\"number\\\" name=\\\"lossValue\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"splitter.lossValue\\\" />\\r\\n                                 </div>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#optics\\\">Optical Information</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"optics\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"frequency\\\" class=\\\"control-label\\\">Frequency</label>\\r\\n                                    <input type=\\\"number\\\" name=\\\"frequency\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"splitter.optics.frequency\\\" />\\r\\n                                 </div>\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"attenuationDb\\\" class=\\\"control-label\\\">Attenuation</label>\\r\\n                                    <input type=\\\"number\\\" name=\\\"attenuationDb\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"splitter.optics.attenuationDb\\\" />\\r\\n                                 </div>\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"opticalInPutPower\\\" class=\\\"control-label\\\">Optical InPut Power</label>\\r\\n                                    <input type=\\\"number\\\" name=\\\"opticalInPutPower\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"splitter.optics.opticalInPutPower\\\" />\\r\\n                                 </div>\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"opticalOutputPower\\\" class=\\\"control-label\\\">Optical Output Power</label>\\r\\n                                    <input type=\\\"number\\\" name=\\\"opticalOutputPower\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"splitter.optics.opticalOutputPower\\\" />\\r\\n                                 </div>\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"resistanceOhm\\\" class=\\\"control-label\\\">Resistance</label>\\r\\n                                    <input type=\\\"number\\\" name=\\\"resistanceOhm\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"splitter.optics.resistanceOhm\\\" />\\r\\n                                 </div>\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"wavelength\\\" class=\\\"control-label\\\">Wavelength</label>\\r\\n                                    <input type=\\\"number\\\" name=\\\"wavelength\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"splitter.optics.wavelength\\\" />\\r\\n                                 </div>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#zoomSettings\\\">Zoom Settings</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"zoomSettings\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-11\\\">\\r\\n                                 <mat-slider name=\\\"zoomLevel\\\" thumbLabel step=\\\"1\\\" min=\\\"0\\\" max=\\\"21\\\" style=\\\"width:100%\\\" [(ngModel)]=\\\"splitter.zoomLevel\\\"></mat-slider>\\r\\n                              </div>\\r\\n                              <div class=\\\"col-sm-1\\\" style=\\\"padding-top: 7px;\\\">\\r\\n                                 <input type=\\\"number\\\" min=\\\"0\\\" max=\\\"21\\\" class=\\\"form-control input-sm\\\" name=\\\"zoom\\\" [(ngModel)]=\\\"splitter.zoomLevel\\\">\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#pricing\\\">Pricing</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"pricing\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <suppliers [supplierList]=\\\"splitter.suppliers\\\"></suppliers>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#customFields\\\">Custom Fields</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"customFields\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <custom-fields [customFields]=\\\"splitter.customFields\\\"></custom-fields>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                  </div>\\r\\n\\r\\n               </div>\\r\\n               <div class=\\\"box-footer\\\">\\r\\n                  <div class=\\\"pull-right\\\">\\r\\n                     <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"goBack()\\\">Close</button>\\r\\n                     <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" style=\\\"margin-left:10px\\\" (click)=\\\"save()\\\" [disabled]=\\\"form.invalid\\\">Save</button>\\r\\n                  </div>\\r\\n               </div>\\r\\n            </form>\\r\\n         </div>\\r\\n      </div>\\r\\n   </div>\\r\\n</section>\\r\\n\"","export default \"<section class=\\\"content-header\\\">\\r\\n   <h1>Manage General Settings</h1>\\r\\n   <ol class=\\\"breadcrumb\\\">\\r\\n      <li><a [routerLink]=\\\"['/home']\\\"><i class=\\\"fa fa-home\\\"></i> Home</a></li>\\r\\n   </ol>\\r\\n</section>\\r\\n\\r\\n<section class=\\\"content\\\">\\r\\n   <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-xs-12\\\">\\r\\n         <div class=\\\"box\\\">\\r\\n            <div class=\\\"box-header with-border ui-sortable-handle\\\">\\r\\n               <h3 class=\\\"box-title\\\">General Settings</h3>\\r\\n               <div class=\\\"box-tools pull-right\\\">\\r\\n                  <button class=\\\"btn btn-social-icon btn-xs btn-success\\\" type=\\\"submit\\\" style=\\\"margin-left: 5px;\\\" (click)=\\\"save()\\\" [disabled]=\\\"form.invalid\\\">\\r\\n                     <i class=\\\"far fa-save\\\"></i>\\r\\n                  </button>\\r\\n               </div>\\r\\n            </div>\\r\\n            <form name=\\\"form\\\" action=\\\"javascript:{}\\\" #form=\\\"ngForm\\\" novalidate>\\r\\n               <div class=\\\"box-body\\\">\\r\\n                  <div class=\\\"panel-group\\\" id=\\\"accordion\\\">\\r\\n                     <!--<div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#boundaryHierarchies\\\">Boundary Hierarchies</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"boundaryHierarchies\\\" class=\\\"panel-collapse collapse in\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <div class=\\\"form-group\\\">\\r\\n                                    <table class=\\\"table table-bordered table-striped\\\">\\r\\n                                       <thead>\\r\\n                                          <tr>\\r\\n                                             <th style=\\\"width: 50px; text-align:center\\\">Level</th>\\r\\n                                             <th>Name</th>\\r\\n                                             <th style=\\\"text-align: center;padding: 2px 0px;width: 50px;\\\">\\r\\n                                                <a (click)=\\\"addBoundaryHierarchy()\\\" style=\\\"cursor:pointer\\\">\\r\\n                                                   <i class=\\\"fa fa-plus-circle\\\" title=\\\"Add\\\" style=\\\"font-size: 20px; color: #3e53a4;margin: 5px;\\\"></i>\\r\\n                                                </a>\\r\\n                                             </th>\\r\\n                                          </tr>\\r\\n                                       </thead>\\r\\n                                       <tbody>\\r\\n                                          <ng-container *ngIf='generalSettings.boundaryHierarchies && generalSettings.boundaryHierarchies.length > 0'>\\r\\n                                             <tr *ngFor='let boundary of generalSettings.boundaryHierarchies; let rowIndex = index;'>\\r\\n                                                <td style=\\\"text-align:center\\\">{{rowIndex + 1}}</td>\\r\\n                                                <td><input type=\\\"text\\\" class=\\\"form-control input-sm\\\" autocomplete=\\\"off\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"boundary.name\\\" (keypress)=\\\"restrictAlpha($event)\\\"></td>\\r\\n                                                <td style=\\\"text-align:center;padding-top: 14px;\\\">\\r\\n                                                   <a (click)=\\\"deleteboundaryHierarchy(rowIndex)\\\" style=\\\"cursor:pointer\\\">\\r\\n                                                      <i class=\\\"fa fa-remove\\\" title=\\\"Delete\\\" style=\\\"font-size: 15px; color: Red;\\\"></i>\\r\\n                                                   </a>\\r\\n                                                </td>\\r\\n                                             </tr>\\r\\n                                          </ng-container>\\r\\n                                          <tr *ngIf='generalSettings.boundaryHierarchies == null || generalSettings.boundaryHierarchies.length == 0'>\\r\\n                                             <td colspan=\\\"5\\\" class=\\\"check-mail\\\" style=\\\"text-align: center;\\\">\\r\\n                                                Boundry Hierarchies not defined\\r\\n                                             </td>\\r\\n                                          </tr>\\r\\n                                       </tbody>\\r\\n                                    </table>\\r\\n                                 </div>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#constructionStages\\\">Construction Stages</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"constructionStages\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <div class=\\\"form-group\\\">\\r\\n                                    <table class=\\\"table table-bordered table-striped\\\">\\r\\n                                       <thead>\\r\\n                                          <tr>\\r\\n                                             <th>Name</th>\\r\\n                                             <th style=\\\"width: 202px;\\\">Color Code</th>\\r\\n                                             <th style=\\\"text-align: center;padding: 2px 0px;width: 50px;\\\">\\r\\n                                                <a (click)=\\\"addConstructionStage()\\\" style=\\\"cursor:pointer\\\">\\r\\n                                                   <i class=\\\"fa fa-plus-circle\\\" title=\\\"Add\\\" style=\\\"font-size: 20px; color: #3e53a4;margin: 5px;\\\"></i>\\r\\n                                                </a>\\r\\n                                             </th>\\r\\n                                          </tr>\\r\\n                                       </thead>\\r\\n                                       <tbody>\\r\\n                                          <ng-container *ngIf='generalSettings.constructionStages && generalSettings.constructionStages.length > 0'>\\r\\n                                             <tr *ngFor='let constStage of generalSettings.constructionStages; let rowIndex = index;'>\\r\\n                                                <td><input type=\\\"text\\\" class=\\\"form-control input-sm\\\" autocomplete=\\\"off\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"constStage.name\\\" (keypress)=\\\"restrictAlpha($event)\\\"></td>\\r\\n                                                <td>\\r\\n                                                   <input type=\\\"text\\\" class=\\\"form-control input-sm text-color-picker\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"constStage.colorCode\\\" readonly>\\r\\n                                                </td>\\r\\n                                                <td style=\\\"text-align:center;padding-top: 14px;\\\">\\r\\n                                                   <a (click)=\\\"deleteConstructionStage(rowIndex)\\\" style=\\\"cursor:pointer\\\">\\r\\n                                                      <i class=\\\"fa fa-remove\\\" title=\\\"Delete\\\" style=\\\"font-size: 15px; color: Red;\\\"></i>\\r\\n                                                   </a>\\r\\n                                                </td>\\r\\n                                             </tr>\\r\\n                                          </ng-container>\\r\\n                                          <tr *ngIf='generalSettings.constructionStages == null || generalSettings.constructionStages.length == 0'>\\r\\n                                             <td colspan=\\\"5\\\" class=\\\"check-mail\\\" style=\\\"text-align: center;\\\">\\r\\n                                                Construction Stages not defined\\r\\n                                             </td>\\r\\n                                          </tr>\\r\\n                                       </tbody>\\r\\n                                    </table>\\r\\n                                 </div>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#activationStages\\\">Activation Stage</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"activationStages\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <div class=\\\"form-group\\\">\\r\\n                                    <table class=\\\"table table-bordered table-striped\\\">\\r\\n                                       <thead>\\r\\n                                          <tr>\\r\\n                                             <th>Name</th>\\r\\n                                             <th style=\\\"width: 202px;\\\">Color Code</th>\\r\\n                                             <th style=\\\"text-align: center;padding: 2px 0px;width: 50px;\\\">\\r\\n                                                <a (click)=\\\"addActivationStage()\\\" style=\\\"cursor:pointer\\\">\\r\\n                                                   <i class=\\\"fa fa-plus-circle\\\" title=\\\"Add\\\" style=\\\"font-size: 20px; color: #3e53a4;margin: 5px;\\\"></i>\\r\\n                                                </a>\\r\\n                                             </th>\\r\\n                                          </tr>\\r\\n                                       </thead>\\r\\n                                       <tbody>\\r\\n                                          <ng-container *ngIf='generalSettings.activationStages && generalSettings.activationStages.length > 0'>\\r\\n                                             <tr *ngFor='let activationStage of generalSettings.activationStages; let rowIndex = index;'>\\r\\n                                                <td><input type=\\\"text\\\" class=\\\"form-control input-sm\\\" autocomplete=\\\"off\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"activationStage.name\\\" (keypress)=\\\"restrictAlpha($event)\\\"></td>\\r\\n                                                <td>\\r\\n                                                   <input type=\\\"text\\\" class=\\\"form-control input-sm text-color-picker\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"activationStage.colorCode\\\" readonly>\\r\\n                                                </td>\\r\\n                                                <td style=\\\"text-align:center;padding-top: 14px;\\\">\\r\\n                                                   <a (click)=\\\"deleteActivationStage(rowIndex)\\\" style=\\\"cursor:pointer\\\">\\r\\n                                                      <i class=\\\"fa fa-remove\\\" title=\\\"Delete\\\" style=\\\"font-size: 15px; color: Red;\\\"></i>\\r\\n                                                   </a>\\r\\n                                                </td>\\r\\n                                             </tr>\\r\\n                                          </ng-container>\\r\\n                                          <tr *ngIf='generalSettings.activationStages == null || generalSettings.activationStages.length == 0'>\\r\\n                                             <td colspan=\\\"5\\\" class=\\\"check-mail\\\" style=\\\"text-align: center;\\\">\\r\\n                                                Activation Stages not defined\\r\\n                                             </td>\\r\\n                                          </tr>\\r\\n                                       </tbody>\\r\\n                                    </table>\\r\\n                                 </div>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#accessibilities\\\">Accessibilities</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"accessibilities\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <div class=\\\"form-group\\\">\\r\\n                                    <table class=\\\"table table-bordered table-striped\\\">\\r\\n                                       <thead>\\r\\n                                          <tr>\\r\\n                                             <th>Name</th>\\r\\n                                             <th style=\\\"width: 202px;\\\">Color Code</th>\\r\\n                                             <th style=\\\"text-align: center;padding: 2px 0px;width: 50px;\\\">\\r\\n                                                <a (click)=\\\"addAccessibility()\\\" style=\\\"cursor:pointer\\\">\\r\\n                                                   <i class=\\\"fa fa-plus-circle\\\" title=\\\"Add\\\" style=\\\"font-size: 20px; color: #3e53a4;margin: 5px;\\\"></i>\\r\\n                                                </a>\\r\\n                                             </th>\\r\\n                                          </tr>\\r\\n                                       </thead>\\r\\n                                       <tbody>\\r\\n                                          <ng-container *ngIf='generalSettings.accessibilities && generalSettings.accessibilities.length > 0'>\\r\\n                                             <tr *ngFor='let accessibility of generalSettings.accessibilities; let rowIndex = index;'>\\r\\n                                                <td><input type=\\\"text\\\" class=\\\"form-control input-sm\\\" autocomplete=\\\"off\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"accessibility.name\\\" (keypress)=\\\"restrictAlpha($event)\\\"></td>\\r\\n                                                <td>\\r\\n                                                   <input type=\\\"text\\\" class=\\\"form-control input-sm text-color-picker\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"accessibility.colorCode\\\" readonly>\\r\\n                                                </td>\\r\\n                                                <td style=\\\"text-align:center;padding-top: 14px;\\\">\\r\\n                                                   <a (click)=\\\"deleteAccessibility(rowIndex)\\\" style=\\\"cursor:pointer\\\">\\r\\n                                                      <i class=\\\"fa fa-remove\\\" title=\\\"Delete\\\" style=\\\"font-size: 15px; color: Red;\\\"></i>\\r\\n                                                   </a>\\r\\n                                                </td>\\r\\n                                             </tr>\\r\\n                                          </ng-container>\\r\\n                                          <tr *ngIf='generalSettings.accessibilities == null || generalSettings.accessibilities.length == 0'>\\r\\n                                             <td colspan=\\\"5\\\" class=\\\"check-mail\\\" style=\\\"text-align: center;\\\">\\r\\n                                                Accessibilities not defined\\r\\n                                             </td>\\r\\n                                          </tr>\\r\\n                                       </tbody>\\r\\n                                    </table>\\r\\n                                 </div>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#hierarchyTypes\\\">Hierarchy Types</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"hierarchyTypes\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <div class=\\\"form-group\\\">\\r\\n                                    <table class=\\\"table table-bordered table-striped\\\">\\r\\n                                       <thead>\\r\\n                                          <tr>\\r\\n                                             <th>Name</th>\\r\\n                                             <th style=\\\"width: 202px;\\\">Color Code</th>\\r\\n                                             <th style=\\\"text-align: center;padding: 2px 0px;width: 50px;\\\">\\r\\n                                                <a (click)=\\\"addHierarchyType()\\\" style=\\\"cursor:pointer\\\">\\r\\n                                                   <i class=\\\"fa fa-plus-circle\\\" title=\\\"Add\\\" style=\\\"font-size: 20px; color: #3e53a4;margin: 5px;\\\"></i>\\r\\n                                                </a>\\r\\n                                             </th>\\r\\n                                          </tr>\\r\\n                                       </thead>\\r\\n                                       <tbody>\\r\\n                                          <ng-container *ngIf='generalSettings.hierarchyTypes && generalSettings.hierarchyTypes.length > 0'>\\r\\n                                             <tr *ngFor='let hierarchyType of generalSettings.hierarchyTypes; let rowIndex = index;'>\\r\\n                                                <td><input type=\\\"text\\\" class=\\\"form-control input-sm\\\" autocomplete=\\\"off\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"hierarchyType.name\\\" (keypress)=\\\"restrictAlpha($event)\\\"></td>\\r\\n                                                <td>\\r\\n                                                   <input type=\\\"text\\\" class=\\\"form-control input-sm text-color-picker\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"hierarchyType.colorCode\\\" readonly>\\r\\n                                                </td>\\r\\n                                                <td style=\\\"text-align:center;padding-top: 14px;\\\">\\r\\n                                                   <a (click)=\\\"deleteHierarchyType(rowIndex)\\\" style=\\\"cursor:pointer\\\">\\r\\n                                                      <i class=\\\"fa fa-remove\\\" title=\\\"Delete\\\" style=\\\"font-size: 15px; color: Red;\\\"></i>\\r\\n                                                   </a>\\r\\n                                                </td>\\r\\n                                             </tr>\\r\\n                                          </ng-container>\\r\\n                                          <tr *ngIf='generalSettings.hierarchyTypes == null || generalSettings.hierarchyTypes.length == 0'>\\r\\n                                             <td colspan=\\\"5\\\" class=\\\"check-mail\\\" style=\\\"text-align: center;\\\">\\r\\n                                                Hierarchy types not defined\\r\\n                                             </td>\\r\\n                                          </tr>\\r\\n                                       </tbody>\\r\\n                                    </table>\\r\\n                                 </div>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#opticalLinkBudget\\\">Optical Link Budget</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"opticalLinkBudget\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <div class=\\\"form-group\\\">\\r\\n                                    <table class=\\\"table table-bordered table-striped\\\">\\r\\n                                       <thead>\\r\\n                                          <tr>\\r\\n                                             <th style=\\\"width:50px;\\\">WaveLength Name</th>\\r\\n                                             <th style=\\\"width:150px;\\\">Cable length loss (dB)</th>\\r\\n                                             <th style=\\\"width: 130px;\\\"> Splice Loss (dB)</th>\\r\\n                                             <th style=\\\"width: 120px;\\\">Patching Loss (dB)</th>\\r\\n                                             <th style=\\\"width: 120px;\\\">Patch - connector loss (dB)</th>\\r\\n                                             <th style=\\\"text-align: center;padding: 2px 0px;width: 50px;\\\">\\r\\n                                                <a (click)=\\\"addOpticalLinkBudget()\\\" style=\\\"cursor:pointer\\\">\\r\\n                                                   <i class=\\\"fa fa-plus-circle\\\" title=\\\"Add\\\" style=\\\"font-size: 20px; margin: 5px;\\\"></i>\\r\\n                                                </a>\\r\\n                                             </th>\\r\\n                                          </tr>\\r\\n                                       </thead>\\r\\n                                       <tbody>\\r\\n                                          <ng-container *ngIf='generalSettings.opticalLinkBudget && generalSettings.opticalLinkBudget.length > 0'>\\r\\n                                             <tr *ngFor='let opticalLink of generalSettings.opticalLinkBudget; let rowIndex = index;'>\\r\\n                                                <td><input type=\\\"text\\\" class=\\\"form-control input-sm\\\" autocomplete=\\\"off\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"opticalLink.waveLengthName\\\" (keypress)=\\\"restrictAlpha($event)\\\"></td>\\r\\n                                                <td><input type=\\\"text\\\" class=\\\"form-control input-sm\\\" autocomplete=\\\"off\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"opticalLink.cablelengthLoss\\\" (keypress)=\\\"restrictAlpha($event)\\\"></td>\\r\\n                                                <td><input type=\\\"text\\\" class=\\\"form-control input-sm\\\" autocomplete=\\\"off\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"opticalLink.spliceLoss\\\" (keypress)=\\\"restrictAlpha($event)\\\"></td>\\r\\n                                                <td><input type=\\\"text\\\" class=\\\"form-control input-sm\\\" autocomplete=\\\"off\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"opticalLink.patchingLoss\\\" (keypress)=\\\"restrictAlpha($event)\\\"></td>\\r\\n                                                <td><input type=\\\"text\\\" class=\\\"form-control input-sm\\\" autocomplete=\\\"off\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"opticalLink.patchConnectorLoss\\\" (keypress)=\\\"restrictAlpha($event)\\\"></td>\\r\\n\\r\\n                                                <td style=\\\"text-align:center;padding-top: 14px;\\\">\\r\\n                                                   <a (click)=\\\"deleteOpticalLinkBudget(rowIndex)\\\" style=\\\"cursor:pointer\\\">\\r\\n                                                      <i class=\\\"fa fa-remove\\\" title=\\\"Delete\\\" style=\\\"font-size: 15px; color: Red;\\\"></i>\\r\\n                                                   </a>\\r\\n                                                </td>\\r\\n                                             </tr>\\r\\n                                          </ng-container>\\r\\n                                          <tr *ngIf='generalSettings.opticalLinkBudget == null || generalSettings.opticalLinkBudget.length == 0'>\\r\\n                                             <td colspan=\\\"5\\\" class=\\\"check-mail\\\" style=\\\"text-align: center;\\\">\\r\\n                                                opticalLinkBudget not defined\\r\\n                                             </td>\\r\\n                                          </tr>\\r\\n                                       </tbody>\\r\\n                                    </table>\\r\\n                                 </div>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>-->\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#fileAttachments\\\">File Attachments</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"fileAttachments\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"createdDate\\\" class=\\\"control-label\\\">Size limit (MBs)</label>\\r\\n                                    <input type=\\\"number\\\" class=\\\"form-control input-sm\\\" name=\\\"sizeLimit\\\" required value=\\\"0\\\" onkeypress=\\\"return (event.keyCode != 8 || event.keyCode !=32 ) && !(event.keyCode < 48 || event.keyCode > 57)\\\" [(ngModel)]=\\\"generalSettings.fileAttachmentLimit\\\">\\r\\n                                 </div>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                  </div>\\r\\n               </div>\\r\\n               <div class=\\\"box-footer\\\">\\r\\n                  <div class=\\\"pull-right\\\">\\r\\n                     <div>\\r\\n                        <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" tabindex=\\\"12\\\" style=\\\"margin-left:10px\\\" (click)=\\\"save()\\\" [disabled]=\\\"form.invalid\\\">Save</button>\\r\\n                     </div>\\r\\n                  </div>\\r\\n               </div>\\r\\n            </form>\\r\\n         </div>\\r\\n      </div>\\r\\n   </div>\\r\\n</section>\\r\\n\"","export default \"<section class=\\\"content-header\\\">\\r\\n   <h1>Manage Groups <small> {{title}} </small></h1>\\r\\n   <ol class=\\\"breadcrumb\\\">\\r\\n      <li><a [routerLink]=\\\"['/home']\\\"><i class=\\\"fa fa-home\\\"></i> Home</a></li>\\r\\n      <li><a [routerLink]=\\\"['/groups']\\\"> Groups</a></li>\\r\\n   </ol>\\r\\n</section>\\r\\n\\r\\n<section class=\\\"content\\\">\\r\\n   <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-xs-12\\\">\\r\\n         <div class=\\\"box\\\">\\r\\n            <div class=\\\"box-header with-border\\\">\\r\\n               <h3 class=\\\"box-title\\\">Group Details</h3>\\r\\n               <div class=\\\"box-tools pull-right\\\">\\r\\n                  <button class=\\\"btn btn-social-icon btn-xs btn-danger\\\" (click)=\\\"goBack()\\\">\\r\\n                     <i class=\\\"fas fa-times\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                  </button>\\r\\n                  <button class=\\\"btn btn-social-icon btn-xs btn-success\\\" type=\\\"submit\\\" style=\\\"margin-left: 5px;\\\" (click)=\\\"saveGroup()\\\" [disabled]=\\\"groupForm.invalid\\\">\\r\\n                     <i class=\\\"far fa-save\\\"></i>\\r\\n                  </button>\\r\\n               </div>\\r\\n            </div>\\r\\n            <form name=\\\"groupForm\\\" action=\\\"javascript:{}\\\" #groupForm=\\\"ngForm\\\" novalidate autocomplete=\\\"off\\\">\\r\\n               <div class=\\\"box-body\\\">\\r\\n\\r\\n                  <div class=\\\"panel panel-default\\\">\\r\\n                     <div class=\\\"panel-heading\\\">\\r\\n                        <h4 class=\\\"panel-title\\\">Group Info</h4>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel-collapse collapse in\\\">\\r\\n                        <div class=\\\"panel-body\\\">\\r\\n                           <div class=\\\"col-sm-12\\\">\\r\\n                              <div class=\\\"form-group\\\">\\r\\n                                 <label for=\\\"name\\\" class=\\\"control-label\\\">Name <span style=\\\"color:red;\\\">*</span></label>\\r\\n                                 <input type=\\\"text\\\" class=\\\"form-control input-sm\\\" name=\\\"name\\\" pattern=\\\"[a-zA-Z][a-zA-Z-' ]+\\\" minlength=\\\"3\\\" maxlength=\\\"50\\\"  #name=\\\"ngModel\\\" required [(ngModel)]=\\\"group.name\\\">\\r\\n                                 <div *ngIf=\\\"name.errors && (name.dirty || name.touched)\\\">\\r\\n                                    <div [hidden]=\\\"!name.errors.required\\\">\\r\\n                                       <span style=\\\"color: red;\\\">Name required</span>\\r\\n                                    </div>\\r\\n                                    <div [hidden]=\\\"!name.errors.minlength\\\">\\r\\n                                       <span style=\\\"color:red;\\\">Name should be in 3 to 50 characters</span>\\r\\n                                    </div>\\r\\n                                    <div [hidden]=\\\"!name.errors.pattern\\\">\\r\\n                                       <span style=\\\"color: red;\\\">Invalid characters! </span>\\r\\n                                    </div>\\r\\n                                 </div>\\r\\n                              </div>\\r\\n                              <div class=\\\"form-group\\\">\\r\\n                                 <label for=\\\"description\\\" class=\\\"control-label\\\">Description </label>\\r\\n                                 <input type=\\\"text\\\" class=\\\"form-control input-sm\\\" name=\\\"description\\\" [(ngModel)]=\\\"group.description\\\">\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"panel-group\\\" id=\\\"accordion\\\">\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#accessPermissions\\\">Access Permissions</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"accessPermissions\\\" class=\\\"panel-collapse collapse in\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                  <!--<p-tree [value]=\\\"treeModules\\\" selectionMode=\\\"checkbox\\\" [(selection)]=\\\"selectedModules\\\" [style]=\\\"{'width':'100%'}\\\" dataKey=\\\"id\\\"></p-tree>-->\\r\\n                                  <p-treeTable [value]=\\\"treeModules\\\" selectionMode=\\\"checkbox\\\" [(selection)]=\\\"selectedModules\\\">\\r\\n                                    <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n                                      <tr>\\r\\n                                        <th style=\\\"padding-left: 15px;\\\"><p-treeTableHeaderCheckbox></p-treeTableHeaderCheckbox> <span style=\\\"padding-left: 8px;\\\">Modules</span></th>\\r\\n                                      </tr>\\r\\n                                    </ng-template>\\r\\n                                    <ng-template pTemplate=\\\"body\\\" let-rowNode let-rowData=\\\"rowData\\\" let-columns=\\\"columns\\\">\\r\\n                                      <tr>\\r\\n                                        <td>\\r\\n                                          <p-treeTableToggler [rowNode]=\\\"rowNode\\\"></p-treeTableToggler>\\r\\n                                          <p-treeTableCheckbox [value]=\\\"rowNode\\\"></p-treeTableCheckbox>\\r\\n                                          {{rowData.name}}\\r\\n                                        </td>\\r\\n                                      </tr>\\r\\n                                    </ng-template>\\r\\n                                  </p-treeTable>\\r\\n                                </div>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                     <!--<div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#remarks\\\">Remarks</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"remarks\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"remarks\\\" class=\\\"control-label\\\">Comments</label>\\r\\n                                    <textarea class=\\\"form-control\\\" rows=\\\"3\\\" name=\\\"remarks\\\" tabindex=\\\"8\\\" [(ngModel)]=\\\"group.remarks\\\"></textarea>\\r\\n                                 </div>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#otherInfo\\\">Other Info</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"otherInfo\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"createdDate\\\" class=\\\"control-label\\\">Created Date</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control input-sm\\\" name=\\\"createdDate\\\" tabindex=\\\"9\\\" [ngModel]=\\\"group.createdDate | date:'dd/MM/yyyy'\\\" disabled>\\r\\n                                 </div>\\r\\n                                 <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"createdBy\\\" class=\\\"control-label\\\">Created By</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control input-sm\\\" name=\\\"createdBy\\\" tabindex=\\\"10\\\" [(ngModel)]=\\\"group.createdBy\\\" disabled>\\r\\n                                 </div>\\r\\n                                 <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"lastUpdatedDate\\\" class=\\\"control-label\\\">Last Updated Date</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control input-sm\\\" name=\\\"lastUpdatedDate\\\" tabindex=\\\"11\\\" [ngModel]=\\\"group.updatedDate | date:'dd/MM/yyyy'\\\" disabled>\\r\\n                                 </div>\\r\\n                                 <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"updatedBy\\\" class=\\\"control-label\\\">Updated By</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control input-sm\\\" name=\\\"updatedBy\\\" tabindex=\\\"12\\\" [(ngModel)]=\\\"group.updatedBy\\\" disabled>\\r\\n                                 </div>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>-->\\r\\n                  </div>\\r\\n               </div>\\r\\n               <div class=\\\"box-footer\\\">\\r\\n                  <div class=\\\"pull-right\\\">\\r\\n                     <div>\\r\\n                        <button type=\\\"submit\\\" class=\\\"btn btn-danger\\\" tabindex=\\\"13\\\" (click)=\\\"goBack()\\\">Close</button>\\r\\n                        <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" tabindex=\\\"14\\\" style=\\\"margin-left:10px\\\" (click)=\\\"saveGroup()\\\" [disabled]=\\\"groupForm.invalid\\\">Save</button>\\r\\n                     </div>\\r\\n                  </div>\\r\\n               </div>\\r\\n            </form>\\r\\n         </div>\\r\\n      </div>\\r\\n   </div>\\r\\n</section>\\r\\n\"","export default \"<section class=\\\"content-header\\\">\\r\\n   <h1>Manage Groups</h1>\\r\\n   <ol class=\\\"breadcrumb\\\">\\r\\n      <li><a [routerLink]=\\\"['/home']\\\"><i class=\\\"fas fa-home\\\"></i> Home</a></li>\\r\\n   </ol>\\r\\n</section>\\r\\n\\r\\n<section class=\\\"content\\\">\\r\\n   <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-xs-12\\\">\\r\\n         <div class=\\\"box\\\">\\r\\n            <div class=\\\"box-header with-border\\\">\\r\\n               <h3 class=\\\"box-title\\\">Group List</h3>\\r\\n               <div class=\\\"box-tools pull-right\\\" data-toggle=\\\"tooltip\\\" title=\\\"\\\" data-original-title=\\\"Status\\\">\\r\\n                  <button [routerLink]=\\\"['details']\\\" class=\\\"btn btn-block btn-xs btn-primary\\\"> New Group</button>\\r\\n               </div>\\r\\n            </div>\\r\\n            <div class=\\\"box-body\\\">\\r\\n\\r\\n               <dt-search [searchFields]=\\\"searchFields\\\" (onSearch)=\\\"search($event)\\\"></dt-search>\\r\\n               <dt-pagination [totalPages]=\\\"totalPages\\\" (onPageSizeChange)=\\\"onPageSizeChange($event)\\\" (onPageChange)=\\\"onPageChange($event)\\\"></dt-pagination>\\r\\n\\r\\n               <table class=\\\"table table-bordered table-striped\\\">\\r\\n                  <thead>\\r\\n                     <tr (click)=\\\"onColumnClick($event.target)\\\">\\r\\n                        <th data-column=\\\"Name\\\" class=\\\"table-sorter\\\" style=\\\"width: 200px;\\\">Name</th>\\r\\n                        <th data-column=\\\"Description\\\" class=\\\"table-sorter\\\" style=\\\"max-width:300px\\\">Description</th>\\r\\n                        <th data-column=\\\"UpdatedBy\\\" class=\\\"table-sorter\\\" style=\\\"width: 150px;\\\">Updated By</th>\\r\\n                        <th data-column=\\\"UpdatedDate\\\" class=\\\"table-sorter\\\" style=\\\"width: 125px;\\\">Updated On</th>\\r\\n                        <th style=\\\"width:60px\\\"></th>\\r\\n                     </tr>\\r\\n                  </thead>\\r\\n                  <tbody>\\r\\n                     <ng-container *ngIf='groups && groups.length > 0'>\\r\\n                        <tr *ngFor='let group of groups'>\\r\\n                           <td>{{group.name}}</td>\\r\\n                           <td class=\\\"text-overflow-ellipsis\\\">{{group.description}}</td>\\r\\n                           <td>{{group.updatedBy}}</td>\\r\\n                           <td>{{group.updatedDate | date:'dd/MM/yyyy'}}</td>\\r\\n                           <td>\\r\\n                              <a>\\r\\n                                 <i class=\\\"fa fa-edit\\\" [routerLink]=\\\"['details', group.id]\\\" title=\\\"Edit\\\" style=\\\"font-size: 14px; cursor:pointer\\\"></i>\\r\\n                              </a>&nbsp;\\r\\n                              <a>\\r\\n                                 <i class=\\\"fa fa-trash\\\" (click)=\\\"delete(group)\\\" title=\\\"Remove\\\" style=\\\"font-size: 14px; cursor:pointer; color:red\\\"></i>\\r\\n                              </a>\\r\\n                           </td>\\r\\n                        </tr>\\r\\n                     </ng-container>\\r\\n                     <tr *ngIf='groups == null || groups.length == 0'>\\r\\n                        <td colspan=\\\"5\\\" style=\\\"text-align: center;\\\">\\r\\n                           {{statusMessage}}\\r\\n                        </td>\\r\\n                     </tr>\\r\\n                  </tbody>\\r\\n               </table>\\r\\n            </div>\\r\\n         </div>\\r\\n      </div>\\r\\n   </div>\\r\\n</section>\\r\\n\"","export default \"<section class=\\\"content-header\\\">\\r\\n   <h1>Manage Layers <small> {{title}} </small></h1>\\r\\n   <ol class=\\\"breadcrumb\\\">\\r\\n      <li><a [routerLink]=\\\"['/home']\\\"><i class=\\\"fa fa-home\\\"></i> Home</a></li>\\r\\n      <li><a [routerLink]=\\\"['/layers']\\\"> Layers</a></li>\\r\\n   </ol>\\r\\n</section>\\r\\n\\r\\n<section class=\\\"content\\\">\\r\\n   <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-xs-12\\\">\\r\\n         <div class=\\\"box\\\">\\r\\n            <div class=\\\"box-header with-border\\\">\\r\\n               <h3 class=\\\"box-title\\\">Layer Details</h3>\\r\\n               <div class=\\\"box-tools pull-right\\\">\\r\\n                  <button class=\\\"btn btn-social-icon btn-xs btn-danger\\\" (click)=\\\"goBack()\\\">\\r\\n                     <i class=\\\"fas fa-times\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                  </button>\\r\\n                  <button class=\\\"btn btn-social-icon btn-xs btn-success\\\" type=\\\"submit\\\" style=\\\"margin-left: 5px;\\\" (click)=\\\"save()\\\" [disabled]=\\\"form.invalid\\\">\\r\\n                     <i class=\\\"far fa-save\\\"></i>\\r\\n                  </button>\\r\\n               </div>\\r\\n            </div>\\r\\n            <form name=\\\"form\\\" action=\\\"javascript:{}\\\" #form=\\\"ngForm\\\" novalidate autocomplete=\\\"off\\\">\\r\\n               <div class=\\\"box-body\\\">\\r\\n\\r\\n                  <div class=\\\"panel panel-default\\\">\\r\\n                     <div class=\\\"panel-heading\\\">\\r\\n                        <h4 class=\\\"panel-title\\\">Layer Info</h4>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel-collapse collapse in\\\">\\r\\n                        <div class=\\\"panel-body\\\">\\r\\n                           <div class=\\\"col-sm-12\\\">\\r\\n                              <div class=\\\"form-group\\\">\\r\\n                                 <label for=\\\"name\\\" class=\\\"control-label\\\">Name <span style=\\\"color:red;\\\">*</span></label>\\r\\n                                 <input type=\\\"text\\\" class=\\\"form-control input-sm\\\" name=\\\"name\\\" pattern=\\\"[a-zA-Z][a-zA-Z-' ]+\\\" minlength=\\\"3\\\" maxlength=\\\"50\\\" #name=\\\"ngModel\\\" required [(ngModel)]=\\\"layer.name\\\">\\r\\n                                 <div *ngIf=\\\"name.errors && (name.dirty || name.touched)\\\">\\r\\n                                    <div [hidden]=\\\"!name.errors.required\\\">\\r\\n                                       <span style=\\\"color: red;\\\">Name required</span>\\r\\n                                    </div>\\r\\n                                    <div [hidden]=\\\"!name.errors.minlength\\\">\\r\\n                                       <span style=\\\"color:red;\\\">Name should be in 3 to 50 characters</span>\\r\\n                                    </div>\\r\\n                                    <div [hidden]=\\\"!name.errors.pattern\\\">\\r\\n                                       <span style=\\\"color: red;\\\">Invalid characters! </span>\\r\\n                                    </div>\\r\\n                                 </div>\\r\\n                              </div>\\r\\n                              <div class=\\\"form-group\\\">\\r\\n                                 <label for=\\\"description\\\" class=\\\"control-label\\\">Description </label>\\r\\n                                 <input type=\\\"text\\\" class=\\\"form-control input-sm\\\" name=\\\"description\\\" [(ngModel)]=\\\"layer.description\\\">\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"panel-group\\\" id=\\\"accordion\\\">\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#accessPermissions\\\">Access Permissions</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"accessPermissions\\\" class=\\\"panel-collapse collapse in\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <div class=\\\"form-group\\\">\\r\\n                                    <p-treeTable [value]=\\\"treeModules\\\" selectionMode=\\\"checkbox\\\" [(selection)]=\\\"selectedModules\\\">\\r\\n                                       <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n                                          <tr>\\r\\n                                             <th style=\\\"padding-left: 15px;\\\"><p-treeTableHeaderCheckbox></p-treeTableHeaderCheckbox> <span style=\\\"padding-left: 8px;\\\">Modules/Permissions</span></th>\\r\\n                                          </tr>\\r\\n                                       </ng-template>\\r\\n                                       <ng-template pTemplate=\\\"body\\\" let-rowNode let-rowData=\\\"rowData\\\" let-columns=\\\"columns\\\">\\r\\n                                          <tr>\\r\\n                                             <td>\\r\\n                                                <p-treeTableToggler [rowNode]=\\\"rowNode\\\"></p-treeTableToggler>\\r\\n                                                <p-treeTableCheckbox [value]=\\\"rowNode\\\"></p-treeTableCheckbox>\\r\\n                                                {{rowData.name}}\\r\\n                                             </td>\\r\\n                                          </tr>\\r\\n                                       </ng-template>\\r\\n                                    </p-treeTable>\\r\\n                                 </div>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                     <!--<div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#remarks\\\">Remarks</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"remarks\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"remarks\\\" class=\\\"control-label\\\">Comments</label>\\r\\n                                    <textarea class=\\\"form-control\\\" rows=\\\"3\\\" name=\\\"remarks\\\" tabindex=\\\"8\\\" [(ngModel)]=\\\"group.remarks\\\"></textarea>\\r\\n                                 </div>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#otherInfo\\\">Other Info</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"otherInfo\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"createdDate\\\" class=\\\"control-label\\\">Created Date</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control input-sm\\\" name=\\\"createdDate\\\" tabindex=\\\"9\\\" [ngModel]=\\\"group.createdDate | date:'dd/MM/yyyy'\\\" disabled>\\r\\n                                 </div>\\r\\n                                 <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"createdBy\\\" class=\\\"control-label\\\">Created By</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control input-sm\\\" name=\\\"createdBy\\\" tabindex=\\\"10\\\" [(ngModel)]=\\\"group.createdBy\\\" disabled>\\r\\n                                 </div>\\r\\n                                 <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"lastUpdatedDate\\\" class=\\\"control-label\\\">Last Updated Date</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control input-sm\\\" name=\\\"lastUpdatedDate\\\" tabindex=\\\"11\\\" [ngModel]=\\\"group.updatedDate | date:'dd/MM/yyyy'\\\" disabled>\\r\\n                                 </div>\\r\\n                                 <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"updatedBy\\\" class=\\\"control-label\\\">Updated By</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control input-sm\\\" name=\\\"updatedBy\\\" tabindex=\\\"12\\\" [(ngModel)]=\\\"group.updatedBy\\\" disabled>\\r\\n                                 </div>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>-->\\r\\n                  </div>\\r\\n               </div>\\r\\n               <div class=\\\"box-footer\\\">\\r\\n                  <div class=\\\"pull-right\\\">\\r\\n                     <div>\\r\\n                        <button type=\\\"submit\\\" class=\\\"btn btn-danger\\\" tabindex=\\\"13\\\" (click)=\\\"goBack()\\\">Close</button>\\r\\n                        <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" tabindex=\\\"14\\\" style=\\\"margin-left:10px\\\" (click)=\\\"save()\\\" [disabled]=\\\"form.invalid\\\">Save</button>\\r\\n                     </div>\\r\\n                  </div>\\r\\n               </div>\\r\\n            </form>\\r\\n         </div>\\r\\n      </div>\\r\\n   </div>\\r\\n</section>\\r\\n\"","export default \"<section class=\\\"content-header\\\">\\r\\n   <h1>Manage Layers</h1>\\r\\n   <ol class=\\\"breadcrumb\\\">\\r\\n      <li><a [routerLink]=\\\"['/home']\\\"><i class=\\\"fas fa-home\\\"></i> Home</a></li>\\r\\n   </ol>\\r\\n</section>\\r\\n\\r\\n<section class=\\\"content\\\">\\r\\n   <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-xs-12\\\">\\r\\n         <div class=\\\"box\\\">\\r\\n            <div class=\\\"box-header with-border\\\">\\r\\n               <h3 class=\\\"box-title\\\">Layer List</h3>\\r\\n               <div class=\\\"box-tools pull-right\\\" data-toggle=\\\"tooltip\\\" title=\\\"\\\" data-original-title=\\\"Status\\\">\\r\\n                  <button [routerLink]=\\\"['details']\\\" class=\\\"btn btn-block btn-xs btn-primary\\\"> New Layer</button>\\r\\n               </div>\\r\\n            </div>\\r\\n            <div class=\\\"box-body\\\">\\r\\n               <dt-search [searchFields]=\\\"searchFields\\\" (onSearch)=\\\"search($event)\\\"></dt-search>\\r\\n               <dt-pagination [totalPages]=\\\"totalPages\\\" (onPageSizeChange)=\\\"onPageSizeChange($event)\\\" (onPageChange)=\\\"onPageChange($event)\\\"></dt-pagination>\\r\\n\\r\\n               <table id=\\\"layers\\\" class=\\\"table table-bordered table-striped\\\">\\r\\n                  <thead>\\r\\n                     <tr (click)=\\\"onColumnClick($event.target)\\\">\\r\\n                        <th data-column=\\\"Name\\\" class=\\\"table-sorter\\\" style=\\\"width: 200px;\\\">Name</th>\\r\\n                        <th data-column=\\\"Description\\\" class=\\\"table-sorter\\\" style=\\\"max-width:300px\\\">Description</th>\\r\\n                        <th data-column=\\\"UpdatedBy\\\" class=\\\"table-sorter\\\" style=\\\"width:150px\\\">Updated By</th>\\r\\n                        <th data-column=\\\"UpdatedDate\\\" class=\\\"table-sorter\\\" style=\\\"width:125px\\\">Updated On</th>\\r\\n                        <th style=\\\"width:72px\\\"></th>\\r\\n                     </tr>\\r\\n                  </thead>\\r\\n                  <tbody>\\r\\n                     <ng-container *ngIf='layers && layers.length > 0'>\\r\\n                        <tr *ngFor='let layer of layers'>\\r\\n                           <td>{{layer.name}}</td>\\r\\n                           <td class=\\\"text-overflow-ellipsis\\\">{{layer.description}}</td>\\r\\n                           <td>{{layer.updatedBy}}</td>\\r\\n                           <td>{{layer.updatedDate | date:'dd/MM/yyyy'}}</td>\\r\\n                           <td>\\r\\n                              <a>\\r\\n                                 <i class=\\\"fa fa-edit\\\" [routerLink]=\\\"['details', layer.id]\\\" title=\\\"Edit\\\" style=\\\"font-size: 14px; cursor:pointer\\\"></i>\\r\\n                              </a>&nbsp;\\r\\n                              <a>\\r\\n                                 <i class=\\\"fa fa-trash\\\" (click)=\\\"delete(layer)\\\" title=\\\"Remove\\\" style=\\\"font-size: 14px; cursor:pointer; color:red\\\"></i>\\r\\n                              </a>\\r\\n                           </td>\\r\\n                        </tr>\\r\\n                     </ng-container>\\r\\n                     <tr *ngIf='layers == null || layers.length == 0'>\\r\\n                        <td colspan=\\\"5\\\" style=\\\"text-align: center;\\\">\\r\\n                           {{statusMessage}}\\r\\n                        </td>\\r\\n                     </tr>\\r\\n                  </tbody>\\r\\n               </table>\\r\\n            </div>\\r\\n         </div>\\r\\n      </div>\\r\\n   </div>\\r\\n</section>\\r\\n\"","export default \"<section class=\\\"content-header\\\">\\r\\n   <h1>Manage Roles <small> {{title}} </small></h1>\\r\\n   <ol class=\\\"breadcrumb\\\">\\r\\n      <li><a [routerLink]=\\\"['/home']\\\"><i class=\\\"fa fa-home\\\"></i> Home</a></li>\\r\\n      <li><a [routerLink]=\\\"['/roles']\\\"> Roles</a></li>\\r\\n   </ol>\\r\\n</section>\\r\\n\\r\\n<section class=\\\"content\\\">\\r\\n   <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-xs-12\\\">\\r\\n         <div class=\\\"box\\\">\\r\\n            <div class=\\\"box-header with-border\\\">\\r\\n               <h3 class=\\\"box-title\\\">Role Details</h3>\\r\\n               <div class=\\\"box-tools pull-right\\\">\\r\\n                  <button class=\\\"btn btn-social-icon btn-xs btn-danger\\\" (click)=\\\"goBack()\\\">\\r\\n                     <i class=\\\"fas fa-times\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                  </button>\\r\\n                  <button class=\\\"btn btn-social-icon btn-xs btn-success\\\" type=\\\"submit\\\" style=\\\"margin-left: 5px;\\\" (click)=\\\"save()\\\" [disabled]=\\\"form.invalid\\\">\\r\\n                     <i class=\\\"far fa-save\\\"></i>\\r\\n                  </button>\\r\\n               </div>\\r\\n            </div>\\r\\n            <form name=\\\"form\\\" action=\\\"javascript:{}\\\" #form=\\\"ngForm\\\" novalidate autocomplete=\\\"off\\\">\\r\\n               <div class=\\\"box-body\\\">\\r\\n\\r\\n                  <div class=\\\"panel panel-default\\\">\\r\\n                     <div class=\\\"panel-heading\\\">\\r\\n                        <h4 class=\\\"panel-title\\\">Role Info</h4>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel-collapse collapse in\\\">\\r\\n                        <div class=\\\"panel-body\\\">\\r\\n                           <div class=\\\"col-sm-12\\\">\\r\\n                              <div class=\\\"form-group\\\">\\r\\n                                 <label for=\\\"name\\\" class=\\\"control-label\\\">Name <span style=\\\"color:red;\\\">*</span></label>\\r\\n                                 <input type=\\\"text\\\" class=\\\"form-control input-sm\\\" name=\\\"name\\\" pattern=\\\"[a-zA-Z][a-zA-Z-' ]+\\\" minlength=\\\"3\\\" maxlength=\\\"50\\\" #name=\\\"ngModel\\\" required [(ngModel)]=\\\"role.name\\\">\\r\\n                                 <div *ngIf=\\\"name.errors && (name.dirty || name.touched)\\\">\\r\\n                                    <div [hidden]=\\\"!name.errors.required\\\">\\r\\n                                       <span style=\\\"color: red;\\\">Name required</span>\\r\\n                                    </div>\\r\\n                                    <div [hidden]=\\\"!name.errors.minlength\\\">\\r\\n                                       <span style=\\\"color:red;\\\">Name should be in 3 to 50 characters</span>\\r\\n                                    </div>\\r\\n                                    <div [hidden]=\\\"!name.errors.pattern\\\">\\r\\n                                       <span style=\\\"color: red;\\\">Invalid characters! </span>\\r\\n                                    </div>\\r\\n                                 </div>\\r\\n                              </div>\\r\\n                              <div class=\\\"form-group\\\">\\r\\n                                 <label for=\\\"description\\\" class=\\\"control-label\\\">Description </label>\\r\\n                                 <input type=\\\"text\\\" class=\\\"form-control input-sm\\\" name=\\\"description\\\" [(ngModel)]=\\\"role.description\\\">\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"panel-group\\\" id=\\\"accordion\\\">\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#accessPermissions\\\">Access Permissions</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"accessPermissions\\\" class=\\\"panel-collapse collapse in\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <div class=\\\"form-group\\\">\\r\\n                                    <p-treeTable [value]=\\\"treeModules\\\" selectionMode=\\\"checkbox\\\" [(selection)]=\\\"selectedModules\\\">\\r\\n                                       <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n                                          <tr>\\r\\n                                             <th style=\\\"padding-left: 15px;\\\"><p-treeTableHeaderCheckbox></p-treeTableHeaderCheckbox> <span style=\\\"padding-left: 8px;\\\">Modules/Permissions</span></th>\\r\\n                                          </tr>\\r\\n                                       </ng-template>\\r\\n                                       <ng-template pTemplate=\\\"body\\\" let-rowNode let-rowData=\\\"rowData\\\" let-columns=\\\"columns\\\">\\r\\n                                          <tr>\\r\\n                                             <td>\\r\\n                                                <p-treeTableToggler [rowNode]=\\\"rowNode\\\"></p-treeTableToggler>\\r\\n                                                <p-treeTableCheckbox [value]=\\\"rowNode\\\"></p-treeTableCheckbox>\\r\\n                                                {{rowData.name}}\\r\\n                                             </td>\\r\\n                                          </tr>\\r\\n                                       </ng-template>\\r\\n                                    </p-treeTable>\\r\\n                                 </div>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                     <!--<div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#remarks\\\">Remarks</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"remarks\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"remarks\\\" class=\\\"control-label\\\">Comments</label>\\r\\n                                    <textarea class=\\\"form-control\\\" rows=\\\"3\\\" name=\\\"remarks\\\" tabindex=\\\"8\\\" [(ngModel)]=\\\"group.remarks\\\"></textarea>\\r\\n                                 </div>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#otherInfo\\\">Other Info</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"otherInfo\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"createdDate\\\" class=\\\"control-label\\\">Created Date</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control input-sm\\\" name=\\\"createdDate\\\" tabindex=\\\"9\\\" [ngModel]=\\\"group.createdDate | date:'dd/MM/yyyy'\\\" disabled>\\r\\n                                 </div>\\r\\n                                 <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"createdBy\\\" class=\\\"control-label\\\">Created By</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control input-sm\\\" name=\\\"createdBy\\\" tabindex=\\\"10\\\" [(ngModel)]=\\\"group.createdBy\\\" disabled>\\r\\n                                 </div>\\r\\n                                 <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"lastUpdatedDate\\\" class=\\\"control-label\\\">Last Updated Date</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control input-sm\\\" name=\\\"lastUpdatedDate\\\" tabindex=\\\"11\\\" [ngModel]=\\\"group.updatedDate | date:'dd/MM/yyyy'\\\" disabled>\\r\\n                                 </div>\\r\\n                                 <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"updatedBy\\\" class=\\\"control-label\\\">Updated By</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control input-sm\\\" name=\\\"updatedBy\\\" tabindex=\\\"12\\\" [(ngModel)]=\\\"group.updatedBy\\\" disabled>\\r\\n                                 </div>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>-->\\r\\n                  </div>\\r\\n               </div>\\r\\n               <div class=\\\"box-footer\\\">\\r\\n                  <div class=\\\"pull-right\\\">\\r\\n                     <div>\\r\\n                        <button type=\\\"submit\\\" class=\\\"btn btn-danger\\\" tabindex=\\\"13\\\" (click)=\\\"goBack()\\\">Close</button>\\r\\n                        <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" tabindex=\\\"14\\\" style=\\\"margin-left:10px\\\" (click)=\\\"save()\\\" [disabled]=\\\"form.invalid\\\">Save</button>\\r\\n                     </div>\\r\\n                  </div>\\r\\n               </div>\\r\\n            </form>\\r\\n         </div>\\r\\n      </div>\\r\\n   </div>\\r\\n</section>\\r\\n\"","export default \"<section class=\\\"content-header\\\">\\r\\n   <h1>Manage Roles</h1>\\r\\n   <ol class=\\\"breadcrumb\\\">\\r\\n      <li><a [routerLink]=\\\"['/home']\\\"><i class=\\\"fas fa-home\\\"></i> Home</a></li>\\r\\n   </ol>\\r\\n</section>\\r\\n\\r\\n<section class=\\\"content\\\">\\r\\n   <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-xs-12\\\">\\r\\n         <div class=\\\"box\\\">\\r\\n            <div class=\\\"box-header with-border\\\">\\r\\n               <h3 class=\\\"box-title\\\">Role List</h3>\\r\\n               <div class=\\\"box-tools pull-right\\\" data-toggle=\\\"tooltip\\\" title=\\\"\\\" data-original-title=\\\"Status\\\">\\r\\n                  <button [routerLink]=\\\"['details']\\\" class=\\\"btn btn-block btn-xs btn-primary\\\"> New Role</button>\\r\\n               </div>\\r\\n            </div>\\r\\n            <div class=\\\"box-body\\\">\\r\\n\\r\\n               <dt-search [searchFields]=\\\"searchFields\\\" (onSearch)=\\\"search($event)\\\"></dt-search>\\r\\n               <dt-pagination [totalPages]=\\\"totalPages\\\" (onPageSizeChange)=\\\"onPageSizeChange($event)\\\" (onPageChange)=\\\"onPageChange($event)\\\"></dt-pagination>\\r\\n\\r\\n               <table class=\\\"table table-bordered table-striped\\\">\\r\\n                  <thead>\\r\\n                     <tr (click)=\\\"onColumnClick($event.target)\\\">\\r\\n                        <th data-column=\\\"Name\\\" class=\\\"table-sorter\\\" style=\\\"width: 200px;\\\">Name</th>\\r\\n                        <th data-column=\\\"Description\\\" class=\\\"table-sorter\\\" style=\\\"max-width:300px\\\">Description</th>\\r\\n                        <th data-column=\\\"UpdatedBy\\\" class=\\\"table-sorter\\\" style=\\\"width:150px\\\">Updated By</th>\\r\\n                        <th data-column=\\\"UpdatedDate\\\" class=\\\"table-sorter\\\" style=\\\"width:125px\\\">Updated On</th>\\r\\n                        <th style=\\\"width:60px\\\"></th>\\r\\n                     </tr>\\r\\n                  </thead>\\r\\n                  <tbody>\\r\\n                     <ng-container *ngIf='roles && roles.length > 0'>\\r\\n                        <tr *ngFor='let role of roles'>\\r\\n                           <td>{{role.name}}</td>\\r\\n                           <td class=\\\"text-overflow-ellipsis\\\">{{role.description}}</td>\\r\\n                           <td>{{role.updatedBy}}</td>\\r\\n                           <td>{{role.updatedDate | date:'dd/MM/yyyy'}}</td>\\r\\n                           <td>\\r\\n                              <a>\\r\\n                                 <i class=\\\"fa fa-edit\\\" [routerLink]=\\\"['details', role.id]\\\" title=\\\"Edit\\\" style=\\\"font-size: 14px; cursor:pointer\\\"></i>\\r\\n                              </a>&nbsp;\\r\\n                              <a>\\r\\n                                 <i class=\\\"fa fa-trash\\\" (click)=\\\"delete(role)\\\" title=\\\"Remove\\\" style=\\\"font-size: 14px; cursor:pointer; color:red\\\"></i>\\r\\n                              </a>\\r\\n                           </td>\\r\\n                        </tr>\\r\\n                     </ng-container>\\r\\n                     <tr *ngIf='roles == null || roles.length == 0'>\\r\\n                        <td colspan=\\\"5\\\" style=\\\"text-align: center;\\\">\\r\\n                           {{statusMessage}}\\r\\n                        </td>\\r\\n                     </tr>\\r\\n                  </tbody>\\r\\n               </table>\\r\\n            </div>\\r\\n         </div>\\r\\n      </div>\\r\\n   </div>\\r\\n</section>\\r\\n\"","export default \"<section class=\\\"content-header\\\">\\r\\n   <h1>Manage Users <small> {{title}} </small></h1>\\r\\n   <ol class=\\\"breadcrumb\\\">\\r\\n      <li><a [routerLink]=\\\"['/']\\\"><i class=\\\"fa fa-home\\\"></i> Home</a></li>\\r\\n      <li><a [routerLink]=\\\"['/users']\\\"> Users</a></li>\\r\\n   </ol>\\r\\n</section>\\r\\n\\r\\n<section class=\\\"content\\\">\\r\\n   <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-xs-12\\\">\\r\\n         <div class=\\\"box\\\">\\r\\n            <div class=\\\"box-header with-border ui-sortable-handle\\\">\\r\\n               <h3 class=\\\"box-title\\\">User Details</h3>\\r\\n               <div class=\\\"box-tools pull-right\\\" data-original-title=\\\"Status\\\" data-toggle=\\\"tooltip\\\" title=\\\"\\\">\\r\\n                  <button class=\\\"btn btn-social-icon btn-xs btn-danger\\\" (click)=\\\"goBack()\\\">\\r\\n                     <i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                  </button>\\r\\n                  <button class=\\\"btn btn-social-icon btn-xs btn-success\\\" type=\\\"submit\\\" style=\\\"margin-left: 5px;\\\" (click)=\\\"saveUser()\\\" [disabled]=\\\"userForm.invalid\\\">\\r\\n                     <i class=\\\"far fa-save\\\"></i>\\r\\n                  </button>\\r\\n               </div>\\r\\n            </div>\\r\\n            <form name=\\\"userForm\\\" action=\\\"javascript:{}\\\" #userForm=\\\"ngForm\\\" novalidate autocomplete=\\\"off\\\">\\r\\n               <div class=\\\"box-body\\\">\\r\\n                  <div class=\\\"panel panel-default\\\">\\r\\n                     <div class=\\\"panel-heading\\\">\\r\\n                        <h4 class=\\\"panel-title\\\">\\r\\n                           Personal Information\\r\\n                        </h4>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel-collapse collapse in\\\">\\r\\n                        <div class=\\\"panel-body\\\">\\r\\n                           <div class=\\\"form-group\\\">\\r\\n                              <label for=\\\"loginId\\\" class=\\\"control-label\\\">Login Id <span style=\\\"color:red;\\\">*</span></label>\\r\\n                              <input type=\\\"text\\\" class=\\\"form-control input-sm\\\" name=\\\"loginId\\\" required [(ngModel)]=\\\"user.loginId\\\" #loginId=\\\"ngModel\\\" pattern=\\\"[A-Za-z0-9]*\\\" minlength=\\\"5\\\" maxlength=\\\"20\\\">\\r\\n                              <div *ngIf=\\\"loginId.errors && (loginId.dirty || loginId.touched)\\\" style=\\\"font-size: smaller;\\\">\\r\\n                                 <div [hidden]=\\\"!loginId.errors.required\\\">\\r\\n                                    <span style=\\\"color:red ;\\\"> Login Id is required</span>\\r\\n                                 </div>\\r\\n                                 <div [hidden]=\\\"!loginId.errors.minlength\\\">\\r\\n                                    <span style=\\\"color:red;\\\"> Login Id should be in 5 to 20 characters</span>\\r\\n                                 </div>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                           <div class=\\\"form-group\\\">\\r\\n                              <label for=\\\"password\\\" class=\\\"control-label\\\">Password <span style=\\\"color:red;\\\">*</span></label>\\r\\n                              <div class=\\\"pull-right\\\" style=\\\"font-size:smaller\\\">\\r\\n                                 <!--<p-checkbox name=\\\"changePassword\\\" value=\\\"changePassword\\\" label=\\\"Change Password\\\" (onChange)=\\\"setNewPassword($event)\\\" *ngIf=\\\"user.id\\\"></p-checkbox>-->\\r\\n                                 <mat-checkbox name=\\\"changePassword\\\" [checked]=\\\"changePassword\\\" (change)=\\\"setNewPassword($event)\\\" *ngIf=\\\"user.id\\\">Change Password</mat-checkbox>\\r\\n                              </div>\\r\\n                              <input type=\\\"password\\\" class=\\\"form-control input-sm\\\" name=\\\"password\\\" required #password=\\\"ngModel\\\" [(ngModel)]=\\\"user.password\\\" pattern=\\\"(?=^.{8,30}$)(?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%^&*()_+}{:;?/>.<,])(?!.*\\\\s).*$\\\" [disabled]=\\\"changePassword? null: 'disabled'\\\">\\r\\n                              <div *ngIf=\\\"password.errors && (password.dirty || password.touched)\\\" style=\\\"font-size: smaller;\\\">\\r\\n                                 <div [hidden]=\\\"!password.errors.required\\\">\\r\\n                                    <span style=\\\"color:red ;\\\"> Password is required</span>\\r\\n                                 </div>\\r\\n                                 <div [hidden]=\\\"!password.errors.minlength\\\">\\r\\n                                    <span style=\\\"color:red;\\\"> Password should be min 8 characters long</span>\\r\\n                                 </div>\\r\\n                                 <div [hidden]=\\\"!password.errors.pattern\\\">\\r\\n                                    <span style=\\\"color: red;\\\"> Password needs to have minimum of 8 characters, 1 capital letter, 1 number and 1 symbol. </span>\\r\\n                                 </div>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                           <div class=\\\"form-group\\\">\\r\\n                              <label for=\\\"firstName\\\" class=\\\"control-label\\\">First Name <span style=\\\"color:red;\\\">*</span></label>\\r\\n                              <input type=\\\"text\\\" class=\\\"form-control input-sm\\\" name=\\\"firstName\\\" required #firstName=\\\"ngModel\\\" [(ngModel)]=\\\"user.firstName\\\" pattern=\\\"[a-zA-Z][a-zA-Z-' ]+\\\" minlength=\\\"3\\\" maxlength=\\\"50\\\">\\r\\n                              <div *ngIf=\\\"firstName.errors && (firstName.dirty || firstName.touched)\\\" style=\\\"font-size: smaller;\\\">\\r\\n                                 <div [hidden]=\\\"!firstName.errors.required\\\">\\r\\n                                    <span style=\\\"color: red;\\\">First Name is required</span>\\r\\n                                 </div>\\r\\n                                 <div [hidden]=\\\"!firstName.errors.minlength\\\">\\r\\n                                    <span style=\\\"color:red;\\\"> First Name should be in 3 to 50 characters</span>\\r\\n                                 </div>\\r\\n                                 <div [hidden]=\\\"!firstName.errors.pattern\\\">\\r\\n                                    <span style=\\\"color: red;\\\"> Invalid characters! </span>\\r\\n                                 </div>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                           <div class=\\\"form-group\\\">\\r\\n                              <label for=\\\"lastName\\\" class=\\\"control-label\\\">Last Name <span style=\\\"color:red;\\\">*</span></label>\\r\\n                              <input type=\\\"text\\\" class=\\\"form-control input-sm\\\" name=\\\"lastName\\\" required #lastName=\\\"ngModel\\\" [(ngModel)]=\\\"user.lastName\\\" pattern=\\\"[a-zA-Z][a-zA-Z-' ]+\\\" minlength=\\\"3\\\" maxlength=\\\"50\\\">\\r\\n                              <div *ngIf=\\\"lastName.errors && (lastName.dirty || lastName.touched)\\\" style=\\\"font-size: smaller;\\\">\\r\\n                                 <div [hidden]=\\\"!lastName.errors.required\\\">\\r\\n                                    <span style=\\\"color: red;\\\">Last Name is required</span>\\r\\n                                 </div>\\r\\n                                 <div [hidden]=\\\"!lastName.errors.pattern\\\">\\r\\n                                    <span style=\\\"color: red;\\\"> Invalid characters! </span>\\r\\n                                 </div>\\r\\n                                 <div [hidden]=\\\"!lastName.errors.minlength\\\">\\r\\n                                    <span style=\\\"color:red;\\\"> Last Name should be in 3 to 50 characters</span>\\r\\n                                 </div>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                           <div class=\\\"form-group\\\">\\r\\n                              <label for=\\\"emailId\\\" class=\\\"control-label\\\">Email Id <span style=\\\"color:red;\\\">*</span></label>\\r\\n                              <input type=\\\"email\\\" class=\\\"form-control input-sm\\\" name=\\\"emailId\\\" #emailId=\\\"ngModel\\\" required [(ngModel)]=\\\"user.emailId\\\" maxlength=\\\"50\\\" minlength=\\\"8\\\" pattern=\\\"^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\\\.[a-zA-Z]{2,4}$\\\">\\r\\n                              <div *ngIf=\\\"emailId.errors && (emailId.dirty || emailId.touched)\\\" style=\\\"font-size: smaller;\\\">\\r\\n                                 <div [hidden]=\\\"!emailId.errors.required\\\">\\r\\n                                    <span style=\\\"color: red;\\\">Email Id is required</span>\\r\\n                                 </div>\\r\\n                                 <div [hidden]=\\\"!emailId.errors.minlength\\\">\\r\\n                                    <span style=\\\"color:red;\\\"> Email Id should be in 8 to 50 characters</span>\\r\\n                                 </div>\\r\\n                                 <div [hidden]=\\\"!emailId.errors.pattern\\\">\\r\\n                                    <span style=\\\"color: red;\\\"> Invalid Email Id</span>\\r\\n                                 </div>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                           <div class=\\\"form-group\\\">\\r\\n                              <label for=\\\"phoneNumber\\\" class=\\\"control-label\\\">Phone <span style=\\\"color:red;\\\"></span></label>\\r\\n                              <input type=\\\"text\\\" class=\\\"form-control input-sm\\\" name=\\\"phoneNumber\\\" minlength=\\\"8\\\" maxlength=\\\"20\\\" #phoneNumber=\\\"ngModel\\\" pattern=\\\"[0-9+-.]+\\\" [(ngModel)]=\\\"user.phoneNumber\\\">\\r\\n                              <div *ngIf=\\\"phoneNumber.errors && (phoneNumber.dirty || phoneNumber.touched)\\\" style=\\\"font-size: smaller;\\\">\\r\\n                                 <div [hidden]=\\\"!phoneNumber.errors.minlength\\\">\\r\\n                                    <span style=\\\"color:red; \\\"> Phone Number  should be in 8 to 20 characters</span>\\r\\n                                 </div>\\r\\n                                 <div [hidden]=\\\"!phoneNumber.errors.pattern\\\">\\r\\n                                    <span style=\\\"color:red;\\\"> Invalid characters!</span>\\r\\n                                 </div>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"panel-group\\\" id=\\\"accordion\\\">\\r\\n\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#accessPermissions\\\">Access Permissions</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"accessPermissions\\\" class=\\\"panel-collapse collapse in\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"roles\\\" class=\\\"control-label\\\">Role <span style=\\\"color:red;\\\">*</span></label>\\r\\n                                    <mat-select name=\\\"roles\\\" [(ngModel)]=\\\"user.roleId\\\" #role=\\\"ngModel\\\">\\r\\n                                       <mat-option *ngFor=\\\"let role of roles\\\" [value]=\\\"role.id\\\">\\r\\n                                          {{role.name}}\\r\\n                                       </mat-option>\\r\\n                                    </mat-select>\\r\\n                                 </div>\\r\\n                                 <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"country\\\" class=\\\"control-label\\\">Groups</label>\\r\\n                                    <table class=\\\"table table-bordered table-striped\\\">\\r\\n                                       <thead>\\r\\n                                          <tr>\\r\\n                                             <th style=\\\"width:40px;text-align: center;\\\">\\r\\n                                                <mat-checkbox (change)=\\\"$event ? masterToggle() : null\\\"\\r\\n                                                              [checked]=\\\"user.groups?.length > 0 && isAllSelected()\\\"\\r\\n                                                              [indeterminate]=\\\"user.groups?.length > 0 && !isAllSelected()\\\">\\r\\n                                                </mat-checkbox>\\r\\n                                             </th>\\r\\n                                             <th>Groups</th>\\r\\n                                          </tr>\\r\\n                                       </thead>\\r\\n                                       <tbody>\\r\\n                                          <ng-container *ngIf='groups && groups.length > 0'>\\r\\n                                             <tr *ngFor='let group of groups'>\\r\\n                                                <td style=\\\"text-align: center;\\\">\\r\\n                                                   <mat-checkbox (click)=\\\"$event.stopPropagation()\\\"\\r\\n                                                                 (change)=\\\"$event ? toggleSelection(group) : null\\\"\\r\\n                                                                 [checked]=\\\"user.groups?.includes(group.id)\\\">\\r\\n                                                   </mat-checkbox>\\r\\n                                                </td>\\r\\n                                                <td>{{group.name}}</td>\\r\\n                                             </tr>\\r\\n                                          </ng-container>\\r\\n                                          <tr *ngIf='groups == null || groups.length == 0'>\\r\\n                                             <td colspan=\\\"2\\\" style=\\\"text-align: center;\\\">\\r\\n                                                Groups not defined\\r\\n                                             </td>\\r\\n                                          </tr>\\r\\n                                       </tbody>\\r\\n                                    </table>\\r\\n                                 </div>\\r\\n                                 <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"country\\\" class=\\\"control-label\\\">Activate User <span style=\\\"color:red;\\\">*</span></label>\\r\\n\\r\\n                                    <mat-radio-group name=\\\"isActive\\\" [(ngModel)]=\\\"user.isActive\\\">\\r\\n                                       <div class=\\\"form-group\\\" style=\\\"padding-bottom:20px;\\\">\\r\\n                                          <mat-radio-button [value]=\\\"true\\\" style=\\\"padding-right:20px\\\">Yes</mat-radio-button>\\r\\n                                          <mat-radio-button [value]=\\\"false\\\">No</mat-radio-button>\\r\\n                                       </div>\\r\\n                                    </mat-radio-group>\\r\\n\\r\\n                                 </div>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n\\r\\n                     <!--<div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#remarks\\\">Remarks</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"remarks\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"remarks\\\" class=\\\"control-label\\\">Comments</label>\\r\\n                                    <textarea class=\\\"form-control\\\" rows=\\\"3\\\" name=\\\"remarks\\\" [(ngModel)]=\\\"user.remarks\\\"></textarea>\\r\\n                                 </div>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>-->\\r\\n\\r\\n                  </div>\\r\\n\\r\\n               </div>\\r\\n               <div class=\\\"box-footer\\\">\\r\\n                  <div class=\\\"pull-right\\\">\\r\\n                     <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"goBack()\\\">Close</button>\\r\\n                     <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" style=\\\"margin-left:10px\\\" (click)=\\\"saveUser()\\\" [disabled]=\\\"userForm.invalid\\\">Save</button>\\r\\n                  </div>\\r\\n               </div>\\r\\n            </form>\\r\\n         </div>\\r\\n      </div>\\r\\n   </div>\\r\\n</section>\\r\\n\"","export default \"<section class=\\\"content-header\\\">\\r\\n   <h1>Manage Users</h1>\\r\\n   <ol class=\\\"breadcrumb\\\">\\r\\n      <li><a [routerLink]=\\\"['/home']\\\"><i class=\\\"fa fa-home\\\"></i> Home</a></li>\\r\\n   </ol>\\r\\n</section>\\r\\n\\r\\n<section class=\\\"content\\\">\\r\\n   <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-xs-12\\\">\\r\\n         <div class=\\\"box\\\">\\r\\n            <div class=\\\"box-header with-border\\\">\\r\\n               <h3 class=\\\"box-title\\\">User List</h3>\\r\\n               <div class=\\\"box-tools pull-right\\\" data-toggle=\\\"tooltip\\\" title=\\\"\\\" data-original-title=\\\"Status\\\">\\r\\n                  <div class=\\\"btn-group\\\" data-toggle=\\\"btn-toggle\\\">\\r\\n                     <button id=\\\"AddNewUser\\\" [routerLink]=\\\"['details']\\\" class=\\\"btn btn-block btn-xs btn-primary\\\"> New User</button>\\r\\n                  </div>\\r\\n               </div>\\r\\n            </div>\\r\\n            <div class=\\\"box-body\\\">\\r\\n               <dt-search [searchFields]=\\\"searchFields\\\" (onSearch)=\\\"search($event)\\\"></dt-search>\\r\\n               <dt-pagination [totalPages]=\\\"totalPages\\\" (onPageSizeChange)=\\\"onPageSizeChange($event)\\\" (onPageChange)=\\\"onPageChange($event)\\\"></dt-pagination>\\r\\n\\r\\n               <table id=\\\"users\\\" class=\\\"table table-bordered table-striped\\\">\\r\\n                  <thead>\\r\\n                     <tr (click)=\\\"onColumnClick($event.target)\\\">\\r\\n                        <th data-column=\\\"LoginId\\\" class=\\\"table-sorter\\\">Login Id</th>\\r\\n                        <th data-column=\\\"FirstName\\\" class=\\\"table-sorter\\\">Name</th>\\r\\n                        <th data-column=\\\"EmailId\\\" class=\\\"table-sorter\\\" style=\\\"width:250px\\\">Email Id</th>\\r\\n                        <th data-column=\\\"Role\\\" class=\\\"table-sorter\\\">Role</th>\\r\\n                        <th data-column=\\\"Status\\\" class=\\\"table-sorter\\\" style=\\\"width:80px\\\">Status</th>\\r\\n                        <th style=\\\"width:72px\\\"></th>\\r\\n                     </tr>\\r\\n                  </thead>\\r\\n                  <tbody>\\r\\n                     <ng-container *ngIf='users && users.length > 0'>\\r\\n                        <tr *ngFor='let user of users'>\\r\\n                           <td>{{user.loginId}}</td>\\r\\n                           <td>{{user.firstName}} {{user.lastName}}</td>\\r\\n                           <td>{{user.emailId}}</td>\\r\\n                           <td>{{getRoleDescription(user.roleId)}}</td>\\r\\n                           <td>{{user.isActive == true ? 'Active' : 'Block'}}</td>\\r\\n                           <td>\\r\\n                              <a>\\r\\n                                 <i class=\\\"fa fa-edit\\\" [routerLink]=\\\"['details', user.id]\\\" title=\\\"Edit\\\" style=\\\"font-size: 14px; cursor:pointer\\\"></i>\\r\\n                              </a>&nbsp;\\r\\n                              <a>\\r\\n                                 <i class=\\\"fa fa-trash\\\" (click)=\\\"delete(user)\\\" title=\\\"Remove\\\" style=\\\"font-size: 14px; cursor:pointer; color:red\\\"></i>\\r\\n                              </a>\\r\\n                           </td>\\r\\n                        </tr>\\r\\n                     </ng-container>\\r\\n                     <tr *ngIf='users == null || users.length == 0'>\\r\\n                        <td colspan=\\\"6\\\" class=\\\"check-mail\\\" style=\\\"text-align: center;\\\">\\r\\n                           {{statusMessage}}\\r\\n                        </td>\\r\\n                     </tr>\\r\\n                  </tbody>\\r\\n               </table>\\r\\n            </div>\\r\\n         </div>\\r\\n      </div>\\r\\n   </div>\\r\\n</section>\\r\\n\"","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatCheckboxModule, MatRadioModule, MatSelectModule, MatSliderModule } from '@angular/material';\r\nimport { SharedModule } from '../shared.module';\r\nimport { AccessoryRouting } from './accessory.routes';\r\nimport { AccessoryService } from './services/accessory.service';\r\nimport { AccessoryDetails } from './views/accessory-details';\r\nimport { AccessoryList } from './views/accessory-list';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        MatRadioModule, MatSelectModule, MatCheckboxModule, MatSliderModule,\r\n        AccessoryRouting,\r\n        SharedModule\r\n    ],\r\n    declarations: [\r\n        AccessoryList,\r\n        AccessoryDetails,\r\n    ],\r\n    providers: [\r\n        AccessoryService,\r\n\r\n    ]\r\n})\r\nexport class AccessoryModule { }\r\n","import { ModuleWithProviders } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AccessoryDetails } from './views/accessory-details';\r\nimport { AccessoryList } from './views/accessory-list';\r\n\r\nexport const accessoryRoutes: Routes = [\r\n    {\r\n        path: 'accessories',\r\n        children: [\r\n            { path: '', component: AccessoryList },\r\n            { path: 'details', component: AccessoryDetails },\r\n            { path: 'details/:id', component: AccessoryDetails }\r\n        ]\r\n    },\r\n];\r\n\r\nexport const AccessoryRouting: ModuleWithProviders = RouterModule.forChild(accessoryRoutes);\r\n","import { DbBaseEntity } from '../../common/models/dbBaseEntity';\r\nimport { CustomField } from '../../common/models/customField';\r\nimport { FileAttachment } from '../../common/models/FileAttachment';\r\nimport { Supplier } from '../../common/models/supplier';\r\n\r\nexport class Accessory extends DbBaseEntity {\r\n    name: string;\r\n    code?: string;\r\n    icon?: string;\r\n    parentId?: string;\r\n    parentEntityType?: string;\r\n    type?: string;\r\n    brand?: string;\r\n    model?: string;\r\n    zoomLevel: number;\r\n    customFields?: CustomField[] = new Array<CustomField>();\r\n    photos?: FileAttachment;\r\n    attachments?: FileAttachment;\r\n    suppliers?: Supplier[] = new Array<Supplier>();\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient, HttpParams } from \"@angular/common/http\";\r\n\r\nimport { Accessory } from '../models/accessory';\r\nimport { PaginationRequest, SortOrder } from '../../common/models/paginationRequest';\r\nimport { PaginationResponse } from '../../common/models/paginationResponse';\r\nimport { ServiceResponse } from '../../common/models/serviceResponse';\r\n\r\n@Injectable()\r\nexport class AccessoryService {\r\n\r\n    getAccessoriesApi = 'Accessories/GetAccessories/';\r\n    getAccessoryApi = 'Accessories/GetAccessory/';\r\n    checkNameExistsApi = 'Accessories/CheckNameExists/';\r\n    saveAccessoryApi = 'Accessories/SaveAccessory/';\r\n    deleteAccessoryApi = 'Accessories/DeleteAccessory/';\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    getAccessories(paginationRequest?: PaginationRequest): Observable<PaginationResponse> {\r\n\r\n        if (paginationRequest == null)\r\n            paginationRequest = {\r\n                page: null,\r\n                pageSize: null,\r\n                filter: null,\r\n                order: {\r\n                    orderByProperty: \"UpdatedDate\",\r\n                    sortOrder: SortOrder.descending\r\n                }\r\n            };\r\n\r\n        return this.http.post<PaginationResponse>(this.getAccessoriesApi, paginationRequest);\r\n    }\r\n\r\n    getAccessory(accessoryId): Observable<ServiceResponse> {\r\n\r\n        const params = new HttpParams()\r\n            .set('accessoryId', accessoryId);\r\n\r\n        return this.http.get<ServiceResponse>(this.getAccessoryApi, { params });\r\n    }\r\n\r\n    async checkNameExists(name: string): Promise<ServiceResponse> {\r\n\r\n        const params = new HttpParams()\r\n            .set('name', name);\r\n\r\n        return await this.http.get<ServiceResponse>(this.checkNameExistsApi, { params }).toPromise();\r\n    }\r\n\r\n    saveAccessory(accessory: Accessory): Observable<ServiceResponse> {\r\n\r\n        return this.http.post<ServiceResponse>(this.saveAccessoryApi, accessory);\r\n    }\r\n\r\n    deleteAccessory(accessoryId: string): Observable<ServiceResponse> {\r\n\r\n        const params = new HttpParams()\r\n            .set('accessoryId', accessoryId);\r\n\r\n        return this.http.delete<ServiceResponse>(this.deleteAccessoryApi, { params });\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport { forkJoin } from 'rxjs';\r\n\r\nimport { Helper } from '../../common/helper';\r\nimport { AccessoryService } from '../services/accessory.service';\r\nimport { Accessory } from '../models/accessory';\r\n\r\ndeclare var $: any;\r\n\r\n@Component({\r\n    templateUrl: './accessory-details.html',\r\n    providers: [AccessoryService],\r\n})\r\nexport class AccessoryDetails implements OnInit {\r\n\r\n    accessoryId: string;\r\n    accessory: Accessory = new Accessory();\r\n    title: string = \"New Accessory\";\r\n\r\n    constructor(\r\n        private location: Location,\r\n        private route: ActivatedRoute,\r\n        private accessoryService: AccessoryService,\r\n        private helper: Helper) { }\r\n\r\n    ngOnInit() {\r\n        this.route.params.subscribe(\r\n            params => {\r\n                this.accessoryId = params['id'];\r\n\r\n                if (this.accessoryId != null)\r\n                    this.title = \"Edit Accessory\";\r\n                else {\r\n                    this.title = \"New Accessory\";\r\n                }\r\n\r\n                this.getFormData(this.accessoryId);\r\n\r\n            });\r\n    }\r\n\r\n    getFormData(accessoryId: string) {\r\n\r\n        if (this.accessoryId != null) {\r\n\r\n            $(\"#ajax-loading\").show();\r\n\r\n            this.accessoryService.getAccessory(this.accessoryId).subscribe(\r\n                resp => {\r\n                    this.accessory = new Accessory();\r\n\r\n                    if (resp.status.toLowerCase() == \"error\") {\r\n                        this.helper.showAlertMessage(resp.message, \"error\");\r\n                    }\r\n                    else {\r\n                        if (resp.data != null) {\r\n                            this.accessory = resp.data;\r\n                        }\r\n                    }\r\n\r\n                    $(\"#ajax-loading\").hide();\r\n                },\r\n                (err) => {\r\n                    $(\"#ajax-loading\").hide();\r\n                    this.accessory = new Accessory();\r\n                    this.helper.showAlertMessage(\"Unable to fetch accessory details\", \"error\");\r\n                });\r\n        }\r\n        else\r\n            this.accessory = new Accessory();\r\n    }\r\n\r\n    addNewSupplier() {\r\n\r\n        if (this.accessory.suppliers == null)\r\n            this.accessory.suppliers = [];\r\n\r\n        this.accessory.suppliers.push({\r\n            name: \"\",\r\n            sku: \"\",\r\n            price: null,\r\n            validFrom: \"\",\r\n            validTo: \"\"\r\n        });\r\n    }\r\n\r\n    deleteSupplier(index: number) {\r\n        this.accessory.suppliers.splice(index, 1);\r\n    }\r\n\r\n    async save() {\r\n\r\n        var errorMessages = await this.validateEntity(this.accessory);\r\n\r\n        if (errorMessages.length == 0) {\r\n\r\n            this.accessoryService.saveAccessory(this.accessory).subscribe(\r\n                resp => {\r\n\r\n                    if (resp.status.toLowerCase() == \"error\") {\r\n                        this.helper.showAlertMessage(resp.message, \"error\");\r\n                    }\r\n                    else {\r\n                        if (resp.data != null) {\r\n                            this.helper.showAlertMessage(\"Accessory information saved\", \"success\");\r\n                            this.goBack();\r\n                        }\r\n                        else\r\n                            this.helper.showAlertMessage(\"Unable to save accessory information.\", \"error\");\r\n                    }\r\n                },\r\n                (err) => {\r\n                    //let msg = `Unable to save user information : ${err.message}`;\r\n                    this.helper.showAlertMessage(\"Unable to save accessory information.\", \"error\");\r\n                });\r\n        }\r\n        else {\r\n            this.helper.showAlertMessage(this.helper.getErrorMessagesText(errorMessages), \"error\");\r\n        }\r\n    }\r\n\r\n    async validateEntity(accessory: Accessory): Promise<string[]> {\r\n       var errorMessages = [];\r\n       \r\n          if (accessory.name == null || accessory.name.trim() == '')\r\n             errorMessages.push(\"Name cannot be empty.\");\r\n          else {\r\n             if (accessory.id == undefined) {\r\n                let resp = await this.accessoryService.checkNameExists(accessory.name);\r\n\r\n                if (resp.message=='false')\r\n                   errorMessages.push(\"Name already exists.\");\r\n             }\r\n          }\r\n       \r\n       \r\n    //    if (user.loginId == null || user.loginId.trim() == \"\")\r\n    //        errorMessages.push(\"Login Id cannot be empty string\");\r\n\r\n    //    //if (user.password == null || user.password.trim() == \"\")\r\n    //    //   errorMessages.push(\"Password cannot be empty string\");\r\n\r\n        return errorMessages;\r\n    }\r\n\r\n    goBack(): void {\r\n        this.location.back();\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { Accessory } from '../models/accessory';\r\nimport { AccessoryService } from '../services/accessory.service';\r\n\r\nimport { Helper } from '../../common/helper';\r\nimport { SearchField } from '../../common/models/searchField';\r\nimport { SearchFilter, SortOrder, ConditionOperator, Filter } from '../../common/models/paginationRequest';\r\n\r\ndeclare var $: any;\r\ndeclare var jBox: any;\r\n\r\n@Component({\r\n    templateUrl: './accessory-list.html',\r\n    providers: [AccessoryService]\r\n})\r\nexport class AccessoryList implements OnInit {\r\n\r\n    accessories = new Array<Accessory>();\r\n    statusMessage: string = \"\";\r\n    pageSize = 10;\r\n    currentPage = 1;\r\n    totalPages = 1;\r\n    searchFields: SearchField[];\r\n    searchFilter: SearchFilter;\r\n    //selectedField: SearchField;\r\n    //filterPills: Filter[];\r\n    //searchText: string;\r\n    sortColumn: string;\r\n    sortOrder: SortOrder = SortOrder.descending;\r\n    previousElement: HTMLElement;\r\n    //conditionOption: boolean = true;\r\n\r\n    constructor(\r\n        private accessoryService: AccessoryService,\r\n        private helper: Helper) {\r\n\r\n        this.searchFields = new Array<SearchField>();\r\n        this.searchFields.push({ field: 'Name', label: 'Name', dataType: \"text\", value: \"\" });\r\n        this.searchFields.push({ field: 'parentEntityType', label: 'Parent Type', dataType: \"text\", value: \"\" });\r\n        this.searchFields.push({ field: 'UpdatedBy', label: 'Updated By', dataType: \"text\", value: \"\" });\r\n        this.searchFields.push({ field: 'UpdatedDate', label: 'Updated On', dataType: \"date\", value: \"\" });\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.statusMessage = \"Loading Accessories...\";\r\n        this.pageSize = 10;\r\n        this.currentPage = 1;\r\n        this.sortColumn = null;\r\n        this.sortOrder = SortOrder.noSort;\r\n        this.getFormData();\r\n    }\r\n\r\n    getFormData() {\r\n\r\n        $(\"#ajax-loading\").show();\r\n\r\n        this.totalPages = 1;\r\n\r\n        let paginationRequest = {\r\n            page: this.currentPage,\r\n            pageSize: this.pageSize,\r\n            filter: this.searchFilter,\r\n            order: {\r\n                orderByProperty: this.sortColumn,\r\n                sortOrder: this.sortOrder\r\n            }\r\n        };\r\n\r\n        this.accessoryService.getAccessories(paginationRequest).subscribe(\r\n            resp => {\r\n                this.accessories = null;\r\n\r\n                if (resp.status.toLowerCase() == \"error\") {\r\n                    this.statusMessage = resp.message;\r\n                    this.helper.showAlertMessage(this.statusMessage, \"error\");\r\n                }\r\n                else {\r\n                    if (resp.data != null && resp.data.length > 0) {\r\n                        this.accessories = resp.data;\r\n                        this.totalPages = Math.ceil(resp.recordCount / this.pageSize);\r\n                    }\r\n                    else {\r\n                        this.statusMessage = \"There are no registered accessories.\";\r\n                    }\r\n                }\r\n\r\n                $(\"#ajax-loading\").hide();\r\n            },\r\n            (err) => {\r\n                $(\"#ajax-loading\").hide();\r\n                this.accessories = null;\r\n                let msg = `Unable to fetch accessories : ${err.message}`;\r\n                this.helper.showAlertMessage(msg, \"error\");\r\n                this.statusMessage = \"Error fetching accessories.\";\r\n            });\r\n    }\r\n\r\n    search(searchFilter) {\r\n\r\n        this.searchFilter = searchFilter;\r\n        this.getFormData();\r\n    }\r\n\r\n    onPageSizeChange(pageSize) {\r\n        this.pageSize = pageSize;\r\n        this.getFormData();\r\n    }\r\n\r\n    onPageChange(currentPage) {\r\n        this.currentPage = currentPage;\r\n        this.getFormData();\r\n    }\r\n\r\n    onColumnClick(e: HTMLElement) {\r\n\r\n        if (this.previousElement && e.getAttribute('data-column') != this.previousElement.getAttribute('data-column')) {\r\n            this.previousElement.classList.remove('table-sorter-desc');\r\n            this.previousElement.classList.remove('table-sorter-asc');\r\n        }\r\n\r\n        this.previousElement = e;\r\n\r\n        this.sortColumn = e.getAttribute('data-column');\r\n\r\n        if (e.classList.contains(\"table-sorter-asc\")) {\r\n            e.classList.remove('table-sorter-asc');\r\n            e.classList.add('table-sorter-desc');\r\n            this.sortOrder = SortOrder.descending;\r\n        }\r\n        else if (e.classList.contains(\"table-sorter-desc\")) {\r\n            e.classList.remove('table-sorter-desc');\r\n            this.sortColumn = null;\r\n            this.sortOrder = SortOrder.noSort;\r\n        }\r\n        else {\r\n            e.classList.add('table-sorter-asc');\r\n            this.sortOrder = SortOrder.ascending;\r\n        }\r\n\r\n        this.getFormData();\r\n    }\r\n\r\n    delete(accessory: Accessory) {\r\n        new jBox(\"Confirm\", {\r\n            minWidth: 500,\r\n            minHeight: 70,\r\n            title: \"<b>Delete Accessory</b>\",\r\n            overlay: false,\r\n            content: \"Do you want to delete accessory - \" + accessory.name,\r\n            draggable: \"title\",\r\n            confirmButton: \"Yes\",\r\n            cancelButton: \"No\",\r\n            confirm: () => {\r\n                this.accessoryService.deleteAccessory(accessory.id).subscribe(\r\n                    resp => {\r\n                        if (resp.status.toLowerCase() == \"error\") {\r\n                            this.helper.showAlertMessage(resp.message, \"error\");\r\n                        }\r\n                        else {\r\n                            if (resp.data != null) {\r\n                                this.helper.showAlertMessage(\"Accessory deleted.\", \"success\");\r\n                                this.getFormData();\r\n                            }\r\n                            else {\r\n                                this.helper.showAlertMessage(\"Error deleting accessory\", \"error\");\r\n                            }\r\n                        }\r\n                    },\r\n                    (err) => {\r\n                        this.helper.showAlertMessage(\"Error deleting accessory\", \"error\");\r\n                    });\r\n            }\r\n        }).open();\r\n    }\r\n\r\n    //getPermission(featureCode: string, accessType: string): boolean {\r\n    //   return this.accountService.getPermission(featureCode, accessType);\r\n    //}\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatSelectModule } from '@angular/material';\r\nimport { SharedModule } from '../shared.module';\r\nimport { ActivityLogRouting } from './activityLog.routes';\r\nimport { ActivityLogService } from './services/activityLog.service';\r\nimport { ActivityLogDetails } from './views/activityLog-details';\r\nimport { ActivityLogList } from './views/activityLog-list';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        MatSelectModule,\r\n        ActivityLogRouting,\r\n        SharedModule\r\n    ],\r\n    declarations: [\r\n        ActivityLogList,\r\n        ActivityLogDetails\r\n    ],\r\n    providers: [\r\n        ActivityLogService,\r\n    ]\r\n})\r\nexport class ActivityLogModule { }\r\n","import { ModuleWithProviders } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ActivityLogDetails } from './views/activityLog-details';\r\nimport { ActivityLogList } from './views/activityLog-list';\r\n\r\nexport const activityLogRoutes: Routes = [\r\n   {\r\n      path: 'activityLogs',\r\n      children: [\r\n         { path: '', component: ActivityLogList },\r\n         { path: 'details/:id', component: ActivityLogDetails },\r\n      ]\r\n   },\r\n];\r\n\r\nexport const ActivityLogRouting: ModuleWithProviders = RouterModule.forChild(activityLogRoutes);\r\n","import { DbBaseEntity } from '../../common/models/dbBaseEntity';\r\n\r\nexport class ActivityLog extends DbBaseEntity {\r\n    loginId: string;\r\n    sourceIP: string;\r\n    application: string;\r\n    module: string;\r\n    action: string;\r\n    activityOn: string;\r\n    otherInfo: string;\r\n    webServer: string;\r\n    browser: string;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient, HttpParams } from \"@angular/common/http\";\r\n\r\nimport { ServiceResponse } from '../../common/models/serviceResponse';\r\nimport { PaginationRequest, SortOrder } from '../../common/models/paginationRequest';\r\nimport { PaginationResponse } from '../../common/models/paginationResponse';\r\n\r\n@Injectable()\r\nexport class ActivityLogService {\r\n\r\n   getActivityLogsApi = 'ActivityLogs/GetActivityLogs/';\r\n   getActivityLogApi = 'ActivityLogs/GetActivityLog/';\r\n\r\n   constructor(private http: HttpClient) { }\r\n\r\n   getActivityLogs(paginationRequest?: PaginationRequest): Observable<PaginationResponse> {\r\n\r\n      if (paginationRequest == null)\r\n         paginationRequest = {\r\n            page: null,\r\n            pageSize: null,\r\n            filter: null,\r\n            order: {\r\n               orderByProperty: \"ActivityOn\",\r\n               sortOrder: SortOrder.descending\r\n            }\r\n         };\r\n\r\n      return this.http.post<PaginationResponse>(this.getActivityLogsApi, paginationRequest);\r\n   }\r\n\r\n   getActivityLog(activityLogId): Observable<ServiceResponse> {\r\n\r\n      const params = new HttpParams()\r\n         .set('activityLogId', activityLogId);\r\n\r\n      return this.http.get<ServiceResponse>(this.getActivityLogApi, { params });\r\n   }\r\n\r\n   //LogActivity(activityLog: ActivityLog): Observable<ServiceResponse> {\r\n   //   return this.http.post<ServiceResponse>(this.LogActivityApi, activityLog);\r\n   //}\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\n\r\nimport { ActivityLogService } from '../services/activityLog.service';\r\nimport { ActivityLog } from '../models/activityLog';\r\nimport { Helper } from '../../common/helper';\r\n\r\ndeclare var $: any;\r\n\r\n@Component({\r\n   templateUrl: './activityLog-details.html',\r\n   providers: [ActivityLogService],\r\n})\r\nexport class ActivityLogDetails implements OnInit {\r\n\r\n   activityLogId: string = \"\";\r\n   activityLog: ActivityLog = new ActivityLog();\r\n   module_function: string = \"\";\r\n   otherInfo: string = \"\";\r\n\r\n   constructor(\r\n      private location: Location,\r\n      private route: ActivatedRoute,\r\n      private activityLogService: ActivityLogService,\r\n      private helper: Helper) { }\r\n\r\n\r\n   ngOnInit() {\r\n      this.route.params.subscribe(\r\n         params => {\r\n            this.activityLogId = params['id'];\r\n\r\n            this.getFormData(this.activityLogId);\r\n         });\r\n   }\r\n\r\n   getFormData(activityLogId: string) {\r\n\r\n      $(\"#ajax-loading\").show();\r\n\r\n      this.activityLogService.getActivityLog(activityLogId).subscribe(\r\n         resp => {\r\n            if (resp.status.toLowerCase() == \"error\") {\r\n               this.helper.showAlertMessage(resp.message, \"error\");\r\n            }\r\n            else {\r\n               if (resp.data != null) {\r\n                  this.activityLog = resp.data;\r\n                  this.module_function = this.activityLog.module + \" / \" + this.activityLog.action;\r\n                  this.otherInfo = JSON.stringify(JSON.parse(this.activityLog.otherInfo), undefined, 3);\r\n               }\r\n            }\r\n\r\n            $(\"#ajax-loading\").hide();\r\n         },\r\n         (err) => {\r\n            $(\"#ajax-loading\").hide();\r\n            this.helper.showAlertMessage(\"Error fetching activity log.\", \"error\");\r\n         });\r\n   }\r\n\r\n   goBack(): void {\r\n      this.location.back();\r\n   }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Helper } from '../../common/helper';\r\nimport { SearchFilter, SortOrder } from '../../common/models/paginationRequest';\r\nimport { SearchField } from '../../common/models/SearchField';\r\nimport { ActivityLog } from '../models/activityLog';\r\nimport { ActivityLogService } from '../services/activityLog.service';\r\n\r\ndeclare var $: any;\r\n\r\n@Component({\r\n    templateUrl: './activityLog-list.html',\r\n    providers: [ActivityLogService]\r\n})\r\n\r\nexport class ActivityLogList implements OnInit {\r\n\r\n    activityLogs = new Array<ActivityLog>();\r\n    statusMessage: string = \"\";\r\n    pageSize = 10;\r\n    currentPage = 1;\r\n    totalPages = 1;\r\n    searchFields: SearchField[];\r\n    searchFilter: SearchFilter;\r\n    //selectedField: SearchField;\r\n    //filterPills: Filter[];\r\n    //searchText: string;\r\n    sortColumn: string;\r\n    sortOrder: SortOrder = SortOrder.descending;\r\n    previousElement: HTMLElement;\r\n    //conditionOption: boolean = true;\r\n\r\n    constructor(\r\n        private activityLogService: ActivityLogService,\r\n        private helper: Helper) {\r\n\r\n        this.searchFields = new Array<SearchField>();\r\n        this.searchFields.push({ field: 'ActivityOn', label: 'Activity Date', dataType: \"date\", value: \"\" });\r\n        this.searchFields.push({ field: 'LoginId', label: 'Accessed By', dataType: \"text\", value: \"\" });\r\n        this.searchFields.push({ field: 'SourceIP', label: 'Source IP', dataType: \"text\", value: \"\" });\r\n        this.searchFields.push({ field: 'Application', label: 'Application', dataType: \"text\", value: \"\" });\r\n        this.searchFields.push({ field: 'Module', label: 'Module', dataType: \"text\", value: \"\" });\r\n        this.searchFields.push({ field: 'Action', label: 'Action', dataType: \"text\", value: \"\" });\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.statusMessage = \"Loading activity logs...\";\r\n        this.pageSize = 10;\r\n        this.currentPage = 1;\r\n        this.sortColumn = null;\r\n        this.sortOrder = SortOrder.noSort;\r\n\r\n        this.getFormData();\r\n    }\r\n\r\n    getFormData() {\r\n\r\n        $(\"#ajax-loading\").show();\r\n\r\n        this.totalPages = 1;\r\n\r\n        let paginationRequest = {\r\n            page: this.currentPage,\r\n            pageSize: this.pageSize,\r\n            filter: this.searchFilter,\r\n            order: {\r\n                orderByProperty: this.sortColumn,\r\n                sortOrder: this.sortOrder\r\n            }\r\n        };\r\n\r\n        this.activityLogService.getActivityLogs(paginationRequest).subscribe(\r\n            resp => {\r\n                this.activityLogs = null;\r\n                if (resp.status.toLowerCase() == \"error\") {\r\n                    this.statusMessage = resp.message;\r\n                    this.helper.showAlertMessage(this.statusMessage, \"error\");\r\n                }\r\n                else {\r\n                    if (resp.data != null && resp.data.length > 0) {\r\n                        this.activityLogs = resp.data;\r\n                        this.totalPages = Math.ceil(resp.recordCount / this.pageSize);\r\n                    }\r\n                    else {\r\n                        this.statusMessage = \"There are no activity logs generated.\";\r\n                    }\r\n                }\r\n\r\n                $(\"#ajax-loading\").hide();\r\n            },\r\n            (err) => {\r\n                $(\"#ajax-loading\").hide();\r\n                this.activityLogs = null;\r\n                let msg = `Unable to fetch activity logs : ${err.message}`;\r\n                this.helper.showAlertMessage(msg, \"error\");\r\n                this.statusMessage = \"Error fetching activity logs.\";\r\n            });\r\n\r\n    }\r\n\r\n    //setSearchField(searchField: any) {\r\n    //    this.selectedField = searchField;\r\n    //    this.searchText = '';\r\n    //}\r\n\r\n    //search() {\r\n\r\n    //    this.clearSearch();\r\n    //    this.searchFields.forEach(x => x.value = '');\r\n\r\n    //    if (this.searchText.trim() != \"\") {\r\n    //        if (this.selectedField.dataType == 'date') {\r\n    //            this.searchFilter.filters.push({\r\n    //                propertyName: this.selectedField.field,\r\n    //                operator: Operator.greaterThanOrEqual,\r\n    //                value: new Date(this.searchText).toISOString(),\r\n    //                caseSensitive: false\r\n    //            });\r\n    //            this.searchFilter.filters.push({\r\n    //                propertyName: this.selectedField.field,\r\n    //                operator: Operator.lessThan,\r\n    //                value: this.helper.addDays(new Date(this.searchText), 1).toISOString(),\r\n    //                caseSensitive: false\r\n    //            });\r\n    //        }\r\n    //        else {\r\n    //            this.searchFilter.filters.push({\r\n    //                propertyName: this.selectedField.field,\r\n    //                operator: Operator.contains,\r\n    //                value: this.searchText,\r\n    //                caseSensitive: false\r\n    //            });\r\n    //        }\r\n    //    }\r\n\r\n    //    this.getFormData();\r\n    //}\r\n\r\n    //advancedSearch() {\r\n\r\n    //    this.clearSearch();\r\n    //    this.searchText = \"\";\r\n\r\n    //    for (var i = 0; i < this.searchFields.length; i++) {\r\n    //        if (this.searchFields[i].value) {\r\n\r\n    //            if (this.searchFields[i].dataType == 'date') {\r\n    //                this.searchFilter.filters.push({\r\n    //                    propertyName: this.searchFields[i].field,\r\n    //                    operator: Operator.greaterThanOrEqual,\r\n    //                    value: new Date(this.searchFields[i].value).toISOString(),\r\n    //                    caseSensitive: false\r\n    //                });\r\n    //                this.searchFilter.filters.push({\r\n    //                    propertyName: this.searchFields[i].field,\r\n    //                    operator: Operator.lessThan,\r\n    //                    value: this.helper.addDays(new Date(this.searchFields[i].value), 1).toISOString(),\r\n    //                    caseSensitive: false\r\n    //                });\r\n    //            }\r\n    //            else {\r\n    //                this.searchFilter.filters.push({\r\n    //                    propertyName: this.searchFields[i].field,\r\n    //                    operator: Operator.contains,\r\n    //                    value: this.searchFields[i].value,\r\n    //                    caseSensitive: false\r\n    //                });\r\n    //            }\r\n    //            //let operator = this.searchFields[i].dataType == 'date' ? Operator.equals : Operator.contains\r\n    //            //this.searchFilter.filters.push({\r\n    //            //    propertyName: this.searchFields[i].field,\r\n    //            //    operator: operator,\r\n    //            //    value: this.searchFields[i].value,\r\n    //            //    caseSensitive: false\r\n    //            //});\r\n    //        }\r\n    //    }\r\n\r\n    //    this.getFormData();\r\n    //}\r\n\r\n    search(searchFilter) {\r\n\r\n        this.searchFilter = searchFilter;\r\n        this.getFormData();\r\n    }\r\n\r\n    onPageSizeChange(pageSize) {\r\n        this.pageSize = pageSize;\r\n        this.getFormData();\r\n    }\r\n\r\n    onPageChange(currentPage) {\r\n        this.currentPage = currentPage;\r\n        this.getFormData();\r\n    }\r\n\r\n    onColumnClick(e: HTMLElement) {\r\n\r\n        if (this.previousElement && e.getAttribute('data-column') != this.previousElement.getAttribute('data-column')) {\r\n            this.previousElement.classList.remove('table-sorter-desc');\r\n            this.previousElement.classList.remove('table-sorter-asc');\r\n        }\r\n\r\n        this.previousElement = e;\r\n\r\n        this.sortColumn = e.getAttribute('data-column');\r\n\r\n        if (e.classList.contains(\"table-sorter-asc\")) {\r\n            e.classList.remove('table-sorter-asc');\r\n            e.classList.add('table-sorter-desc');\r\n            this.sortOrder = SortOrder.descending;\r\n        }\r\n        else if (e.classList.contains(\"table-sorter-desc\")) {\r\n            e.classList.remove('table-sorter-desc');\r\n            this.sortColumn = null;\r\n            this.sortOrder = SortOrder.noSort;\r\n        }\r\n        else {\r\n            e.classList.add('table-sorter-asc');\r\n            this.sortOrder = SortOrder.ascending;\r\n        }\r\n\r\n\r\n        this.getFormData();\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { AuthService } from './common/auth/auth.service';\r\nimport { LoginUser } from './common/models/loginUser';\r\nimport { Helper } from './common/helper';\r\n\r\nconst STORE_KEY = 'NERP_Admin_LastAction';\r\nconst MINUTES_UNITL_AUTO_LOGOUT = 60 // in mins\r\nconst CHECK_INTERVAL = 15000 // in ms\r\n\r\n@Component({\r\n    selector: 'app-root',\r\n    templateUrl: './app.component.html'\r\n})\r\nexport class AppComponent implements OnInit {\r\n\r\n    loginUser: LoginUser;\r\n\r\n    constructor(\r\n        private authService: AuthService,\r\n        private helperService: Helper) {\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n        this.loginUser = new LoginUser();\r\n\r\n        this.getFormData();\r\n\r\n        this.initListener();\r\n        this.initInterval();\r\n    }\r\n\r\n    getFormData() {\r\n\r\n        this.loginUser = new LoginUser();\r\n\r\n    this.authService.getLoginUserProfile().subscribe(\r\n      res => {\r\n        if (res.data && res.status.toLowerCase() == \"ok\") {\r\n          this.loginUser = res.data;\r\n                    this.authService.loginUser = this.loginUser;\r\n        }\r\n                else {\r\n          this.helperService.showAlertMessage(res.message, \"error\");\r\n                    this.onLogout();\r\n                }\r\n            },\r\n            err => {\r\n                this.helperService.showAlertMessage(err.message, 'error');\r\n                this.onLogout();\r\n            },\r\n        );\r\n    }\r\n\r\n    initListener() {\r\n        document.body.addEventListener('click', () => this.reset());\r\n        document.body.addEventListener('mouseover', () => this.reset());\r\n        document.body.addEventListener('mouseout', () => this.reset());\r\n        document.body.addEventListener('keydown', () => this.reset());\r\n        document.body.addEventListener('keyup', () => this.reset());\r\n        document.body.addEventListener('keypress', () => this.reset());\r\n    }\r\n\r\n    reset() {\r\n        this.setLastAction(Date.now());\r\n    }\r\n\r\n    public getLastAction() {\r\n        return parseInt(localStorage.getItem(STORE_KEY));\r\n    }\r\n\r\n    public setLastAction(lastAction: number) {\r\n        localStorage.setItem(STORE_KEY, lastAction.toString());\r\n    }\r\n\r\n    initInterval() {\r\n        setInterval(() => {\r\n            this.check();\r\n        }, CHECK_INTERVAL);\r\n    }\r\n\r\n    check() {\r\n        const now = Date.now();\r\n        const timeleft = this.getLastAction() + MINUTES_UNITL_AUTO_LOGOUT * 60 * 1000;\r\n        const diff = timeleft - now;\r\n        const isTimeout = diff < 0;\r\n\r\n        if (isTimeout) {\r\n            localStorage.clear();\r\n            this.onLogout();\r\n        }\r\n    }\r\n\r\n    onLogout() {\r\n        localStorage.removeItem('NERP-Admin-token');\r\n        //this.router.navigate(['/login']);\r\n        window.location.href = '/Auth/Logout';\r\n  }\r\n  \r\n    getFeatureAccess(featureCode: string): boolean {\r\n        return this.authService.getFeatureAccess(featureCode);\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport 'hammerjs';\r\nimport { Routing } from './app.routing';\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { CacheInterceptor } from './common/interceptors/cacheInterceptor';\r\nimport { AuthService } from './common/auth/auth.service';\r\n\r\nimport { Dashboard } from './dashboard/views/dashboard';\r\nimport { GroupModule } from './groups/group.module';\r\nimport { RoleModule } from './roles/role.module';\r\nimport { UserModule } from './users/user.module';\r\nimport { EntitiesModule } from './entities/entities.module';\r\nimport { LayerModule } from './layers/layer.module';\r\nimport { AccessoryModule } from './accessories/accessory.module';\r\nimport { CivilworkModule } from './civilworks/civilwork.module';\r\nimport { GeneralSettingsModule } from './generalSettings/generalSettings.module';\r\nimport { ActivityLogModule } from './activityLogs/activityLog.module';\r\nimport { Helper } from './common/helper';\r\nimport { DTSearch } from './components/data-table/dt-search';\r\nimport { DTPagination } from './components/data-table/dt-pagination';\r\nimport { SharedModule } from 'primeng/components/common/shared';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent,\r\n        Dashboard,\r\n    ],\r\n    imports: [\r\n        BrowserModule,\r\n        BrowserAnimationsModule,\r\n        HttpClientModule,\r\n        Routing,\r\n        FormsModule,\r\n\r\n        GroupModule,\r\n        RoleModule,\r\n        UserModule,\r\n        EntitiesModule,\r\n        LayerModule,\r\n        AccessoryModule,\r\n        CivilworkModule,\r\n        GeneralSettingsModule,\r\n        ActivityLogModule,\r\n\r\n    ],\r\n\r\n    providers: [\r\n        AuthService,\r\n        Helper,\r\n        { provide: HTTP_INTERCEPTORS, useClass: CacheInterceptor, multi: true }\r\n    ],\r\n\r\n    bootstrap: [AppComponent]\r\n\r\n})\r\nexport class AppModule { }\r\n","import { Routes, RouterModule } from '@angular/router';\r\nimport { Dashboard } from './dashboard/views/dashboard';\r\n\r\nconst appRoutes: Routes = [\r\n    { path: '', redirectTo: 'home', pathMatch: 'full' },\r\n    { path: 'home', component: Dashboard },\r\n    {\r\n        path: 'groups',\r\n        loadChildren: () => import('./groups/group.module').then(m => m.GroupModule)\r\n    },\r\n    {\r\n        path: 'roles',\r\n        loadChildren: () => import('./roles/role.module').then(m => m.RoleModule)\r\n    },\r\n    {\r\n        path: 'users',\r\n        loadChildren: () => import('./users/user.module').then(m => m.UserModule)\r\n    },\r\n    {\r\n        path: 'entities',\r\n        loadChildren: () => import('./entities/entities.module').then(a => a.EntitiesModule)\r\n    },\r\n    {\r\n        path: 'accessories',\r\n        loadChildren: () => import('./accessories/accessory.module').then(a => a.AccessoryModule)\r\n    },\r\n    {\r\n        path: 'civilworks',\r\n        loadChildren: () => import('./civilworks/civilwork.module').then(a => a.CivilworkModule)\r\n    },\r\n    {\r\n        path: 'layers',\r\n        loadChildren: () => import('./layers/layer.module').then(a => a.LayerModule)\r\n    },\r\n    {\r\n        path: 'generalSettings',\r\n        loadChildren: () => import('./generalSettings/generalSettings.module').then(a => a.GeneralSettingsModule)\r\n    },\r\n    {\r\n        path: 'activityLogs',\r\n        loadChildren: () => import('./activityLogs/activityLog.module').then(a => a.ActivityLogModule)\r\n    }\r\n];\r\n\r\nexport const Routing = RouterModule.forRoot(appRoutes);\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatCheckboxModule, MatRadioModule, MatSelectModule, MatSliderModule } from '@angular/material';\r\nimport { SharedModule } from '../shared.module';\r\nimport { CivilworkRouting } from './civilwork.routes';\r\nimport { CivilworkService } from './services/civilwork.service';\r\nimport { CivilworkDetails } from './views/civilwork-details';\r\nimport { CivilworkList } from './views/civilwork-list';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        MatRadioModule, MatSelectModule, MatCheckboxModule, MatSliderModule,\r\n        CivilworkRouting,\r\n        SharedModule\r\n    ],\r\n    declarations: [\r\n        CivilworkList,\r\n        CivilworkDetails,\r\n    ],\r\n    providers: [\r\n        CivilworkService,\r\n\r\n    ]\r\n})\r\nexport class CivilworkModule { }\r\n","import { ModuleWithProviders } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { CivilworkDetails } from './views/civilwork-details';\r\nimport { CivilworkList } from './views/civilwork-list';\r\n\r\nexport const civilworkRoutes: Routes = [\r\n    {\r\n        path: 'civilworks',\r\n        children: [\r\n            { path: '', component: CivilworkList },\r\n            { path: 'details', component: CivilworkDetails },\r\n            { path: 'details/:id', component: CivilworkDetails }\r\n        ]\r\n    },\r\n];\r\n\r\nexport const CivilworkRouting: ModuleWithProviders = RouterModule.forChild(civilworkRoutes);\r\n","import { DbBaseEntity } from '../../common/models/dbBaseEntity';\r\nimport { CustomField } from '../../common/models/customField';\r\nimport { FileAttachment } from '../../common/models/FileAttachment';\r\nimport { Supplier } from '../../common/models/supplier';\r\n\r\nexport class Civilwork extends DbBaseEntity {\r\n    name: string;\r\n    code?: string;\r\n    parentId?: string;\r\n    parentEntityType?: string;\r\n    customFields?: CustomField[] = new Array<CustomField>();\r\n    photos?: FileAttachment;\r\n    attachments?: FileAttachment;\r\n    suppliers?: Supplier[] = new Array<Supplier>();\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient, HttpParams } from \"@angular/common/http\";\r\n\r\nimport { Civilwork } from '../models/civilwork';\r\nimport { PaginationRequest, SortOrder } from '../../common/models/paginationRequest';\r\nimport { PaginationResponse } from '../../common/models/paginationResponse';\r\nimport { ServiceResponse } from '../../common/models/serviceResponse';\r\n\r\n@Injectable()\r\nexport class CivilworkService {\r\n\r\n    getCivilworksApi = 'Civilworks/GetCivilworks/';\r\n    getCivilworkApi = 'Civilworks/GetCivilwork/';\r\n    checkNameExistsApi = 'Civilworks/CheckNameExists/';\r\n    saveCivilworkApi = 'Civilworks/SaveCivilwork/';\r\n    deleteCivilworkApi = 'Civilworks/DeleteCivilwork/';\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    getCivilworks(paginationRequest?: PaginationRequest): Observable<PaginationResponse> {\r\n\r\n        if (paginationRequest == null)\r\n            paginationRequest = {\r\n                page: null,\r\n                pageSize: null,\r\n                filter: null,\r\n                order: {\r\n                    orderByProperty: \"name\",\r\n                    sortOrder: SortOrder.descending\r\n                }\r\n            };\r\n\r\n        return this.http.post<PaginationResponse>(this.getCivilworksApi, paginationRequest);\r\n    }\r\n\r\n    getCivilwork(civilworkId): Observable<ServiceResponse> {\r\n\r\n        const params = new HttpParams()\r\n            .set('civilworkId', civilworkId);\r\n\r\n        return this.http.get<ServiceResponse>(this.getCivilworkApi, { params });\r\n    }\r\n\r\n    async checkNameExists(name: string): Promise<ServiceResponse> {\r\n\r\n        const params = new HttpParams()\r\n            .set('name', name);\r\n\r\n        return await this.http.get<ServiceResponse>(this.checkNameExistsApi, { params }).toPromise();\r\n    }\r\n\r\n    saveCivilwork(civilwork: Civilwork): Observable<ServiceResponse> {\r\n\r\n        return this.http.post<ServiceResponse>(this.saveCivilworkApi, civilwork);\r\n    }\r\n\r\n    deleteCivilwork(civilworkId: string): Observable<ServiceResponse> {\r\n\r\n        const params = new HttpParams()\r\n            .set('civilworkId', civilworkId);\r\n\r\n        return this.http.delete<ServiceResponse>(this.deleteCivilworkApi, { params });\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport { forkJoin } from 'rxjs';\r\n\r\nimport { Helper } from '../../common/helper';\r\nimport { CivilworkService } from '../services/civilwork.service';\r\nimport { Civilwork } from '../models/civilwork';\r\n\r\ndeclare var $: any;\r\n\r\n@Component({\r\n    templateUrl: './civilwork-details.html',\r\n    providers: [CivilworkService],\r\n})\r\nexport class CivilworkDetails implements OnInit {\r\n\r\n    civilworkId: string;\r\n    civilwork: Civilwork = new Civilwork();\r\n    title: string = \"New Civilwork\";\r\n\r\n    constructor(\r\n        private location: Location,\r\n        private route: ActivatedRoute,\r\n        private civilworkService: CivilworkService,\r\n        private helper: Helper) { }\r\n\r\n    ngOnInit() {\r\n        this.route.params.subscribe(\r\n            params => {\r\n                this.civilworkId = params['id'];\r\n\r\n                if (this.civilworkId != null)\r\n                    this.title = \"Edit Civilwork\";\r\n                else {\r\n                    this.title = \"New Civilwork\";\r\n                }\r\n\r\n                this.getFormData(this.civilworkId);\r\n\r\n            });\r\n    }\r\n\r\n    getFormData(civilworkId: string) {\r\n\r\n        if (this.civilworkId != null) {\r\n\r\n            $(\"#ajax-loading\").show();\r\n\r\n            this.civilworkService.getCivilwork(this.civilworkId).subscribe(\r\n                resp => {\r\n                    this.civilwork = new Civilwork();\r\n\r\n                    if (resp.status.toLowerCase() == \"error\") {\r\n                        this.helper.showAlertMessage(resp.message, \"error\");\r\n                    }\r\n                    else {\r\n                        if (resp.data != null) {\r\n                            this.civilwork = resp.data;\r\n                        }\r\n                    }\r\n\r\n                    $(\"#ajax-loading\").hide();\r\n                },\r\n                (err) => {\r\n                    $(\"#ajax-loading\").hide();\r\n                    this.civilwork = new Civilwork();\r\n                    this.helper.showAlertMessage(\"Unable to fetch civilwork details\", \"error\");\r\n                });\r\n        }\r\n        else\r\n            this.civilwork = new Civilwork();\r\n    }\r\n\r\n    addNewSupplier() {\r\n\r\n        if (this.civilwork.suppliers == null)\r\n            this.civilwork.suppliers = [];\r\n\r\n        this.civilwork.suppliers.push({\r\n            name: \"\",\r\n            sku: \"\",\r\n            price: null,\r\n            validFrom: \"\",\r\n            validTo: \"\"\r\n        });\r\n    }\r\n\r\n    deleteSupplier(index: number) {\r\n        this.civilwork.suppliers.splice(index, 1);\r\n    }\r\n\r\n    async save() {\r\n\r\n        var errorMessages = await this.validateEntity(this.civilwork);\r\n\r\n        if (errorMessages.length == 0) {\r\n\r\n            this.civilworkService.saveCivilwork(this.civilwork).subscribe(\r\n                resp => {\r\n\r\n                    if (resp.status.toLowerCase() == \"error\") {\r\n                        this.helper.showAlertMessage(resp.message, \"error\");\r\n                    }\r\n                    else {\r\n                        if (resp.data != null) {\r\n                            this.helper.showAlertMessage(\"Civilwork information saved\", \"success\");\r\n                            this.goBack();\r\n                        }\r\n                        else\r\n                            this.helper.showAlertMessage(\"Unable to save civilwork information.\", \"error\");\r\n                    }\r\n                },\r\n                (err) => {\r\n                    //let msg = `Unable to save user information : ${err.message}`;\r\n                    this.helper.showAlertMessage(\"Unable to save civilwork information.\", \"error\");\r\n                });\r\n        }\r\n        else {\r\n            this.helper.showAlertMessage(this.helper.getErrorMessagesText(errorMessages), \"error\");\r\n        }\r\n    }\r\n\r\n    async validateEntity(civilwork: Civilwork): Promise<string[]> {\r\n        var errorMessages = [];\r\n\r\n        if (civilwork.name == null || civilwork.name.trim() == '')\r\n            errorMessages.push(\"Name cannot be empty.\");\r\n        else {\r\n           if (civilwork.id == undefined) {\r\n              let resp = await this.civilworkService.checkNameExists(civilwork.name);\r\n\r\n              if (resp.message=='false')\r\n                 errorMessages.push(\"Name already exists.\");\r\n           }\r\n        }\r\n\r\n        return errorMessages;\r\n    }\r\n\r\n    goBack(): void {\r\n        this.location.back();\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { Civilwork } from '../models/civilwork';\r\nimport { CivilworkService } from '../services/civilwork.service';\r\nimport { Helper } from '../../common/helper';\r\nimport { SortOrder, SearchFilter, ConditionOperator, Operator, Filter } from '../../common/models/paginationRequest';\r\nimport { SearchField } from '../../common/models/SearchField';\r\n\r\ndeclare var $: any;\r\ndeclare var jBox: any;\r\n\r\n@Component({\r\n    templateUrl: './civilwork-list.html',\r\n    providers: [CivilworkService]\r\n})\r\nexport class CivilworkList implements OnInit {\r\n\r\n    civilworks = new Array<Civilwork>();\r\n    statusMessage: string = \"\";\r\n    pageSize = 10;\r\n    currentPage = 1;\r\n    totalPages = 1;\r\n    searchFields: SearchField[];\r\n    searchFilter: SearchFilter;\r\n    sortColumn: string;\r\n    sortOrder: SortOrder = SortOrder.descending;\r\n    previousElement: HTMLElement;\r\n\r\n    constructor(\r\n        private civilworkService: CivilworkService,\r\n        private helper: Helper) {\r\n\r\n        this.searchFields = new Array<SearchField>();\r\n        this.searchFields.push({ field: 'Name', label: 'Name', dataType: \"text\", value: \"\" });\r\n        this.searchFields.push({ field: 'parentEntityType', label: 'Parent Type', dataType: \"text\", value: \"\" });\r\n        this.searchFields.push({ field: 'UpdatedBy', label: 'Updated By', dataType: \"text\", value: \"\" });\r\n        this.searchFields.push({ field: 'UpdatedDate', label: 'Updated On', dataType: \"date\", value: \"\" });\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.statusMessage = \"Loading Civilworks...\";\r\n        this.pageSize = 10;\r\n        this.currentPage = 1;\r\n        this.sortColumn = null;\r\n        this.sortOrder = SortOrder.noSort;\r\n        this.getFormData();\r\n    }\r\n\r\n    getFormData() {\r\n\r\n        $(\"#ajax-loading\").show();\r\n\r\n        this.totalPages = 1;\r\n\r\n        let paginationRequest = {\r\n            page: this.currentPage,\r\n            pageSize: this.pageSize,\r\n            filter: this.searchFilter,\r\n            order: {\r\n                orderByProperty: this.sortColumn,\r\n                sortOrder: this.sortOrder\r\n            }\r\n        };\r\n\r\n        this.civilworkService.getCivilworks(paginationRequest).subscribe(\r\n            resp => {\r\n                this.civilworks = null;\r\n\r\n                if (resp.status.toLowerCase() == \"error\") {\r\n                    this.statusMessage = resp.message;\r\n                    this.helper.showAlertMessage(this.statusMessage, \"error\");\r\n                }\r\n                else {\r\n                    if (resp.data != null && resp.data.length > 0) {\r\n                        this.civilworks = resp.data;\r\n                        this.totalPages = Math.ceil(resp.recordCount / this.pageSize);\r\n                    }\r\n                    else {\r\n                        this.statusMessage = \"There are no registered civilworks.\";\r\n                    }\r\n                }\r\n\r\n                $(\"#ajax-loading\").hide();\r\n            },\r\n            (err) => {\r\n                $(\"#ajax-loading\").hide();\r\n                this.civilworks = null;\r\n                let msg = `Unable to fetch civilworks : ${err.message}`;\r\n                this.helper.showAlertMessage(msg, \"error\");\r\n                this.statusMessage = \"Error fetching civilworks.\";\r\n            });\r\n    }\r\n\r\n    search(searchFilter) {\r\n\r\n        this.searchFilter = searchFilter;\r\n        this.getFormData();\r\n    }\r\n\r\n    onPageSizeChange(pageSize) {\r\n        this.pageSize = pageSize;\r\n        this.getFormData();\r\n    }\r\n\r\n    onPageChange(currentPage) {\r\n        this.currentPage = currentPage;\r\n        this.getFormData();\r\n    }\r\n\r\n    onColumnClick(e: HTMLElement) {\r\n\r\n        if (this.previousElement && e.getAttribute('data-column') != this.previousElement.getAttribute('data-column')) {\r\n            this.previousElement.classList.remove('table-sorter-desc');\r\n            this.previousElement.classList.remove('table-sorter-asc');\r\n        }\r\n\r\n        this.previousElement = e;\r\n\r\n        this.sortColumn = e.getAttribute('data-column');\r\n\r\n        if (e.classList.contains(\"table-sorter-asc\")) {\r\n            e.classList.remove('table-sorter-asc');\r\n            e.classList.add('table-sorter-desc');\r\n            this.sortOrder = SortOrder.descending;\r\n        }\r\n        else if (e.classList.contains(\"table-sorter-desc\")) {\r\n            e.classList.remove('table-sorter-desc');\r\n            this.sortColumn = null;\r\n            this.sortOrder = SortOrder.noSort;\r\n        }\r\n        else {\r\n            e.classList.add('table-sorter-asc');\r\n            this.sortOrder = SortOrder.ascending;\r\n        }\r\n\r\n        this.getFormData();\r\n    }\r\n\r\n    delete(civilwork: Civilwork) {\r\n        new jBox(\"Confirm\", {\r\n            minWidth: 500,\r\n            minHeight: 70,\r\n            title: \"<b>Delete Civilwork</b>\",\r\n            overlay: false,\r\n            content: \"Do you want to delete civilwork - \" + civilwork.name,\r\n            draggable: \"title\",\r\n            confirmButton: \"Yes\",\r\n            cancelButton: \"No\",\r\n            confirm: () => {\r\n                this.civilworkService.deleteCivilwork(civilwork.id).subscribe(\r\n                    resp => {\r\n                        if (resp.status.toLowerCase() == \"error\") {\r\n                            this.helper.showAlertMessage(resp.message, \"error\");\r\n                        }\r\n                        else {\r\n                            if (resp.data != null) {\r\n                                this.helper.showAlertMessage(\"Civilwork deleted.\", \"success\");\r\n                                this.getFormData();\r\n                            }\r\n                            else {\r\n                                this.helper.showAlertMessage(\"Error deleting civilwork\", \"error\");\r\n                            }\r\n                        }\r\n                    },\r\n                    (err) => {\r\n                        this.helper.showAlertMessage(\"Error deleting civilwork\", \"error\");\r\n                    });\r\n            }\r\n        }).open();\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, of, forkJoin } from 'rxjs';\r\nimport { HttpClient, HttpParams } from \"@angular/common/http\";\r\nimport { ServiceResponse } from '../models/serviceResponse';\r\nimport { LoginUser } from '../models/loginUser';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n\r\n    constructor(private http: HttpClient) { }\r\n    loginUser: LoginUser;\r\n\r\n    authenticateUser(loginCredentials: any): Observable<ServiceResponse> {\r\n\r\n        return this.http.post<ServiceResponse>('/Auth/Authenticate', loginCredentials);\r\n    }\r\n\r\n    getLoginUserProfile(): Observable<ServiceResponse> {\r\n\r\n        return this.http.get<ServiceResponse>('/Auth/GetLoginUserProfile');\r\n    }\r\n\r\n    getFeatureAccess(featureCode: string) {\r\n        if (this.loginUser)\r\n            return this.loginUser.features.includes(featureCode);\r\n        else\r\n            return false;\r\n    }\r\n\r\n    getFunctionalityAccess(permissionCode: string) {\r\n\r\n        if (this.loginUser)\r\n            return this.loginUser.permissions.includes(permissionCode);\r\n        else\r\n            return false;\r\n    }\r\n\r\n    //getLoginUser(force: boolean = false): any {\r\n\r\n    //    if (force !== true && this.loginUser)\r\n    //        return of(this.loginUser) as Observable<LoginUser>;\r\n\r\n    //    let usersSvc = this.http.get<ServiceResponse>(\"/Auth/GetLoginUserProfile\");\r\n    //    let rolesSvc = this.http.get<ServiceResponse>(\"Roles/GetRoles\");\r\n\r\n    //    return forkJoin(\r\n    //        usersSvc.pipe(map(resp => { this.loginUser = resp.data; return this.loginUser; })),\r\n    //        rolesSvc.pipe(map(resp => { this.roles = resp.data; })),\r\n    //    );\r\n    //}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { SearchField } from './models/SearchField';\r\nimport { SearchFilter, Filter, Operator, ConditionOperator } from './models/paginationRequest';\r\n\r\ndeclare var toastr: any;\r\n\r\n@Injectable()\r\nexport class Helper {\r\n\r\n    constructor() { }\r\n\r\n    showAlertMessage(message: string, alertType: string) {\r\n\r\n        if (alertType == \"error\") {\r\n            toastr.options = {\r\n                \"closeButton\": true,\r\n                \"timeOut\": 3000,\r\n                \"preventDuplicates\": true,\r\n                \"extendedTimeOut\": 1000,\r\n                \"positionClass\": \"toast-top-center\",\r\n            }\r\n            toastr.error(message, \"Error\").attr('style', 'width: 400px !important');\r\n        }\r\n        else if (alertType == \"success\") {\r\n            toastr.options = {\r\n                \"closeButton\": false,\r\n                \"timeOut\": 3000,\r\n                \"extendedTimeOut\": 1000,\r\n                \"positionClass\": \"toast-top-center\",\r\n            }\r\n            toastr.success(message).attr('style', 'width: 400px !important');\r\n        }\r\n        else if (alertType == \"info\") {\r\n            toastr.options = {\r\n                \"closeButton\": false,\r\n                \"timeOut\": 5000,\r\n                \"extendedTimeOut\": 1000,\r\n                \"positionClass\": \"toast-top-center\",\r\n            }\r\n            toastr.info(message).attr('style', 'width: 400px !important');\r\n        }\r\n    }\r\n\r\n    formatBytes(bytes: number, decimals: number) {\r\n        if (bytes == 0) return '0 Bytes';\r\n        var k = 1024,\r\n            dm = decimals || 2,\r\n            sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'],\r\n            i = Math.floor(Math.log(bytes) / Math.log(k));\r\n\r\n        return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\r\n    }\r\n\r\n    popupCenter(url, title, w, h) {\r\n        // Fixes dual-screen position Most browsers Firefox\r\n        var dualScreenLeft = window.screenLeft;\r\n        var dualScreenTop = window.screenTop;\r\n\r\n        var width = window.innerWidth ? window.innerWidth : document.documentElement.clientWidth ? document.documentElement.clientWidth : screen.width;\r\n        var height = window.innerHeight ? window.innerHeight : document.documentElement.clientHeight ? document.documentElement.clientHeight : screen.height;\r\n\r\n        var left = ((width / 2) - (w / 2)) + dualScreenLeft;\r\n        var top = ((height / 2) - (h / 2)) + dualScreenTop;\r\n        var newWindow = window.open(url, title, 'scrollbars=yes, width=' + w + ', height=' + h + ', top=' + top + ', left=' + left);\r\n\r\n        // Puts focus on the newWindow\r\n        if (window.focus) {\r\n            newWindow.focus();\r\n        }\r\n    }\r\n\r\n    getErrorMessagesText(errorMessages: string[]) {\r\n\r\n        var li = \"\";\r\n\r\n        for (let message of errorMessages) {\r\n            li += \"<li>\" + message + \"</li>\";\r\n        }\r\n\r\n        return \"<ul>\" + li + \"</li>\";\r\n    }\r\n\r\n    compare(a: number | string | boolean, b: number | string | boolean, isAsc: boolean) {\r\n        return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\r\n    }\r\n\r\n    getLastMonths(count) {\r\n        var monthFull = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\n        var monthShort = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\n\r\n        var months = []\r\n        var d = new Date()\r\n        for (var i = 0; i < count; i++) {\r\n            months.push({ \"name\": monthFull[d.getMonth()], \"value\": monthShort[d.getMonth()] });\r\n            d.setMonth(d.getMonth() - 1)\r\n        }\r\n        return months\r\n    }\r\n\r\n    getLastDay(year: number, month: string) {\r\n\r\n        var monthIndex = this.getMonthIndex(month);\r\n\r\n        return new Date(year, monthIndex + 1, 0).getDate();\r\n    }\r\n\r\n    getMonthIndex(month: string) {\r\n\r\n        var monthShort = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\n\r\n        var monthIndex = monthShort.findIndex(x => x == month);\r\n\r\n        return monthIndex;\r\n    }\r\n\r\n    addDays(date, days) {\r\n        var result = new Date(date);\r\n        result.setDate(result.getDate() + days);\r\n        return result;\r\n    }\r\n\r\n    daysBetween(startDate, endDate) {\r\n\r\n        let millisecondsPerDay = 1000 * 60 * 60 * 24;\r\n        let startDateUTC = Date.UTC(startDate.getFullYear(), startDate.getMonth(), startDate.getDate());\r\n        let endDateUTC = Date.UTC(endDate.getFullYear(), endDate.getMonth(), endDate.getDate());\r\n\r\n        return Math.floor((endDateUTC - startDateUTC) / millisecondsPerDay);\r\n    }\r\n\r\n    static getChunks(items: any, chunkSize: number) {\r\n\r\n        var index = 0;\r\n        var arrayLength = items.length;\r\n        var group = [];\r\n\r\n        for (index = 0; index < arrayLength; index += chunkSize) {\r\n            let chunk = items.slice(index, index + chunkSize);\r\n            group.push(chunk);\r\n        }\r\n\r\n        return group;\r\n    }\r\n\r\n    search(selectedField: SearchField, searchText: string, conditionOperator: ConditionOperator): SearchFilter {\r\n\r\n        let searchFilter = null;\r\n\r\n        if (searchText.trim() != \"\") {\r\n\r\n            searchFilter = new SearchFilter();\r\n            searchFilter.conditionOperator = conditionOperator;\r\n            searchFilter.filters = new Array<Filter>();\r\n\r\n            if (selectedField.dataType == 'date') {\r\n                searchFilter.filters.push({\r\n                    propertyName: selectedField.field,\r\n                    operator: Operator.greaterThanOrEqual,\r\n                    value: new Date(searchText).toISOString(),\r\n                    caseSensitive: false\r\n                });\r\n                searchFilter.filters.push({\r\n                    propertyName: selectedField.field,\r\n                    operator: Operator.lessThan,\r\n                    value: this.addDays(new Date(searchText), 1).toISOString(),\r\n                    caseSensitive: false\r\n                });\r\n            }\r\n            else {\r\n                searchFilter.filters.push({\r\n                    propertyName: selectedField.field,\r\n                    operator: Operator.contains,\r\n                    value: searchText,\r\n                    caseSensitive: false\r\n                });\r\n            }\r\n        }\r\n\r\n        return searchFilter\r\n    }\r\n\r\n    advancedSearch(searchFields: SearchField[], conditionOperator: ConditionOperator): SearchFilter {\r\n\r\n        let searchFilter = new SearchFilter();\r\n        searchFilter.conditionOperator = conditionOperator;\r\n        searchFilter.filters = new Array<Filter>();\r\n\r\n        for (var i = 0; i < searchFields.length; i++) {\r\n            if (searchFields[i].value) {\r\n\r\n                if (searchFields[i].dataType == 'date') {\r\n                    searchFilter.filters.push({\r\n                        propertyName: searchFields[i].field,\r\n                        operator: Operator.greaterThanOrEqual,\r\n                        value: new Date(searchFields[i].value).toISOString(),\r\n                        caseSensitive: false\r\n                    });\r\n                    searchFilter.filters.push({\r\n                        propertyName: searchFields[i].field,\r\n                        operator: Operator.lessThan,\r\n                        value: this.addDays(new Date(searchFields[i].value), 1).toISOString(),\r\n                        caseSensitive: false\r\n                    });\r\n                }\r\n                else {\r\n                    searchFilter.filters.push({\r\n                        propertyName: searchFields[i].field,\r\n                        operator: Operator.contains,\r\n                        value: searchFields[i].value,\r\n                        caseSensitive: false\r\n                    });\r\n                }\r\n                //let operator = this.searchFields[i].dataType == 'date' ? Operator.equals : Operator.contains\r\n                //this.searchFilter.filters.push({\r\n                //    propertyName: this.searchFields[i].field,\r\n                //    operator: operator,\r\n                //    value: this.searchFields[i].value,\r\n                //    caseSensitive: false\r\n                //});\r\n            }\r\n        }\r\n\r\n        return searchFilter;\r\n    }\r\n\r\n    generateTree(arr, parentId) {\r\n        var out = []\r\n\r\n        for (var i in arr) {\r\n            arr[i].label = arr[i].name;\r\n\r\n            if (arr[i].parentId == parentId) {\r\n                var children = this.generateTree(arr, arr[i].id)\r\n\r\n                if (children.length) {\r\n                    arr[i].children = children\r\n                }\r\n                out.push(arr[i])\r\n            }\r\n        }\r\n\r\n        return out\r\n    }\r\n\r\n    static generateObjectId() {\r\n        var timestamp = (new Date().getTime() / 1000 | 0).toString(16);\r\n        return timestamp + 'xxxxxxxxxxxxxxxx'.replace(/[x]/g, function () {\r\n            return (Math.random() * 16 | 0).toString(16);\r\n        }).toLowerCase();\r\n    }\r\n\r\n    generateTreeTable(arr, parentId, expanded?: boolean) {\r\n        var out = []\r\n\r\n        for (var i in arr) {\r\n            arr[i].label = arr[i].name;\r\n\r\n            arr[i].data = {\r\n                \"name\": arr[i].name\r\n            };\r\n\r\n            arr[i].expanded = expanded;\r\n\r\n            if (arr[i].parentId == parentId) {\r\n                var children = this.generateTree(arr, arr[i].id);\r\n\r\n                if (children.length) {\r\n                    arr[i].children = children;\r\n                }\r\n                out.push(arr[i]);\r\n            }\r\n        }\r\n\r\n        return out\r\n    }\r\n\r\n    findNode(id, currentNode) {\r\n        var stack = [], node, ii;\r\n        stack.push(currentNode);\r\n\r\n        while (stack.length > 0) {\r\n            node = stack.pop();\r\n            if (node.id == id) {\r\n                return node;\r\n            } else if (node.children && node.children.length) {\r\n                for (ii = 0; ii < node.children.length; ii += 1) {\r\n                    stack.push(node.children[ii]);\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    log(logEntity: any, logType: string, message: string) {\r\n\r\n        logEntity.log = logEntity.log + '\\n' + new Date() + \" [\" + logType + \"] \" + message;\r\n    }\r\n\r\n    isDate(value: any) {\r\n        return (null != value) && !isNaN(value) && (\"undefined\" !== typeof value.getDate);\r\n    }\r\n\r\n    static formatDate(value: any) {\r\n\r\n        var dd = value.getDate();\r\n\r\n        var mm = value.getMonth() + 1;\r\n        var yyyy = value.getFullYear();\r\n\r\n        if (dd < 10) {\r\n            dd = '0' + dd;\r\n        }\r\n\r\n        if (mm < 10) {\r\n            mm = '0' + mm;\r\n        }\r\n\r\n        return dd + '/' + mm + '/' + yyyy;\r\n\r\n    }\r\n\r\n    static groupBy(data, columnName) {\r\n\r\n        //var groupedData;\r\n\r\n        //data.reduce(function (result, current) {\r\n        //    var currentVal = current[columnName];\r\n\r\n        //    result[currentVal] = result[currentVal] || [];\r\n        //    result[currentVal].push(current);\r\n        //    groupedData = result;\r\n        //}, {});\r\n\r\n        //return groupedData;\r\n\r\n        let group = data.reduce((r, a) => {\r\n            r[a[columnName]] = [...r[a[columnName]] || [], a];\r\n            return r;\r\n        }, {});\r\n\r\n        let tempGroups = [];\r\n\r\n        for (var i in group) {\r\n            tempGroups.push(group[i]);\r\n        }\r\n\r\n        return tempGroups;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpHeaders } from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class CacheInterceptor implements HttpInterceptor {\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n    const httpRequest = req.clone({\r\n      headers: new HttpHeaders({\r\n        'Cache-Control': 'no-cache',\r\n        'Pragma': 'no-cache',\r\n        'Expires': 'Sat, 01 Jan 2000 00:00:00 GMT'\r\n      })\r\n    });\r\n\r\n    return next.handle(httpRequest);\r\n  }\r\n}","export class CustomField {\r\n    category: string;\r\n    label: string;\r\n    controlType: ControlType;\r\n    dataType: DataType;\r\n    values: string;\r\n    userValue?: any;\r\n}\r\n\r\nexport enum ControlType {\r\n    TextBox = 1,\r\n    Dropdown = 2,\r\n    Date = 3,\r\n    Radio = 4,\r\n    Checkbox = 5\r\n}\r\n\r\nexport enum DataType {\r\n    String = 1,\r\n    Number = 2,\r\n    Boolean = 3,\r\n    Date = 4\r\n\r\n}\r\n","export class DbBaseEntity {\r\n   id?: string;\r\n   createdBy?: string;\r\n   createdDate?: string;\r\n   updatedBy?: string;\r\n   updatedDate?: string;\r\n}\r\n","export class LoginUser {\r\n    id: string;\r\n    loginId: string;\r\n    name: string;\r\n    features: string[];\r\n    permissions: string[];\r\n    token: string;\r\n}\r\n","export class PaginationRequest {\r\n    page: number;\r\n    pageSize: number;\r\n    filter: SearchFilter;\r\n    order: Order;\r\n}\r\n\r\nexport class SearchFilter {\r\n    conditionOperator: ConditionOperator;\r\n    filters: Filter[];\r\n}\r\n\r\nexport enum ConditionOperator {\r\n    AND,\r\n    OR\r\n}\r\n\r\nexport class Filter {\r\n    propertyName: string;\r\n    operator: Operator;\r\n    value: any;\r\n    caseSensitive: boolean;\r\n}\r\n\r\nexport enum Operator {\r\n    equals,\r\n    greaterThan,\r\n    lessThan,\r\n    greaterThanOrEqual,\r\n    lessThanOrEqual,\r\n    contains,\r\n    startsWith,\r\n    endsWith,\r\n    notEquals\r\n}\r\n\r\nexport class Order {\r\n    orderByProperty: string;\r\n    sortOrder: SortOrder;\r\n}\r\n\r\nexport enum SortOrder {\r\n    ascending = 1,\r\n    descending = -1,\r\n    noSort = 0\r\n}\r\n","import { Component, EventEmitter, Output, Input } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'dt-pagination',\r\n    templateUrl: './dt-pagination.html'\r\n})\r\nexport class DTPagination {\r\n\r\n    @Input() public totalPages: number = 1;\r\n    @Output() onPageSizeChange: EventEmitter<any> = new EventEmitter();\r\n    @Output() onPageChange: EventEmitter<any> = new EventEmitter();\r\n\r\n    pageSize = 10;\r\n    currentPage = 1;\r\n\r\n    constructor() { }\r\n\r\n    ngOnInit() {\r\n        this.pageSize = 10;\r\n        this.currentPage = 1;\r\n    }\r\n\r\n    pageSizeChange() {\r\n        this.onPageSizeChange.emit(this.pageSize);\r\n    }\r\n\r\n    setPage(page: number) {\r\n\r\n        if (page < 1 || page > this.totalPages) {\r\n            return;\r\n        }\r\n\r\n        this.currentPage = page;\r\n\r\n        this.onPageChange.emit(this.currentPage);\r\n    }\r\n}\r\n","import { Component, Input, EventEmitter, Output } from '@angular/core';\r\nimport { SearchField } from '../../common/models/SearchField';\r\nimport { ConditionOperator, SearchFilter, Filter } from '../../common/models/paginationRequest';\r\nimport { Helper } from '../../common/helper';\r\n\r\n@Component({\r\n    selector: 'dt-search',\r\n    templateUrl: './dt-search.html'\r\n})\r\nexport class DTSearch {\r\n\r\n    @Input() public searchFields: SearchField[] = new Array<SearchField>();\r\n    @Output() onSearch: EventEmitter<any> = new EventEmitter();\r\n\r\n    selectedField: SearchField;\r\n    searchText: string;\r\n    searchFilter: SearchFilter;\r\n    filterPills: Filter[];\r\n    conditionOption: boolean = true;\r\n\r\n    constructor(private helper: Helper) { }\r\n\r\n    ngOnInit() {\r\n        this.selectedField = this.searchFields[0];\r\n        this.searchText = \"\";\r\n    }\r\n\r\n    setSearchField(searchField: any) {\r\n        this.selectedField = searchField;\r\n        this.searchText = '';\r\n    }\r\n\r\n    search() {\r\n\r\n        let conditionOption = this.conditionOption ? ConditionOperator.AND : ConditionOperator.OR;\r\n        this.searchFilter = this.helper.search(this.selectedField, this.searchText, conditionOption)\r\n        this.searchFields.forEach(x => x.value = '');\r\n\r\n        this.searchText = '';\r\n        this.populateFilterPills();\r\n\r\n        this.onSearch.emit(this.searchFilter);\r\n    }\r\n\r\n    populateFilterPills() {\r\n\r\n        let filters = new Array<Filter>();\r\n\r\n        this.searchFilter.filters.forEach(x => {\r\n\r\n            var index = filters.findIndex(y => y.propertyName == x.propertyName);\r\n\r\n            let newValue = x.value;\r\n\r\n            if (newValue.includes('T00:00:00.000Z')) {\r\n                newValue = Helper.formatDate(new Date(newValue));\r\n            }\r\n\r\n            if (index < 0) {\r\n                filters.push({\r\n                    operator: x.operator,\r\n                    propertyName: x.propertyName,\r\n                    caseSensitive: false,\r\n                    value: newValue\r\n                });\r\n            }\r\n        });\r\n\r\n        this.filterPills = filters;\r\n    }\r\n\r\n    removeFilter(index: any) {\r\n        if (index >= 0) {\r\n            let filter = this.searchFilter.filters[index];\r\n            this.searchFilter.filters = this.searchFilter.filters.filter(x => x.propertyName != filter.propertyName);\r\n\r\n            this.populateFilterPills();\r\n\r\n            this.onSearch.emit(this.searchFilter);\r\n        }\r\n    }\r\n\r\n    advancedSearch() {\r\n\r\n        let conditionOption = this.conditionOption ? ConditionOperator.AND : ConditionOperator.OR;\r\n        this.searchFilter = this.helper.advancedSearch(this.searchFields, conditionOption)\r\n        this.searchText = \"\";\r\n\r\n        this.onSearch.emit(this.searchFilter);\r\n        this.populateFilterPills();\r\n    }\r\n\r\n    clearSearch() {\r\n        this.searchFilter = this.helper.search(this.selectedField, this.searchText, ConditionOperator.AND)\r\n        this.searchFields.forEach(x => x.value = '');\r\n\r\n        this.onSearch.emit(this.searchFilter);\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient, HttpParams } from \"@angular/common/http\";\r\n\r\n@Injectable()\r\nexport class DashboardService {\r\n\r\n   constructor(private http: HttpClient) { }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { forkJoin } from 'rxjs';\r\n\r\nimport { DashboardService } from '../services/dashboard.service';\r\n\r\ndeclare var $: any;\r\ndeclare var echarts: any;\r\n\r\n@Component({\r\n   templateUrl: './dashboard.html',\r\n   providers: [DashboardService],\r\n})\r\nexport class Dashboard implements OnInit {\r\n\r\n   constructor(\r\n      private dashboardService: DashboardService) { }\r\n\r\n   ngOnInit() {\r\n      //this.getFormData();\r\n   }\r\n\r\n   getFormData() {\r\n\r\n      //$(\"#ajax-loading\").show();\r\n\r\n      //let taskSummarySvc = this.reportsService.getTaskSummary();\r\n      //let realTimeSummarySvc = this.reportsService.getRealTimeSummary();\r\n\r\n      //forkJoin([taskSummarySvc, realTimeSummarySvc]).subscribe(\r\n      //   async results => {\r\n      //      var roles=[]\r\n      //      if (results[0] && results[0].data) {\r\n      //         this.taskSummary = results[0].data;\r\n      //      }\r\n\r\n      //      if (results[1] && results[1].data) {\r\n      //         //this.eDeliverySummary = results[1].data;\r\n      //         //this.showRealTimeSummaryChart();\r\n      //      }\r\n\r\n      //      //await new Promise(resolve => {\r\n      //      //   setTimeout(() => {\r\n      //      //      roles = this.accountService.roles;\r\n      //      //      resolve();\r\n      //      //   }, 100);\r\n      //      //});\r\n\r\n          \r\n      //      var loginUser = this.accountService.loginUser;\r\n\r\n      //      this.userRole = roles.find(x => x.id.toLowerCase() == loginUser.role.toLowerCase());\r\n\r\n      //      $(\"#ajax-loading\").hide();\r\n\r\n      //   },\r\n      //   error => {\r\n      //      $(\"#ajax-loading\").hide();\r\n      //   });\r\n   }\r\n\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { CustomField, ControlType, DataType } from '../../common/models/customField';\r\n\r\n@Component({\r\n    selector: 'custom-fields',\r\n    templateUrl: './custom-fields.html'\r\n})\r\nexport class CustomFields {\r\n\r\n    @Input() public customFields: CustomField[] = new Array <CustomField>();\r\n\r\n    constructor() { }\r\n\r\n    addCustomField() {\r\n\r\n        if (this.customFields == null)\r\n            this.customFields = [];\r\n\r\n        this.customFields.push({\r\n            category: \"\",\r\n            label: \"\",\r\n            controlType: ControlType.TextBox,\r\n            dataType: DataType.String,\r\n            values: \"\"\r\n        });\r\n    }\r\n\r\n    deleteCustomField(index: number) {\r\n        this.customFields.splice(index, 1);\r\n    }\r\n\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { Supplier } from '../../common/models/supplier';\r\n\r\n@Component({\r\n    selector: 'suppliers',\r\n    templateUrl: './supplier.html'\r\n})\r\nexport class SupplierComponent {\r\n\r\n    @Input() public supplierList: Supplier[] = new Array <Supplier>();\r\n\r\n   constructor() { }\r\n   checked: true;\r\n    addNewSupplier() {\r\n\r\n        if (this.supplierList == null)\r\n            this.supplierList = [];\r\n\r\n       this.supplierList.push(\r\n          {\r\n            name: \"\",\r\n            sku: \"\",\r\n            price: null,\r\n            validFrom: \"\",\r\n           validTo: \"\",\r\n           default: \"\"\r\n          }\r\n       );\r\n       console.log(this.supplierList);\r\n    }\r\n\r\n    deleteSupplier(index: number) {\r\n        this.supplierList.splice(index, 1);\r\n    }\r\n\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { temaplateinfo } from '../../common/models/templateinfo';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n   selector: 'templateinfo',\r\n   templateUrl: './templateinfo.html'\r\n})\r\nexport class templateinfoComponent {\r\n\r\n   @Input() public template: temaplateinfo[] = new Array<temaplateinfo>();\r\n   @Input() Flag: string;\r\n   constructor(private route: ActivatedRoute) { }\r\n  \r\n   addNewTemplate() {\r\n      console.log(this.Flag);\r\n      if (this.template == null)\r\n         this.template = [];\r\n\r\n      this.template.push({\r\n           templateCode: \"\",\r\n          templateName: \"\",\r\n          pigtailCount:0,\r\n           odfCount: 0,\r\n          splitterCount: 0\r\n        });\r\n    }\r\n\r\n   deletetemplate(index: number) {\r\n      this.template.splice(index, 1);\r\n    }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatRadioModule, MatSelectModule, MatCheckboxModule, MatSliderModule } from '@angular/material';\r\n\r\nimport { EntitiesRouting } from './entities.routes';\r\nimport { EntityList } from './views/entity-list';\r\nimport { CustomFields } from './components/custom-fields';\r\nimport { CableDetails } from './views/cable-details';\r\nimport { ChamberDetails } from './views/chamber-details';\r\nimport { DuctDetails } from './views/duct-details';\r\nimport { ODFDetails } from './views/odf-details';\r\nimport { PoleDetails } from './views/pole-details';\r\nimport { SplitterDetails } from './views/splitter-details';\r\nimport { SpliceClosureDetails } from './views/spliceClosure-details';\r\nimport { CableService } from './services/cable.service';\r\nimport { ChamberService } from './services/chamber.service';\r\nimport { DuctService } from './services/duct.service';\r\nimport { ODFService } from './services/odf.service';\r\nimport { PoleService } from './services/pole.service';\r\nimport { SpliceClosureService } from './services/spliceClosure.service';\r\nimport { SplitterService } from './services/splitter.service';\r\nimport { SupplierComponent } from './components/supplier';\r\nimport { HomepassService } from './services/homepass.service';\r\nimport { HomepassDetails } from './views/homepass-details';\r\nimport { FatService } from './services/fat.service';\r\nimport { FdtService } from './services/fdt.service';\r\nimport { FdtDetails } from './views/fdt-details';\r\nimport { FatDetails } from './views/fat-details';\r\nimport { templateinfoComponent } from './components/templateinfo';\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        MatRadioModule, MatSelectModule, MatCheckboxModule, MatSliderModule,\r\n        EntitiesRouting\r\n    ],\r\n    declarations: [\r\n        EntityList,\r\n        CustomFields,\r\n        SupplierComponent,\r\n        CableDetails,\r\n        ChamberDetails,\r\n        DuctDetails,\r\n        ODFDetails,\r\n        PoleDetails,\r\n        SplitterDetails,\r\n       SpliceClosureDetails,\r\n       HomepassDetails, FdtDetails, FatDetails, templateinfoComponent\r\n    ],\r\n    providers: [\r\n        CableService,\r\n        ChamberService,\r\n        DuctService,\r\n        ODFService,\r\n        PoleService,\r\n        SpliceClosureService,\r\n       SplitterService,\r\n       HomepassService, FatService, FdtService\r\n    ]\r\n})\r\nexport class EntitiesModule { }\r\n","import { ModuleWithProviders } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { EntityList } from './views/entity-list';\r\nimport { CableDetails } from './views/cable-details';\r\nimport { ChamberDetails } from './views/chamber-details';\r\nimport { DuctDetails } from './views/duct-details';\r\nimport { ODFDetails } from './views/odf-details';\r\nimport { PoleDetails } from './views/pole-details';\r\nimport { SplitterDetails } from './views/splitter-details';\r\nimport { SpliceClosureDetails } from './views/spliceClosure-details';\r\nimport { HomepassDetails } from './views/homepass-details';\r\nimport { FdtDetails } from './views/fdt-details';\r\nimport { FatDetails } from './views/fat-details';\r\n\r\nexport const entitiesRoutes: Routes = [\r\n   {\r\n      path: 'entities',\r\n      children: [\r\n          { path: '', component: EntityList },\r\n          { path: 'cable', component: CableDetails },\r\n          { path: 'cable/:id', component: CableDetails },\r\n          { path: 'chamber', component: ChamberDetails },\r\n          { path: 'chamber/:id', component: ChamberDetails },\r\n          { path: 'duct', component: DuctDetails },\r\n          { path: 'duct/:id', component: DuctDetails },\r\n          { path: 'odf', component: ODFDetails },\r\n          { path: 'odf/:id', component: ODFDetails },\r\n          { path: 'pole', component: PoleDetails },\r\n          { path: 'pole/:id', component: PoleDetails },\r\n          { path: 'splitter', component: SplitterDetails },\r\n          { path: 'splitter/:id', component: SplitterDetails },\r\n          { path: 'spliceclosure', component: SpliceClosureDetails },\r\n          { path: 'spliceclosure/:id', component: SpliceClosureDetails },\r\n         { path: 'homepass', component: HomepassDetails },       \r\n         { path: 'homepass/:id', component: HomepassDetails },\r\n         { path: 'fat', component: FatDetails },\r\n         { path: 'fat/:id', component: FatDetails },\r\n         { path: 'fdt', component: FdtDetails },\r\n         { path: 'fdt/:id', component: FdtDetails },\r\n      ]\r\n   },\r\n];\r\n\r\nexport const EntitiesRouting: ModuleWithProviders = RouterModule.forChild(entitiesRoutes);\r\n","import { CustomField } from '../../common/models/customField';\r\nimport { DbBaseEntity } from '../../common/models/dbBaseEntity';\r\nimport { FileAttachment } from '../../common/models/FileAttachment';\r\nimport { Supplier } from '../../common/models/supplier';\r\nimport { temaplateinfo } from '../../common/models/templateinfo';\r\n\r\nexport class BaseNetworkEntity extends DbBaseEntity {\r\n\r\n    name?: string;\r\n    icon?: string;\r\n    type?: string;\r\n    brand?: string;\r\n    model?: string;\r\n    zoomLevel?: number;\r\n\r\n    code?: string;\r\n    regionId?: string;\r\n    parentId?: string;\r\n    parentEntityType?: string;\r\n    constructionStage?: string;\r\n    activationStage?: string;\r\n    accessibility?: string;\r\n    hierarchyType?: string;\r\n    customFields?: CustomField[] = new Array<CustomField>();\r\n    photos?: FileAttachment[] = new Array<FileAttachment>();\r\n    attachments?: FileAttachment[] = new Array<FileAttachment>();\r\n   suppliers?: Supplier[] = new Array<Supplier>();\r\n   template?: temaplateinfo[] = new Array<temaplateinfo>();\r\n   \r\n    constructor(id?: string, code?: string) {\r\n        super();\r\n        this.id = id;\r\n        this.code = code;\r\n    }\r\n}\r\n","import { LineString } from '../../common/geo/geometry';\r\nimport { BaseNetworkEntity } from './baseNetworkEntity';\r\nimport { Installation } from './installation';\r\nimport { Optics } from './optics';\r\nimport { Owner } from './owner';\r\n\r\nexport class Cable extends BaseNetworkEntity {\r\n\r\n    aLocation?: string;\r\n    bLocation?: string;\r\n    geometry: LineString;\r\n    isUnderground?: boolean;\r\n    measuredLength?: number;\r\n    calculatedLength?: number;\r\n    noOfTubes?: number;\r\n    corePerTube?: number;\r\n    optics?: Optics = new Optics();\r\n    installation?: Installation = new Installation();\r\n    owner?: Owner = new Owner();\r\n\r\n    constructor(id?:string, code?: string, isUnderground?: boolean, noOfTubes?: number, corePerTube?: number, optics?: Optics) {\r\n        super(id, code);\r\n        this.isUnderground = isUnderground;\r\n        this.noOfTubes = noOfTubes;\r\n        this.corePerTube = corePerTube;\r\n        this.optics = optics==null? new Optics(): optics;\r\n    }\r\n}\r\n\r\n","import { Point } from '../../common/geo/geometry';\r\nimport { BaseNetworkEntity } from './baseNetworkEntity';\r\nimport { Installation } from './installation';\r\nimport { Owner } from './owner';\r\n\r\nexport class Chamber extends BaseNetworkEntity {\r\n\r\n   chamberCategory?: string;\r\n   chamberClosureType?: string;\r\n    spliceTrayCount?: number;\r\n    isBuried?: boolean;\r\n\r\n    geometry: Point;\r\n    installation?: Installation = new Installation();\r\n    owner?: Owner = new Owner();\r\n}\r\n\r\n","import { LineString } from '../../common/geo/geometry';\r\nimport { BaseNetworkEntity } from './baseNetworkEntity';\r\nimport { Installation } from './installation';\r\nimport { Owner } from './owner';\r\n\r\nexport class Duct extends BaseNetworkEntity {\r\n\r\n    height?: number;\r\n    width?: number;\r\n    innerDiameter?: number;\r\n    outerDiameter?: number;\r\n\r\n    geometry: LineString;\r\n    measuredLength?: number;\r\n    calculatedLength?: number;\r\n\r\n    installation?: Installation = new Installation();\r\n    owner?: Owner = new Owner();\r\n}\r\n\r\n","import { LineString } from '../../common/geo/geometry';\r\nimport { BaseNetworkEntity } from './baseNetworkEntity';\r\nimport { Installation } from './installation';\r\nimport { Optics } from './optics';\r\nimport { Owner } from './owner';\r\n\r\nexport class FAT extends BaseNetworkEntity {\r\n   templateCode: string;\r\n   templateName: string;\r\n   pigtailCount: number;   \r\n   splitterCount: number;\r\n   connectionType: any;\r\n   topology: any;\r\n\r\n    optics?: Optics = new Optics();\r\n    installation?: Installation = new Installation();\r\n    owner?: Owner = new Owner();\r\n\r\n    constructor(id?:string, code?: string, optics?: Optics) {\r\n        super(id, code);\r\n        this.optics = optics==null? new Optics(): optics;\r\n    }\r\n}\r\n\r\n","import { LineString } from '../../common/geo/geometry';\r\nimport { BaseNetworkEntity } from './baseNetworkEntity';\r\nimport { Installation } from './installation';\r\nimport { Optics } from './optics';\r\nimport { Owner } from './owner';\r\n\r\nexport class FDT extends BaseNetworkEntity {\r\n   templateCode: string;\r\n   templateName: string;\r\n   odfCount: number;\r\n   splitterCount: number;\r\n   connectionType: any;\r\n   topology: any;\r\n\r\n    optics?: Optics = new Optics();\r\n    installation?: Installation = new Installation();\r\n    owner?: Owner = new Owner();\r\n\r\n    constructor(id?:string, code?: string, optics?: Optics) {\r\n        super(id, code);\r\n        this.optics = optics==null? new Optics(): optics;\r\n    }\r\n}\r\n\r\n","import { Point } from '../../common/geo/geometry';\r\nimport { CustomField } from '../../common/models/customField';\r\nimport { DbBaseEntity } from '../../common/models/dbBaseEntity';\r\nimport { FileAttachment } from '../../common/models/FileAttachment';\r\n\r\nexport class Homepass extends DbBaseEntity {\r\n    name: string;\r\n    icon?: string;\r\n    zoomLevel?: number;\r\n\r\n    code: string;\r\n    description?: string;\r\n    type?: string;\r\n    geometry: Point;\r\n\r\n    customFields?: CustomField[] = new Array<CustomField>();\r\n    photos?: FileAttachment[] = new Array<FileAttachment>();\r\n    attachments?: FileAttachment[] = new Array<FileAttachment>();\r\n\r\n}\r\n","export class Installation {\r\n    number: string;\r\n    year?: number;\r\n    company: string;\r\n    technician: string;\r\n    productionYear?: number;\r\n    date?: string;\r\n}\r\n","import { Point } from '../../common/geo/geometry';\r\nimport { BaseNetworkEntity } from './baseNetworkEntity';\r\nimport { Installation } from './installation';\r\nimport { Owner } from './owner';\r\n\r\nexport class ODF extends BaseNetworkEntity {\r\n    noOfPorts?: number;\r\n    mountingType?: string;\r\n    height?: number;\r\n   weidth?: number;\r\n    length?: number;\r\n\r\n    geometry: Point;\r\n    installation?: Installation = new Installation();\r\n    owner?: Owner = new Owner();\r\n}\r\n","export class Optics {\r\n    frequency: number;\r\n    attenuationDb: number;\r\n    resistanceOhm: number;\r\n    opticalInPutPower: number;\r\n    opticalOutputPower: number;\r\n    wavelength: number;\r\n}\r\n","export class Owner {\r\n    name: string;\r\n    address: string;\r\n    mobileNumber: string;\r\n    fax: string;\r\n    emailId: string;\r\n}\r\n","import { Point } from '../../common/geo/geometry';\r\nimport { BaseNetworkEntity } from './baseNetworkEntity';\r\nimport { Installation } from './installation';\r\nimport { Owner } from './owner';\r\n\r\nexport class Pole extends BaseNetworkEntity {\r\n    poleHeight?: number;\r\n    geometry: Point;\r\n    installation?: Installation = new Installation();\r\n    owner?: Owner = new Owner();\r\n}\r\n","import { Point } from '../../common/geo/geometry';\r\nimport { BaseNetworkEntity } from './baseNetworkEntity';\r\nimport { Installation } from './installation';\r\nimport { Owner } from './owner';\r\n\r\nexport class SpliceClosure extends BaseNetworkEntity {\r\n    noOfPorts?: number;\r\n    geometry: Point;\r\n    installation?: Installation = new Installation();\r\n    owner?: Owner = new Owner();\r\n}\r\n","import { Point } from '../../common/geo/geometry';\r\nimport { BaseNetworkEntity } from './baseNetworkEntity';\r\nimport { Installation } from './installation';\r\nimport { Optics } from './optics';\r\nimport { Owner } from './owner';\r\n\r\nexport class Splitter extends BaseNetworkEntity {\r\n    splitterRatio?: string;\r\n    lossValue?: number;\r\n    optics?: Optics = new Optics();\r\n\r\n    geometry: Point;\r\n    installation?: Installation = new Installation();\r\n    owner?: Owner = new Owner();\r\n}\r\n","import { HttpClient, HttpParams } from \"@angular/common/http\";\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { PaginationRequest, SortOrder } from '../../common/models/paginationRequest';\r\nimport { ServiceResponse } from '../../common/models/serviceResponse';\r\nimport { Cable } from '../models/cable';\r\n\r\n@Injectable()\r\nexport class CableService {\r\n\r\n    getCablesApi = 'Cables/GetCables/';\r\n    getCableApi = 'Cables/GetCable/';\r\n    checkNameExistsApi = 'Cables/CheckNameExists/';\r\n    saveCableApi = 'Cables/SaveCable/';\r\n    deleteCableApi = 'Cables/DeleteCable/';\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    getCables(paginationRequest?: PaginationRequest): Observable<ServiceResponse> {\r\n\r\n        if (paginationRequest == null)\r\n            paginationRequest = {\r\n                page: null,\r\n                pageSize: null,\r\n                filter: null,\r\n                order: {\r\n                    orderByProperty: \"updatedDate\",\r\n                    sortOrder: SortOrder.descending\r\n                }\r\n            };\r\n\r\n        return this.http.post<ServiceResponse>(this.getCablesApi, paginationRequest);\r\n    }\r\n\r\n    getCable(cableId): Observable<ServiceResponse> {\r\n\r\n        const params = new HttpParams()\r\n            .set('cableId', cableId);\r\n\r\n        return this.http.get<ServiceResponse>(this.getCableApi, { params });\r\n    }\r\n\r\n    async checkNameExists(name: string): Promise<ServiceResponse> {\r\n\r\n        const params = new HttpParams()\r\n            .set('name', name);\r\n\r\n        return await this.http.get<ServiceResponse>(this.checkNameExistsApi, { params }).toPromise();\r\n    }\r\n\r\n    saveCable(cable: Cable): Observable<ServiceResponse> {\r\n        return this.http.post<ServiceResponse>(this.saveCableApi, cable);\r\n    }\r\n\r\n    deleteCable(cableId: string): Observable<ServiceResponse> {\r\n\r\n        const params = new HttpParams()\r\n            .set('cableId', cableId);\r\n\r\n        return this.http.delete<ServiceResponse>(this.deleteCableApi, { params });\r\n    }\r\n\r\n}\r\n","import { HttpClient, HttpParams } from \"@angular/common/http\";\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { PaginationRequest, SortOrder } from '../../common/models/paginationRequest';\r\nimport { ServiceResponse } from '../../common/models/serviceResponse';\r\nimport { Chamber } from '../models/chamber';\r\n\r\n\r\n@Injectable()\r\nexport class ChamberService {\r\n\r\n    getChambersApi = 'Chambers/GetChambers/';\r\n    getChamberApi = 'Chambers/GetChamber/';\r\n    checkNameExistsApi = 'Chambers/CheckNameExists/';\r\n    saveChamberApi = 'Chambers/SaveChamber/';\r\n    deleteChamberApi = 'Chambers/DeleteChamber/';\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    getChambers(paginationRequest?: PaginationRequest): Observable<ServiceResponse> {\r\n\r\n        if (paginationRequest == null)\r\n            paginationRequest = {\r\n                page: null,\r\n                pageSize: null,\r\n                filter: null,\r\n                order: {\r\n                    orderByProperty: \"updatedDate\",\r\n                    sortOrder: SortOrder.descending\r\n                }\r\n            };\r\n\r\n        return this.http.post<ServiceResponse>(this.getChambersApi, paginationRequest);\r\n    }\r\n\r\n    getChamber(chamberId): Observable<ServiceResponse> {\r\n\r\n        const params = new HttpParams()\r\n            .set('chamberId', chamberId);\r\n\r\n        return this.http.get<ServiceResponse>(this.getChamberApi, { params });\r\n    }\r\n\r\n    async checkNameExists(name: string): Promise<ServiceResponse> {\r\n\r\n        const params = new HttpParams()\r\n            .set('name', name);\r\n\r\n        return await this.http.get<ServiceResponse>(this.checkNameExistsApi, { params }).toPromise();\r\n    }\r\n\r\n    saveChamber(chamber: Chamber): Observable<ServiceResponse> {\r\n        return this.http.post<ServiceResponse>(this.saveChamberApi, chamber);\r\n    }\r\n\r\n    deleteChamber(chamberId: string): Observable<ServiceResponse> {\r\n\r\n        const params = new HttpParams()\r\n            .set('chamberId', chamberId);\r\n\r\n        return this.http.delete<ServiceResponse>(this.deleteChamberApi, { params });\r\n    }\r\n}\r\n","import { HttpClient, HttpParams } from \"@angular/common/http\";\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { PaginationRequest, SortOrder } from '../../common/models/paginationRequest';\r\nimport { ServiceResponse } from '../../common/models/serviceResponse';\r\nimport { Duct } from '../models/duct';\r\n\r\n\r\n@Injectable()\r\nexport class DuctService {\r\n\r\n    getDuctsApi = 'Ducts/GetDucts/';\r\n    getDuctApi = 'Ducts/GetDuct/';\r\n    checkNameExistsApi = 'Ducts/CheckNameExists/';\r\n    saveDuctApi = 'Ducts/SaveDuct/';\r\n    deleteDuctApi = 'Ducts/DeleteDuct/';\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    getDucts(paginationRequest?: PaginationRequest): Observable<ServiceResponse> {\r\n\r\n        if (paginationRequest == null)\r\n            paginationRequest = {\r\n                page: null,\r\n                pageSize: null,\r\n                filter: null,\r\n                order: {\r\n                    orderByProperty: \"updatedDate\",\r\n                    sortOrder: SortOrder.descending\r\n                }\r\n            };\r\n\r\n        return this.http.post<ServiceResponse>(this.getDuctsApi, paginationRequest);\r\n    }\r\n\r\n    getDuct(ductId): Observable<ServiceResponse> {\r\n\r\n        const params = new HttpParams()\r\n            .set('ductId', ductId);\r\n\r\n        return this.http.get<ServiceResponse>(this.getDuctApi, { params });\r\n    }\r\n\r\n    async checkNameExists(name: string): Promise<ServiceResponse> {\r\n\r\n        const params = new HttpParams()\r\n            .set('name', name);\r\n\r\n        return await this.http.get<ServiceResponse>(this.checkNameExistsApi, { params }).toPromise();\r\n    }\r\n\r\n    saveDuct(duct: Duct): Observable<ServiceResponse> {\r\n        return this.http.post<ServiceResponse>(this.saveDuctApi, duct);\r\n    }\r\n\r\n    deleteDuct(ductId: string): Observable<ServiceResponse> {\r\n\r\n        const params = new HttpParams()\r\n            .set('ductId', ductId);\r\n\r\n        return this.http.delete<ServiceResponse>(this.deleteDuctApi, { params });\r\n    }\r\n}\r\n","import { HttpClient, HttpParams } from \"@angular/common/http\";\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { PaginationRequest, SortOrder } from '../../common/models/paginationRequest';\r\nimport { PaginationResponse } from '../../common/models/paginationResponse';\r\nimport { ServiceResponse } from '../../common/models/serviceResponse';\r\nimport { FAT } from '../models/fat';\r\n\r\n@Injectable()\r\nexport class FatService {\r\n\r\n   getFatsApi = 'Fat/GetFatAll/';\r\n   getFatApi = 'Fat/GetFat/'; \r\n   checkNameExistsApi = 'Fat/CheckNameExists/';\r\n   saveFatApi = 'Fat/SaveFat/';\r\n   deleteFatApi = 'Fat/DeleteFat/';\r\n\r\n   constructor(private http: HttpClient) { }\r\n\r\n   getFATs(paginationRequest: PaginationRequest): Observable<PaginationResponse> {\r\n\r\n      if (paginationRequest == null)\r\n         paginationRequest = {\r\n            page: null,\r\n            pageSize: null,\r\n            filter: null,\r\n            order: {\r\n               orderByProperty: \"name\",\r\n               sortOrder: SortOrder.descending\r\n            }\r\n         };\r\n\r\n      return this.http.post<PaginationResponse>(this.getFatsApi, paginationRequest);\r\n   }\r\n\r\n   getFAT(fatId): Observable<ServiceResponse> {\r\n\r\n      const params = new HttpParams()\r\n         .set('fatId', fatId);\r\n\r\n      return this.http.get<ServiceResponse>(this.getFatApi, { params });\r\n   }\r\n\r\n   async checkNameExists(name: string): Promise<ServiceResponse> {\r\n\r\n      const params = new HttpParams()\r\n         .set('name', name);\r\n\r\n      return await this.http.get<ServiceResponse>(this.checkNameExistsApi, { params }).toPromise();\r\n   }\r\n\r\n   saveFAT(fat: FAT): Observable<ServiceResponse> {\r\n\r\n      return this.http.post<ServiceResponse>(this.saveFatApi, fat);\r\n   }\r\n\r\n   deleteFAT(fatId: string): Observable<ServiceResponse> {\r\n\r\n      const params = new HttpParams()\r\n         .set('fdtId', fatId);\r\n\r\n      return this.http.delete<ServiceResponse>(this.deleteFatApi, { params });\r\n   }\r\n}\r\n","import { HttpClient, HttpParams } from \"@angular/common/http\";\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { PaginationRequest, SortOrder } from '../../common/models/paginationRequest';\r\nimport { PaginationResponse } from '../../common/models/paginationResponse';\r\nimport { ServiceResponse } from '../../common/models/serviceResponse';\r\nimport { FDT } from '../models/fdt';\r\n\r\n@Injectable()\r\nexport class FdtService {\r\n\r\n   getFdtsApi = 'Fdt/GetFdtAll/';\r\n   getFdtApi = 'Fdt/GetFdt/';\r\n   checkNameExistsApi = 'Fdt/CheckNameExists/';\r\n   saveFdtApi = 'Fdt/SaveFdt/';\r\n   deleteFdtApi = 'Fdt/DeleteFdt/';\r\n\r\n   constructor(private http: HttpClient) { }\r\n\r\n   getFDTs(paginationRequest: PaginationRequest): Observable<PaginationResponse> {\r\n\r\n      if (paginationRequest == null)\r\n         paginationRequest = {\r\n            page: null,\r\n            pageSize: null,\r\n            filter: null,\r\n            order: {\r\n               orderByProperty: \"name\",\r\n               sortOrder: SortOrder.descending\r\n            }\r\n         };\r\n\r\n      return this.http.post<PaginationResponse>(this.getFdtsApi, paginationRequest);\r\n   }\r\n\r\n   getFDT(fdtId): Observable<ServiceResponse> {\r\n\r\n      const params = new HttpParams()\r\n         .set('fdtId', fdtId);\r\n\r\n      return this.http.get<ServiceResponse>(this.getFdtApi, { params });\r\n   }\r\n\r\n   async checkNameExists(name: string): Promise<ServiceResponse> {\r\n\r\n      const params = new HttpParams()\r\n         .set('name', name);\r\n\r\n      return await this.http.get<ServiceResponse>(this.checkNameExistsApi, { params }).toPromise();\r\n   }\r\n\r\n   saveFDT(fdt: FDT): Observable<ServiceResponse> {\r\n\r\n      return this.http.post<ServiceResponse>(this.saveFdtApi, fdt);\r\n   }\r\n\r\n   deleteFDT(fatId: string): Observable<ServiceResponse> {\r\n\r\n      const params = new HttpParams()\r\n         .set('fdtId', fatId);\r\n\r\n      return this.http.delete<ServiceResponse>(this.deleteFdtApi, { params });\r\n   }\r\n}\r\n","import { HttpClient, HttpParams } from \"@angular/common/http\";\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { PaginationRequest, SortOrder } from '../../common/models/paginationRequest';\r\nimport { PaginationResponse } from '../../common/models/paginationResponse';\r\nimport { ServiceResponse } from '../../common/models/serviceResponse';\r\nimport { Homepass } from '../models/homepass';\r\n\r\n@Injectable()\r\nexport class HomepassService {\r\n\r\n    getHomepassesApi = 'Homepasses/GetHomepasses/';\r\n    getHomepassApi = 'Homepasses/GetHomepass/';\r\n    checkNameExistsApi = 'Homepasses/CheckNameExists/';\r\n    saveHomepassApi = 'Homepasses/SaveHomepass/';\r\n    deleteHomepassApi = 'Homepasses/DeleteHomepass/';\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    getHomepasses(paginationRequest: PaginationRequest): Observable<PaginationResponse> {\r\n\r\n        if (paginationRequest == null)\r\n            paginationRequest = {\r\n                page: null,\r\n                pageSize: null,\r\n                filter: null,\r\n                order: {\r\n                    orderByProperty: \"name\",\r\n                    sortOrder: SortOrder.descending\r\n                }\r\n            };\r\n\r\n        return this.http.post<PaginationResponse>(this.getHomepassesApi, paginationRequest);\r\n    }\r\n\r\n    getHomepass(homepassId): Observable<ServiceResponse> {\r\n\r\n        const params = new HttpParams()\r\n            .set('homepassId', homepassId);\r\n\r\n        return this.http.get<ServiceResponse>(this.getHomepassApi, { params });\r\n    }\r\n\r\n   async checkNameExists(name: string): Promise<ServiceResponse> {\r\n\r\n        const params = new HttpParams()\r\n            .set('name', name);\r\n\r\n       return await this.http.get<ServiceResponse>(this.checkNameExistsApi, { params }).toPromise();\r\n    }\r\n  \r\n    saveHomepass(homepass: Homepass): Observable<ServiceResponse> {\r\n\r\n        return this.http.post<ServiceResponse>(this.saveHomepassApi, homepass);\r\n    }\r\n\r\n    deleteHomepass(homepassId: string): Observable<ServiceResponse> {\r\n\r\n        const params = new HttpParams()\r\n            .set('homepassId', homepassId);\r\n\r\n        return this.http.delete<ServiceResponse>(this.deleteHomepassApi, { params });\r\n    }\r\n}\r\n","import { HttpClient, HttpParams } from \"@angular/common/http\";\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { PaginationRequest, SortOrder } from '../../common/models/paginationRequest';\r\nimport { ServiceResponse } from '../../common/models/serviceResponse';\r\nimport { ODF } from '../models/odf';\r\n\r\n\r\n@Injectable()\r\nexport class ODFService {\r\n\r\n    getODFsApi = 'ODFs/GetODFs/';\r\n    getODFApi = 'ODFs/GetODF/';\r\n    checkNameExistsApi = 'ODFs/CheckNameExists/';\r\n    saveODFApi = 'ODFs/SaveODF/';\r\n    deleteODFApi = 'ODFs/DeleteODF/';\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    getODFs(paginationRequest: PaginationRequest): Observable<ServiceResponse> {\r\n\r\n        if (paginationRequest == null)\r\n            paginationRequest = {\r\n                page: null,\r\n                pageSize: null,\r\n                filter: null,\r\n                order: {\r\n                    orderByProperty: \"updatedDate\",\r\n                    sortOrder: SortOrder.descending\r\n                }\r\n            };\r\n\r\n        return this.http.post<ServiceResponse>(this.getODFsApi, paginationRequest);\r\n    }\r\n\r\n    getODF(odfId): Observable<ServiceResponse> {\r\n\r\n        const params = new HttpParams()\r\n            .set('odfId', odfId);\r\n\r\n        return this.http.get<ServiceResponse>(this.getODFApi, { params });\r\n    }\r\n\r\n    async checkNameExists(name: string): Promise<ServiceResponse> {\r\n\r\n        const params = new HttpParams()\r\n            .set('name', name);\r\n\r\n        return await this.http.get<ServiceResponse>(this.checkNameExistsApi, { params }).toPromise();\r\n    }\r\n\r\n    saveODF(odf: ODF): Observable<ServiceResponse> {\r\n        return this.http.post<ServiceResponse>(this.saveODFApi, odf);\r\n    }\r\n\r\n    deleteODF(odfId: string): Observable<ServiceResponse> {\r\n\r\n        const params = new HttpParams()\r\n            .set('odfId', odfId);\r\n\r\n        return this.http.delete<ServiceResponse>(this.deleteODFApi, { params });\r\n    }\r\n\r\n}\r\n","import { HttpClient, HttpParams } from \"@angular/common/http\";\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { PaginationRequest, SortOrder } from '../../common/models/paginationRequest';\r\nimport { ServiceResponse } from '../../common/models/serviceResponse';\r\nimport { Pole } from '../models/pole';\r\n\r\n\r\n@Injectable()\r\nexport class PoleService {\r\n\r\n    getPolesApi = 'Poles/GetPoles/';\r\n    getPoleApi = 'Poles/GetPole/';\r\n    checkNameExistsApi = 'Poles/CheckNameExists/';\r\n    savePoleApi = 'Poles/SavePole/';\r\n    deletePoleApi = 'Poles/DeletePole/';\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    getPoles(paginationRequest?: PaginationRequest): Observable<ServiceResponse> {\r\n\r\n        if (paginationRequest == null)\r\n            paginationRequest = {\r\n                page: null,\r\n                pageSize: null,\r\n                filter: null,\r\n                order: {\r\n                    orderByProperty: \"updatedDate\",\r\n                    sortOrder: SortOrder.descending\r\n                }\r\n            };\r\n\r\n        return this.http.post<ServiceResponse>(this.getPolesApi, paginationRequest);\r\n    }\r\n\r\n    getPole(poleId): Observable<ServiceResponse> {\r\n\r\n        const params = new HttpParams()\r\n            .set('poleId', poleId);\r\n\r\n        return this.http.get<ServiceResponse>(this.getPoleApi, { params });\r\n    }\r\n\r\n    async checkNameExists(name: string): Promise<ServiceResponse> {\r\n\r\n        const params = new HttpParams()\r\n            .set('name', name);\r\n\r\n        return await this.http.get<ServiceResponse>(this.checkNameExistsApi, { params }).toPromise();\r\n    }\r\n\r\n    savePole(pole: Pole): Observable<ServiceResponse> {\r\n        return this.http.post<ServiceResponse>(this.savePoleApi, pole);\r\n    }\r\n\r\n    deletePole(poleId: string): Observable<ServiceResponse> {\r\n\r\n        const params = new HttpParams()\r\n            .set('poleId', poleId);\r\n\r\n        return this.http.delete<ServiceResponse>(this.deletePoleApi, { params });\r\n    }\r\n\r\n}\r\n","import { HttpClient, HttpParams } from \"@angular/common/http\";\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { PaginationRequest, SortOrder } from '../../common/models/paginationRequest';\r\nimport { ServiceResponse } from '../../common/models/serviceResponse';\r\nimport { SpliceClosure } from '../models/spliceClosure';\r\n\r\n\r\n@Injectable()\r\nexport class SpliceClosureService {\r\n\r\n    getSpliceClosuresApi = 'SpliceClosures/GetSpliceClosures/';\r\n    getSpliceClosureApi = 'SpliceClosures/GetSpliceClosure/';\r\n    checkNameExistsApi = 'SpliceClosures/CheckNameExists/';\r\n    saveSpliceClosureApi = 'SpliceClosures/SaveSpliceClosure/';\r\n    deleteSpliceClosureApi = 'SpliceClosures/DeleteSpliceClosure/';\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    getSpliceClosures(paginationRequest?: PaginationRequest): Observable<ServiceResponse> {\r\n\r\n        if (paginationRequest == null)\r\n            paginationRequest = {\r\n                page: null,\r\n                pageSize: null,\r\n                filter: null,\r\n                order: {\r\n                    orderByProperty: \"updatedDate\",\r\n                    sortOrder: SortOrder.descending\r\n                }\r\n            };\r\n\r\n        return this.http.post<ServiceResponse>(this.getSpliceClosuresApi, paginationRequest);\r\n    }\r\n\r\n    getSpliceClosure(spliceClosureId): Observable<ServiceResponse> {\r\n\r\n        const params = new HttpParams()\r\n            .set('spliceClosureId', spliceClosureId);\r\n\r\n        return this.http.get<ServiceResponse>(this.getSpliceClosureApi, { params });\r\n    }\r\n\r\n    async checkNameExists(name: string): Promise<ServiceResponse> {\r\n\r\n        const params = new HttpParams()\r\n            .set('name', name);\r\n\r\n        return await this.http.get<ServiceResponse>(this.checkNameExistsApi, { params }).toPromise();\r\n    }\r\n\r\n    saveSpliceClosure(spliceClosure: SpliceClosure): Observable<ServiceResponse> {\r\n        return this.http.post<ServiceResponse>(this.saveSpliceClosureApi, spliceClosure);\r\n    }\r\n\r\n    deleteSpliceClosure(spliceClosureId: string): Observable<ServiceResponse> {\r\n\r\n        const params = new HttpParams()\r\n            .set('spliceClosureId', spliceClosureId);\r\n\r\n        return this.http.delete<ServiceResponse>(this.deleteSpliceClosureApi, { params });\r\n    }\r\n}\r\n","import { HttpClient, HttpParams } from \"@angular/common/http\";\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { PaginationRequest, SortOrder } from '../../common/models/paginationRequest';\r\nimport { ServiceResponse } from '../../common/models/serviceResponse';\r\nimport { Splitter } from '../models/splitter';\r\n\r\n\r\n@Injectable()\r\nexport class SplitterService {\r\n\r\n    getSplittersApi = 'Splitters/GetSplitters/';\r\n    getSplitterApi = 'Splitters/GetSplitter/';\r\n    checkNameExistsApi = 'Splitters/CheckNameExists/';\r\n    saveSplitterApi = 'Splitters/SaveSplitter/';\r\n    deleteSplitterApi = 'Splitters/DeleteSplitter/';\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    getSplitters(paginationRequest?: PaginationRequest): Observable<ServiceResponse> {\r\n\r\n        if (paginationRequest == null)\r\n            paginationRequest = {\r\n                page: null,\r\n                pageSize: null,\r\n                filter: null,\r\n                order: {\r\n                    orderByProperty: \"updatedDate\",\r\n                    sortOrder: SortOrder.descending\r\n                }\r\n            };\r\n\r\n        return this.http.post<ServiceResponse>(this.getSplittersApi, paginationRequest);\r\n    }\r\n\r\n    getSplitter(splitterId): Observable<ServiceResponse> {\r\n\r\n        const params = new HttpParams()\r\n            .set('splitterId', splitterId);\r\n\r\n        return this.http.get<ServiceResponse>(this.getSplitterApi, { params });\r\n    }\r\n\r\n    async checkNameExists(name: string): Promise<ServiceResponse> {\r\n\r\n        const params = new HttpParams()\r\n            .set('name', name);\r\n\r\n        return await this.http.get<ServiceResponse>(this.checkNameExistsApi, { params }).toPromise();\r\n    }\r\n\r\n    saveSplitter(splitter: Splitter): Observable<ServiceResponse> {\r\n        return this.http.post<ServiceResponse>(this.saveSplitterApi, splitter);\r\n    }\r\n\r\n    deleteSplitter(splitterId: string): Observable<ServiceResponse> {\r\n\r\n        const params = new HttpParams()\r\n            .set('splitterId', splitterId);\r\n\r\n        return this.http.delete<ServiceResponse>(this.deleteSplitterApi, { params });\r\n    }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport { forkJoin } from 'rxjs';\r\n\r\nimport { Helper } from '../../common/helper';\r\nimport { CableService } from '../services/cable.service';\r\nimport { Cable } from '../models/cable';\r\n\r\ndeclare var $: any;\r\n\r\n@Component({\r\n    templateUrl: './cable-details.html',\r\n    providers: [CableService],\r\n})\r\nexport class CableDetails implements OnInit {\r\n\r\n    cableId: string;\r\n    cable: Cable;\r\n    title: string = \"New Cable\";\r\n\r\n    constructor(\r\n        private location: Location,\r\n        private route: ActivatedRoute,\r\n        private cableService: CableService,\r\n        private helper: Helper) {\r\n\r\n        this.cable = new Cable();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.route.params.subscribe(\r\n            params => {\r\n                this.cableId = params['id'];\r\n\r\n                if (this.cableId != null)\r\n                    this.title = \"Edit Cable\";\r\n                else {\r\n                    this.title = \"New Cable\";\r\n                }\r\n\r\n                this.getFormData(this.cableId);\r\n\r\n            });\r\n    }\r\n\r\n    getFormData(cableId: string) {\r\n\r\n        if (cableId != null) {\r\n\r\n            $(\"#ajax-loading\").show();\r\n\r\n            this.cableService.getCable(cableId).subscribe(\r\n                resp => {\r\n                    this.cable = new Cable();\r\n\r\n                    if (resp.status.toLowerCase() == \"error\") {\r\n                        this.helper.showAlertMessage(resp.message, \"error\");\r\n                    }\r\n                    else {\r\n                        if (resp.data != null) {\r\n                            this.cable = resp.data;\r\n                        }\r\n                    }\r\n\r\n                    $(\"#ajax-loading\").hide();\r\n                },\r\n                (err) => {\r\n                    $(\"#ajax-loading\").hide();\r\n                    this.cable = new Cable();\r\n                    this.helper.showAlertMessage(\"Unable to fetch cable details\", \"error\");\r\n                });\r\n        }\r\n        else\r\n            this.cable = new Cable();\r\n    }\r\n\r\n   async save() {\r\n      if (this.cable.id == undefined) {\r\n         var errorMessages = await this.validateEntity(this.cable);\r\n         if (errorMessages.length == 0) {\r\n\r\n            this.cableService.saveCable(this.cable).subscribe(\r\n               resp => {\r\n\r\n                  if (resp.status.toLowerCase() == \"error\") {\r\n                     this.helper.showAlertMessage(resp.message, \"error\");\r\n                  }\r\n                  else {\r\n                     if (resp.data != null) {\r\n                        this.helper.showAlertMessage(\"Cable information saved\", \"success\");\r\n                        this.goBack();\r\n                     }\r\n                     else\r\n                        this.helper.showAlertMessage(\"Unable to save cable information.\", \"error\");\r\n                  }\r\n               },\r\n               (err) => {\r\n                  //let msg = `Unable to save user information : ${err.message}`;\r\n                  this.helper.showAlertMessage(\"Unable to save cable information.\", \"error\");\r\n               });\r\n         }\r\n         else {\r\n            this.helper.showAlertMessage(this.helper.getErrorMessagesText(errorMessages), \"error\");\r\n         }\r\n      } else {\r\n         this.cableService.saveCable(this.cable).subscribe(\r\n            resp => {\r\n\r\n               if (resp.status.toLowerCase() == \"error\") {\r\n                  this.helper.showAlertMessage(resp.message, \"error\");\r\n               }\r\n               else {\r\n                  if (resp.data != null) {\r\n                     this.helper.showAlertMessage(\"Cable information saved\", \"success\");\r\n                     this.goBack();\r\n                  }\r\n                  else\r\n                     this.helper.showAlertMessage(\"Unable to save cable information.\", \"error\");\r\n               }\r\n            },\r\n            (err) => {\r\n               //let msg = `Unable to save user information : ${err.message}`;\r\n               this.helper.showAlertMessage(\"Unable to save cable information.\", \"error\");\r\n            });\r\n      }\r\n        \r\n      \r\n       \r\n\r\n      \r\n    }\r\n\r\n    async validateEntity(cable: Cable): Promise<string[]> {\r\n        var errorMessages = [];\r\n\r\n        if (cable.name == null || cable.name.trim() == '')\r\n            errorMessages.push(\"Name cannot be empty.\");\r\n        else {\r\n            let resp = await this.cableService.checkNameExists(cable.name);\r\n\r\n           if (resp.message == 'false')\r\n                errorMessages.push(\"Name already exists.\");\r\n        }\r\n    //    if (user.loginId == null || user.loginId.trim() == \"\")\r\n    //        errorMessages.push(\"Login Id cannot be empty string\");\r\n\r\n    //    //if (user.password == null || user.password.trim() == \"\")\r\n    //    //   errorMessages.push(\"Password cannot be empty string\");\r\n\r\n        return errorMessages;\r\n    }\r\n\r\n    goBack(): void {\r\n        this.location.back();\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport { forkJoin } from 'rxjs';\r\n\r\nimport { Helper } from '../../common/helper';\r\nimport { ChamberService } from '../services/chamber.service';\r\nimport { Chamber } from '../models/chamber';\r\n\r\ndeclare var $: any;\r\n\r\n@Component({\r\n    templateUrl: './chamber-details.html',\r\n    providers: [ChamberService],\r\n})\r\nexport class ChamberDetails implements OnInit {\r\n\r\n    chamberId: string;\r\n    chamber: Chamber;\r\n    title: string = \"New Chamber\";\r\n\r\n    constructor(\r\n        private location: Location,\r\n        private route: ActivatedRoute,\r\n        private chamberService: ChamberService,\r\n        private helper: Helper) {\r\n\r\n        this.chamber = new Chamber();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.route.params.subscribe(\r\n            params => {\r\n                this.chamberId = params['id'];\r\n\r\n                if (this.chamberId != null)\r\n                    this.title = \"Edit Chamber\";\r\n                else {\r\n                    this.title = \"New Chamber\";\r\n                }\r\n\r\n                this.getFormData(this.chamberId);\r\n\r\n            });\r\n    }\r\n\r\n    getFormData(chamberId: string) {\r\n\r\n        if (chamberId != null) {\r\n\r\n            $(\"#ajax-loading\").show();\r\n\r\n            this.chamberService.getChamber(chamberId).subscribe(\r\n                resp => {\r\n                    this.chamber = new Chamber();\r\n\r\n                    if (resp.status.toLowerCase() == \"error\") {\r\n                        this.helper.showAlertMessage(resp.message, \"error\");\r\n                    }\r\n                    else {\r\n                        if (resp.data != null) {\r\n                            this.chamber = resp.data;\r\n                        }\r\n                    }\r\n\r\n                    $(\"#ajax-loading\").hide();\r\n                },\r\n                (err) => {\r\n                    $(\"#ajax-loading\").hide();\r\n                    this.chamber = new Chamber();\r\n                    this.helper.showAlertMessage(\"Unable to fetch chamber details\", \"error\");\r\n                });\r\n        }\r\n        else\r\n            this.chamber = new Chamber();\r\n    }\r\n\r\n    async save() {\r\n       if (this.chamber.id == undefined) {\r\n          var errorMessages = await this.validateEntity(this.chamber);\r\n\r\n          if (errorMessages.length == 0) {\r\n\r\n             this.chamberService.saveChamber(this.chamber).subscribe(\r\n                resp => {\r\n\r\n                   if (resp.status.toLowerCase() == \"error\") {\r\n                      this.helper.showAlertMessage(resp.message, \"error\");\r\n                   }\r\n                   else {\r\n                      if (resp.data != null) {\r\n                         this.helper.showAlertMessage(\"Chamber information saved\", \"success\");\r\n                         this.goBack();\r\n                      }\r\n                      else\r\n                         this.helper.showAlertMessage(\"Unable to save chamber information.\", \"error\");\r\n                   }\r\n                },\r\n                (err) => {\r\n                   //let msg = `Unable to save user information : ${err.message}`;\r\n                   this.helper.showAlertMessage(\"Unable to save chamber information.\", \"error\");\r\n                });\r\n          }\r\n          else {\r\n             this.helper.showAlertMessage(this.helper.getErrorMessagesText(errorMessages), \"error\");\r\n          }\r\n       } else {\r\n          this.chamberService.saveChamber(this.chamber).subscribe(\r\n             resp => {\r\n\r\n                if (resp.status.toLowerCase() == \"error\") {\r\n                   this.helper.showAlertMessage(resp.message, \"error\");\r\n                }\r\n                else {\r\n                   if (resp.data != null) {\r\n                      this.helper.showAlertMessage(\"Chamber information saved\", \"success\");\r\n                      this.goBack();\r\n                   }\r\n                   else\r\n                      this.helper.showAlertMessage(\"Unable to save chamber information.\", \"error\");\r\n                }\r\n             },\r\n             (err) => {\r\n                //let msg = `Unable to save user information : ${err.message}`;\r\n                this.helper.showAlertMessage(\"Unable to save chamber information.\", \"error\");\r\n             });\r\n       }\r\n    }\r\n\r\n    async validateEntity(chamber: Chamber): Promise<string[]> {\r\n        var errorMessages = [];\r\n\r\n        if (chamber.name == null || chamber.name.trim() == '')\r\n            errorMessages.push(\"Name cannot be empty.\");\r\n        else {\r\n            let resp = await this.chamberService.checkNameExists(chamber.name);\r\n\r\n           if (resp.message == 'false')\r\n              errorMessages.push(\"Name already exists.\");\r\n        }\r\n        //    if (user.loginId == null || user.loginId.trim() == \"\")\r\n        //        errorMessages.push(\"Login Id cannot be empty string\");\r\n\r\n        //    //if (user.password == null || user.password.trim() == \"\")\r\n        //    //   errorMessages.push(\"Password cannot be empty string\");\r\n\r\n        return errorMessages;\r\n    }\r\n\r\n    goBack(): void {\r\n        this.location.back();\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\n\r\nimport { Helper } from '../../common/helper';\r\nimport { DuctService } from '../services/duct.service';\r\nimport { Duct } from '../models/duct';\r\n\r\ndeclare var $: any;\r\n\r\n@Component({\r\n    templateUrl: './duct-details.html',\r\n    providers: [DuctService],\r\n})\r\nexport class DuctDetails implements OnInit {\r\n\r\n    ductId: string;\r\n    duct: Duct;\r\n    title: string = \"New Duct\";\r\n\r\n    constructor(\r\n        private location: Location,\r\n        private route: ActivatedRoute,\r\n        private ductService: DuctService,\r\n        private helper: Helper) {\r\n\r\n        this.duct = new Duct();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.route.params.subscribe(\r\n            params => {\r\n                this.ductId = params['id'];\r\n\r\n                if (this.ductId != null)\r\n                    this.title = \"Edit Duct\";\r\n                else {\r\n                    this.title = \"New Duct\";\r\n                }\r\n\r\n                this.getFormData(this.ductId);\r\n\r\n            });\r\n    }\r\n\r\n    getFormData(ductId: string) {\r\n\r\n        if (ductId != null) {\r\n\r\n            $(\"#ajax-loading\").show();\r\n\r\n            this.ductService.getDuct(ductId).subscribe(\r\n                resp => {\r\n                    this.duct = new Duct();\r\n\r\n                    if (resp.status.toLowerCase() == \"error\") {\r\n                        this.helper.showAlertMessage(resp.message, \"error\");\r\n                    }\r\n                    else {\r\n                        if (resp.data != null) {\r\n                            this.duct = resp.data;\r\n                        }\r\n                    }\r\n\r\n                    $(\"#ajax-loading\").hide();\r\n                },\r\n                (err) => {\r\n                    $(\"#ajax-loading\").hide();\r\n                    this.duct = new Duct();\r\n                    this.helper.showAlertMessage(\"Unable to fetch duct details\", \"error\");\r\n                });\r\n        }\r\n        else\r\n            this.duct = new Duct();\r\n    }\r\n\r\n   async save() {\r\n      if (this.duct.id == undefined) {\r\n         var errorMessages = await this.validateEntity(this.duct);\r\n\r\n         if (errorMessages.length == 0) {\r\n\r\n            this.ductService.saveDuct(this.duct).subscribe(\r\n               resp => {\r\n\r\n                  if (resp.status.toLowerCase() == \"error\") {\r\n                     this.helper.showAlertMessage(resp.message, \"error\");\r\n                  }\r\n                  else {\r\n                     if (resp.data != null) {\r\n                        this.helper.showAlertMessage(\"Duct information saved\", \"success\");\r\n                        this.goBack();\r\n                     }\r\n                     else\r\n                        this.helper.showAlertMessage(\"Unable to save duct information.\", \"error\");\r\n                  }\r\n               },\r\n               (err) => {\r\n                  //let msg = `Unable to save user information : ${err.message}`;\r\n                  this.helper.showAlertMessage(\"Unable to save duct information.\", \"error\");\r\n               });\r\n         }\r\n         else {\r\n            this.helper.showAlertMessage(this.helper.getErrorMessagesText(errorMessages), \"error\");\r\n         }\r\n      } else {\r\n         this.ductService.saveDuct(this.duct).subscribe(\r\n            resp => {\r\n\r\n               if (resp.status.toLowerCase() == \"error\") {\r\n                  this.helper.showAlertMessage(resp.message, \"error\");\r\n               }\r\n               else {\r\n                  if (resp.data != null) {\r\n                     this.helper.showAlertMessage(\"Duct information saved\", \"success\");\r\n                     this.goBack();\r\n                  }\r\n                  else\r\n                     this.helper.showAlertMessage(\"Unable to save duct information.\", \"error\");\r\n               }\r\n            },\r\n            (err) => {\r\n               //let msg = `Unable to save user information : ${err.message}`;\r\n               this.helper.showAlertMessage(\"Unable to save duct information.\", \"error\");\r\n            });\r\n      }\r\n    }\r\n\r\n    async validateEntity(duct: Duct): Promise<string[]> {\r\n        var errorMessages = [];\r\n\r\n        if (duct.name == null || duct.name.trim() == '')\r\n                errorMessages.push(\"Name cannot be empty.\");\r\n        else {\r\n            let resp = await this.ductService.checkNameExists(duct.name);\r\n\r\n           if (resp.message == 'false')\r\n              errorMessages.push(\"Name already exists.\");\r\n        }\r\n        //    if (user.loginId == null || user.loginId.trim() == \"\")\r\n        //        errorMessages.push(\"Login Id cannot be empty string\");\r\n\r\n        //    //if (user.password == null || user.password.trim() == \"\")\r\n        //    //   errorMessages.push(\"Password cannot be empty string\");\r\n\r\n        return errorMessages;\r\n    }\r\n\r\n    goBack(): void {\r\n        this.location.back();\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { forkJoin } from 'rxjs';\r\n\r\nimport { Helper } from '../../common/helper';\r\nimport { SortOrder, SearchFilter, ConditionOperator, Filter, Operator } from '../../common/models/paginationRequest';\r\nimport { SearchField } from '../../common/models/SearchField';\r\nimport { CableService } from '../services/cable.service';\r\nimport { ChamberService } from '../services/chamber.service';\r\nimport { ODFService } from '../services/odf.service';\r\nimport { DuctService } from '../services/duct.service';\r\nimport { PoleService } from '../services/pole.service';\r\nimport { SpliceClosureService } from '../services/spliceClosure.service';\r\nimport { SplitterService } from '../services/splitter.service';\r\nimport { BaseNetworkEntity } from '../models/baseNetworkEntity';\r\nimport { HomepassService } from '../services/homepass.service';\r\nimport { FatService } from '../services/fat.service';\r\nimport { FdtService } from '../services/fdt.service';\r\n\r\ndeclare var $: any;\r\ndeclare var jBox: any;\r\n\r\n@Component({\r\n    templateUrl: './entity-list.html',\r\n})\r\nexport class EntityList implements OnInit {\r\n\r\n    statusMessage: string = \"\";\r\n    pageSize = 10;\r\n    currentPage = 1;\r\n    totalPages = 1;\r\n    searchFields: SearchField[];\r\n    searchFilter: SearchFilter;\r\n    selectedField: SearchField;\r\n    searchText: string;\r\n    sortColumn: string;\r\n    sortOrder: SortOrder = SortOrder.descending;\r\n    previousElement: HTMLElement;\r\n    selectedEntityType: string = \"Cable\";\r\n    entities: BaseNetworkEntity[];\r\n\r\n\r\n    constructor(\r\n        private cableService: CableService,\r\n        private chamberService: ChamberService,\r\n        private ductService: DuctService,\r\n        private odfService: ODFService,\r\n        private poleService: PoleService,\r\n        private spliceClosureService: SpliceClosureService,\r\n        private splitterService: SplitterService,\r\n       private homepassService: HomepassService,\r\n       private fatService: FatService,\r\n       private fdtService: FdtService,\r\n        private helper: Helper) {\r\n\r\n        this.searchFields = new Array<SearchField>();\r\n        this.searchFields.push({ field: 'Name', label: 'Name', dataType: \"text\", value: \"\" });\r\n        this.searchFields.push({ field: 'UpdatedBy', label: 'Updated By', dataType: \"text\", value: \"\" });\r\n        this.searchFields.push({ field: 'UpdatedDate', label: 'Updated On', dataType: \"date\", value: \"\" });\r\n\r\n        this.selectedField = this.searchFields[0];\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n        this.statusMessage = \"Loading Entities...\";\r\n        this.pageSize = 10;\r\n        this.currentPage = 1;\r\n        this.sortColumn = null;\r\n        this.sortOrder = SortOrder.noSort;\r\n        this.searchText = \"\";\r\n        this.getFormData();\r\n    }\r\n\r\n    getFormData() {\r\n\r\n        $(\"#ajax-loading\").show();\r\n\r\n        this.totalPages = 1;\r\n\r\n        let paginationRequest = {\r\n            page: this.currentPage,\r\n            pageSize: this.pageSize,\r\n            filter: this.searchFilter,\r\n            order: {\r\n                orderByProperty: this.sortColumn,\r\n                sortOrder: this.sortOrder\r\n            }\r\n        };\r\n\r\n        let entitySvc = null;\r\n\r\n        switch (this.selectedEntityType) {\r\n            case \"Cable\":\r\n                entitySvc = this.cableService.getCables(paginationRequest);\r\n                break;\r\n            case \"Chamber\":\r\n                entitySvc = this.chamberService.getChambers(paginationRequest);\r\n                break;\r\n            case \"Duct\":\r\n                entitySvc = this.ductService.getDucts(paginationRequest);\r\n                break;\r\n            case \"ODF\":\r\n                entitySvc = this.odfService.getODFs(paginationRequest);\r\n                break;\r\n            case \"Pole\":\r\n                entitySvc = this.poleService.getPoles(paginationRequest);\r\n                break;\r\n            case \"SpliceClosure\":\r\n                entitySvc = this.spliceClosureService.getSpliceClosures(paginationRequest);\r\n                break;\r\n            case \"Splitter\":\r\n                entitySvc = this.splitterService.getSplitters(paginationRequest);\r\n                break;\r\n            case \"Homepass\":\r\n                entitySvc = this.homepassService.getHomepasses(paginationRequest);\r\n              break;\r\n           case \"Fat\":\r\n              entitySvc = this.fatService.getFATs(paginationRequest);\r\n              break;\r\n           case \"Fdt\":\r\n              entitySvc = this.fdtService.getFDTs(paginationRequest);\r\n              break;\r\n            default:\r\n                entitySvc = this.cableService.getCables(paginationRequest);\r\n        }\r\n\r\n        entitySvc.subscribe(\r\n            resp => {\r\n                this.entities = null;\r\n                if (resp.status.toLowerCase() == \"error\") {\r\n                    this.statusMessage = resp.message;\r\n                    this.helper.showAlertMessage(this.statusMessage, \"error\");\r\n                }\r\n                else {\r\n                    if (resp.data != null && resp.data.length > 0) {\r\n                        this.entities = resp.data;\r\n                        this.totalPages = Math.ceil(resp.recordCount / this.pageSize);\r\n                    }\r\n                    else {\r\n                        this.statusMessage = \"There are no registered entities.\";\r\n                    }\r\n                }\r\n\r\n                $(\"#ajax-loading\").hide();\r\n            },\r\n            (err) => {\r\n                $(\"#ajax-loading\").hide();\r\n                this.entities = null;\r\n                let msg = `Unable to fetch entities : ${err.message}`;\r\n                this.helper.showAlertMessage(msg, \"error\");\r\n                this.statusMessage = \"Error fetching entities.\";\r\n            });\r\n\r\n        //let usersSvc = this.userService.getUsers(paginationRequest);\r\n        //let rolesSvc = this.roleService.getRoles(null);\r\n\r\n        //forkJoin([rolesSvc, usersSvc]).subscribe(results => {\r\n\r\n        //    this.users = null;\r\n\r\n        //    if (results[0] && results[0].data) {\r\n        //        this.roles = results[0].data;\r\n        //    }\r\n\r\n        //    if (results[1].status.toLowerCase() == \"error\") {\r\n        //        this.statusMessage = results[1].message;\r\n        //        this.helper.showAlertMessage(this.statusMessage, \"error\");\r\n        //    }\r\n        //    else {\r\n        //        if (results[1].data != null && results[1].data.length > 0) {\r\n        //            this.users = results[1].data;\r\n        //            this.totalPages = Math.ceil(results[1].recordCount / this.pageSize);\r\n        //        }\r\n        //        else {\r\n        //            this.statusMessage = \"There are no registered users.\";\r\n        //        }\r\n        //    }\r\n\r\n        //    $(\"#ajax-loading\").hide();\r\n        //},\r\n        //    error => {\r\n        //        this.users = null;\r\n        //        $(\"#ajax-loading\").hide();\r\n        //    });\r\n    }\r\n\r\n    onEntityTypeChange(entityType: string) {\r\n        this.selectedEntityType = entityType;\r\n\r\n        this.currentPage = 1;\r\n        this.sortColumn = null;\r\n        this.sortOrder = SortOrder.noSort;\r\n        this.searchText = \"\";\r\n\r\n        this.getFormData();\r\n    }\r\n\r\n    setSearchField(searchField: any) {\r\n        this.selectedField = searchField;\r\n        this.searchText = '';\r\n    }\r\n\r\n    search() {\r\n\r\n        this.searchFilter = this.helper.search(this.selectedField, this.searchText, ConditionOperator.AND)\r\n        this.searchFields.forEach(x => x.value = '');\r\n\r\n        this.getFormData();\r\n    }\r\n\r\n    advancedSearch() {\r\n\r\n        this.searchFilter = this.helper.advancedSearch(this.searchFields, ConditionOperator.AND)\r\n        this.searchText = \"\";\r\n\r\n        this.getFormData();\r\n    }\r\n\r\n    clearSearch() {\r\n        this.searchFilter = this.helper.search(this.selectedField, this.searchText, ConditionOperator.AND)\r\n        this.searchFields.forEach(x => x.value = '');\r\n    }\r\n\r\n    setPage(page: number) {\r\n\r\n        if (page < 1 || page > this.totalPages) {\r\n            return;\r\n        }\r\n\r\n        this.currentPage = page;\r\n\r\n        this.getFormData();\r\n    }\r\n\r\n    onColumnClick(e: HTMLElement) {\r\n\r\n        if (this.previousElement && e.getAttribute('data-column') != this.previousElement.getAttribute('data-column')) {\r\n            this.previousElement.classList.remove('table-sorter-desc');\r\n            this.previousElement.classList.remove('table-sorter-asc');\r\n        }\r\n\r\n        this.previousElement = e;\r\n\r\n        this.sortColumn = e.getAttribute('data-column');\r\n\r\n        if (e.classList.contains(\"table-sorter-asc\")) {\r\n            e.classList.remove('table-sorter-asc');\r\n            e.classList.add('table-sorter-desc');\r\n            this.sortOrder = SortOrder.descending;\r\n        }\r\n        else if (e.classList.contains(\"table-sorter-desc\")) {\r\n            e.classList.remove('table-sorter-desc');\r\n            this.sortColumn = null;\r\n            this.sortOrder = SortOrder.noSort;\r\n        }\r\n        else {\r\n            e.classList.add('table-sorter-asc');\r\n            this.sortOrder = SortOrder.ascending;\r\n        }\r\n\r\n\r\n        this.getFormData();\r\n    }\r\n\r\n    delete(entity: any) {\r\n        new jBox(\"Confirm\", {\r\n            minWidth: 500,\r\n            minHeight: 70,\r\n            title: \"<b>Delete Entity</b>\",\r\n            overlay: false,\r\n            content: `Do you want to delete ${this.selectedEntityType} - ${entity.name}`,\r\n            draggable: \"title\",\r\n            confirmButton: \"Yes\",\r\n            cancelButton: \"No\",\r\n            confirm: () => {\r\n\r\n                let entitySvc = null;\r\n\r\n                switch (this.selectedEntityType) {\r\n                    case \"Cable\":\r\n                        entitySvc = this.cableService.deleteCable(entity.id);\r\n                        break;\r\n                    case \"Chamber\":\r\n                        entitySvc = this.chamberService.deleteChamber(entity.id);\r\n                        break;\r\n                    case \"Duct\":\r\n                        entitySvc = this.ductService.deleteDuct(entity.id);\r\n                        break;\r\n                    case \"ODF\":\r\n                        entitySvc = this.odfService.deleteODF(entity.id);\r\n                        break;\r\n                    case \"Pole\":\r\n                        entitySvc = this.poleService.deletePole(entity.id);\r\n                        break;\r\n                    case \"SpliceClosure\":\r\n                        entitySvc = this.spliceClosureService.deleteSpliceClosure(entity.id);\r\n                        break;\r\n                    case \"Splitter\":\r\n                        entitySvc = this.splitterService.deleteSplitter(entity.id);\r\n                        break;\r\n                    case \"Homepass\":\r\n                        entitySvc = this.homepassService.deleteHomepass(entity.id);\r\n                        break;\r\n                    default:\r\n                        entitySvc = this.cableService.deleteCable(entity.id);\r\n                }\r\n\r\n                entitySvc.subscribe(\r\n                    resp => {\r\n                        if (resp.status.toLowerCase() == \"error\") {\r\n                            this.helper.showAlertMessage(resp.message, \"error\");\r\n                        }\r\n                        else {\r\n                            if (resp.data != null) {\r\n                                this.helper.showAlertMessage(`${this.selectedEntityType} deleted`, \"success\");\r\n                                this.getFormData();\r\n                            }\r\n                            else {\r\n                                this.helper.showAlertMessage(`Error deleting ${this.selectedEntityType}`, \"error\");\r\n                            }\r\n                        }\r\n                    },\r\n                    (err) => {\r\n                        this.helper.showAlertMessage(`Error deleting ${this.selectedEntityType}`, \"error\");\r\n                    });\r\n            }\r\n        }).open();\r\n    }\r\n\r\n    //getPermission(featureCode: string, accessType: string): boolean {\r\n    //   return this.accountService.getPermission(featureCode, accessType);\r\n    //}\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport { forkJoin } from 'rxjs';\r\n\r\nimport { Helper } from '../../common/helper';\r\nimport { FatService } from '../services/fat.service';\r\nimport { FAT } from '../models/fat';\r\n\r\ndeclare var $: any;\r\n\r\n@Component({\r\n   templateUrl: './fat-details.html',\r\n   providers: [FatService],\r\n})\r\nexport class FatDetails implements OnInit {\r\n   Flag1 = \"Fat\";\r\n   fatId: string;\r\n   fat: FAT;\r\n    title: string = \"New Fat\";\r\n\r\n    constructor(\r\n        private location: Location,\r\n        private route: ActivatedRoute,\r\n       private fatService: FatService,\r\n        private helper: Helper) {\r\n\r\n       this.fat = new FAT();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.route.params.subscribe(\r\n           params => {\r\n              this.fatId = params['id'];\r\n             \r\n              if (this.fatId != null)\r\n                    this.title = \"Edit Fat\";\r\n                else {\r\n                 this.title = \"New Fat\";\r\n                }\r\n\r\n              this.getFormData(this.fatId);\r\n\r\n            });\r\n    }\r\n\r\n   getFormData(fatId: string) {\r\n\r\n\r\n\r\n      if (fatId != null) {\r\n\r\n            $(\"#ajax-loading\").show();\r\n\r\n         this.fatService.getFAT(fatId).subscribe(\r\n             resp => {\r\n                this.fat = new FAT();\r\n\r\n                    if (resp.status.toLowerCase() == \"error\") {\r\n                        this.helper.showAlertMessage(resp.message, \"error\");\r\n                    }\r\n                    else {\r\n                       if (resp.data != null) {\r\n                          this.fat = resp.data;\r\n                        }\r\n                    }\r\n\r\n                    $(\"#ajax-loading\").hide();\r\n                },\r\n                (err) => {\r\n                   $(\"#ajax-loading\").hide();\r\n                   this.fat = new FAT();\r\n                    this.helper.showAlertMessage(\"Unable to fetch fat details\", \"error\");\r\n                });\r\n        }\r\n        else\r\n          this.fat = new FAT();\r\n    }\r\n\r\n   async save() {\r\n      if (this.fat.id == undefined) {\r\n         var errorMessages = await this.validateEntity(this.fat);\r\n\r\n         if (errorMessages.length == 0) {\r\n\r\n            this.fatService.saveFAT(this.fat).subscribe(\r\n               resp => {\r\n\r\n                  if (resp.status.toLowerCase() == \"error\") {\r\n                     this.helper.showAlertMessage(resp.message, \"error\");\r\n                  }\r\n                  else {\r\n                     if (resp.data != null) {\r\n                        this.helper.showAlertMessage(\"Fat information saved\", \"success\");\r\n                        this.goBack();\r\n                     }\r\n                     else\r\n                        this.helper.showAlertMessage(\"Unable to save fat information.\", \"error\");\r\n                  }\r\n               },\r\n               (err) => {\r\n                  //let msg = `Unable to save user information : ${err.message}`;\r\n                  this.helper.showAlertMessage(\"Unable to fat information.\", \"error\");\r\n               });\r\n         }\r\n         else {\r\n            this.helper.showAlertMessage(this.helper.getErrorMessagesText(errorMessages), \"error\");\r\n         }\r\n      } else {\r\n        \r\n\r\n         this.fatService.saveFAT(this.fat).subscribe(\r\n               resp => {\r\n\r\n                  if (resp.status.toLowerCase() == \"error\") {\r\n                     this.helper.showAlertMessage(resp.message, \"error\");\r\n                  }\r\n                  else {\r\n                     if (resp.data != null) {\r\n                        this.helper.showAlertMessage(\"FAT information saved\", \"success\");\r\n                        this.goBack();\r\n                     }\r\n                     else\r\n                        this.helper.showAlertMessage(\"Unable to save fat information.\", \"error\");\r\n                  }\r\n               },\r\n               (err) => {\r\n                  //let msg = `Unable to save user information : ${err.message}`;\r\n                  this.helper.showAlertMessage(\"Unable to save fdt information.\", \"error\");\r\n               });\r\n         \r\n        \r\n      }\r\n    }\r\n\r\n    async validateEntity(fat: FAT): Promise<string[]> {\r\n        var errorMessages = [];\r\n\r\n       if (fat.name == null || fat.name.trim() == '')\r\n                errorMessages.push(\"Name cannot be empty.\");\r\n       else {\r\n          let resp = await this.fatService.checkNameExists(fat.name);\r\n\r\n           if (resp.message == 'false')\r\n              errorMessages.push(\"Name already exists.\");\r\n        }\r\n        //    if (user.loginId == null || user.loginId.trim() == \"\")\r\n        //        errorMessages.push(\"Login Id cannot be empty string\");\r\n\r\n        //    //if (user.password == null || user.password.trim() == \"\")\r\n        //    //   errorMessages.push(\"Password cannot be empty string\");\r\n\r\n        return errorMessages;\r\n    }\r\n\r\n    goBack(): void {\r\n        this.location.back();\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport { forkJoin } from 'rxjs';\r\n\r\nimport { Helper } from '../../common/helper';\r\nimport { FdtService } from '../services/fdt.service';\r\nimport { FDT } from '../models/fdt';\r\n\r\ndeclare var $: any;\r\n\r\n@Component({\r\n   templateUrl: './fdt-details.html',\r\n   providers: [FdtService],\r\n})\r\nexport class FdtDetails implements OnInit {\r\n   Flag1 = \"Fdt\";\r\n   fdtId: string;\r\n   fdt: FDT;\r\n    title: string = \"New Fdt\";\r\n\r\n    constructor(\r\n        private location: Location,\r\n        private route: ActivatedRoute,\r\n       private fdtService: FdtService,\r\n        private helper: Helper) {\r\n\r\n       this.fdt = new FDT();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.route.params.subscribe(\r\n            params => {\r\n                this.fdtId = params['id'];\r\n\r\n              if (this.fdtId != null)\r\n                    this.title = \"Edit Fdt\";\r\n                else {\r\n                 this.title = \"New Fdt\";\r\n                }\r\n\r\n              this.getFormData(this.fdtId);\r\n\r\n            });\r\n    }\r\n\r\n    getFormData(fdtId: string) {\r\n\r\n\r\n\r\n       if (fdtId != null) {\r\n\r\n            $(\"#ajax-loading\").show();\r\n\r\n          this.fdtService.getFDT(fdtId).subscribe(\r\n             resp => {\r\n                this.fdt = new FDT();\r\n\r\n                    if (resp.status.toLowerCase() == \"error\") {\r\n                        this.helper.showAlertMessage(resp.message, \"error\");\r\n                    }\r\n                    else {\r\n                       if (resp.data != null) {\r\n                          this.fdt = resp.data;\r\n                        }\r\n                    }\r\n\r\n                    $(\"#ajax-loading\").hide();\r\n                },\r\n                (err) => {\r\n                   $(\"#ajax-loading\").hide();\r\n                   this.fdt = new FDT();\r\n                    this.helper.showAlertMessage(\"Unable to fetch fdt details\", \"error\");\r\n                });\r\n        }\r\n        else\r\n          this.fdt = new FDT();\r\n    }\r\n\r\n   async save() {\r\n      if (this.fdt.id == undefined) {\r\n         var errorMessages = await this.validateEntity(this.fdt);\r\n\r\n         if (errorMessages.length == 0) {\r\n\r\n            this.fdtService.saveFDT(this.fdt).subscribe(\r\n               resp => {\r\n\r\n                  if (resp.status.toLowerCase() == \"error\") {\r\n                     this.helper.showAlertMessage(resp.message, \"error\");\r\n                  }\r\n                  else {\r\n                     if (resp.data != null) {\r\n                        this.helper.showAlertMessage(\"Fdt information saved\", \"success\");\r\n                        this.goBack();\r\n                     }\r\n                     else\r\n                        this.helper.showAlertMessage(\"Unable to save fdt information.\", \"error\");\r\n                  }\r\n               },\r\n               (err) => {\r\n                  //let msg = `Unable to save user information : ${err.message}`;\r\n                  this.helper.showAlertMessage(\"Unable to fdt fdt information.\", \"error\");\r\n               });\r\n         }\r\n         else {\r\n            this.helper.showAlertMessage(this.helper.getErrorMessagesText(errorMessages), \"error\");\r\n         }\r\n      } else {\r\n        \r\n\r\n         this.fdtService.saveFDT(this.fdt).subscribe(\r\n               resp => {\r\n\r\n                  if (resp.status.toLowerCase() == \"error\") {\r\n                     this.helper.showAlertMessage(resp.message, \"error\");\r\n                  }\r\n                  else {\r\n                     if (resp.data != null) {\r\n                        this.helper.showAlertMessage(\"FDT information saved\", \"success\");\r\n                        this.goBack();\r\n                     }\r\n                     else\r\n                        this.helper.showAlertMessage(\"Unable to save fdt information.\", \"error\");\r\n                  }\r\n               },\r\n               (err) => {\r\n                  //let msg = `Unable to save user information : ${err.message}`;\r\n                  this.helper.showAlertMessage(\"Unable to save fdt information.\", \"error\");\r\n               });\r\n         \r\n        \r\n      }\r\n    }\r\n\r\n    async validateEntity(fdt: FDT): Promise<string[]> {\r\n        var errorMessages = [];\r\n\r\n       if (fdt.name == null || fdt.name.trim() == '')\r\n                errorMessages.push(\"Name cannot be empty.\");\r\n       else {\r\n          let resp = await this.fdtService.checkNameExists(fdt.name);\r\n\r\n           if (resp.message == 'false')\r\n              errorMessages.push(\"Name already exists.\");\r\n        }\r\n        //    if (user.loginId == null || user.loginId.trim() == \"\")\r\n        //        errorMessages.push(\"Login Id cannot be empty string\");\r\n\r\n        //    //if (user.password == null || user.password.trim() == \"\")\r\n        //    //   errorMessages.push(\"Password cannot be empty string\");\r\n\r\n        return errorMessages;\r\n    }\r\n\r\n    goBack(): void {\r\n        this.location.back();\r\n    }\r\n}\r\n","import { Location } from '@angular/common';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Helper } from '../../common/helper';\r\nimport { Homepass } from '../models/homepass';\r\nimport { HomepassService } from '../services/homepass.service';\r\n\r\ndeclare var $: any;\r\n\r\n@Component({\r\n    templateUrl: './homepass-details.html',\r\n    providers: [HomepassService],\r\n})\r\nexport class HomepassDetails implements OnInit {\r\n\r\n    homepassId: string;\r\n    homepass: Homepass;\r\n    title: string = \"New Homepass\";\r\n\r\n    constructor(\r\n        private location: Location,\r\n        private route: ActivatedRoute,\r\n        private homepassService: HomepassService,\r\n        private helper: Helper) {\r\n\r\n        this.homepass = new Homepass();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.route.params.subscribe(\r\n            params => {\r\n                this.homepassId = params['id'];\r\n\r\n                if (this.homepassId != null)\r\n                    this.title = \"Edit Homepass\";\r\n                else {\r\n                    this.title = \"New Homepass\";\r\n                }\r\n\r\n                this.getFormData(this.homepassId);\r\n\r\n            });\r\n    }\r\n\r\n    getFormData(homepassId: string) {\r\n\r\n        if (homepassId != null) {\r\n\r\n            $(\"#ajax-loading\").show();\r\n\r\n            this.homepassService.getHomepass(homepassId).subscribe(\r\n                resp => {\r\n                    this.homepass = new Homepass();\r\n\r\n                    if (resp.status.toLowerCase() == \"error\") {\r\n                        this.helper.showAlertMessage(resp.message, \"error\");\r\n                    }\r\n                    else {\r\n                        if (resp.data != null) {\r\n                            this.homepass = resp.data;\r\n                        }\r\n                    }\r\n\r\n                    $(\"#ajax-loading\").hide();\r\n                },\r\n                (err) => {\r\n                    $(\"#ajax-loading\").hide();\r\n                    this.homepass = new Homepass();\r\n                    this.helper.showAlertMessage(\"Unable to fetch homepass details\", \"error\");\r\n                });\r\n        }\r\n        else\r\n            this.homepass = new Homepass();\r\n    }\r\n\r\n   async save() {\r\n      if (this.homepass.id == undefined) {\r\n         var errorMessages = await this.validateEntity(this.homepass);\r\n\r\n         if (errorMessages.length == 0) {\r\n\r\n            this.homepassService.saveHomepass(this.homepass).subscribe(\r\n               resp => {\r\n\r\n                  if (resp.status.toLowerCase() == \"error\") {\r\n                     this.helper.showAlertMessage(resp.message, \"error\");\r\n                  }\r\n                  else {\r\n                     if (resp.data != null) {\r\n                        this.helper.showAlertMessage(\"Homepass information saved\", \"success\");\r\n                        this.goBack();\r\n                     }\r\n                     else\r\n                        this.helper.showAlertMessage(\"Unable to save homepass information.\", \"error\");\r\n                  }\r\n               },\r\n               (err) => {\r\n                  //let msg = `Unable to save user information : ${err.message}`;\r\n                  this.helper.showAlertMessage(\"Unable to save homepass information.\", \"error\");\r\n               });\r\n         }\r\n         else {\r\n            this.helper.showAlertMessage(this.helper.getErrorMessagesText(errorMessages), \"error\");\r\n         }\r\n      } else {\r\n         this.homepassService.saveHomepass(this.homepass).subscribe(\r\n            resp => {\r\n\r\n               if (resp.status.toLowerCase() == \"error\") {\r\n                  this.helper.showAlertMessage(resp.message, \"error\");\r\n               }\r\n               else {\r\n                  if (resp.data != null) {\r\n                     this.helper.showAlertMessage(\"Homepass information saved\", \"success\");\r\n                     this.goBack();\r\n                  }\r\n                  else\r\n                     this.helper.showAlertMessage(\"Unable to save homepass information.\", \"error\");\r\n               }\r\n            },\r\n            (err) => {\r\n               //let msg = `Unable to save user information : ${err.message}`;\r\n               this.helper.showAlertMessage(\"Unable to save homepass information.\", \"error\");\r\n            });\r\n      }\r\n    }\r\n\r\n    async validateEntity(homepass: Homepass): Promise<string[]> {\r\n        var errorMessages = [];\r\n\r\n        if (homepass.name == null || homepass.name.trim() == '')\r\n                errorMessages.push(\"Name cannot be empty.\");\r\n        else {\r\n            let response = await this.homepassService.checkNameExists(homepass.name);\r\n\r\n           if (response.message =='false')\r\n              errorMessages.push(\"Name already exists.\");\r\n        }\r\n        //    if (user.loginId == null || user.loginId.trim() == \"\")\r\n        //        errorMessages.push(\"Login Id cannot be empty string\");\r\n\r\n        //    //if (user.password == null || user.password.trim() == \"\")\r\n        //    //   errorMessages.push(\"Password cannot be empty string\");\r\n\r\n        return errorMessages;\r\n    }\r\n\r\n    goBack(): void {\r\n        this.location.back();\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport { forkJoin } from 'rxjs';\r\n\r\nimport { Helper } from '../../common/helper';\r\nimport { ODFService } from '../services/odf.service';\r\nimport { ODF } from '../models/odf';\r\n\r\ndeclare var $: any;\r\n\r\n@Component({\r\n    templateUrl: './odf-details.html',\r\n    providers: [ODFService],\r\n})\r\nexport class ODFDetails implements OnInit {\r\n\r\n    odfId: string;\r\n    odf: ODF;\r\n    title: string = \"New ODF\";\r\n\r\n    constructor(\r\n        private location: Location,\r\n        private route: ActivatedRoute,\r\n        private odfService: ODFService,\r\n        private helper: Helper) {\r\n\r\n        this.odf = new ODF();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.route.params.subscribe(\r\n            params => {\r\n                this.odfId = params['id'];\r\n\r\n                if (this.odfId != null)\r\n                    this.title = \"Edit ODF\";\r\n                else {\r\n                    this.title = \"New ODF\";\r\n                }\r\n\r\n                this.getFormData(this.odfId);\r\n\r\n            });\r\n    }\r\n\r\n    getFormData(odfId: string) {\r\n\r\n        if (odfId != null) {\r\n\r\n            $(\"#ajax-loading\").show();\r\n\r\n            this.odfService.getODF(odfId).subscribe(\r\n                resp => {\r\n                    this.odf = new ODF();\r\n\r\n                    if (resp.status.toLowerCase() == \"error\") {\r\n                        this.helper.showAlertMessage(resp.message, \"error\");\r\n                    }\r\n                    else {\r\n                        if (resp.data != null) {\r\n                            this.odf = resp.data;\r\n                        }\r\n                    }\r\n\r\n                    $(\"#ajax-loading\").hide();\r\n                },\r\n                (err) => {\r\n                    $(\"#ajax-loading\").hide();\r\n                    this.odf = new ODF();\r\n                    this.helper.showAlertMessage(\"Unable to fetch odf details\", \"error\");\r\n                });\r\n        }\r\n        else\r\n            this.odf = new ODF();\r\n    }\r\n\r\n   async save() {\r\n      if (this.odf.id == undefined) {\r\n         var errorMessages = await this.validateEntity(this.odf);\r\n\r\n         if (errorMessages.length == 0) {\r\n\r\n            this.odfService.saveODF(this.odf).subscribe(\r\n               resp => {\r\n\r\n                  if (resp.status.toLowerCase() == \"error\") {\r\n                     this.helper.showAlertMessage(resp.message, \"error\");\r\n                  }\r\n                  else {\r\n                     if (resp.data != null) {\r\n                        this.helper.showAlertMessage(\"ODF information saved\", \"success\");\r\n                        this.goBack();\r\n                     }\r\n                     else\r\n                        this.helper.showAlertMessage(\"Unable to save ODF information.\", \"error\");\r\n                  }\r\n               },\r\n               (err) => {\r\n                  //let msg = `Unable to save user information : ${err.message}`;\r\n                  this.helper.showAlertMessage(\"Unable to save ODF information.\", \"error\");\r\n               });\r\n         }\r\n         else {\r\n            this.helper.showAlertMessage(this.helper.getErrorMessagesText(errorMessages), \"error\");\r\n         }\r\n      } else {\r\n         \r\n\r\n            this.odfService.saveODF(this.odf).subscribe(\r\n               resp => {\r\n\r\n                  if (resp.status.toLowerCase() == \"error\") {\r\n                     this.helper.showAlertMessage(resp.message, \"error\");\r\n                  }\r\n                  else {\r\n                     if (resp.data != null) {\r\n                        this.helper.showAlertMessage(\"ODF information saved\", \"success\");\r\n                        this.goBack();\r\n                     }\r\n                     else\r\n                        this.helper.showAlertMessage(\"Unable to save ODF information.\", \"error\");\r\n                  }\r\n               },\r\n               (err) => {\r\n                  //let msg = `Unable to save user information : ${err.message}`;\r\n                  this.helper.showAlertMessage(\"Unable to save ODF information.\", \"error\");\r\n               });\r\n         \r\n      }\r\n    }\r\n\r\n    async validateEntity(odf: ODF): Promise<string[]> {\r\n        var errorMessages = [];\r\n\r\n        if (odf.name == null || odf.name.trim() == '')\r\n                errorMessages.push(\"Name cannot be empty.\");\r\n        else {\r\n            let resp = await this.odfService.checkNameExists(odf.name);\r\n\r\n           if (resp.message == 'false')\r\n              errorMessages.push(\"Name already exists.\");\r\n        }\r\n        //    if (user.loginId == null || user.loginId.trim() == \"\")\r\n        //        errorMessages.push(\"Login Id cannot be empty string\");\r\n\r\n        //    //if (user.password == null || user.password.trim() == \"\")\r\n        //    //   errorMessages.push(\"Password cannot be empty string\");\r\n\r\n        return errorMessages;\r\n    }\r\n\r\n    goBack(): void {\r\n        this.location.back();\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport { forkJoin } from 'rxjs';\r\n\r\nimport { Helper } from '../../common/helper';\r\nimport { PoleService } from '../services/pole.service';\r\nimport { Pole } from '../models/pole';\r\n\r\ndeclare var $: any;\r\n\r\n@Component({\r\n    templateUrl: './pole-details.html',\r\n    providers: [PoleService],\r\n})\r\nexport class PoleDetails implements OnInit {\r\n\r\n    poleId: string;\r\n    pole: Pole;\r\n    title: string = \"New Pole\";\r\n\r\n    constructor(\r\n        private location: Location,\r\n        private route: ActivatedRoute,\r\n        private poleService: PoleService,\r\n        private helper: Helper) {\r\n\r\n        this.pole = new Pole();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.route.params.subscribe(\r\n            params => {\r\n                this.poleId = params['id'];\r\n\r\n                if (this.poleId != null)\r\n                    this.title = \"Edit Pole\";\r\n                else {\r\n                    this.title = \"New Pole\";\r\n                }\r\n\r\n                this.getFormData(this.poleId);\r\n\r\n            });\r\n    }\r\n\r\n    getFormData(poleId: string) {\r\n\r\n\r\n\r\n        if (poleId != null) {\r\n\r\n            $(\"#ajax-loading\").show();\r\n\r\n            this.poleService.getPole(poleId).subscribe(\r\n                resp => {\r\n                    this.pole = new Pole();\r\n\r\n                    if (resp.status.toLowerCase() == \"error\") {\r\n                        this.helper.showAlertMessage(resp.message, \"error\");\r\n                    }\r\n                    else {\r\n                        if (resp.data != null) {\r\n                            this.pole = resp.data;\r\n                        }\r\n                    }\r\n\r\n                    $(\"#ajax-loading\").hide();\r\n                },\r\n                (err) => {\r\n                    $(\"#ajax-loading\").hide();\r\n                    this.pole = new Pole();\r\n                    this.helper.showAlertMessage(\"Unable to fetch pole details\", \"error\");\r\n                });\r\n        }\r\n        else\r\n            this.pole = new Pole();\r\n    }\r\n\r\n   async save() {\r\n      if (this.pole.id == undefined) {\r\n         var errorMessages = await this.validateEntity(this.pole);\r\n\r\n         if (errorMessages.length == 0) {\r\n\r\n            this.poleService.savePole(this.pole).subscribe(\r\n               resp => {\r\n\r\n                  if (resp.status.toLowerCase() == \"error\") {\r\n                     this.helper.showAlertMessage(resp.message, \"error\");\r\n                  }\r\n                  else {\r\n                     if (resp.data != null) {\r\n                        this.helper.showAlertMessage(\"Pole information saved\", \"success\");\r\n                        this.goBack();\r\n                     }\r\n                     else\r\n                        this.helper.showAlertMessage(\"Unable to save pole information.\", \"error\");\r\n                  }\r\n               },\r\n               (err) => {\r\n                  //let msg = `Unable to save user information : ${err.message}`;\r\n                  this.helper.showAlertMessage(\"Unable to save pole information.\", \"error\");\r\n               });\r\n         }\r\n         else {\r\n            this.helper.showAlertMessage(this.helper.getErrorMessagesText(errorMessages), \"error\");\r\n         }\r\n      } else {\r\n        \r\n\r\n            this.poleService.savePole(this.pole).subscribe(\r\n               resp => {\r\n\r\n                  if (resp.status.toLowerCase() == \"error\") {\r\n                     this.helper.showAlertMessage(resp.message, \"error\");\r\n                  }\r\n                  else {\r\n                     if (resp.data != null) {\r\n                        this.helper.showAlertMessage(\"Pole information saved\", \"success\");\r\n                        this.goBack();\r\n                     }\r\n                     else\r\n                        this.helper.showAlertMessage(\"Unable to save pole information.\", \"error\");\r\n                  }\r\n               },\r\n               (err) => {\r\n                  //let msg = `Unable to save user information : ${err.message}`;\r\n                  this.helper.showAlertMessage(\"Unable to save pole information.\", \"error\");\r\n               });\r\n         \r\n        \r\n      }\r\n    }\r\n\r\n    async validateEntity(pole: Pole): Promise<string[]> {\r\n        var errorMessages = [];\r\n\r\n        if (pole.name == null || pole.name.trim() == '')\r\n                errorMessages.push(\"Name cannot be empty.\");\r\n        else {\r\n            let resp = await this.poleService.checkNameExists(pole.name);\r\n\r\n           if (resp.message == 'false')\r\n              errorMessages.push(\"Name already exists.\");\r\n        }\r\n        //    if (user.loginId == null || user.loginId.trim() == \"\")\r\n        //        errorMessages.push(\"Login Id cannot be empty string\");\r\n\r\n        //    //if (user.password == null || user.password.trim() == \"\")\r\n        //    //   errorMessages.push(\"Password cannot be empty string\");\r\n\r\n        return errorMessages;\r\n    }\r\n\r\n    goBack(): void {\r\n        this.location.back();\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport { forkJoin } from 'rxjs';\r\n\r\nimport { Helper } from '../../common/helper';\r\nimport { SpliceClosureService } from '../services/spliceClosure.service';\r\nimport { SpliceClosure } from '../models/spliceClosure';\r\n\r\ndeclare var $: any;\r\n\r\n@Component({\r\n    templateUrl: './spliceClosure-details.html',\r\n    providers: [SpliceClosureService],\r\n})\r\nexport class SpliceClosureDetails implements OnInit {\r\n\r\n    spliceClosureId: string;\r\n    spliceClosure: SpliceClosure;\r\n    title: string = \"New SpliceClosure\";\r\n\r\n    constructor(\r\n        private location: Location,\r\n        private route: ActivatedRoute,\r\n        private spliceClosureService: SpliceClosureService,\r\n        private helper: Helper) {\r\n\r\n        this.spliceClosure = new SpliceClosure();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.route.params.subscribe(\r\n            params => {\r\n                this.spliceClosureId = params['id'];\r\n\r\n                if (this.spliceClosureId != null)\r\n                    this.title = \"Edit SpliceClosure\";\r\n                else {\r\n                    this.title = \"New SpliceClosure\";\r\n                }\r\n\r\n                this.getFormData(this.spliceClosureId);\r\n\r\n            });\r\n    }\r\n\r\n    getFormData(spliceClosureId: string) {\r\n\r\n        if (spliceClosureId != null) {\r\n\r\n            $(\"#ajax-loading\").show();\r\n\r\n            this.spliceClosureService.getSpliceClosure(spliceClosureId).subscribe(\r\n                resp => {\r\n                    this.spliceClosure = new SpliceClosure();\r\n\r\n                    if (resp.status.toLowerCase() == \"error\") {\r\n                        this.helper.showAlertMessage(resp.message, \"error\");\r\n                    }\r\n                    else {\r\n                        if (resp.data != null) {\r\n                            this.spliceClosure = resp.data;\r\n                        }\r\n                    }\r\n\r\n                    $(\"#ajax-loading\").hide();\r\n                },\r\n                (err) => {\r\n                    $(\"#ajax-loading\").hide();\r\n                    this.spliceClosure = new SpliceClosure();\r\n                    this.helper.showAlertMessage(\"Unable to fetch spliceClosure details\", \"error\");\r\n                });\r\n        }\r\n        else\r\n            this.spliceClosure = new SpliceClosure();\r\n    }\r\n\r\n   async save() {\r\n      if (this.spliceClosure.id == undefined) {\r\n         var errorMessages = await this.validateEntity(this.spliceClosure);\r\n\r\n         if (errorMessages.length == 0) {\r\n\r\n            this.spliceClosureService.saveSpliceClosure(this.spliceClosure).subscribe(\r\n               resp => {\r\n\r\n                  if (resp.status.toLowerCase() == \"error\") {\r\n                     this.helper.showAlertMessage(resp.message, \"error\");\r\n                  }\r\n                  else {\r\n                     if (resp.data != null) {\r\n                        this.helper.showAlertMessage(\"Splice Closure information saved\", \"success\");\r\n                        this.goBack();\r\n                     }\r\n                     else\r\n                        this.helper.showAlertMessage(\"Unable to save splice closure information.\", \"error\");\r\n                  }\r\n               },\r\n               (err) => {\r\n                  //let msg = `Unable to save user information : ${err.message}`;\r\n                  this.helper.showAlertMessage(\"Unable to save splice closure information.\", \"error\");\r\n               });\r\n         }\r\n         else {\r\n            this.helper.showAlertMessage(this.helper.getErrorMessagesText(errorMessages), \"error\");\r\n         }\r\n      } else {\r\n        \r\n            this.spliceClosureService.saveSpliceClosure(this.spliceClosure).subscribe(\r\n               resp => {\r\n\r\n                  if (resp.status.toLowerCase() == \"error\") {\r\n                     this.helper.showAlertMessage(resp.message, \"error\");\r\n                  }\r\n                  else {\r\n                     if (resp.data != null) {\r\n                        this.helper.showAlertMessage(\"Splice Closure information saved\", \"success\");\r\n                        this.goBack();\r\n                     }\r\n                     else\r\n                        this.helper.showAlertMessage(\"Unable to save splice closure information.\", \"error\");\r\n                  }\r\n               },\r\n               (err) => {\r\n                  //let msg = `Unable to save user information : ${err.message}`;\r\n                  this.helper.showAlertMessage(\"Unable to save splice closure information.\", \"error\");\r\n               });\r\n         \r\n      }\r\n    }\r\n\r\n    async validateEntity(spliceClosure: SpliceClosure): Promise<string[]> {\r\n        var errorMessages = [];\r\n\r\n        if (spliceClosure.name == null || spliceClosure.name.trim() == '')\r\n                errorMessages.push(\"Name cannot be empty.\");\r\n        else {\r\n            let resp = await this.spliceClosureService.checkNameExists(spliceClosure.name);\r\n\r\n           if (resp.message == 'false')\r\n              errorMessages.push(\"Name already exists.\");\r\n        }\r\n        //    if (user.loginId == null || user.loginId.trim() == \"\")\r\n        //        errorMessages.push(\"Login Id cannot be empty string\");\r\n\r\n        //    //if (user.password == null || user.password.trim() == \"\")\r\n        //    //   errorMessages.push(\"Password cannot be empty string\");\r\n\r\n        return errorMessages;\r\n    }\r\n\r\n    goBack(): void {\r\n        this.location.back();\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport { forkJoin } from 'rxjs';\r\n\r\nimport { Helper } from '../../common/helper';\r\nimport { SplitterService } from '../services/splitter.service';\r\nimport { Splitter } from '../models/splitter';\r\n\r\ndeclare var $: any;\r\n\r\n@Component({\r\n    templateUrl: './splitter-details.html',\r\n    providers: [SplitterService],\r\n})\r\nexport class SplitterDetails implements OnInit {\r\n\r\n    splitterId: string;\r\n    splitter: Splitter;\r\n    title: string = \"New Splitter\";\r\n\r\n    constructor(\r\n        private location: Location,\r\n        private route: ActivatedRoute,\r\n        private splitterService: SplitterService,\r\n        private helper: Helper) {\r\n\r\n        this.splitter = new Splitter();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.route.params.subscribe(\r\n            params => {\r\n                this.splitterId = params['id'];\r\n\r\n                if (this.splitterId != null)\r\n                    this.title = \"Edit Splitter\";\r\n                else {\r\n                    this.title = \"New Splitter\";\r\n                }\r\n\r\n                this.getFormData(this.splitterId);\r\n\r\n            });\r\n    }\r\n\r\n    getFormData(splitterId: string) {\r\n\r\n        if (splitterId != null) {\r\n\r\n            $(\"#ajax-loading\").show();\r\n\r\n            this.splitterService.getSplitter(splitterId).subscribe(\r\n                resp => {\r\n                    this.splitter = new Splitter();\r\n\r\n                    if (resp.status.toLowerCase() == \"error\") {\r\n                        this.helper.showAlertMessage(resp.message, \"error\");\r\n                    }\r\n                    else {\r\n                        if (resp.data != null) {\r\n                            this.splitter = resp.data;\r\n                        }\r\n                    }\r\n\r\n                    $(\"#ajax-loading\").hide();\r\n                },\r\n                (err) => {\r\n                    $(\"#ajax-loading\").hide();\r\n                    this.splitter = new Splitter();\r\n                    this.helper.showAlertMessage(\"Unable to fetch splitter details\", \"error\");\r\n                });\r\n        }\r\n        else\r\n            this.splitter = new Splitter();\r\n    }\r\n\r\n   async save() {\r\n      if (this.splitter.id == undefined) {\r\n         var errorMessages = await this.validateEntity(this.splitter);\r\n\r\n         if (errorMessages.length == 0) {\r\n\r\n            this.splitterService.saveSplitter(this.splitter).subscribe(\r\n               resp => {\r\n\r\n                  if (resp.status.toLowerCase() == \"error\") {\r\n                     this.helper.showAlertMessage(resp.message, \"error\");\r\n                  }\r\n                  else {\r\n                     if (resp.data != null) {\r\n                        this.helper.showAlertMessage(\"Splitter information saved\", \"success\");\r\n                        this.goBack();\r\n                     }\r\n                     else\r\n                        this.helper.showAlertMessage(\"Unable to save splitter information.\", \"error\");\r\n                  }\r\n               },\r\n               (err) => {\r\n                  //let msg = `Unable to save user information : ${err.message}`;\r\n                  this.helper.showAlertMessage(\"Unable to save splitter information.\", \"error\");\r\n               });\r\n         }\r\n         else {\r\n            this.helper.showAlertMessage(this.helper.getErrorMessagesText(errorMessages), \"error\");\r\n         }\r\n      } else {\r\n            this.splitterService.saveSplitter(this.splitter).subscribe(\r\n               resp => {\r\n\r\n                  if (resp.status.toLowerCase() == \"error\") {\r\n                     this.helper.showAlertMessage(resp.message, \"error\");\r\n                  }\r\n                  else {\r\n                     if (resp.data != null) {\r\n                        this.helper.showAlertMessage(\"Splitter information saved\", \"success\");\r\n                        this.goBack();\r\n                     }\r\n                     else\r\n                        this.helper.showAlertMessage(\"Unable to save splitter information.\", \"error\");\r\n                  }\r\n               },\r\n               (err) => {\r\n                  //let msg = `Unable to save user information : ${err.message}`;\r\n                  this.helper.showAlertMessage(\"Unable to save splitter information.\", \"error\");\r\n               });\r\n         \r\n      }\r\n    }\r\n\r\n    async validateEntity(splitter: Splitter): Promise<string[]> {\r\n        var errorMessages = [];\r\n\r\n        if (splitter.name == null || splitter.name.trim() == '')\r\n                errorMessages.push(\"Name cannot be empty.\");\r\n        else {\r\n            let resp = await this.splitterService.checkNameExists(splitter.name);\r\n\r\n           if (resp.message == 'false')\r\n              errorMessages.push(\"Name already exists.\");\r\n        }\r\n        //    if (user.loginId == null || user.loginId.trim() == \"\")\r\n        //        errorMessages.push(\"Login Id cannot be empty string\");\r\n\r\n        //    //if (user.password == null || user.password.trim() == \"\")\r\n        //    //   errorMessages.push(\"Password cannot be empty string\");\r\n\r\n        return errorMessages;\r\n    }\r\n\r\n    goBack(): void {\r\n        this.location.back();\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { GeneralSettingsRouting } from './generalSettings.routes';\r\nimport { GeneralSettingsService } from './services/generalSettings.service';\r\nimport { GeneralSettingsDetails } from './views/generalSettings-details';\r\n//import { ColorPickerModule } from '../../components/color-picker/color-picker.module';\r\n\r\n@NgModule({\r\n   imports: [\r\n      CommonModule,\r\n      FormsModule,\r\n      GeneralSettingsRouting,\r\n      //ColorPickerModule\r\n   ],\r\n   declarations: [\r\n      GeneralSettingsDetails\r\n   ],\r\n   providers: [\r\n      GeneralSettingsService\r\n   ]\r\n})\r\nexport class GeneralSettingsModule { }\r\n","import { ModuleWithProviders } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { GeneralSettingsDetails } from './views/generalSettings-details';\r\n\r\nexport const generalSettingsRoutes: Routes = [\r\n   {\r\n      path: 'generalSettings',\r\n      children: [\r\n         { path: '', component: GeneralSettingsDetails },\r\n      ]\r\n   },\r\n];\r\n\r\nexport const GeneralSettingsRouting: ModuleWithProviders = RouterModule.forChild(generalSettingsRoutes);\r\n","import { DbBaseEntity } from '../../common/models/dbBaseEntity';\r\n\r\nexport class GeneralSettings extends DbBaseEntity{\r\n   \r\n   //boundaryHierarchies: BoundaryHierarchy[];\r\n   //constructionStages: ConstructionStage[];\r\n   //activationStages: ActivationStage[];\r\n   //accessibilities: Accessibility[]\r\n   //hierarchyTypes: HierarchyType[];\r\n   //opticalLinkBudget: OpticalLinkBudget[];\r\n   //ofcUtilization: OFCUtilization[];\r\n\r\n   fileAttachmentLimit: number = 5;\r\n}\r\n\r\n//export class ConstructionStage {\r\n//   name: string;\r\n//   colorCode: string;\r\n//}\r\n//export class OFCUtilization {\r\n//   name: string;\r\n//   colorCode: string;\r\n//}\r\n\r\n//export class ActivationStage {\r\n//   name: string;\r\n//   colorCode: string;\r\n//}\r\n\r\n//export class Accessibility {\r\n//   name: string;\r\n//   colorCode: string;\r\n//}\r\n\r\n//export class HierarchyType {\r\n//   name: string;\r\n//   colorCode: string;\r\n//}\r\n\r\n//export class BoundaryHierarchy {\r\n//   name: string;\r\n//   colorCode: string;\r\n//}\r\n//export class OpticalLinkBudget {\r\n//   waveLengthName: string;\r\n//   cablelengthLoss: string;\r\n//   spliceLoss: string;\r\n//   patchingLoss: string;\r\n//   patchConnectorLoss: string;\r\n\r\n//}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient, HttpParams } from \"@angular/common/http\";\r\n\r\nimport { ServiceResponse } from '../../common/models/serviceResponse';\r\nimport { GeneralSettings } from '../model/generalSettings';\r\n\r\n\r\n@Injectable()\r\nexport class GeneralSettingsService {\r\n\r\n   getGeneralSettingsApi = 'GeneralSettings/GetGeneralSettings/';\r\n   saveGeneralSettingApi = 'GeneralSettings/SaveGeneralSettings/';\r\n\r\n   constructor(private http: HttpClient) { }\r\n\r\n   getGeneralSettings(): Observable<ServiceResponse> {\r\n\r\n      return this.http.get<ServiceResponse>(this.getGeneralSettingsApi);\r\n   }\r\n\r\n   saveGeneralSettings(generalSettings: GeneralSettings): Observable<ServiceResponse> {\r\n\r\n      return this.http.post<ServiceResponse>(this.saveGeneralSettingApi, generalSettings);\r\n   }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { forkJoin } from 'rxjs';\r\n\r\nimport { GeneralSettings } from '../model/generalSettings';\r\nimport { GeneralSettingsService } from '../services/generalSettings.service';\r\nimport { Helper } from '../../common/helper';\r\n\r\ndeclare var $: any\r\n\r\n@Component({\r\n   templateUrl: './generalSetting-details.html',\r\n   providers: [GeneralSettingsService],\r\n})\r\nexport class GeneralSettingsDetails implements OnInit {\r\n\r\n   generalSettings: GeneralSettings = new GeneralSettings();\r\n\r\n   constructor(\r\n      private router: Router,\r\n      private route: ActivatedRoute,\r\n      private generalSettingsService: GeneralSettingsService,\r\n      private helper: Helper) { }\r\n\r\n   ngOnInit() {\r\n       this.getFormData();\r\n   }\r\n\r\n   //public settings: PaletteSettings = {\r\n   //   //palette: [\r\n   //   //   \"#7f8000\", \"#00ff00\", \"#0017ff\", \"#0098b3\",\r\n   //   //   \"#9000ec\", \"#108810\", \"#505050\", \"#ffe134\", \"#ff0000\",\r\n   //   //   \"#ff1193\"\r\n   //   //],\r\n   //   palette: [\r\n   //      \"#00ff00\", \"#0017ff\", \"#9000ec\", \"#ffe134\", \"#ff0000\",\r\n   //   ],\r\n   //   columns: 5,\r\n   //   tileSize: 25\r\n   //}\r\n\r\n  // addBoundaryHierarchy() {\r\n  //    if (this.generalSettings.boundaryHierarchies == null)\r\n  //       this.generalSettings.boundaryHierarchies = [];\r\n\r\n  //    this.generalSettings.boundaryHierarchies.push({ name: \"\", colorCode: \"\" });\r\n  // }\r\n\r\n  // deleteboundaryHierarchy(index) {\r\n  //    this.generalSettings.boundaryHierarchies.splice(index, 1);\r\n  // }\r\n\r\n  ///* addUtilization() {\r\n\r\n  //    if (this.generalSettings.ofcUtilization == null)\r\n  //       this.generalSettings.ofcUtilization = [];\r\n\r\n  //    this.generalSettings.ofcUtilization.push({ name: \"\", colorCode: \"\" });\r\n  // }\r\n\r\n  // deleteofcUtilization(index) {\r\n  //    this.generalSettings.ofcUtilization.splice(index, 1);\r\n  // }*/\r\n  // addConstructionStage() {\r\n\r\n  //    if (this.generalSettings.constructionStages == null)\r\n  //       this.generalSettings.constructionStages = [];\r\n\r\n  //    this.generalSettings.constructionStages.push({ name: \"\", colorCode: \"#0017ff\" });\r\n  // }\r\n\r\n  // deleteConstructionStage(index) {\r\n  //    this.generalSettings.constructionStages.splice(index, 1);\r\n  // }\r\n\r\n  // addActivationStage() {\r\n\r\n  //    if (this.generalSettings.activationStages == null)\r\n  //       this.generalSettings.activationStages = [];\r\n\r\n  //    this.generalSettings.activationStages.push({ name: \"\", colorCode: \"#0017ff\" });\r\n  // }\r\n\r\n  // deleteActivationStage(index) {\r\n  //    this.generalSettings.activationStages.splice(index, 1);\r\n  // }\r\n\r\n  // addAccessibility() {\r\n\r\n  //    if (this.generalSettings.accessibilities == null)\r\n  //       this.generalSettings.accessibilities = [];\r\n\r\n  //    this.generalSettings.accessibilities.push({ name: \"\", colorCode: \"#0017ff\" });\r\n  // }\r\n\r\n  // deleteAccessibility(index) {\r\n  //    this.generalSettings.accessibilities.splice(index, 1);\r\n  // }\r\n\r\n  // addHierarchyType() {\r\n\r\n  //    if (this.generalSettings.hierarchyTypes == null)\r\n  //       this.generalSettings.hierarchyTypes = [];\r\n\r\n  //    this.generalSettings.hierarchyTypes.push({ name: \"\", colorCode: \"#0017ff\" });\r\n  // }\r\n\r\n  // deleteHierarchyType(index) {\r\n  //    this.generalSettings.hierarchyTypes.splice(index, 1);\r\n  // }\r\n  // addOpticalLinkBudget() {\r\n\r\n  //    if (this.generalSettings.opticalLinkBudget == null)\r\n  //       this.generalSettings.opticalLinkBudget = [];\r\n\r\n  //    this.generalSettings.opticalLinkBudget.push({ waveLengthName: \"\", cablelengthLoss: \"\", spliceLoss: \"\", patchingLoss: \"\", patchConnectorLoss:\"\"});\r\n  // }\r\n\r\n  // deleteOpticalLinkBudget(index) {\r\n  //    this.generalSettings.opticalLinkBudget.splice(index, 1);\r\n  // }\r\n    getFormData() {\r\n        $(\"#ajax-loading\").show();\r\n\r\n        this.generalSettingsService.getGeneralSettings().subscribe(\r\n            resp => {\r\n                this.generalSettings = new GeneralSettings();\r\n\r\n                if (resp.status.toLowerCase() == \"error\") {\r\n                    this.helper.showAlertMessage(resp.message, \"error\");\r\n                }\r\n                else {\r\n                    if (resp.data != null) {\r\n                        this.generalSettings = resp.data;\r\n                    }\r\n                }\r\n\r\n                $(\"#ajax-loading\").hide();\r\n            },\r\n            (err) => {\r\n                $(\"#ajax-loading\").hide();\r\n                this.generalSettings = new GeneralSettings();\r\n                let msg = `Unable to fetch general settings : ${err.message}`;\r\n                this.helper.showAlertMessage(msg, \"error\");\r\n            });\r\n\r\n   }\r\n\r\n   save() {\r\n\r\n      var errorMessages = this.validateGeneralSetting(this.generalSettings);\r\n\r\n      if (errorMessages.length == 0) {\r\n\r\n         this.generalSettingsService.saveGeneralSettings(this.generalSettings).subscribe(\r\n            resp => {\r\n\r\n               if (resp && resp.data && resp.status.toLowerCase() == \"ok\")\r\n                  this.helper.showAlertMessage(\"General settings are saved\", \"success\");\r\n               else\r\n                  this.helper.showAlertMessage(\"error saving general settings\", \"error\");\r\n            },\r\n            err => {\r\n               this.helper.showAlertMessage(\"Unable to save general settings.\", \"error\");\r\n            });\r\n      }\r\n      else {\r\n         this.helper.showAlertMessage(this.helper.getErrorMessagesText(errorMessages), \"error\");\r\n      }\r\n   }\r\n\r\n   validateGeneralSetting(generalSetting: GeneralSettings): string[] {\r\n      var errorMessages = [];\r\n\r\n       if (generalSetting.fileAttachmentLimit < 0 || generalSetting.fileAttachmentLimit > 20)\r\n         errorMessages.push(\"File attachments must be within the range of 0 to 20 MBs\")\r\n      \r\n      return errorMessages;\r\n   }\r\n   \r\n   //public restrictAlpha(event): boolean {\r\n   //  // var event = e.keyCode == 0 ? e.charCode : e.keyCode;\r\n   //   return (event.charCode > 96 && event.charCode < 123) || (event.charCode > 64 && event.charCode < 91) || (event.charCode >= 48 && event.charCode <= 57) || event.charCode <= 32;\r\n   //}\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { CheckboxModule } from 'primeng/checkbox';\r\n\r\nimport { TreeTableModule } from 'primeng/treetable';\r\n\r\nimport { GroupList } from './views/group-list';\r\nimport { GroupDetails } from './views/group-details';\r\nimport { GroupService } from './services/group.service';\r\nimport { GroupRouting } from './group.routes';\r\nimport { SharedModule } from '../shared.module';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        CheckboxModule,\r\n        TreeTableModule,\r\n        GroupRouting,\r\n        SharedModule\r\n    ],\r\n    declarations: [\r\n        GroupList,\r\n        GroupDetails\r\n    ],\r\n    providers: [\r\n        GroupService\r\n    ]\r\n})\r\nexport class GroupModule { }\r\n","import { ModuleWithProviders } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { GroupList } from './views/group-list';\r\nimport { GroupDetails } from './views/group-details';\r\n\r\nexport const groupRoutes: Routes = [\r\n   {\r\n      path: 'groups',\r\n      children: [\r\n         { path: '', component: GroupList },\r\n         { path: 'details', component: GroupDetails },\r\n         { path: 'details/:id', component: GroupDetails },\r\n      ]\r\n   },\r\n];\r\n\r\nexport const GroupRouting: ModuleWithProviders = RouterModule.forChild(groupRoutes);\r\n","import { DbBaseEntity } from '../../common/models/dbBaseEntity';\r\n\r\nexport class Group extends DbBaseEntity {\r\n\r\n    name: string;\r\n    description: string;\r\n    moduleFeatures: ModuleFeature[];\r\n}\r\n\r\nexport class ModuleFeature {\r\n\r\n    moduleId: string;\r\n    moduleName: string;\r\n    featureCodes: string[];\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient, HttpParams } from \"@angular/common/http\";\r\n\r\nimport { Group } from '../models/group';\r\nimport { PaginationRequest, SortOrder } from '../../common/models/paginationRequest';\r\nimport { PaginationResponse } from '../../common/models/paginationResponse';\r\nimport { ServiceResponse } from '../../common/models/serviceResponse';\r\n\r\n@Injectable()\r\nexport class GroupService {\r\n\r\n   getGroupsApi = 'Groups/GetGroups/';\r\n   getGroupApi = 'Groups/GetGroup/';\r\n   checkNameExistsApi = 'Groups/CheckNameExists/';\r\n   saveGroupApi = 'Groups/SaveGroup/';\r\n   deleteGroupApi = 'Groups/DeleteGroup/';\r\n\r\n   constructor(private http: HttpClient) { }\r\n\r\n   getGroups(paginationRequest: PaginationRequest): Observable<PaginationResponse> {\r\n\r\n      if (paginationRequest == null)\r\n         paginationRequest = {\r\n            page: null,\r\n            pageSize: null,\r\n            filter: null,\r\n            order: {\r\n               orderByProperty: \"name\",\r\n               sortOrder: SortOrder.descending\r\n            }\r\n         };\r\n\r\n      return this.http.post<PaginationResponse>(this.getGroupsApi, paginationRequest);\r\n   }\r\n\r\n   getGroup(groupId): Observable<ServiceResponse> {\r\n\r\n      const params = new HttpParams()\r\n         .set('groupId', groupId);\r\n\r\n      return this.http.get<ServiceResponse>(this.getGroupApi, { params });\r\n   }\r\n\r\n   async checkNameExists(name: string): Promise<ServiceResponse> {\r\n\r\n      const params = new HttpParams()\r\n         .set('name', name);\r\n\r\n      return await this.http.get<ServiceResponse>(this.checkNameExistsApi, { params }).toPromise();\r\n   }\r\n\r\n   saveGroup(group: Group): Observable<ServiceResponse> {\r\n\r\n      return this.http.post<ServiceResponse>(this.saveGroupApi, group);\r\n   }\r\n\r\n   deleteGroup(groupId: string): Observable<ServiceResponse> {\r\n\r\n      const params = new HttpParams()\r\n         .set('groupId', groupId);\r\n\r\n      return this.http.delete<ServiceResponse>(this.deleteGroupApi, { params });\r\n   }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport { forkJoin } from 'rxjs';\r\n\r\nimport { Group } from '../models/group';\r\nimport { GroupService } from '../services/group.service';\r\nimport { Helper } from '../../common/helper';\r\nimport { Module } from '../../modules/models/module';\r\nimport { ModuleService } from '../../modules/services/module.service';\r\n\r\n\r\n@Component({\r\n   templateUrl: './group-details.html',\r\n   providers: [GroupService, ModuleService],\r\n})\r\nexport class GroupDetails implements OnInit {\r\n\r\n   groupId: string = \"\";\r\n   group: Group = new Group();\r\n   modules: Module[] = new Array<Module>();\r\n   treeModules: any;\r\n   selectedModules: any;\r\n   title: string = \"New Group\";\r\n\r\n   constructor(\r\n      private location: Location,\r\n      private route: ActivatedRoute,\r\n      private groupService: GroupService,\r\n      private moduleService: ModuleService,\r\n      private helper: Helper) { }\r\n\r\n\r\n   ngOnInit() {\r\n      this.route.params.subscribe(\r\n         params => {\r\n            this.groupId = params['id'];\r\n\r\n            if (this.groupId == null)\r\n               this.title = \"New Group\";\r\n            else\r\n               this.title = \"Edit Group\";\r\n\r\n            this.getFormData(this.groupId);\r\n         });\r\n   }\r\n\r\n   getFormData(groupId: string) {\r\n\r\n      let groupsSvc = this.groupService.getGroup(groupId);\r\n      let modulesSvc = this.moduleService.getModules(null);\r\n\r\n      forkJoin([modulesSvc, groupsSvc]).subscribe(results => {\r\n\r\n         if (results[0] && results[0].data) {\r\n            this.modules = results[0].data;\r\n\r\n            let treeNodes = [];\r\n\r\n            this.modules.forEach(m => {\r\n               let parentId = m.parentId == null ? \"0\" : m.parentId;\r\n               treeNodes.push({ name: m.name, id: m.id, parentId: parentId });\r\n               m.features.forEach(f => {\r\n                  treeNodes.push({ name: f.name, id: f.code, parentId: m.id, isFeature: true });\r\n               });\r\n            });\r\n\r\n            this.treeModules = this.helper.generateTreeTable(treeNodes, \"0\", true);\r\n         }\r\n\r\n         if (groupId && results[1]) {\r\n\r\n            if (results[1].status.toLowerCase() == \"error\") {\r\n               this.helper.showAlertMessage(results[1].message, \"error\");\r\n            }\r\n            else {\r\n               if (results[1].data != null) {\r\n                  this.group = results[1].data;\r\n                  this.selectedModules = [];\r\n\r\n                  //this.group.modules.forEach(x => {\r\n                  //    let module = this.treeModules.find(m => m.id == x);\r\n                  //    //module.parent = null;\r\n\r\n                  //    //module.partialSelected = false;\r\n                  //    this.selectedModules.push(module);\r\n                  //});\r\n\r\n                  this.group.moduleFeatures.forEach(x => {\r\n\r\n                     x.featureCodes.forEach(code => {\r\n\r\n                        var node = null;\r\n\r\n                        for (var i = 0; i < this.treeModules.length; i++) {\r\n                           node = this.helper.findNode(code, this.treeModules[i]);\r\n\r\n                           if (node) break;\r\n                        }\r\n\r\n                        if (node) {\r\n                           this.selectedModules.push(node);\r\n                        }\r\n                     });\r\n\r\n                  });\r\n               }\r\n               else\r\n                  this.helper.showAlertMessage(results[1].message, \"error\");\r\n            }\r\n         }\r\n         else\r\n            this.group = new Group();\r\n      });\r\n   }\r\n\r\n   async saveGroup() {\r\n\r\n      let errorMessages = await this.validateGroup(this.group);\r\n\r\n      this.group.moduleFeatures = [];\r\n\r\n      var features = this.selectedModules.filter(x => x.isFeature == true);\r\n\r\n      features.forEach(f => {\r\n         var index = this.group.moduleFeatures.findIndex(x => x.moduleId == f.parentId);\r\n\r\n         if (index < 0) {\r\n            this.group.moduleFeatures.push({\r\n               moduleId: f.parentId,\r\n               moduleName: f.parent.name,\r\n               featureCodes: [f.id]\r\n            });\r\n         }\r\n         else {\r\n            this.group.moduleFeatures[index].featureCodes.push(f.id);\r\n         }\r\n      });\r\n\r\n      if (errorMessages.length == 0) {\r\n\r\n         this.groupService.saveGroup(this.group).subscribe(\r\n            resp => {\r\n               if (resp.status.toLowerCase() == \"error\") {\r\n                  this.helper.showAlertMessage(resp.message, \"error\");\r\n               }\r\n               else {\r\n                  if (resp.data != null) {\r\n                     this.helper.showAlertMessage(\"Group information saved\", \"success\");\r\n                     this.goBack();\r\n                  }\r\n                  else\r\n                     this.helper.showAlertMessage(\"Unable to save group information.\", \"error\");\r\n               }\r\n            },\r\n            (err) => {\r\n               this.helper.showAlertMessage(\"Unable to save group information.\", \"error\");\r\n            });\r\n      }\r\n      else {\r\n         let errorMessage = this.helper.getErrorMessagesText(errorMessages);\r\n         this.helper.showAlertMessage(errorMessage, \"error\");\r\n      }\r\n   }\r\n\r\n   async validateGroup(group: Group): Promise<string[]> {\r\n      let errorMessages = [];\r\n\r\n      if (group.name == null || group.name.trim() == '')\r\n         errorMessages.push(\"Group name cannot be empty\");\r\n      else {\r\n         if (group.id == undefined) {\r\n            let resp = await this.groupService.checkNameExists(group.name);\r\n\r\n            //if (resp.data != null && resp.data != group.id)\r\n            if (resp.data != false && resp.data != group.id)\r\n               errorMessages.push(\"Name already exists.\");\r\n         }\r\n      }\r\n      return errorMessages;\r\n   }\r\n\r\n   goBack(): void {\r\n      this.location.back();\r\n   }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Group } from '../models/group';\r\nimport { GroupService } from '../services/group.service';\r\nimport { Helper } from '../../common/helper';\r\nimport { SortOrder, SearchFilter, ConditionOperator, Filter, Operator } from '../../common/models/paginationRequest';\r\nimport { SearchField } from '../../common/models/SearchField';\r\n\r\ndeclare var $: any;\r\ndeclare var jBox: any;\r\n\r\n@Component({\r\n    templateUrl: './group-list.html',\r\n    providers: [GroupService]\r\n})\r\nexport class GroupList implements OnInit {\r\n\r\n    groups = new Array<Group>();\r\n    statusMessage: string = \"\";\r\n    pageSize = 10;\r\n    currentPage = 1;\r\n    totalPages = 1;\r\n    searchFields: SearchField[];\r\n    searchFilter: SearchFilter;\r\n    sortColumn: string;\r\n    sortOrder: SortOrder = SortOrder.descending;\r\n    previousElement: HTMLElement;\r\n\r\n    constructor(\r\n        private groupService: GroupService,\r\n        private helper: Helper) {\r\n\r\n        this.searchFields = new Array<SearchField>();\r\n        this.searchFields.push({ field: 'Name', label: 'Name', dataType: \"text\", value: \"\" });\r\n        this.searchFields.push({ field: 'Description', label: 'Description', dataType: \"text\", value: \"\" });\r\n        this.searchFields.push({ field: 'UpdatedBy', label: 'Updated By', dataType: \"text\", value: \"\" });\r\n        this.searchFields.push({ field: 'UpdatedDate', label: 'Updated On', dataType: \"date\", value: \"\" });\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.statusMessage = \"Loading Groups...\";\r\n        this.pageSize = 10;\r\n        this.currentPage = 1;\r\n        this.sortColumn = null;\r\n        this.sortOrder = SortOrder.noSort;\r\n        this.getFormData();\r\n    }\r\n\r\n    getFormData() {\r\n\r\n        $(\"#ajax-loading\").show();\r\n\r\n        this.totalPages = 1;\r\n\r\n        let paginationRequest = {\r\n            page: this.currentPage,\r\n            pageSize: this.pageSize,\r\n            filter: this.searchFilter,\r\n            order: {\r\n                orderByProperty: this.sortColumn,\r\n                sortOrder: this.sortOrder\r\n            }\r\n        };\r\n\r\n        this.groupService.getGroups(paginationRequest).subscribe(\r\n            resp => {\r\n                this.groups = null;\r\n\r\n                if (resp.status.toLowerCase() == \"error\") {\r\n                    this.statusMessage = resp.message;\r\n                    this.helper.showAlertMessage(this.statusMessage, \"error\");\r\n                }\r\n                else {\r\n                    if (resp.data != null && resp.data.length > 0) {\r\n                        this.groups = resp.data;\r\n                        this.totalPages = Math.ceil(resp.recordCount / this.pageSize);\r\n                    }\r\n                    else {\r\n                        this.statusMessage = \"There are no registered groups.\";\r\n                    }\r\n                }\r\n\r\n                $(\"#ajax-loading\").hide();\r\n            },\r\n            (err) => {\r\n                $(\"#ajax-loading\").hide();\r\n                this.groups = null;\r\n                let msg = `Unable to fetch groups : ${err.message}`;\r\n                this.helper.showAlertMessage(msg, \"error\");\r\n                this.statusMessage = \"Error fetching groups.\";\r\n            });\r\n    }\r\n\r\n    search(searchFilter) {\r\n\r\n        this.searchFilter = searchFilter;\r\n        this.getFormData();\r\n    }\r\n\r\n    onPageSizeChange(pageSize) {\r\n        this.pageSize = pageSize;\r\n        this.getFormData();\r\n    }\r\n\r\n    onPageChange(currentPage) {\r\n        this.currentPage = currentPage;\r\n        this.getFormData();\r\n    }\r\n\r\n    onColumnClick(e: HTMLElement) {\r\n\r\n        if (this.previousElement && e.getAttribute('data-column') != this.previousElement.getAttribute('data-column')) {\r\n            this.previousElement.classList.remove('table-sorter-desc');\r\n            this.previousElement.classList.remove('table-sorter-asc');\r\n        }\r\n\r\n        this.previousElement = e;\r\n\r\n        this.sortColumn = e.getAttribute('data-column');\r\n\r\n        if (e.classList.contains(\"table-sorter-asc\")) {\r\n            e.classList.remove('table-sorter-asc');\r\n            e.classList.add('table-sorter-desc');\r\n            this.sortOrder = SortOrder.descending;\r\n        }\r\n        else if (e.classList.contains(\"table-sorter-desc\")) {\r\n            e.classList.remove('table-sorter-desc');\r\n            this.sortColumn = null;\r\n            this.sortOrder = SortOrder.noSort;\r\n        }\r\n        else {\r\n            e.classList.add('table-sorter-asc');\r\n            this.sortOrder = SortOrder.ascending;\r\n        }\r\n\r\n        this.getFormData();\r\n    }\r\n    \r\n    delete(group: Group) {\r\n        new jBox(\"Confirm\", {\r\n            minWidth: 500,\r\n            minHeight: 70,\r\n            title: \"<b>Delete Group</b>\",\r\n            overlay: false,\r\n            content: \"Do you want to delete group - \" + group.name,\r\n            draggable: \"title\",\r\n            confirmButton: \"Yes\",\r\n            cancelButton: \"No\",\r\n            confirm: () => {\r\n                this.groupService.deleteGroup(group.id).subscribe(\r\n                    resp => {\r\n                        if (resp.status.toLowerCase() == \"error\") {\r\n                            this.helper.showAlertMessage(resp.message, \"error\");\r\n                        }\r\n                        else {\r\n                            if (resp.data != null) {\r\n                                this.helper.showAlertMessage(\"Group deleted.\", \"success\");\r\n                                this.getFormData();\r\n                            }\r\n                            else {\r\n                                this.helper.showAlertMessage(\"Error deleting group\", \"error\");\r\n                            }\r\n                        }\r\n                    },\r\n                    (err) => {\r\n                        this.helper.showAlertMessage(\"Error deleting group\", \"error\");\r\n                    });\r\n            }\r\n        }).open();\r\n    }\r\n\r\n    //getPermission(featureCode: string, accessType: string): boolean {\r\n    //   return this.accountService.getPermission(featureCode, accessType);\r\n    //}\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { CheckboxModule } from 'primeng/checkbox';\r\n\r\nimport { TreeTableModule } from 'primeng/treetable';\r\n\r\nimport { LayerList } from './views/layer-list';\r\nimport { LayerDetails } from './views/layer-details';\r\nimport { LayerService } from './services/layer.service';\r\nimport { LayerRouting } from './layer.routes';\r\nimport { SharedModule } from '../shared.module';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        CheckboxModule,\r\n        TreeTableModule,\r\n        LayerRouting,\r\n        SharedModule\r\n    ],\r\n    declarations: [\r\n        LayerList,\r\n        LayerDetails\r\n    ],\r\n    providers: [\r\n        LayerService\r\n    ]\r\n})\r\nexport class LayerModule { }\r\n","import { ModuleWithProviders } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { LayerList } from './views/layer-list';\r\nimport { LayerDetails } from './views/layer-details';\r\n\r\nexport const layerRoutes: Routes = [\r\n   {\r\n      path: 'layers',\r\n      children: [\r\n         { path: '', component: LayerList },\r\n         { path: 'details', component: LayerDetails },\r\n         { path: 'details/:id', component: LayerDetails },\r\n      ]\r\n   },\r\n];\r\n\r\nexport const LayerRouting: ModuleWithProviders = RouterModule.forChild(layerRoutes);\r\n\r\n\r\n\r\n","import { DbBaseEntity } from '../../common/models/dbBaseEntity';\r\n\r\nexport class Layer extends DbBaseEntity {\r\n    name: string;\r\n    description: string;\r\n    modulePermissions: ModulePermission[];\r\n}\r\n\r\nexport class ModulePermission {\r\n    moduleId: string;\r\n    permissionCodes: string[];\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { HttpClient, HttpParams } from \"@angular/common/http\";\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { Layer } from '../models/layer';\r\nimport { PaginationRequest, SortOrder } from '../../common/models/paginationRequest';\r\nimport { PaginationResponse } from '../../common/models/paginationResponse';\r\nimport { ServiceResponse } from '../../common/models/serviceResponse';\r\n\r\n@Injectable()\r\nexport class LayerService {\r\n\r\n   getLayersApi = 'Layers/GetLayers/';\r\n   getLayerApi = 'Layers/GetLayer/';\r\n   saveLayerApi = 'Layers/SaveLayer/';\r\n   deleteLayerApi = 'Layers/DeleteLayer/';\r\n\r\n   allLayers: Layer[];\r\n\r\n   constructor(private http: HttpClient) { }\r\n\r\n   getLayers(paginationRequest: PaginationRequest): Observable<PaginationResponse> {\r\n\r\n      if (paginationRequest == null)\r\n         paginationRequest = {\r\n            page: null,\r\n            pageSize: null,\r\n            filter: null,\r\n            order: {\r\n               orderByProperty: \"name\",\r\n               sortOrder: SortOrder.descending\r\n            }\r\n         };\r\n\r\n      return this.http.post<PaginationResponse>(this.getLayersApi, paginationRequest);\r\n   }\r\n\r\n   getLayer(layerId): Observable<ServiceResponse> {\r\n\r\n      const params = new HttpParams()\r\n         .set('layerId', layerId);\r\n\r\n      return this.http.get<ServiceResponse>(this.getLayerApi, { params });\r\n   }\r\n\r\n   saveLayer(layer: Layer): Observable<ServiceResponse> {\r\n\r\n      return this.http.post<ServiceResponse>(this.saveLayerApi, layer);\r\n   }\r\n\r\n   deleteLayer(layerId: string): Observable<ServiceResponse> {\r\n\r\n      const params = new HttpParams()\r\n         .set('layerId', layerId);\r\n\r\n      return this.http.delete<ServiceResponse>(this.deleteLayerApi, { params });\r\n   }\r\n\r\n   //getAllLayers(): Observable<Layer[]> {\r\n\r\n   //   if (this.allLayers)\r\n   //      return of(this.allLayers) as Observable<Layer[]>;\r\n\r\n   //   return this.http.get<ServiceResponse>(this.getLayersApi)\r\n   //      .pipe(\r\n   //         map(svcResponse => {\r\n\r\n   //            if (svcResponse.status.toLowerCase() == \"ok\") {\r\n\r\n   //               this.allLayers = svcResponse.data;\r\n\r\n   //               return this.allLayers;\r\n   //            }\r\n   //            else {\r\n   //               throw Observable.throw(new Error(svcResponse.message));\r\n   //            }\r\n\r\n   //         }),\r\n   //         //err => Observable.throw(err)\r\n   //      );\r\n   //}\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport { forkJoin } from 'rxjs';\r\n\r\nimport { LayerService } from '../services/layer.service';\r\nimport { ModuleService } from '../../modules/services/module.service';\r\nimport { Helper } from '../../common/helper';\r\nimport { Layer } from '../models/layer';\r\nimport { Module } from '../../modules/models/module';\r\nimport { TreeNode } from 'primeng/components/common/treenode';\r\n\r\n@Component({\r\n    templateUrl: './layer-details.html',\r\n    providers: [LayerService, ModuleService],\r\n})\r\nexport class LayerDetails implements OnInit {\r\n\r\n    layerId: string = \"\";\r\n    layer: Layer = new Layer();\r\n    modules: Module[] = new Array<Module>();\r\n    treeModules: any;\r\n    selectedModules: any;\r\n    title: string = \"New Layer\";\r\n\r\n    constructor(\r\n        private location: Location,\r\n        private route: ActivatedRoute,\r\n        private layerService: LayerService,\r\n        private moduleService: ModuleService,\r\n        private helper: Helper) { }\r\n\r\n    ngOnInit() {\r\n        this.route.params.subscribe(\r\n            params => {\r\n                this.layerId = params['id'];\r\n\r\n                if (this.layerId == null)\r\n                    this.title = \"New Layer\";\r\n                else\r\n                    this.title = \"Edit Layer\";\r\n\r\n                this.getFormData(this.layerId);\r\n            });\r\n    }\r\n\r\n    getFormData(layerId: string) {\r\n\r\n        let layersSvc = this.layerService.getLayer(layerId);\r\n        let modulesSvc = this.moduleService.getModules(null);\r\n\r\n        forkJoin([modulesSvc, layersSvc]).subscribe(results => {\r\n\r\n            if (results[0] && results[0].data) {\r\n                this.modules = results[0].data;\r\n\r\n                let treeNodes = [];\r\n\r\n                this.modules.forEach(m => {\r\n                    let parentId = m.parentId == null ? \"0\" : m.parentId;\r\n                    treeNodes.push({ name: m.name, id: m.id, parentId: parentId });\r\n                    m.permissions.forEach(f => {\r\n                        treeNodes.push({ id: f.code, name: f.name, parentId: m.id, isPermission: true });\r\n                    });\r\n                });\r\n\r\n                this.treeModules = this.helper.generateTreeTable(treeNodes, \"0\", true);\r\n            }\r\n\r\n            if (layerId && results[1]) {\r\n                if (results[1].status.toLowerCase() == \"error\") {\r\n                    this.helper.showAlertMessage(results[1].message, \"error\");\r\n                }\r\n                else {\r\n                    if (results[1].data != null) {\r\n                        this.layer = results[1].data;\r\n                        this.selectedModules = [];\r\n\r\n                        this.layer.modulePermissions.forEach(x => {\r\n\r\n                            //this.checkNode(this.treeModules, x.permissionCodes);\r\n\r\n                            x.permissionCodes.forEach(code => {\r\n\r\n                                var node = null;\r\n\r\n                                for (var i = 0; i < this.treeModules.length; i++) {\r\n                                    node = this.helper.findNode(code, this.treeModules[i]);\r\n\r\n                                    if (node) break;\r\n                                }\r\n\r\n                                if (node) {\r\n                                    this.selectedModules.push(node);\r\n                                }\r\n                            });\r\n\r\n                        });\r\n                    }\r\n                    else\r\n                        this.helper.showAlertMessage(results[1].message, \"error\");\r\n                }\r\n            }\r\n            else\r\n                this.layer = new Layer();\r\n        });\r\n    }\r\n\r\n    //checkNode(nodes: any, str: string[]) {\r\n    //    for (let i = 0; i < nodes.length; i++) {\r\n    //        //if (!nodes[i].leaf && nodes[i].children[0].leaf) {\r\n    //            for (let j = 0; j < nodes[i].children.length; j++) {\r\n    //                if (str.includes(nodes[i].children[j].id)) {\r\n    //                    if (!this.selectedModules.includes(nodes[i].children[j])) {\r\n    //                        this.selectedModules.push(nodes[i].children[j]);\r\n    //                    }\r\n    //                }\r\n    //            }\r\n    //        //}\r\n    //        //if (nodes[i].leaf) {\r\n    //        //    return;\r\n    //        //}\r\n    //        this.checkNode(nodes[i].children, str);\r\n    //        let count = nodes[i].children.length;\r\n    //        let c = 0;\r\n    //        for (let j = 0; j < nodes[i].children.length; j++) {\r\n    //            if (this.selectedModules.includes(nodes[i].children[j])) {\r\n    //                c++;\r\n    //            }\r\n    //            if (nodes[i].children[j].partialSelected) nodes[i].partialSelected = true;\r\n    //        }\r\n    //        if (c == 0) { }\r\n    //        else if (c == count) {\r\n    //            nodes[i].partialSelected = false;\r\n    //            if (!this.selectedModules.includes(nodes[i])) {\r\n    //                this.selectedModules.push(nodes[i]);\r\n    //            }\r\n    //        }\r\n    //        else {\r\n    //            nodes[i].partialSelected = true;\r\n    //        }\r\n    //    }\r\n    //}\r\n\r\n    save() {\r\n\r\n        let errorMessages = this.validateLayer(this.layer);\r\n\r\n        this.layer.modulePermissions = [];\r\n\r\n        var features = this.selectedModules.filter(x => x.isPermission == true);\r\n\r\n        features.forEach(f => {\r\n            var index = this.layer.modulePermissions.findIndex(x => x.moduleId == f.parentId);\r\n\r\n            if (index < 0) {\r\n\r\n\r\n                this.layer.modulePermissions.push({\r\n                    moduleId: f.parentId,\r\n                    permissionCodes: [f.id]\r\n                });\r\n            }\r\n            else {\r\n                this.layer.modulePermissions[index].permissionCodes.push(f.id);\r\n            }\r\n        });\r\n\r\n        if (errorMessages.length == 0) {\r\n\r\n            this.layerService.saveLayer(this.layer).subscribe(\r\n                resp => {\r\n                    if (resp.status.toLowerCase() == \"error\") {\r\n                        this.helper.showAlertMessage(resp.message, \"error\");\r\n                    }\r\n                    else {\r\n                        if (resp.data != null) {\r\n                            this.helper.showAlertMessage(\"Layer information saved\", \"success\");\r\n                            this.goBack();\r\n                        }\r\n                        else\r\n                            this.helper.showAlertMessage(\"Unable to save layer information.\", \"error\");\r\n                    }\r\n                },\r\n                (err) => {\r\n                    this.helper.showAlertMessage(\"Unable to save layer information.\", \"error\");\r\n                });\r\n        }\r\n        else {\r\n            let errorMessage = this.helper.getErrorMessagesText(errorMessages);\r\n            this.helper.showAlertMessage(errorMessage, \"error\");\r\n        }\r\n    }\r\n\r\n    validateLayer(layer: Layer): string[] {\r\n        let errorMessages = [];\r\n\r\n        if (layer.name == null || layer.name.trim() == '')\r\n            errorMessages.push(\"Layer name cannot be empty\");\r\n\r\n        return errorMessages;\r\n    }\r\n\r\n    goBack(): void {\r\n        this.location.back();\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Layer } from '../models/layer';\r\nimport { LayerService } from '../services/layer.service';\r\nimport { Helper } from '../../common/helper';\r\nimport { SortOrder, Filter, SearchFilter, ConditionOperator, Operator } from '../../common/models/paginationRequest';\r\nimport { SearchField } from '../../common/models/SearchField';\r\n\r\ndeclare var $: any;\r\ndeclare var jBox: any;\r\n\r\n@Component({\r\n    templateUrl: './layer-list.html',\r\n    providers: [LayerService]\r\n})\r\nexport class LayerList implements OnInit {\r\n\r\n    layers = new Array<Layer>();\r\n    statusMessage: string = \"\";\r\n    pageSize = 10;\r\n    currentPage = 1;\r\n    totalPages = 1;\r\n    searchFields: SearchField[];\r\n    searchFilter: SearchFilter;\r\n    sortColumn: string;\r\n    sortOrder: SortOrder = SortOrder.descending;\r\n    previousElement: HTMLElement;\r\n\r\n    constructor(\r\n        private layerService: LayerService,\r\n        private helper: Helper) {\r\n\r\n        this.searchFields = new Array<SearchField>();\r\n        this.searchFields.push({ field: 'Name', label: 'Name', dataType: \"text\", value:\"\" });\r\n        this.searchFields.push({ field: 'Description', label: 'Description', dataType: \"text\", value:\"\" });\r\n        this.searchFields.push({ field: 'UpdatedBy', label: 'Updated By', dataType: \"text\", value:\"\" });\r\n        this.searchFields.push({ field: 'UpdatedDate', label: 'Updated On', dataType: \"date\", value:\"\" });\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n        this.statusMessage = \"Loading Layers...\";\r\n        this.pageSize = 10;\r\n        this.currentPage = 1;\r\n        this.sortColumn = null;\r\n        this.sortOrder = SortOrder.noSort;\r\n        this.getFormData();\r\n    }\r\n\r\n    getFormData() {\r\n\r\n        $(\"#ajax-loading\").show();\r\n\r\n        this.totalPages = 1;\r\n\r\n        let paginationRequest = {\r\n            page: this.currentPage,\r\n            pageSize: this.pageSize,\r\n            filter: this.searchFilter,\r\n            order: {\r\n                orderByProperty: this.sortColumn,\r\n                sortOrder: this.sortOrder\r\n            }\r\n        };\r\n\r\n        this.layerService.getLayers(paginationRequest).subscribe(\r\n            resp => {\r\n                this.layers = null;\r\n                if (resp.status.toLowerCase() == \"error\") {\r\n                    this.statusMessage = resp.message;\r\n                    this.helper.showAlertMessage(this.statusMessage, \"error\");\r\n                }\r\n                else {\r\n                    if (resp.data != null && resp.data.length > 0) {\r\n                        this.layers = resp.data;\r\n                        this.totalPages = Math.ceil(resp.recordCount / this.pageSize);\r\n                    }\r\n                    else {\r\n                        this.statusMessage = \"There are no registered layers.\";\r\n                    }\r\n                }\r\n\r\n                $(\"#ajax-loading\").hide();\r\n            },\r\n            (err) => {\r\n                $(\"#ajax-loading\").hide();\r\n                this.layers = null;\r\n                let msg = `Unable to fetch layers : ${err.message}`;\r\n                this.helper.showAlertMessage(msg, \"error\");\r\n                this.statusMessage = \"Error fetching layers.\";\r\n            });\r\n    }\r\n\r\n    search(searchFilter) {\r\n\r\n        this.searchFilter = searchFilter;\r\n        this.getFormData();\r\n    }\r\n\r\n    onPageSizeChange(pageSize) {\r\n        this.pageSize = pageSize;\r\n        this.getFormData();\r\n    }\r\n\r\n    onPageChange(currentPage) {\r\n        this.currentPage = currentPage;\r\n        this.getFormData();\r\n    }\r\n\r\n    onColumnClick(e: HTMLElement) {\r\n\r\n        if (this.previousElement && e.getAttribute('data-column') != this.previousElement.getAttribute('data-column')) {\r\n            this.previousElement.classList.remove('table-sorter-desc');\r\n            this.previousElement.classList.remove('table-sorter-asc');\r\n        }\r\n\r\n        this.previousElement = e;\r\n\r\n        this.sortColumn = e.getAttribute('data-column');\r\n\r\n        if (e.classList.contains(\"table-sorter-asc\")) {\r\n            e.classList.remove('table-sorter-asc');\r\n            e.classList.add('table-sorter-desc');\r\n            this.sortOrder = SortOrder.descending;\r\n        }\r\n        else if (e.classList.contains(\"table-sorter-desc\")) {\r\n            e.classList.remove('table-sorter-desc');\r\n            this.sortColumn = null;\r\n            this.sortOrder = SortOrder.noSort;\r\n        }\r\n        else {\r\n            e.classList.add('table-sorter-asc');\r\n            this.sortOrder = SortOrder.ascending;\r\n        }\r\n\r\n        this.getFormData();\r\n    }\r\n\r\n    delete(layer: Layer) {\r\n        new jBox(\"Confirm\", {\r\n            minWidth: 500,\r\n            minHeight: 70,\r\n            title: \"<b>Delete Layer</b>\",\r\n            overlay: false,\r\n            content: \"Do you want to delete layer - \" + layer.name,\r\n            draggable: \"title\",\r\n            confirmButton: \"Yes\",\r\n            cancelButton: \"No\",\r\n            confirm: () => {\r\n                this.layerService.deleteLayer(layer.id).subscribe(\r\n                    resp => {\r\n                        if (resp.status.toLowerCase() == \"error\") {\r\n                            this.helper.showAlertMessage(resp.message, \"error\");\r\n                        }\r\n                        else {\r\n                            if (resp.data != null) {\r\n                                this.helper.showAlertMessage(\"Layer deleted.\", \"success\");\r\n                                this.getFormData();\r\n                            }\r\n                            else {\r\n                                this.helper.showAlertMessage(\"Error deleting layer\", \"error\");\r\n                            }\r\n                        }\r\n                    },\r\n                    (err) => {\r\n                        this.helper.showAlertMessage(\"Error deleting layer\", \"error\");\r\n                    });\r\n            }\r\n        }).open();\r\n    }\r\n\r\n    //getPermission(featureCode: string, accessType: string): boolean {\r\n    //   return this.accountService.getPermission(featureCode, accessType);\r\n    //}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient, HttpParams } from \"@angular/common/http\";\r\n\r\nimport { Module } from '../models/module';\r\nimport { ServiceResponse } from '../../common/models/serviceResponse';\r\nimport { PaginationRequest, SortOrder } from '../../common/models/paginationRequest';\r\nimport { PaginationResponse } from '../../common/models/paginationResponse';\r\n\r\n\r\n@Injectable()\r\nexport class ModuleService {\r\n\r\n   getModulesApi = \"Modules/GetModules/\";\r\n   getModuleApi = 'Modules/GetModule/';\r\n   saveModuleApi = 'Modules/SaveModule/';\r\n   deleteModuleApi = 'Modules/DeleteModule/';\r\n\r\n   constructor(private http: HttpClient) { }\r\n\r\n   getModules(paginationRequest: PaginationRequest): Observable<PaginationResponse> {\r\n\r\n      if (paginationRequest == null)\r\n         paginationRequest = {\r\n            page: null,\r\n            pageSize: null,\r\n            filter: null,\r\n            order: {\r\n               orderByProperty: \"name\",\r\n               sortOrder: SortOrder.descending\r\n            }\r\n         };\r\n\r\n      return this.http.post<PaginationResponse>(this.getModulesApi, paginationRequest);\r\n   }\r\n\r\n   getModule(moduleId: string): Observable<ServiceResponse> {\r\n\r\n      const params = new HttpParams()\r\n         .set('moduleId', moduleId);\r\n\r\n      return this.http.get<ServiceResponse>(this.getModuleApi, { params });\r\n   }\r\n\r\n   saveModule(module: Module): Observable<ServiceResponse> {\r\n\r\n      return this.http.post<ServiceResponse>(this.saveModuleApi, module);\r\n   }\r\n\r\n   deleteModule(moduleId: string): Observable<ServiceResponse> {\r\n      const params = new HttpParams()\r\n         .set('moduleId', moduleId);\r\n\r\n      return this.http.delete<ServiceResponse>(this.deleteModuleApi, { params });\r\n   }\r\n}\r\n","import { DbBaseEntity } from '../../common/models/dbBaseEntity';\r\n\r\nexport class Role extends DbBaseEntity {\r\n    name: string;\r\n    description: string;\r\n    modulePermissions: ModulePermission[];\r\n}\r\n\r\nexport class ModulePermission {\r\n    moduleId: string;\r\n    permissionCodes: string[];\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { CheckboxModule } from 'primeng/checkbox';\r\n\r\n//import { TreeModule } from 'primeng/tree';\r\nimport { TreeTableModule } from 'primeng/treetable';\r\n\r\nimport { RoleList } from './views/role-list';\r\nimport { RoleDetails } from './views/role-details';\r\nimport { RoleService } from './services/role.service';\r\nimport { RoleRouting } from './role.routes';\r\nimport { SharedModule } from '../shared.module';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        CheckboxModule,\r\n        TreeTableModule,\r\n        RoleRouting,\r\n        SharedModule\r\n    ],\r\n    declarations: [\r\n        RoleList,\r\n        RoleDetails\r\n    ],\r\n    providers: [\r\n        RoleService\r\n    ]\r\n})\r\nexport class RoleModule { }\r\n","import { ModuleWithProviders } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { RoleList } from './views/role-list';\r\nimport { RoleDetails } from './views/role-details';\r\n\r\nexport const roleRoutes: Routes = [\r\n   {\r\n      path: 'roles',\r\n      children: [\r\n         { path: '', component: RoleList },\r\n         { path: 'details', component: RoleDetails },\r\n         { path: 'details/:id', component: RoleDetails },\r\n      ]\r\n   },\r\n];\r\n\r\nexport const RoleRouting: ModuleWithProviders = RouterModule.forChild(roleRoutes);\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { HttpClient, HttpParams } from \"@angular/common/http\";\r\n\r\nimport { Role } from '../models/role';\r\nimport { map } from 'rxjs/operators';\r\nimport { PaginationRequest, SortOrder } from '../../common/models/paginationRequest';\r\nimport { PaginationResponse } from '../../common/models/paginationResponse';\r\nimport { ServiceResponse } from '../../common/models/serviceResponse';\r\n\r\n@Injectable()\r\nexport class RoleService {\r\n\r\n   getRolesApi = 'Roles/GetRoles/';\r\n   getRoleApi = 'Roles/GetRole/';\r\n   checkNameExistsApi = 'Roles/CheckNameExists/';\r\n   saveRoleApi = 'Roles/SaveRole/';\r\n   deleteRoleApi = 'Roles/DeleteRole/';\r\n\r\n   allRoles: Role[];\r\n\r\n   constructor(private http: HttpClient) { }\r\n\r\n   getRoles(paginationRequest: PaginationRequest): Observable<PaginationResponse> {\r\n\r\n      if (paginationRequest == null)\r\n         paginationRequest = {\r\n            page: null,\r\n            pageSize: null,\r\n            filter: null,\r\n            order: {\r\n               orderByProperty: \"name\",\r\n               sortOrder: SortOrder.descending\r\n            }\r\n         };\r\n\r\n      return this.http.post<PaginationResponse>(this.getRolesApi, paginationRequest);\r\n   }\r\n\r\n   getRole(roleId): Observable<ServiceResponse> {\r\n\r\n      const params = new HttpParams()\r\n         .set('roleId', roleId);\r\n\r\n      return this.http.get<ServiceResponse>(this.getRoleApi, { params });\r\n   }\r\n\r\n   async checkNameExists(name: string): Promise<ServiceResponse> {\r\n\r\n      const params = new HttpParams()\r\n         .set('name', name);\r\n\r\n      return await this.http.get<ServiceResponse>(this.checkNameExistsApi, { params }).toPromise();\r\n   }\r\n\r\n   saveRole(role: Role): Observable<ServiceResponse> {\r\n\r\n      return this.http.post<ServiceResponse>(this.saveRoleApi, role);\r\n   }\r\n\r\n   deleteRole(roleId: string): Observable<ServiceResponse> {\r\n\r\n      const params = new HttpParams()\r\n         .set('roleId', roleId);\r\n\r\n      return this.http.delete<ServiceResponse>(this.deleteRoleApi, { params });\r\n   }\r\n\r\n   //getAllRoles(): Observable<Role[]> {\r\n\r\n   //   if (this.allRoles)\r\n   //      return of(this.allRoles) as Observable<Role[]>;\r\n\r\n   //   return this.http.get<ServiceResponse>(this.getRolesApi)\r\n   //      .pipe(\r\n   //         map(svcResponse => {\r\n\r\n   //            if (svcResponse.status.toLowerCase() == \"ok\") {\r\n\r\n   //               this.allRoles = svcResponse.data;\r\n\r\n   //               return this.allRoles;\r\n   //            }\r\n   //            else {\r\n   //               throw Observable.throw(new Error(svcResponse.message));\r\n   //            }\r\n\r\n   //         }),\r\n   //         //err => Observable.throw(err)\r\n   //      );\r\n   //}\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport { forkJoin } from 'rxjs';\r\n\r\nimport { RoleService } from '../services/role.service';\r\nimport { ModuleService } from '../../modules/services/module.service';\r\nimport { Helper } from '../../common/helper';\r\nimport { Role } from '../models/role';\r\nimport { Module } from '../../modules/models/module';\r\nimport { TreeNode } from 'primeng/components/common/treenode';\r\n\r\n@Component({\r\n   templateUrl: './role-details.html',\r\n   providers: [RoleService, ModuleService],\r\n})\r\nexport class RoleDetails implements OnInit {\r\n\r\n   roleId: string = \"\";\r\n   role: Role = new Role();\r\n   modules: Module[] = new Array<Module>();\r\n   treeModules: any;\r\n   selectedModules: any;\r\n   title: string = \"New Role\";\r\n\r\n   constructor(\r\n      private location: Location,\r\n      private route: ActivatedRoute,\r\n      private roleService: RoleService,\r\n      private moduleService: ModuleService,\r\n      private helper: Helper) { }\r\n\r\n   ngOnInit() {\r\n      this.route.params.subscribe(\r\n         params => {\r\n            this.roleId = params['id'];\r\n\r\n            if (this.roleId == null)\r\n               this.title = \"New Role\";\r\n            else\r\n               this.title = \"Edit Role\";\r\n\r\n            this.getFormData(this.roleId);\r\n         });\r\n   }\r\n\r\n   getFormData(roleId: string) {\r\n\r\n      let rolesSvc = this.roleService.getRole(roleId);\r\n      let modulesSvc = this.moduleService.getModules(null);\r\n\r\n      forkJoin([modulesSvc, rolesSvc]).subscribe(results => {\r\n\r\n         if (results[0] && results[0].data) {\r\n            this.modules = results[0].data;\r\n\r\n            let treeNodes = [];\r\n\r\n            this.modules.forEach(m => {\r\n               let parentId = m.parentId == null ? \"0\" : m.parentId;\r\n               treeNodes.push({ name: m.name, id: m.id, parentId: parentId, isPermission: true });\r\n               m.permissions.forEach(f => {\r\n                  treeNodes.push({ id: f.code, name: f.name, parentId: m.id, isPermission: true });\r\n               });\r\n            });\r\n\r\n            this.treeModules = this.helper.generateTreeTable(treeNodes, \"0\", true);\r\n         }\r\n\r\n         if (roleId && results[1]) {\r\n            if (results[1].status.toLowerCase() == \"error\") {\r\n               this.helper.showAlertMessage(results[1].message, \"error\");\r\n            }\r\n            else {\r\n               if (results[1].data != null) {\r\n                  this.role = results[1].data;\r\n                  this.selectedModules = [];\r\n\r\n                  this.role.modulePermissions.forEach(x => {\r\n\r\n                     //this.checkNode(this.treeModules, x.permissionCodes);\r\n\r\n                     x.permissionCodes.forEach(code => {\r\n\r\n                        var node = null;\r\n\r\n                        for (var i = 0; i < this.treeModules.length; i++) {\r\n                           node = this.helper.findNode(code, this.treeModules[i]);\r\n\r\n                           if (node) break;\r\n                        }\r\n\r\n                        if (node) {\r\n                           this.selectedModules.push(node);\r\n                        }\r\n                     });\r\n\r\n                  });\r\n               }\r\n               else\r\n                  this.helper.showAlertMessage(results[1].message, \"error\");\r\n            }\r\n         }\r\n         else\r\n            this.role = new Role();\r\n      });\r\n   }\r\n\r\n   //checkNode(nodes: any, str: string[]) {\r\n   //    for (let i = 0; i < nodes.length; i++) {\r\n   //        //if (!nodes[i].leaf && nodes[i].children[0].leaf) {\r\n   //            for (let j = 0; j < nodes[i].children.length; j++) {\r\n   //                if (str.includes(nodes[i].children[j].id)) {\r\n   //                    if (!this.selectedModules.includes(nodes[i].children[j])) {\r\n   //                        this.selectedModules.push(nodes[i].children[j]);\r\n   //                    }\r\n   //                }\r\n   //            }\r\n   //        //}\r\n   //        //if (nodes[i].leaf) {\r\n   //        //    return;\r\n   //        //}\r\n   //        this.checkNode(nodes[i].children, str);\r\n   //        let count = nodes[i].children.length;\r\n   //        let c = 0;\r\n   //        for (let j = 0; j < nodes[i].children.length; j++) {\r\n   //            if (this.selectedModules.includes(nodes[i].children[j])) {\r\n   //                c++;\r\n   //            }\r\n   //            if (nodes[i].children[j].partialSelected) nodes[i].partialSelected = true;\r\n   //        }\r\n   //        if (c == 0) { }\r\n   //        else if (c == count) {\r\n   //            nodes[i].partialSelected = false;\r\n   //            if (!this.selectedModules.includes(nodes[i])) {\r\n   //                this.selectedModules.push(nodes[i]);\r\n   //            }\r\n   //        }\r\n   //        else {\r\n   //            nodes[i].partialSelected = true;\r\n   //        }\r\n   //    }\r\n   //}\r\n\r\n   async save() {\r\n\r\n      let errorMessages = await this.validateRole(this.role);\r\n\r\n      this.role.modulePermissions = [];\r\n\r\n      var features = this.selectedModules.filter(x => x.isPermission == true);\r\n\r\n      features.forEach(f => {\r\n         var index = this.role.modulePermissions.findIndex(x => x.moduleId == f.parentId);\r\n\r\n         if (index < 0) {\r\n\r\n\r\n            this.role.modulePermissions.push({\r\n               moduleId: f.parentId,\r\n               permissionCodes: [f.id]\r\n            });\r\n         }\r\n         else {\r\n            this.role.modulePermissions[index].permissionCodes.push(f.id);\r\n         }\r\n      });\r\n\r\n      if (errorMessages.length == 0) {\r\n\r\n         this.roleService.saveRole(this.role).subscribe(\r\n            resp => {\r\n               if (resp.status.toLowerCase() == \"error\") {\r\n                  this.helper.showAlertMessage(resp.message, \"error\");\r\n               }\r\n               else {\r\n                  if (resp.data != null) {\r\n                     this.helper.showAlertMessage(\"Role information saved\", \"success\");\r\n                     this.goBack();\r\n                  }\r\n                  else\r\n                     this.helper.showAlertMessage(\"Unable to save role information.\", \"error\");\r\n               }\r\n            },\r\n            (err) => {\r\n               this.helper.showAlertMessage(\"Unable to save role information.\", \"error\");\r\n            });\r\n      }\r\n      else {\r\n         let errorMessage = this.helper.getErrorMessagesText(errorMessages);\r\n         this.helper.showAlertMessage(errorMessage, \"error\");\r\n      }\r\n   }\r\n\r\n   async validateRole(role: Role): Promise<string[]> {\r\n      let errorMessages = [];\r\n\r\n      if (role.name == null || role.name.trim() == '')\r\n         errorMessages.push(\"Role name cannot be empty\");\r\n      else {\r\n         if (role.id == undefined) {\r\n            let resp = await this.roleService.checkNameExists(role.name);\r\n\r\n            //if (resp.data != null && resp.data != role.id)\r\n            if (resp.data != false && resp.data != role.id)\r\n               errorMessages.push(\"Name already exists.\");\r\n         }\r\n      }\r\n\r\n      return errorMessages;\r\n   }\r\n\r\n   goBack(): void {\r\n      this.location.back();\r\n   }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Role } from '../models/role';\r\nimport { RoleService } from '../services/role.service';\r\nimport { Helper } from '../../common/helper';\r\nimport { SortOrder, Filter, SearchFilter, ConditionOperator, Operator } from '../../common/models/paginationRequest';\r\nimport { SearchField } from '../../common/models/SearchField';\r\n\r\ndeclare var $: any;\r\ndeclare var jBox: any;\r\n\r\n@Component({\r\n    templateUrl: './role-list.html',\r\n    providers: [RoleService]\r\n})\r\nexport class RoleList implements OnInit {\r\n\r\n    roles = new Array<Role>();\r\n    statusMessage: string = \"\";\r\n    pageSize = 10;\r\n    currentPage = 1;\r\n    totalPages = 1;\r\n    searchFields: SearchField[];\r\n    searchFilter: SearchFilter;\r\n    sortColumn: string;\r\n    sortOrder: SortOrder = SortOrder.descending;\r\n    previousElement: HTMLElement;\r\n\r\n    constructor(\r\n        private roleService: RoleService,\r\n        private helper: Helper) {\r\n\r\n        this.searchFields = new Array<SearchField>();\r\n        this.searchFields.push({ field: 'Name', label: 'Name', dataType: \"text\", value:\"\" });\r\n        this.searchFields.push({ field: 'Description', label: 'Description', dataType: \"text\", value:\"\" });\r\n        this.searchFields.push({ field: 'UpdatedBy', label: 'Updated By', dataType: \"text\", value:\"\" });\r\n        this.searchFields.push({ field: 'UpdatedDate', label: 'Updated On', dataType: \"date\", value:\"\" });\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n        this.statusMessage = \"Loading Roles...\";\r\n        this.pageSize = 10;\r\n        this.currentPage = 1;\r\n        this.sortColumn = null;\r\n        this.sortOrder = SortOrder.noSort;\r\n        this.getFormData();\r\n    }\r\n\r\n    getFormData() {\r\n\r\n        $(\"#ajax-loading\").show();\r\n\r\n        this.totalPages = 1;\r\n\r\n        let paginationRequest = {\r\n            page: this.currentPage,\r\n            pageSize: this.pageSize,\r\n            filter: this.searchFilter,\r\n            order: {\r\n                orderByProperty: this.sortColumn,\r\n                sortOrder: this.sortOrder\r\n            }\r\n        };\r\n\r\n        this.roleService.getRoles(paginationRequest).subscribe(\r\n            resp => {\r\n                this.roles = null;\r\n                if (resp.status.toLowerCase() == \"error\") {\r\n                    this.statusMessage = resp.message;\r\n                    this.helper.showAlertMessage(this.statusMessage, \"error\");\r\n                }\r\n                else {\r\n                    if (resp.data != null && resp.data.length > 0) {\r\n                        this.roles = resp.data;\r\n                        this.totalPages = Math.ceil(resp.recordCount / this.pageSize);\r\n                    }\r\n                    else {\r\n                        this.statusMessage = \"There are no registered roles.\";\r\n                    }\r\n                }\r\n\r\n                $(\"#ajax-loading\").hide();\r\n            },\r\n            (err) => {\r\n                $(\"#ajax-loading\").hide();\r\n                this.roles = null;\r\n                let msg = `Unable to fetch roles : ${err.message}`;\r\n                this.helper.showAlertMessage(msg, \"error\");\r\n                this.statusMessage = \"Error fetching roles.\";\r\n            });\r\n    }\r\n\r\n    search(searchFilter) {\r\n\r\n        this.searchFilter = searchFilter;\r\n        this.getFormData();\r\n    }\r\n\r\n    onPageSizeChange(pageSize) {\r\n        this.pageSize = pageSize;\r\n        this.getFormData();\r\n    }\r\n\r\n    onPageChange(currentPage) {\r\n        this.currentPage = currentPage;\r\n        this.getFormData();\r\n    }\r\n\r\n    onColumnClick(e: HTMLElement) {\r\n\r\n        if (this.previousElement && e.getAttribute('data-column') != this.previousElement.getAttribute('data-column')) {\r\n            this.previousElement.classList.remove('table-sorter-desc');\r\n            this.previousElement.classList.remove('table-sorter-asc');\r\n        }\r\n\r\n        this.previousElement = e;\r\n\r\n        this.sortColumn = e.getAttribute('data-column');\r\n\r\n        if (e.classList.contains(\"table-sorter-asc\")) {\r\n            e.classList.remove('table-sorter-asc');\r\n            e.classList.add('table-sorter-desc');\r\n            this.sortOrder = SortOrder.descending;\r\n        }\r\n        else if (e.classList.contains(\"table-sorter-desc\")) {\r\n            e.classList.remove('table-sorter-desc');\r\n            this.sortColumn = null;\r\n            this.sortOrder = SortOrder.noSort;\r\n        }\r\n        else {\r\n            e.classList.add('table-sorter-asc');\r\n            this.sortOrder = SortOrder.ascending;\r\n        }\r\n\r\n        this.getFormData();\r\n    }\r\n    \r\n    delete(role: Role) {\r\n        new jBox(\"Confirm\", {\r\n            minWidth: 500,\r\n            minHeight: 70,\r\n            title: \"<b>Delete Role</b>\",\r\n            overlay: false,\r\n            content: \"Do you want to delete role - \" + role.name,\r\n            draggable: \"title\",\r\n            confirmButton: \"Yes\",\r\n            cancelButton: \"No\",\r\n            confirm: () => {\r\n                this.roleService.deleteRole(role.id).subscribe(\r\n                    resp => {\r\n                        if (resp.status.toLowerCase() == \"error\") {\r\n                            this.helper.showAlertMessage(resp.message, \"error\");\r\n                        }\r\n                        else {\r\n                            if (resp.data != null) {\r\n                                this.helper.showAlertMessage(\"Role deleted.\", \"success\");\r\n                                this.getFormData();\r\n                            }\r\n                            else {\r\n                                this.helper.showAlertMessage(\"Error deleting role\", \"error\");\r\n                            }\r\n                        }\r\n                    },\r\n                    (err) => {\r\n                        this.helper.showAlertMessage(\"Error deleting role\", \"error\");\r\n                    });\r\n            }\r\n        }).open();\r\n    }\r\n\r\n    //getPermission(featureCode: string, accessType: string): boolean {\r\n    //   return this.accountService.getPermission(featureCode, accessType);\r\n    //}\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { DTPagination } from './components/data-table/dt-pagination';\r\nimport { DTSearch } from './components/data-table/dt-search';\r\n\r\n\r\n@NgModule({\r\n    imports: [CommonModule, RouterModule, FormsModule],\r\n    declarations: [\r\n        DTSearch,\r\n        DTPagination\r\n    ],\r\n    exports: [\r\n        FormsModule,\r\n        RouterModule,\r\n        DTSearch,\r\n        DTPagination\r\n    ]\r\n})\r\n\r\nexport class SharedModule { }\r\n","import { DbBaseEntity } from '../../common/models/dbBaseEntity';\r\n\r\nexport class User extends DbBaseEntity {\r\n    loginId: string;\r\n    password: string;\r\n    firstName: string;\r\n    lastName: string;\r\n    phoneNumber: string;\r\n    emailId: string;\r\n    roleId: string;\r\n    groups: string[];\r\n    roleName: string;\r\n    isActive: boolean;\r\n    lastLogin: string;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient, HttpParams } from \"@angular/common/http\";\r\n\r\nimport { User } from '../models/user';\r\nimport { ServiceResponse } from '../../common/models/serviceResponse';\r\nimport { PaginationRequest, SortOrder } from '../../common/models/paginationRequest';\r\nimport { PaginationResponse } from '../../common/models/paginationResponse';\r\n\r\n\r\n@Injectable()\r\nexport class UserService {\r\n\r\n   getUsersApi = \"Users/GetUsers/\";\r\n   getUserApi = 'Users/GetUser/';\r\n   checkLoginIdExistsApi = 'Users/CheckLoginIdExists/';\r\n   saveUserApi = 'Users/SaveUser/';\r\n   deleteUserApi = 'Users/DeleteUser/';\r\n\r\n   constructor(private http: HttpClient) { }\r\n\r\n   authenticateUser(loginCredentials: any): Observable<ServiceResponse> {\r\n\r\n      return this.http.post<ServiceResponse>('/Users/Authenticate', loginCredentials);\r\n   }\r\n\r\n   getUserProfile(): Observable<ServiceResponse> {\r\n      return this.http.get<ServiceResponse>('/Users/GetUserProfile');\r\n   }\r\n\r\n   getUser(userId: string): Observable<ServiceResponse> {\r\n\r\n      const params = new HttpParams()\r\n         .set('userId', userId);\r\n\r\n      return this.http.get<ServiceResponse>(this.getUserApi, { params });\r\n   }\r\n\r\n   getUsers(paginationRequest?: PaginationRequest): Observable<PaginationResponse> {\r\n\r\n      if (paginationRequest == null)\r\n         paginationRequest = {\r\n            page: null,\r\n            pageSize: null,\r\n            filter: null,\r\n            order: {\r\n               orderByProperty: \"name\",\r\n               sortOrder: SortOrder.descending\r\n            }\r\n         };\r\n\r\n      return this.http.post<PaginationResponse>(this.getUsersApi, paginationRequest);\r\n   }\r\n\r\n   async checkLoginIdExists(loginId: string): Promise<ServiceResponse> {\r\n\r\n      const params = new HttpParams()\r\n         .set('loginId', loginId);\r\n\r\n      return await this.http.get<ServiceResponse>(this.checkLoginIdExistsApi, { params }).toPromise();\r\n   }\r\n\r\n   saveUser(user: User): Observable<ServiceResponse> {\r\n\r\n      return this.http.post<ServiceResponse>(this.saveUserApi, user);\r\n   }\r\n\r\n   deleteUser(userId: string): Observable<ServiceResponse> {\r\n      const params = new HttpParams()\r\n         .set('userId', userId);\r\n\r\n      return this.http.delete<ServiceResponse>(this.deleteUserApi, { params });\r\n   }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatRadioModule, MatSelectModule, MatCheckboxModule } from '@angular/material';\r\n\r\nimport { UserRouting } from './user.routes';\r\nimport { UserList } from './views/user-list';\r\nimport { UserDetails } from './views/user-details';\r\nimport { UserService } from './services/user.service';\r\nimport { SharedModule } from '../shared.module';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        UserRouting,\r\n        MatCheckboxModule,\r\n        MatRadioModule,\r\n        MatSelectModule,\r\n        SharedModule\r\n    ],\r\n    declarations: [\r\n        UserList,\r\n        UserDetails\r\n    ],\r\n    providers: [\r\n        UserService\r\n    ]\r\n})\r\nexport class UserModule { }\r\n","import { ModuleWithProviders } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { UserList } from './views/user-list';\r\nimport { UserDetails } from './views/user-details';\r\n\r\nexport const userRoutes: Routes = [\r\n    {\r\n        path: 'users',\r\n        children: [\r\n           { path: '', component: UserList },\r\n           { path: 'details', component: UserDetails },\r\n           { path: 'details/:id', component: UserDetails },\r\n        ]\r\n    },\r\n];\r\n\r\nexport const UserRouting: ModuleWithProviders = RouterModule.forChild(userRoutes);\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport { forkJoin } from 'rxjs';\r\n\r\nimport { User } from '../models/user';\r\nimport { Role } from '../../roles/models/role';\r\nimport { Group } from '../../groups/models/group';\r\nimport { UserService } from '../services/user.service';\r\nimport { RoleService } from '../../roles/services/role.service';\r\nimport { GroupService } from '../../groups/services/group.service';\r\nimport { Helper } from '../../common/helper';\r\n\r\n// declare var $: any;\r\n// declare var jBox: any;\r\n\r\n@Component({\r\n   templateUrl: './user-details.html',\r\n   providers: [UserService, GroupService],\r\n})\r\nexport class UserDetails implements OnInit {\r\n\r\n   userId: string;\r\n   user: User = new User();\r\n   roles: Role[] = new Array<Role>();\r\n   groups: Group[] = new Array<Group>();\r\n   currentUserPassword: string;\r\n   changePassword: boolean = false;\r\n\r\n   title: string = \"New User\";\r\n\r\n   constructor(\r\n      private location: Location,\r\n      private route: ActivatedRoute,\r\n      private userService: UserService,\r\n      private roleService: RoleService,\r\n      private groupService: GroupService,\r\n      private helper: Helper) { }\r\n\r\n   ngOnInit() {\r\n      this.route.params.subscribe(\r\n         params => {\r\n            this.userId = params['id'];\r\n\r\n            if (this.userId != null)\r\n               this.title = \"Edit User\";\r\n            else {\r\n               this.title = \"New User\";\r\n               this.changePassword = true;\r\n            }\r\n\r\n            this.getFormData(this.userId);\r\n\r\n         });\r\n   }\r\n\r\n   getFormData(userId: string) {\r\n\r\n      let usersSvc = this.userService.getUser(userId);\r\n      let rolesSvc = this.roleService.getRoles(null);\r\n      let groupsSvc = this.groupService.getGroups(null);\r\n\r\n      forkJoin([rolesSvc, groupsSvc, usersSvc]).subscribe(results => {\r\n\r\n         if (results[0] && results[0].data) {\r\n            this.roles = results[0].data;\r\n         }\r\n\r\n         if (results[1] && results[1].data) {\r\n            this.groups = results[1].data;\r\n         }\r\n\r\n         if (userId && results[2]) {\r\n            if (results[2].data && results[2].status.toLowerCase() == \"ok\") {\r\n               this.user = results[2].data;\r\n               this.currentUserPassword = this.user.password;\r\n            }\r\n            else\r\n               this.helper.showAlertMessage(results[2].message, \"error\");\r\n         }\r\n         else\r\n            this.user = new User();\r\n      });\r\n   }\r\n\r\n   setNewPassword(event) {\r\n      this.changePassword = event.checked;\r\n\r\n      if (event.checked)\r\n         this.user.password = \"\";\r\n      else\r\n         this.user.password = this.currentUserPassword;\r\n   }\r\n\r\n   isAllSelected() {\r\n      const numSelected = this.user.groups ? this.user.groups.length : 0;\r\n      const numRows = this.groups.length;\r\n      return numSelected === numRows;\r\n   }\r\n\r\n   toggleSelection(group: Group) {\r\n\r\n      var index = -1;\r\n\r\n      if (this.user.groups)\r\n         index = this.user.groups.findIndex(x => x == group.id);\r\n      else\r\n         this.user.groups = [];\r\n\r\n      if (index == -1)\r\n         this.user.groups.push(group.id);\r\n      else\r\n         this.user.groups.splice(index, 1);\r\n   }\r\n\r\n   masterToggle() {\r\n\r\n      if (this.isAllSelected()) {\r\n         this.user.groups = [];\r\n      }\r\n      else {\r\n         this.user.groups = [];\r\n         this.groups.forEach(x => this.user.groups.push(x.id));\r\n      }\r\n   }\r\n\r\n   async saveUser() {\r\n\r\n      if (!this.changePassword)\r\n         this.user.password = this.currentUserPassword;\r\n\r\n      var errorMessages = await this.validateUser(this.user);\r\n\r\n      if (errorMessages.length == 0) {\r\n\r\n         this.userService.saveUser(this.user).subscribe(\r\n            resp => {\r\n\r\n               if (resp.status.toLowerCase() == \"error\") {\r\n                  this.helper.showAlertMessage(resp.message, \"error\");\r\n               }\r\n               else {\r\n                  if (resp.data != null) {\r\n                     this.helper.showAlertMessage(\"User information saved\", \"success\");\r\n                     this.goBack();\r\n                  }\r\n                  else\r\n                     this.helper.showAlertMessage(\"Unable to save user information.\", \"error\");\r\n               }\r\n            },\r\n            (err) => {\r\n               //let msg = `Unable to save user information : ${err.message}`;\r\n               this.helper.showAlertMessage(\"Unable to save user information.\", \"error\");\r\n            });\r\n      }\r\n      else {\r\n         this.helper.showAlertMessage(this.helper.getErrorMessagesText(errorMessages), \"error\");\r\n      }\r\n   }\r\n\r\n   async validateUser(user: User): Promise<string[]> {\r\n      var errorMessages = [];\r\n\r\n\r\n      if (user.firstName == null)\r\n         errorMessages.push(\"User name cannot be empty.\");\r\n\r\n      if (user.loginId == null || user.loginId.trim() == \"\")\r\n         errorMessages.push(\"Login Id cannot be empty string\");\r\n      else {\r\n         if (user.id == undefined) {\r\n            let resp = await this.userService.checkLoginIdExists(user.loginId);\r\n            // if (resp.data != null && resp.data != user.id)\r\n            if (resp.data != false && resp.data != user.id)\r\n               errorMessages.push(\"Login Id already exists.\");\r\n         }\r\n      }\r\n\r\n      //if (user.password == null || user.password.trim() == \"\")\r\n      //   errorMessages.push(\"Password cannot be empty string\");\r\n\r\n      return errorMessages;\r\n   }\r\n\r\n   goBack(): void {\r\n      this.location.back();\r\n   }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { forkJoin } from 'rxjs';\r\n\r\nimport { UserSummary } from '../models/UserSummary';\r\nimport { Role } from '../../roles/models/role';\r\nimport { UserService } from '../services/user.service';\r\nimport { RoleService } from '../../roles/services/role.service';\r\nimport { Helper } from '../../common/helper';\r\nimport { SortOrder, SearchFilter, ConditionOperator, Filter, Operator } from '../../common/models/paginationRequest';\r\nimport { User } from '../models/user';\r\nimport { SearchField } from '../../common/models/SearchField';\r\n\r\ndeclare var $: any;\r\ndeclare var jBox: any;\r\n\r\n@Component({\r\n    templateUrl: './user-list.html',\r\n    providers: [UserService]\r\n})\r\nexport class UserList implements OnInit {\r\n\r\n    users = new Array<UserSummary>();\r\n    roles: Role[] = new Array<Role>();\r\n    statusMessage: string = \"\";\r\n    pageSize = 10;\r\n    currentPage = 1;\r\n    totalPages = 1;\r\n    searchFields: SearchField[];\r\n    searchFilter: SearchFilter;\r\n    sortColumn: string;\r\n    sortOrder: SortOrder = SortOrder.descending;\r\n    previousElement: HTMLElement;\r\n\r\n    constructor(\r\n        private userService: UserService,\r\n        private roleService: RoleService,\r\n        private helper: Helper) {\r\n\r\n        this.statusMessage = \"Loading Users...\";\r\n        this.pageSize = 10;\r\n        this.currentPage = 1;\r\n        this.sortColumn = null;\r\n        this.sortOrder = SortOrder.noSort;\r\n\r\n        this.searchFields = new Array<SearchField>();\r\n        this.searchFields.push({ field: 'LoginId', label: 'Login Id', dataType: \"text\", value:\"\" });\r\n        this.searchFields.push({ field: 'FirstName', label: 'First Name', dataType: \"text\", value:\"\" });\r\n        this.searchFields.push({ field: 'LastName', label: 'Last Name', dataType: \"text\", value:\"\" });\r\n        this.searchFields.push({ field: 'EmailId', label: 'Email Id', dataType: \"text\", value:\"\" });\r\n        this.searchFields.push({ field: 'Status', label: 'Status', dataType: \"text\", value:\"\" });\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.getFormData();\r\n    }\r\n\r\n    getFormData() {\r\n\r\n        $(\"#ajax-loading\").show();\r\n\r\n        this.totalPages = 1;\r\n\r\n        let paginationRequest = {\r\n            page: this.currentPage,\r\n            pageSize: this.pageSize,\r\n            filter: this.searchFilter,\r\n            order: {\r\n                orderByProperty: this.sortColumn,\r\n                sortOrder: this.sortOrder\r\n            }\r\n        };\r\n\r\n        let usersSvc = this.userService.getUsers(paginationRequest);\r\n        let rolesSvc = this.roleService.getRoles(null);\r\n\r\n        forkJoin([rolesSvc, usersSvc]).subscribe(results => {\r\n\r\n            this.users = null;\r\n\r\n            if (results[0] && results[0].data) {\r\n                this.roles = results[0].data;\r\n            }\r\n\r\n            if (results[1].status.toLowerCase() == \"error\") {\r\n                this.statusMessage = results[1].message;\r\n                this.helper.showAlertMessage(this.statusMessage, \"error\");\r\n            }\r\n            else {\r\n                if (results[1].data != null && results[1].data.length > 0) {\r\n                    this.users = results[1].data;\r\n                    this.totalPages = Math.ceil(results[1].recordCount / this.pageSize);\r\n                }\r\n                else {\r\n                    this.statusMessage = \"There are no registered users.\";\r\n                }\r\n            }\r\n\r\n            $(\"#ajax-loading\").hide();\r\n        },\r\n         error => {\r\n               this.users = null;\r\n               $(\"#ajax-loading\").hide();\r\n         });\r\n    }\r\n\r\n    getRoleDescription(roleId: string) {\r\n\r\n        if (this.roles)\r\n            var roleDesc = this.roles.find(item => item.id == roleId);\r\n\r\n        if (roleDesc)\r\n            return roleDesc.name;\r\n        else\r\n            return \"\";\r\n    }\r\n\r\n    search(searchFilter) {\r\n\r\n        this.searchFilter = searchFilter;\r\n        this.getFormData();\r\n    }\r\n\r\n    onPageSizeChange(pageSize) {\r\n        this.pageSize = pageSize;\r\n        this.getFormData();\r\n    }\r\n\r\n    onPageChange(currentPage) {\r\n        this.currentPage = currentPage;\r\n        this.getFormData();\r\n    }\r\n\r\n    onColumnClick(e: HTMLElement) {\r\n\r\n        if (this.previousElement && e.getAttribute('data-column') != this.previousElement.getAttribute('data-column')) {\r\n            this.previousElement.classList.remove('table-sorter-desc');\r\n            this.previousElement.classList.remove('table-sorter-asc');\r\n        }\r\n\r\n        this.previousElement = e;\r\n\r\n        this.sortColumn = e.getAttribute('data-column');\r\n\r\n        if (e.classList.contains(\"table-sorter-asc\")) {\r\n            e.classList.remove('table-sorter-asc');\r\n            e.classList.add('table-sorter-desc');\r\n            this.sortOrder = SortOrder.descending;\r\n        }\r\n        else if (e.classList.contains(\"table-sorter-desc\")) {\r\n            e.classList.remove('table-sorter-desc');\r\n            this.sortColumn = null;\r\n            this.sortOrder = SortOrder.noSort;\r\n        }\r\n        else {\r\n            e.classList.add('table-sorter-asc');\r\n            this.sortOrder = SortOrder.ascending;\r\n        }\r\n\r\n        this.getFormData();\r\n    }\r\n\r\n    delete(user: User) {\r\n        new jBox(\"Confirm\", {\r\n            minWidth: 500,\r\n            minHeight: 70,\r\n            title: \"<b>Delete User</b>\",\r\n            overlay: false,\r\n            content: \"Do you want to delete user - \" + user.firstName + \" \" + user.lastName,\r\n            draggable: \"title\",\r\n            confirmButton: \"Yes\",\r\n            cancelButton: \"No\",\r\n            confirm: () => {\r\n                this.userService.deleteUser(user.id).subscribe(\r\n                    resp => {\r\n                        if (resp.status.toLowerCase() == \"error\") {\r\n                            this.helper.showAlertMessage(resp.message, \"error\");\r\n                        }\r\n                        else {\r\n                            if (resp.data != null) {\r\n                                this.helper.showAlertMessage(\"User deleted.\", \"success\");\r\n                                this.getFormData();\r\n                            }\r\n                            else {\r\n                                this.helper.showAlertMessage(\"Error deleting user\", \"error\");\r\n                            }\r\n                        }\r\n                    },\r\n                    (err) => {\r\n                        this.helper.showAlertMessage(\"Error deleting user\", \"error\");\r\n                    });\r\n            }\r\n        }).open();\r\n    }\r\n\r\n    //getPermission(featureCode: string, accessType: string): boolean {\r\n    //   return this.accountService.getPermission(featureCode, accessType);\r\n    //}\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n    production: false,\n    Url:\"\"\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}