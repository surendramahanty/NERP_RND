{"version":3,"sources":["$_lazy_route_resource lazy namespace object","src/app/accessories/views/accessory-details.html","src/app/accessories/views/accessory-list.html","src/app/activityLogs/views/activityLog-details.html","src/app/activityLogs/views/activityLog-list.html","src/app/app.component.html","src/app/civilworks/views/civilwork-details.html","src/app/civilworks/views/civilwork-list.html","src/app/components/data-table/dt-pagination.html","src/app/components/data-table/dt-search.html","src/app/dashboard/views/dashboard.html","src/app/entities/components/custom-fields.html","src/app/entities/components/supplier.html","src/app/entities/views/cable-details.html","src/app/entities/views/chamber-details.html","src/app/entities/views/duct-details.html","src/app/entities/views/entity-list.html","src/app/entities/views/homepass-details.html","src/app/entities/views/odf-details.html","src/app/entities/views/pole-details.html","src/app/entities/views/spliceClosure-details.html","src/app/entities/views/splitter-details.html","src/app/generalSettings/views/generalSetting-details.html","src/app/groups/views/group-details.html","src/app/groups/views/group-list.html","src/app/layers/views/layer-details.html","src/app/layers/views/layer-list.html","src/app/roles/views/role-details.html","src/app/roles/views/role-list.html","src/app/users/views/user-details.html","src/app/users/views/user-list.html","node_modules/tslib/tslib.es6.js","src/app/accessories/accessory.module.ts","src/app/accessories/accessory.routes.ts","src/app/accessories/models/accessory.ts","src/app/accessories/services/accessory.service.ts","src/app/accessories/views/accessory-details.ts","src/app/accessories/views/accessory-list.ts","src/app/activityLogs/activityLog.module.ts","src/app/activityLogs/activityLog.routes.ts","src/app/activityLogs/models/activityLog.ts","src/app/activityLogs/services/activityLog.service.ts","src/app/activityLogs/views/activityLog-details.ts","src/app/activityLogs/views/activityLog-list.ts","src/app/app.component.ts","src/app/app.module.ts","src/app/app.routing.ts","src/app/civilworks/civilwork.module.ts","src/app/civilworks/civilwork.routes.ts","src/app/civilworks/models/civilwork.ts","src/app/civilworks/services/civilwork.service.ts","src/app/civilworks/views/civilwork-details.ts","src/app/civilworks/views/civilwork-list.ts","src/app/common/auth/auth.service.ts","src/app/common/helper.ts","src/app/common/interceptors/cacheInterceptor.ts","src/app/common/models/customField.ts","src/app/common/models/dbBaseEntity.ts","src/app/common/models/loginUser.ts","src/app/common/models/paginationRequest.ts","src/app/components/data-table/dt-pagination.ts","src/app/components/data-table/dt-search.ts","src/app/dashboard/services/dashboard.service.ts","src/app/dashboard/views/dashboard.ts","src/app/entities/components/custom-fields.ts","src/app/entities/components/supplier.ts","src/app/entities/entities.module.ts","src/app/entities/entities.routes.ts","src/app/entities/models/baseNetworkEntity.ts","src/app/entities/models/cable.ts","src/app/entities/models/chamber.ts","src/app/entities/models/duct.ts","src/app/entities/models/homepass.ts","src/app/entities/models/installation.ts","src/app/entities/models/odf.ts","src/app/entities/models/optics.ts","src/app/entities/models/owner.ts","src/app/entities/models/pole.ts","src/app/entities/models/spliceClosure.ts","src/app/entities/models/splitter.ts","src/app/entities/services/cable.service.ts","src/app/entities/services/chamber.service.ts","src/app/entities/services/duct.service.ts","src/app/entities/services/homepass.service.ts","src/app/entities/services/odf.service.ts","src/app/entities/services/pole.service.ts","src/app/entities/services/spliceClosure.service.ts","src/app/entities/services/splitter.service.ts","src/app/entities/views/cable-details.ts","src/app/entities/views/chamber-details.ts","src/app/entities/views/duct-details.ts","src/app/entities/views/entity-list.ts","src/app/entities/views/homepass-details.ts","src/app/entities/views/odf-details.ts","src/app/entities/views/pole-details.ts","src/app/entities/views/spliceClosure-details.ts","src/app/entities/views/splitter-details.ts","src/app/generalSettings/generalSettings.module.ts","src/app/generalSettings/generalSettings.routes.ts","src/app/generalSettings/model/generalSettings.ts","src/app/generalSettings/services/generalSettings.service.ts","src/app/generalSettings/views/generalSettings-details.ts","src/app/groups/group.module.ts","src/app/groups/group.routes.ts","src/app/groups/models/group.ts","src/app/groups/services/group.service.ts","src/app/groups/views/group-details.ts","src/app/groups/views/group-list.ts","src/app/layers/layer.module.ts","src/app/layers/layer.routes.ts","src/app/layers/models/layer.ts","src/app/layers/services/layer.service.ts","src/app/layers/views/layer-details.ts","src/app/layers/views/layer-list.ts","src/app/modules/services/module.service.ts","src/app/roles/models/role.ts","src/app/roles/role.module.ts","src/app/roles/role.routes.ts","src/app/roles/services/role.service.ts","src/app/roles/views/role-details.ts","src/app/roles/views/role-list.ts","src/app/shared.module.ts","src/app/users/models/user.ts","src/app/users/services/user.service.ts","src/app/users/user.module.ts","src/app/users/user.routes.ts","src/app/users/views/user-details.ts","src/app/users/views/user-list.ts","src/environments/environment.ts","src/main.ts"],"names":[],"mappings":"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","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \"<section class=\\\"content-header\\\">\\r\\n   <h1>Manage Accessories <small> {{title}} </small></h1>\\r\\n   <ol class=\\\"breadcrumb\\\">\\r\\n      <li><a [routerLink]=\\\"['/']\\\"><i class=\\\"fa fa-home\\\"></i> Home</a></li>\\r\\n      <li><a [routerLink]=\\\"['/accessories']\\\"> Accessories</a></li>\\r\\n   </ol>\\r\\n</section>\\r\\n<section class=\\\"content\\\">\\r\\n   <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-xs-12\\\">\\r\\n         <div class=\\\"box\\\">\\r\\n            <div class=\\\"box-header with-border ui-sortable-handle\\\">\\r\\n               <h3 class=\\\"box-title\\\">Accessory Details</h3>\\r\\n               <div class=\\\"box-tools pull-right\\\" data-original-title=\\\"Status\\\" data-toggle=\\\"tooltip\\\" title=\\\"\\\">\\r\\n                  <button class=\\\"btn btn-social-icon btn-xs btn-danger\\\" (click)=\\\"goBack()\\\">\\r\\n                     <i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                  </button>\\r\\n                  <button class=\\\"btn btn-social-icon btn-xs btn-success\\\" type=\\\"submit\\\" style=\\\"margin-left: 5px;\\\" (click)=\\\"save()\\\" [disabled]=\\\"form.invalid\\\">\\r\\n                     <i class=\\\"far fa-save\\\"></i>\\r\\n                  </button>\\r\\n               </div>\\r\\n            </div>\\r\\n            <form name=\\\"form\\\" action=\\\"javascript:{}\\\" #form=\\\"ngForm\\\" novalidate autocomplete=\\\"off\\\">\\r\\n               <div class=\\\"box-body\\\">\\r\\n                  <div class=\\\"panel panel-default\\\">\\r\\n                     <div class=\\\"panel-heading\\\">\\r\\n                        <h4 class=\\\"panel-title\\\">\\r\\n                           General Information\\r\\n                        </h4>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel-collapse collapse in\\\">\\r\\n                        <div class=\\\"panel-body\\\">\\r\\n                           <div class=\\\"form-group col-md-6\\\">\\r\\n                              <label for=\\\"name\\\" class=\\\"control-label\\\">Name <span style=\\\"color:red;\\\">*</span></label>\\r\\n                              <input type=\\\"text\\\" name=\\\"name\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"accessory.name\\\" required />\\r\\n                           </div>\\r\\n                           <div class=\\\"form-group col-md-6\\\">\\r\\n                              <label for=\\\"parentType\\\" class=\\\"control-label\\\">Parent Type</label>\\r\\n                              <mat-select name=\\\"parentType\\\" [(ngModel)]=\\\"accessory.parentEntityType\\\">\\r\\n                                 <mat-option>Select Parent Entity Type</mat-option>\\r\\n                                 <mat-option value=\\\"Cable\\\">Cable</mat-option>\\r\\n                                 <mat-option value=\\\"Chamber\\\">Chamber</mat-option>\\r\\n                                 <mat-option value=\\\"PoP\\\">PoP</mat-option>\\r\\n                                 <mat-option value=\\\"ODF\\\">ODF</mat-option>\\r\\n                                 <mat-option value=\\\"Pole\\\">Pole</mat-option>\\r\\n                                 <mat-option value=\\\"Duct\\\">Duct</mat-option>\\r\\n                                 <mat-option value=\\\"SpliceClosure\\\">Splice Closure</mat-option>\\r\\n                                 <mat-option value=\\\"Splitter\\\">Splitter</mat-option>\\r\\n                                 <mat-option value=\\\"Customer\\\">Customer</mat-option>\\r\\n                                 <mat-option value=\\\"Microduct\\\">Microduct</mat-option>\\r\\n                                 <mat-option value=\\\"Site\\\">Site</mat-option>\\r\\n                              </mat-select>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"panel-group\\\" id=\\\"accordion\\\">\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#make\\\">Make</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"make\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"type\\\" class=\\\"control-label\\\">Type</label>\\r\\n                                    <input type=\\\"text\\\" name=\\\"type\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"accessory.type\\\" />\\r\\n                                 </div>\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"brand\\\" class=\\\"control-label\\\">Brand</label>\\r\\n                                    <input type=\\\"text\\\" name=\\\"brand\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"accessory.brand\\\" />\\r\\n                                 </div>\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"model\\\" class=\\\"control-label\\\">Model</label>\\r\\n                                    <input type=\\\"text\\\" name=\\\"model\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"accessory.model\\\" />\\r\\n                                 </div>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#zoomSettings\\\">Zoom Settings</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"zoomSettings\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\" style=\\\"padding-top: 35px;\\\">\\r\\n                              <div class=\\\"col-sm-11\\\">\\r\\n                                 <mat-slider name=\\\"zoomLevel\\\" thumbLabel step=\\\"1\\\" min=\\\"0\\\" max=\\\"21\\\" style=\\\"width:100%\\\" [(ngModel)]=\\\"accessory.zoomLevel\\\"></mat-slider>\\r\\n                              </div>\\r\\n                              <div class=\\\"col-sm-1\\\" style=\\\"padding-top: 7px;\\\">\\r\\n                                 <input type=\\\"number\\\" min=\\\"0\\\" max=\\\"21\\\" class=\\\"form-control input-sm\\\" name=\\\"zoom\\\" [(ngModel)]=\\\"accessory.zoomLevel\\\">\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#pricing\\\">Pricing</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"pricing\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <div class=\\\"form-group\\\">\\r\\n                                    <table class=\\\"table table-bordered table-striped\\\">\\r\\n                                       <thead>\\r\\n                                          <tr>\\r\\n                                             <th style=\\\"width:200px\\\">Supplier</th>\\r\\n                                             <th style=\\\"width:200px\\\">SKU</th>\\r\\n                                             <th style=\\\"width:200px\\\">Price</th>\\r\\n                                             <th style=\\\"width: 140px;\\\">Valid From</th>\\r\\n                                             <th style=\\\"width: 140px;\\\">Valid To</th>\\r\\n                                             <th style=\\\"text-align: center;padding: 2px 0px;width: 50px;\\\">\\r\\n                                                <a (click)=\\\"addNewSupplier()\\\" style=\\\"cursor:pointer\\\">\\r\\n                                                   <i class=\\\"fas fa-plus-circle\\\" title=\\\"Add\\\" style=\\\"font-size: 20px; color: #3e53a4;margin: 5px;\\\"></i>\\r\\n                                                </a>\\r\\n                                             </th>\\r\\n                                          </tr>\\r\\n                                       </thead>\\r\\n                                       <tbody>\\r\\n                                          <ng-container *ngIf='accessory.suppliers && accessory.suppliers.length > 0'>\\r\\n                                             <tr *ngFor='let supplier of accessory.suppliers; let rowIndex = index;'>\\r\\n                                                <td><input type=\\\"text\\\" class=\\\"form-control input-sm\\\" autocomplete=\\\"off\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"supplier.name\\\"></td>\\r\\n                                                <td><input type=\\\"text\\\" class=\\\"form-control input-sm\\\" autocomplete=\\\"off\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"supplier.sku\\\"></td>\\r\\n                                                <td><input type=\\\"number\\\" class=\\\"form-control input-sm\\\" autocomplete=\\\"off\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"supplier.price\\\"></td>\\r\\n                                                <td><input type=\\\"date\\\" class=\\\"form-control input-sm\\\" autocomplete=\\\"off\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [ngModel]=\\\"supplier.validFrom | date:'yyyy-MM-dd'\\\" (ngModelChange)=\\\"supplier.validFrom = $event\\\"></td>\\r\\n                                                <td><input type=\\\"date\\\" class=\\\"form-control input-sm\\\" autocomplete=\\\"off\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [ngModel]=\\\"supplier.validTo | date:'yyyy-MM-dd'\\\" (ngModelChange)=\\\"supplier.validTo = $event\\\"></td>\\r\\n                                                <td style=\\\"text-align:center;padding-top: 14px;\\\">\\r\\n                                                   <a (click)=\\\"deleteSupplier(rowIndex)\\\" style=\\\"cursor:pointer\\\">\\r\\n                                                      <i class=\\\"fas fa-trash-alt\\\" title=\\\"Delete\\\" style=\\\"font-size: 15px; color: Red;\\\"></i>\\r\\n                                                   </a>\\r\\n                                                </td>\\r\\n                                             </tr>\\r\\n                                          </ng-container>\\r\\n                                          <tr *ngIf='accessory.suppliers == null || accessory.suppliers.length == 0'>\\r\\n                                             <td colspan=\\\"6\\\" class=\\\"check-mail\\\" style=\\\"text-align: center;\\\">\\r\\n                                                Supplier not defined\\r\\n                                             </td>\\r\\n                                          </tr>\\r\\n                                       </tbody>\\r\\n                                    </table>\\r\\n                                 </div>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n\\r\\n                  </div>\\r\\n\\r\\n               </div>\\r\\n               <div class=\\\"box-footer\\\">\\r\\n                  <div class=\\\"pull-right\\\">\\r\\n                     <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"goBack()\\\">Close</button>\\r\\n                     <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" style=\\\"margin-left:10px\\\" (click)=\\\"save()\\\" [disabled]=\\\"form.invalid\\\">Save</button>\\r\\n                  </div>\\r\\n               </div>\\r\\n            </form>\\r\\n         </div>\\r\\n      </div>\\r\\n   </div>\\r\\n</section>\\r\\n\"","export default \"<section class=\\\"content-header\\\">\\r\\n   <h1>Manage Accessories</h1>\\r\\n   <ol class=\\\"breadcrumb\\\">\\r\\n      <li><a [routerLink]=\\\"['/home']\\\"><i class=\\\"fas fa-home\\\"></i> Home</a></li>\\r\\n   </ol>\\r\\n</section>\\r\\n\\r\\n<section class=\\\"content\\\">\\r\\n   <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-xs-12\\\">\\r\\n         <div class=\\\"box\\\">\\r\\n            <div class=\\\"box-header with-border\\\">\\r\\n               <h3 class=\\\"box-title\\\">Accessory List</h3>\\r\\n               <div class=\\\"box-tools pull-right\\\" data-toggle=\\\"tooltip\\\" title=\\\"\\\" data-original-title=\\\"Status\\\">\\r\\n                  <button [routerLink]=\\\"['details']\\\" class=\\\"btn btn-block btn-xs btn-primary\\\"> New Accessory</button>\\r\\n               </div>\\r\\n            </div>\\r\\n            <div class=\\\"box-body\\\">\\r\\n               <dt-search [searchFields]=\\\"searchFields\\\" (onSearch)=\\\"search($event)\\\"></dt-search>\\r\\n               <dt-pagination [totalPages]=\\\"totalPages\\\" (onPageSizeChange)=\\\"onPageSizeChange($event)\\\" (onPageChange)=\\\"onPageChange($event)\\\"></dt-pagination>\\r\\n\\r\\n               <table class=\\\"table table-bordered table-striped\\\">\\r\\n                  <thead>\\r\\n                     <tr (click)=\\\"onColumnClick($event.target)\\\">\\r\\n                        <th data-column=\\\"Name\\\" class=\\\"table-sorter\\\" style=\\\"width: 200px;\\\">Name</th>\\r\\n                        <th data-column=\\\"ParentEntityType\\\" class=\\\"table-sorter\\\" style=\\\"max-width:300px\\\">Parent Type</th>\\r\\n                        <th data-column=\\\"UpdatedBy\\\" class=\\\"table-sorter\\\" style=\\\"width: 150px;\\\">Updated By</th>\\r\\n                        <th data-column=\\\"UpdatedDate\\\" class=\\\"table-sorter\\\" style=\\\"width: 125px;\\\">Updated On</th>\\r\\n                        <th style=\\\"width:60px\\\"></th>\\r\\n                     </tr>\\r\\n                  </thead>\\r\\n                  <tbody>\\r\\n                     <ng-container *ngIf='accessories && accessories.length > 0'>\\r\\n                        <tr *ngFor='let accessory of accessories'>\\r\\n                           <td>{{accessory.name}}</td>\\r\\n                           <td class=\\\"text-overflow-ellipsis\\\">{{accessory.parentEntityType}}</td>\\r\\n                           <td>{{accessory.updatedBy}}</td>\\r\\n                           <td>{{accessory.updatedDate | date:'dd/MM/yyyy'}}</td>\\r\\n                           <td>\\r\\n                              <a>\\r\\n                                 <i class=\\\"fa fa-edit\\\" [routerLink]=\\\"['details', accessory.id]\\\" title=\\\"Edit\\\" style=\\\"font-size: 14px; cursor:pointer\\\"></i>\\r\\n                              </a>&nbsp;\\r\\n                              <a>\\r\\n                                 <i class=\\\"fa fa-trash\\\" (click)=\\\"delete(accessory)\\\" title=\\\"Remove\\\" style=\\\"font-size: 14px; cursor:pointer; color:red\\\"></i>\\r\\n                              </a>\\r\\n                           </td>\\r\\n                        </tr>\\r\\n                     </ng-container>\\r\\n                     <tr *ngIf='accessories == null || accessories.length == 0'>\\r\\n                        <td colspan=\\\"5\\\" style=\\\"text-align: center;\\\">\\r\\n                           {{statusMessage}}\\r\\n                        </td>\\r\\n                     </tr>\\r\\n                  </tbody>\\r\\n               </table>\\r\\n            </div>\\r\\n         </div>\\r\\n      </div>\\r\\n   </div>\\r\\n</section>\\r\\n\"","export default \"<section class=\\\"content-header\\\">\\r\\n   <h1>Activity Log Details</h1>\\r\\n   <ol class=\\\"breadcrumb\\\">\\r\\n      <li><a [routerLink]=\\\"['/']\\\"><i class=\\\"fa fa-home\\\"></i> Home</a></li>\\r\\n      <li><a [routerLink]=\\\"['/activityLogs']\\\"> Activity Logs</a></li>\\r\\n   </ol>\\r\\n</section>\\r\\n\\r\\n<section class=\\\"content\\\">\\r\\n   <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-xs-12\\\">\\r\\n         <div class=\\\"box\\\">\\r\\n            <div class=\\\"box-header with-border ui-sortable-handle\\\">\\r\\n               <h3 class=\\\"box-title\\\">Activity Log Details</h3>\\r\\n               <div class=\\\"box-tools pull-right\\\" data-original-title=\\\"Status\\\" data-toggle=\\\"tooltip\\\" title=\\\"\\\">\\r\\n                  <button class=\\\"btn btn-social-icon btn-xs btn-danger\\\" (click)=\\\"goBack()\\\">\\r\\n                     <i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                  </button>\\r\\n               </div>\\r\\n            </div>\\r\\n            <form name=\\\"activityLogForm\\\" action=\\\"javascript:{}\\\" #activityLogForm=\\\"ngForm\\\" novalidate autocomplete=\\\"off\\\">\\r\\n               <div class=\\\"box-body\\\">\\r\\n                  <div>\\r\\n                     <div class=\\\"col-md-6 form-group\\\">\\r\\n                        <label for=\\\"createdDate\\\" class=\\\"control-label\\\">Activity Date</label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control input-sm\\\" name=\\\"loginId\\\" [ngModel]=\\\"activityLog.activityOn\\\" readonly>\\r\\n                     </div>\\r\\n                     <div class=\\\"col-md-6 form-group\\\">\\r\\n                        <label for=\\\"loginUser\\\" class=\\\"control-label\\\">Accessed By</label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control input-sm\\\" name=\\\"loginUser\\\" [ngModel]=\\\"activityLog.loginId\\\" readonly>\\r\\n                     </div>\\r\\n                     <div class=\\\"col-md-6 form-group\\\">\\r\\n                        <label for=\\\"webServer\\\" class=\\\"control-label\\\">Web Server</label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control input-sm\\\" name=\\\"webServer\\\" [ngModel]=\\\"activityLog.webServer\\\" readonly>\\r\\n                     </div>\\r\\n                     <div class=\\\"col-md-6 form-group\\\">\\r\\n                        <label for=\\\"ipAddress\\\" class=\\\"control-label\\\">Source IP Address</label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control input-sm\\\" name=\\\"ipAddress\\\" [ngModel]=\\\"activityLog.sourceIP\\\" readonly>\\r\\n                     </div>\\r\\n                     <div class=\\\"col-md-6 form-group\\\">\\r\\n                        <label for=\\\"application\\\" class=\\\"control-label\\\">Application</label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control input-sm\\\" name=\\\"application\\\" [ngModel]=\\\"activityLog.application\\\" readonly>\\r\\n                     </div>\\r\\n                     <div class=\\\"col-md-6 form-group\\\">\\r\\n                        <label for=\\\"module\\\" class=\\\"control-label\\\">Module/Function</label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control input-sm\\\" name=\\\"module\\\" [ngModel]=\\\"module_function\\\" readonly>\\r\\n                     </div>\\r\\n                     <div class=\\\"col-md-12 form-group\\\">\\r\\n                        <label for=\\\"otherInfo\\\" class=\\\"control-label\\\">Other Information (Parameters)</label>\\r\\n                        <textarea class=\\\"form-control\\\" rows=\\\"15\\\" name=\\\"otherInfo\\\" [ngModel]=\\\"otherInfo\\\" readonly></textarea>\\r\\n                     </div>\\r\\n                  </div>\\r\\n               </div>\\r\\n               <div class=\\\"box-footer\\\">\\r\\n                  <div class=\\\"pull-right\\\">\\r\\n                     <div>\\r\\n                        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"goBack()\\\">Close</button>\\r\\n                     </div>\\r\\n                  </div>\\r\\n               </div>\\r\\n            </form>\\r\\n         </div>\\r\\n      </div>\\r\\n   </div>\\r\\n</section>\\r\\n\"","export default \"<section class=\\\"content-header\\\">\\r\\n   <h1>Activity Logs</h1>\\r\\n   <ol class=\\\"breadcrumb\\\">\\r\\n      <li><a [routerLink]=\\\"['/home']\\\"><i class=\\\"fas fa-home\\\"></i> Home</a></li>\\r\\n   </ol>\\r\\n</section>\\r\\n\\r\\n<section class=\\\"content\\\">\\r\\n   <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-xs-12\\\">\\r\\n         <div class=\\\"box\\\">\\r\\n            <div class=\\\"box-header with-border\\\">\\r\\n               <h3 class=\\\"box-title\\\">Activity Logs</h3>\\r\\n            </div>\\r\\n            <div class=\\\"box-body\\\">\\r\\n\\r\\n               <dt-search [searchFields]=\\\"searchFields\\\" (onSearch)=\\\"search($event)\\\"></dt-search>\\r\\n               <dt-pagination [totalPages]=\\\"totalPages\\\" (onPageSizeChange)=\\\"onPageSizeChange($event)\\\" (onPageChange)=\\\"onPageChange($event)\\\"></dt-pagination>\\r\\n\\r\\n               <table id=\\\"groups\\\" class=\\\"table table-bordered table-striped\\\">\\r\\n                  <thead>\\r\\n                     <tr (click)=\\\"onColumnClick($event.target)\\\">\\r\\n                        <th data-column=\\\"ActivityOn\\\" class=\\\"table-sorter\\\" style=\\\"width: 200px;\\\">Activity Date</th>\\r\\n                        <th data-column=\\\"LoginId\\\" class=\\\"table-sorter\\\">Accessed By</th>\\r\\n                        <th data-column=\\\"SourceIP\\\" class=\\\"table-sorter\\\" style=\\\"width: 130px;\\\">Source IP</th>\\r\\n                        <th data-column=\\\"Application\\\" class=\\\"table-sorter\\\">Application</th>\\r\\n                        <th data-column=\\\"Module\\\" class=\\\"table-sorter\\\">Module</th>\\r\\n                        <th data-column=\\\"Action\\\" class=\\\"table-sorter\\\">Action</th>\\r\\n                        <th style=\\\"width:42px\\\"></th>\\r\\n                     </tr>\\r\\n                  </thead>\\r\\n                  <tbody>\\r\\n                     <ng-container *ngIf='activityLogs && activityLogs.length > 0'>\\r\\n                        <tr *ngFor='let activityLog of activityLogs'>\\r\\n                           <td>{{activityLog.createdDate | date:'dd-MM-yyyy'}} {{ activityLog.createdDate | date:'HH:mm:ss a'}}</td>\\r\\n                           <td>{{activityLog.loginId}}</td>\\r\\n                           <td>{{activityLog.sourceIP}}</td>\\r\\n                           <td class=\\\"text-overflow-ellipsis\\\">{{activityLog.application}}</td>\\r\\n                           <td class=\\\"text-overflow-ellipsis\\\">{{activityLog.module}}</td>\\r\\n                           <td class=\\\"text-overflow-ellipsis\\\">{{activityLog.action}}</td>\\r\\n                           <td>\\r\\n                              <a>\\r\\n                                 <i class=\\\"fa fa-edit\\\" [routerLink]=\\\"['details', activityLog.id]\\\" title=\\\"View\\\" style=\\\"font-size: 14px; cursor:pointer\\\"></i>\\r\\n                              </a>\\r\\n                           </td>\\r\\n                        </tr>\\r\\n                     </ng-container>\\r\\n                     <tr *ngIf='activityLogs == null || activityLogs.length == 0'>\\r\\n                        <td colspan=\\\"7\\\" style=\\\"text-align: center;\\\">\\r\\n                           {{statusMessage}}\\r\\n                        </td>\\r\\n                     </tr>\\r\\n                  </tbody>\\r\\n               </table>\\r\\n            </div>\\r\\n         </div>\\r\\n      </div>\\r\\n   </div>\\r\\n</section>\\r\\n\"","export default \"<div class=\\\"wrapper\\\">\\r\\n   <header class=\\\"main-header\\\">\\r\\n      <a href=\\\"/\\\" class=\\\"logo\\\">\\r\\n         <img src=\\\"images/logo.svg\\\" style=\\\"height: 35px;\\\">\\r\\n      </a>\\r\\n      <nav class=\\\"navbar\\\" role=\\\"navigation\\\">\\r\\n         <a href=\\\"#\\\" class=\\\"sidebar-toggle\\\" data-toggle=\\\"push-menu\\\" role=\\\"button\\\">\\r\\n            <i class=\\\"fas fa-bars\\\"></i>\\r\\n         </a>\\r\\n         <div class=\\\"navbar-custom-menu\\\">\\r\\n            <ul class=\\\"nav navbar-nav\\\">\\r\\n               <li>\\r\\n                  <a href=\\\"#\\\">\\r\\n                     <span class=\\\"hidden-xs\\\">{{loginUser.name}}</span>\\r\\n                  </a>\\r\\n               </li>\\r\\n               <li>\\r\\n                  <a [routerLink]=\\\"\\\" title=\\\"Logout\\\" class=\\\"nav-link\\\" (click)=\\\"onLogout()\\\"><i class=\\\"fas fa-sign-out-alt\\\"></i></a>\\r\\n               </li>\\r\\n            </ul>\\r\\n         </div>\\r\\n      </nav>\\r\\n   </header>\\r\\n   <aside class=\\\"main-sidebar\\\">\\r\\n      <section class=\\\"sidebar\\\">\\r\\n         <ul class=\\\"sidebar-menu\\\" data-widget=\\\"tree\\\">\\r\\n            <li class=\\\"header\\\">MAIN NAVIGATION</li>\\r\\n            <li [routerLinkActive]=\\\"['active']\\\"><a [routerLink]=\\\"['/home']\\\"><span>Home</span></a></li>\\r\\n            <li [routerLinkActive]=\\\"['active']\\\"><a [routerLink]=\\\"['/groups']\\\"><span>Groups</span></a></li>\\r\\n            <li [routerLinkActive]=\\\"['active']\\\"><a [routerLink]=\\\"['/roles']\\\"><span>Roles</span></a></li>\\r\\n            <li [routerLinkActive]=\\\"['active']\\\"><a [routerLink]=\\\"['/users']\\\"><span>Users</span></a></li>\\r\\n            <li [routerLinkActive]=\\\"['active']\\\"><a [routerLink]=\\\"['/entities']\\\"><span>Entities</span></a></li>\\r\\n            <li [routerLinkActive]=\\\"['active']\\\"><a [routerLink]=\\\"['/accessories']\\\"><span>Accessories</span></a></li>\\r\\n            <li [routerLinkActive]=\\\"['active']\\\"><a [routerLink]=\\\"['/civilworks']\\\"><span>Civil Works</span></a></li>\\r\\n            <li [routerLinkActive]=\\\"['active']\\\"><a [routerLink]=\\\"['/layers']\\\"><span>Layers</span></a></li>\\r\\n            <li [routerLinkActive]=\\\"['active']\\\"><a [routerLink]=\\\"['/generalSettings']\\\"><span>General Settings</span></a></li>\\r\\n            <li [routerLinkActive]=\\\"['active']\\\"><a [routerLink]=\\\"['/activityLogs']\\\"><span>Activity Logs</span></a></li>\\r\\n         </ul>\\r\\n      </section>\\r\\n   </aside>\\r\\n   <div class=\\\"content-wrapper\\\">\\r\\n      <router-outlet></router-outlet>\\r\\n   </div>\\r\\n   <footer class=\\\"main-footer\\\">\\r\\n      <span>&copy; Pitney Bowes 2019</span>\\r\\n      <!--<div class=\\\"pull-right hidden-xs\\\">\\r\\n         <span>Best view with IE 11, Mozilla 51, Chrome 55 and Safari 10 and above</span>\\r\\n      </div>-->\\r\\n   </footer>\\r\\n</div>\\r\\n\"","export default \"<section class=\\\"content-header\\\">\\r\\n   <h1>Manage Civil Works <small> {{title}} </small></h1>\\r\\n   <ol class=\\\"breadcrumb\\\">\\r\\n      <li><a [routerLink]=\\\"['/']\\\"><i class=\\\"fa fa-home\\\"></i> Home</a></li>\\r\\n      <li><a [routerLink]=\\\"['/civilworks']\\\"> Civilworks</a></li>\\r\\n   </ol>\\r\\n</section>\\r\\n<section class=\\\"content\\\">\\r\\n   <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-xs-12\\\">\\r\\n         <div class=\\\"box\\\">\\r\\n            <div class=\\\"box-header with-border ui-sortable-handle\\\">\\r\\n               <h3 class=\\\"box-title\\\">Civil Work Details</h3>\\r\\n               <div class=\\\"box-tools pull-right\\\" data-original-title=\\\"Status\\\" data-toggle=\\\"tooltip\\\" title=\\\"\\\">\\r\\n                  <button class=\\\"btn btn-social-icon btn-xs btn-danger\\\" (click)=\\\"goBack()\\\">\\r\\n                     <i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                  </button>\\r\\n                  <button class=\\\"btn btn-social-icon btn-xs btn-success\\\" type=\\\"submit\\\" style=\\\"margin-left: 5px;\\\" (click)=\\\"save()\\\" [disabled]=\\\"form.invalid\\\">\\r\\n                     <i class=\\\"far fa-save\\\"></i>\\r\\n                  </button>\\r\\n               </div>\\r\\n            </div>\\r\\n            <form name=\\\"form\\\" action=\\\"javascript:{}\\\" #form=\\\"ngForm\\\" novalidate autocomplete=\\\"off\\\">\\r\\n               <div class=\\\"box-body\\\">\\r\\n                  <div class=\\\"panel panel-default\\\">\\r\\n                     <div class=\\\"panel-heading\\\">\\r\\n                        <h4 class=\\\"panel-title\\\">\\r\\n                           General Information\\r\\n                        </h4>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel-collapse collapse in\\\">\\r\\n                        <div class=\\\"panel-body\\\">\\r\\n                           <div class=\\\"form-group col-md-6\\\">\\r\\n                              <label for=\\\"name\\\" class=\\\"control-label\\\">Name <span style=\\\"color:red;\\\">*</span></label>\\r\\n                              <input type=\\\"text\\\" name=\\\"name\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"civilwork.name\\\" required  />\\r\\n                           </div>\\r\\n                           <div class=\\\"form-group col-md-6\\\">\\r\\n                              <label for=\\\"parentType\\\" class=\\\"control-label\\\">Parent Type</label>\\r\\n                              <mat-select name=\\\"parentType\\\" [(ngModel)]=\\\"civilwork.parentEntityType\\\">\\r\\n                                 <mat-option>Select Parent Entity Type</mat-option>\\r\\n                                 <mat-option value=\\\"Cable\\\">Cable</mat-option>\\r\\n                                 <mat-option value=\\\"Chamber\\\">Chamber</mat-option>\\r\\n                                 <mat-option value=\\\"PoP\\\">PoP</mat-option>\\r\\n                                 <mat-option value=\\\"ODF\\\">ODF</mat-option>\\r\\n                                 <mat-option value=\\\"Pole\\\">Pole</mat-option>\\r\\n                                 <mat-option value=\\\"Duct\\\">Duct</mat-option>\\r\\n                                 <mat-option value=\\\"SpliceClosure\\\">Splice Closure</mat-option>\\r\\n                                 <mat-option value=\\\"Splitter\\\">Splitter</mat-option>\\r\\n                                 <mat-option value=\\\"Customer\\\">Customer</mat-option>\\r\\n                                 <mat-option value=\\\"Microduct\\\">Microduct</mat-option>\\r\\n                                 <mat-option value=\\\"Site\\\">Site</mat-option>\\r\\n                              </mat-select>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"panel-group\\\" id=\\\"accordion\\\">\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#pricing\\\">Pricing</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"pricing\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <div class=\\\"form-group\\\">\\r\\n                                    <table class=\\\"table table-bordered table-striped\\\">\\r\\n                                       <thead>\\r\\n                                          <tr>\\r\\n                                             <th style=\\\"width:200px\\\">Contractor</th>\\r\\n                                             <th style=\\\"width:200px\\\">Service Cost</th>\\r\\n                                             <th style=\\\"width: 140px;\\\">Valid From</th>\\r\\n                                             <th style=\\\"width: 140px;\\\">Valid To</th>\\r\\n                                             <th style=\\\"text-align: center;padding: 2px 0px;width: 50px;\\\">\\r\\n                                                <a (click)=\\\"addNewSupplier()\\\" style=\\\"cursor:pointer\\\">\\r\\n                                                   <i class=\\\"fas fa-plus-circle\\\" title=\\\"Add\\\" style=\\\"font-size: 20px; color: #3e53a4;margin: 5px;\\\"></i>\\r\\n                                                </a>\\r\\n                                             </th>\\r\\n                                          </tr>\\r\\n                                       </thead>\\r\\n                                       <tbody>\\r\\n                                          <ng-container *ngIf='civilwork.suppliers && civilwork.suppliers.length > 0'>\\r\\n                                             <tr *ngFor='let supplier of civilwork.suppliers; let rowIndex = index;'>\\r\\n                                                <td><input type=\\\"text\\\" class=\\\"form-control input-sm\\\" autocomplete=\\\"off\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"supplier.name\\\"></td>\\r\\n                                                <td><input type=\\\"number\\\" class=\\\"form-control input-sm\\\" autocomplete=\\\"off\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"supplier.price\\\"></td>\\r\\n                                                <td><input type=\\\"date\\\" class=\\\"form-control input-sm\\\" autocomplete=\\\"off\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [ngModel]=\\\"supplier.validFrom | date:'yyyy-MM-dd'\\\" (ngModelChange)=\\\"supplier.validFrom = $event\\\"></td>\\r\\n                                                <td><input type=\\\"date\\\" class=\\\"form-control input-sm\\\" autocomplete=\\\"off\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [ngModel]=\\\"supplier.validTo | date:'yyyy-MM-dd'\\\" (ngModelChange)=\\\"supplier.validTo = $event\\\"></td>\\r\\n                                                <td style=\\\"text-align:center;padding-top: 14px;\\\">\\r\\n                                                   <a (click)=\\\"deleteSupplier(rowIndex)\\\" style=\\\"cursor:pointer\\\">\\r\\n                                                      <i class=\\\"fas fa-trash-alt\\\" title=\\\"Delete\\\" style=\\\"font-size: 15px; color: Red;\\\"></i>\\r\\n                                                   </a>\\r\\n                                                </td>\\r\\n                                             </tr>\\r\\n                                          </ng-container>\\r\\n                                          <tr *ngIf='civilwork.suppliers == null || civilwork.suppliers.length == 0'>\\r\\n                                             <td colspan=\\\"5\\\" class=\\\"check-mail\\\" style=\\\"text-align: center;\\\">\\r\\n                                                Contractor not added\\r\\n                                             </td>\\r\\n                                          </tr>\\r\\n                                       </tbody>\\r\\n                                    </table>\\r\\n                                 </div>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n\\r\\n                  </div>\\r\\n\\r\\n               </div>\\r\\n               <div class=\\\"box-footer\\\">\\r\\n                  <div class=\\\"pull-right\\\">\\r\\n                     <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"goBack()\\\">Close</button>\\r\\n                     <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" style=\\\"margin-left:10px\\\" (click)=\\\"save()\\\" [disabled]=\\\"form.invalid\\\">Save</button>\\r\\n                  </div>\\r\\n               </div>\\r\\n            </form>\\r\\n         </div>\\r\\n      </div>\\r\\n   </div>\\r\\n</section>\\r\\n\"","export default \"<section class=\\\"content-header\\\">\\r\\n   <h1>Manage Civil Works</h1>\\r\\n   <ol class=\\\"breadcrumb\\\">\\r\\n      <li><a [routerLink]=\\\"['/home']\\\"><i class=\\\"fas fa-home\\\"></i> Home</a></li>\\r\\n   </ol>\\r\\n</section>\\r\\n\\r\\n<section class=\\\"content\\\">\\r\\n   <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-xs-12\\\">\\r\\n         <div class=\\\"box\\\">\\r\\n            <div class=\\\"box-header with-border\\\">\\r\\n               <h3 class=\\\"box-title\\\">Civil Work List</h3>\\r\\n               <div class=\\\"box-tools pull-right\\\" data-toggle=\\\"tooltip\\\" title=\\\"\\\" data-original-title=\\\"Status\\\">\\r\\n                  <button [routerLink]=\\\"['details']\\\" class=\\\"btn btn-block btn-xs btn-primary\\\"> New Civilwork</button>\\r\\n               </div>\\r\\n            </div>\\r\\n            <div class=\\\"box-body\\\">\\r\\n               <dt-search [searchFields]=\\\"searchFields\\\" (onSearch)=\\\"search($event)\\\"></dt-search>\\r\\n               <dt-pagination [totalPages]=\\\"totalPages\\\" (onPageSizeChange)=\\\"onPageSizeChange($event)\\\" (onPageChange)=\\\"onPageChange($event)\\\"></dt-pagination>\\r\\n\\r\\n               <table class=\\\"table table-bordered table-striped\\\">\\r\\n                  <thead>\\r\\n                     <tr (click)=\\\"onColumnClick($event.target)\\\">\\r\\n                        <th data-column=\\\"Name\\\" class=\\\"table-sorter\\\" style=\\\"width: 200px;\\\">Name</th>\\r\\n                        <th data-column=\\\"ParentEntityType\\\" class=\\\"table-sorter\\\" style=\\\"max-width:300px\\\">Parent Type</th>\\r\\n                        <th data-column=\\\"UpdatedBy\\\" class=\\\"table-sorter\\\" style=\\\"width: 150px;\\\">Updated By</th>\\r\\n                        <th data-column=\\\"UpdatedDate\\\" class=\\\"table-sorter\\\" style=\\\"width: 125px;\\\">Updated On</th>\\r\\n                        <th style=\\\"width:72px\\\"></th>\\r\\n                     </tr>\\r\\n                  </thead>\\r\\n                  <tbody>\\r\\n                     <ng-container *ngIf='civilworks && civilworks.length > 0'>\\r\\n                        <tr *ngFor='let civilwork of civilworks'>\\r\\n                           <td>{{civilwork.name}}</td>\\r\\n                           <td class=\\\"text-overflow-ellipsis\\\">{{civilwork.parentEntityType}}</td>\\r\\n                           <td>{{civilwork.updatedBy}}</td>\\r\\n                           <td>{{civilwork.updatedDate | date:'dd/MM/yyyy'}}</td>\\r\\n                           <td>\\r\\n                              <a>\\r\\n                                 <i class=\\\"fa fa-edit\\\" [routerLink]=\\\"['details', civilwork.id]\\\" title=\\\"Edit\\\" style=\\\"font-size: 14px; cursor:pointer\\\"></i>\\r\\n                              </a>&nbsp;\\r\\n                              <a>\\r\\n                                 <i class=\\\"fa fa-trash\\\" (click)=\\\"delete(civilwork)\\\" title=\\\"Remove\\\" style=\\\"font-size: 14px; cursor:pointer; color:red\\\"></i>\\r\\n                              </a>\\r\\n                           </td>\\r\\n                        </tr>\\r\\n                     </ng-container>\\r\\n                     <tr *ngIf='civilworks == null || civilworks.length == 0'>\\r\\n                        <td colspan=\\\"5\\\" style=\\\"text-align: center;\\\">\\r\\n                           {{statusMessage}}\\r\\n                        </td>\\r\\n                     </tr>\\r\\n                  </tbody>\\r\\n               </table>\\r\\n            </div>\\r\\n         </div>\\r\\n      </div>\\r\\n   </div>\\r\\n</section>\\r\\n\"","export default \"<div class=\\\"pull-left\\\">\\r\\n   <span style=\\\"padding-right: 10px;font-size: small;\\\">Pages</span>\\r\\n   <div class=\\\"btn-group\\\" style=\\\"padding-right: 10px;\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-default dropdown-toggle btn-sm\\\" data-toggle=\\\"dropdown\\\" aria-expanded=\\\"false\\\">\\r\\n         <span style=\\\"padding-right: 5px;\\\"> {{pageSize}} </span>\\r\\n         <span class=\\\"caret\\\"></span>\\r\\n      </button>\\r\\n      <ul class=\\\"dropdown-menu\\\">\\r\\n         <li><a [routerLink]=\\\"\\\" (click)=\\\"pageSize = 10; pageSizeChange()\\\">10</a></li>\\r\\n         <li><a [routerLink]=\\\"\\\" (click)=\\\"pageSize = 20; pageSizeChange()\\\">20</a></li>\\r\\n         <li><a [routerLink]=\\\"\\\" (click)=\\\"pageSize = 50; pageSizeChange()\\\">50</a></li>\\r\\n         <li><a [routerLink]=\\\"\\\" (click)=\\\"pageSize = 100; pageSizeChange()\\\">100</a></li>\\r\\n      </ul>\\r\\n   </div>\\r\\n</div>\\r\\n<div class=\\\"pull-right\\\">\\r\\n   <span style=\\\"padding-right: 10px;font-size: small;\\\">Showing page {{currentPage}} of {{totalPages}}</span>\\r\\n   <div class=\\\"btn-group\\\" style=\\\"padding-bottom:5px\\\">\\r\\n      <button class=\\\"btn btn-default btn-sm\\\" type=\\\"button\\\" (click)=\\\"setPage(currentPage - 1)\\\" [ngClass]=\\\"{disabled:currentPage === 1}\\\"><i class=\\\"fa fa-chevron-left fa-fw\\\"></i></button>\\r\\n      <button class=\\\"btn btn-default btn-sm\\\" type=\\\"button\\\" (click)=\\\"setPage(currentPage + 1)\\\" [ngClass]=\\\"{disabled:currentPage === totalPages}\\\"><i class=\\\"fa fa-chevron-right fa-fw\\\"></i></button>\\r\\n   </div>\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"input-group input-group-sm\\\" style=\\\"padding-bottom:20px\\\">\\r\\n   <div class=\\\"input-group-btn\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-warning dropdown-toggle search-dropdown\\\" data-toggle=\\\"dropdown\\\" aria-expanded=\\\"false\\\">\\r\\n         {{selectedField.label}}\\r\\n         <span class=\\\"fa fa-caret-down\\\"></span>\\r\\n      </button>\\r\\n      <ul class=\\\"dropdown-menu\\\">\\r\\n         <ng-container *ngIf='searchFields && searchFields.length > 0'>\\r\\n            <li *ngFor='let searchField of searchFields'>\\r\\n               <a [routerLink]=\\\"\\\" (click)=setSearchField(searchField)>{{searchField.label}}</a>\\r\\n            </li>\\r\\n         </ng-container>\\r\\n         <li class=\\\"divider\\\"></li>\\r\\n         <li><a [routerLink]=\\\"\\\" data-toggle=\\\"modal\\\" data-target=\\\"#advancedSearch\\\">Advanced Search</a></li>\\r\\n\\r\\n      </ul>\\r\\n   </div>\\r\\n   <input [type]=selectedField.dataType class=\\\"form-control\\\" name=\\\"dateSearch\\\" [(ngModel)]=\\\"searchText\\\" autocomplete=\\\"off\\\">\\r\\n   <span class=\\\"input-group-btn\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-info btn-flat\\\" (click)=\\\"search()\\\"><i class=\\\"fas fa-search\\\"></i></button>\\r\\n   </span>\\r\\n</div>\\r\\n<ng-container *ngIf=\\\"searchFilter && searchFilter.filters.length > 0\\\">\\r\\n   <div style=\\\"padding-bottom: 8px; border-bottom: 1px solid #ddd; margin-bottom: 10px;\\\">\\r\\n      <label>Search Filters:</label>\\r\\n      <div class=\\\"row\\\">\\r\\n         <ng-container *ngFor='let filter of filterPills; let rowIndex = index;'>\\r\\n            <span class=\\\"search-param\\\">{{filter.propertyName}} = {{filter.value}} <a (click)=\\\"removeFilter(rowIndex)\\\" style=\\\"cursor:pointer\\\"><i class=\\\"fa fa-times\\\" title=\\\"Remove\\\" style=\\\"color: Red; padding-left: 10px;\\\"></i></a></span>\\r\\n         </ng-container>\\r\\n      </div>\\r\\n   </div>\\r\\n</ng-container>\\r\\n\\r\\n<div id=\\\"advancedSearch\\\" class=\\\"modal fade\\\" role=\\\"dialog\\\">\\r\\n   <div class=\\\"modal-dialog\\\">\\r\\n      <div class=\\\"modal-content\\\" style=\\\"border-radius:3px\\\">\\r\\n         <div class=\\\"modal-header\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\r\\n            <h4 class=\\\"modal-title\\\">Advanced Search</h4>\\r\\n         </div>\\r\\n         <div class=\\\"modal-body\\\">\\r\\n            <div class=\\\"pull-right\\\">\\r\\n               <span style=\\\"padding-right:5px; vertical-align: top;\\\">Condition</span>\\r\\n               <label class=\\\"switch\\\">\\r\\n                  <input type=\\\"checkbox\\\" [checked]=\\\"conditionOption\\\" [(ngModel)]=\\\"conditionOption\\\">\\r\\n                  <span class=\\\"slider round\\\"></span>\\r\\n               </label>\\r\\n            </div>\\r\\n            <table class=\\\"table table-bordered\\\">\\r\\n               <thead>\\r\\n                  <tr>\\r\\n                     <th style=\\\"width: 200px;\\\">Field</th>\\r\\n                     <th>Value</th>\\r\\n                  </tr>\\r\\n               </thead>\\r\\n               <tbody>\\r\\n                  <ng-container *ngIf='searchFields && searchFields.length > 0'>\\r\\n                     <tr *ngFor='let searchField of searchFields'>\\r\\n                        <td>{{searchField.label}}</td>\\r\\n                        <td><input [type]=searchField.dataType class=\\\"form-control input-sm\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"searchField.value\\\"></td>\\r\\n                     </tr>\\r\\n                  </ng-container>\\r\\n                  <tr *ngIf='searchFields == null || searchFields.length == 0'>\\r\\n                     <td colspan=\\\"2\\\" style=\\\"text-align: center;\\\">\\r\\n                        No search fields defined\\r\\n                     </td>\\r\\n                  </tr>\\r\\n               </tbody>\\r\\n            </table>\\r\\n         </div>\\r\\n         <div class=\\\"modal-footer\\\">\\r\\n            <button class=\\\"btn btn-info\\\" data-dismiss=\\\"modal\\\" type=\\\"button\\\" (click)=\\\"advancedSearch()\\\">Search</button>\\r\\n            <button class=\\\"btn btn-default pull-left\\\" data-dismiss=\\\"modal\\\" type=\\\"button\\\" (click)=\\\"clearSearch()\\\">Clear</button>\\r\\n         </div>\\r\\n      </div>\\r\\n   </div>\\r\\n</div>\\r\\n\"","export default \"<section class=\\\"content-header\\\">\\r\\n    <h1>Dashboard</h1>\\r\\n</section>\\r\\n\\r\\n<!--<section class=\\\"content\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n            <div class=\\\"box\\\">\\r\\n                <div class=\\\"box-header with-border ui-sortable-handle\\\">\\r\\n                    <h3 class=\\\"box-title\\\">Task</h3>\\r\\n                </div>\\r\\n                <div class=\\\"box-body\\\">\\r\\n                   <div class=\\\"row\\\">\\r\\n\\r\\n                   </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n</section>-->\\r\\n\"","export default \"<div class=\\\"form-group\\\">\\r\\n   <table class=\\\"table table-bordered table-striped\\\">\\r\\n      <thead>\\r\\n         <tr>\\r\\n            <th style=\\\"width:200px\\\">Category</th>\\r\\n            <th style=\\\"width:200px\\\">Display Name</th>\\r\\n            <th style=\\\"width: 140px;\\\">Control Type</th>\\r\\n            <th style=\\\"width: 140px;\\\">Data Type</th>\\r\\n            <th>Value(s)</th>\\r\\n            <th style=\\\"text-align: center;padding: 2px 0px;width: 50px;\\\">\\r\\n               <a (click)=\\\"addCustomField()\\\" style=\\\"cursor:pointer\\\">\\r\\n                  <i class=\\\"fas fa-plus-circle\\\" title=\\\"Add\\\" style=\\\"font-size: 20px; color: #3e53a4;margin: 5px;\\\"></i>\\r\\n               </a>\\r\\n            </th>\\r\\n         </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n         <ng-container *ngIf='customFields && customFields.length > 0'>\\r\\n            <tr *ngFor='let customField of customFields; let rowIndex = index;'>\\r\\n               <td><input type=\\\"text\\\" class=\\\"form-control input-sm\\\" autocomplete=\\\"off\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"customField.category\\\"></td>\\r\\n               <td><input type=\\\"text\\\" class=\\\"form-control input-sm\\\" autocomplete=\\\"off\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"customField.label\\\"></td>\\r\\n               <td>\\r\\n                  <mat-select [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"customField.controlType\\\">\\r\\n                     <mat-option [value]=1>Text</mat-option>\\r\\n                     <mat-option [value]=2>Dropdown</mat-option>\\r\\n                     <mat-option [value]=3>Date</mat-option>\\r\\n                     <mat-option [value]=4>Radio</mat-option>\\r\\n                     <mat-option [value]=5>Checkbox</mat-option>\\r\\n                     <!--<mat-option *ngFor=\\\"let control of keys(controlType)\\\" [value]=\\\"controlType[control]\\\">{{control}}</mat-option>-->\\r\\n                  </mat-select>\\r\\n               </td>\\r\\n               <td>\\r\\n                  <mat-select [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"customField.dataType\\\">\\r\\n                     <mat-option [value]=1>String</mat-option>\\r\\n                     <mat-option [value]=2>Number</mat-option>\\r\\n                     <mat-option [value]=3>Boolean</mat-option>\\r\\n                     <mat-option [value]=4>Date</mat-option>\\r\\n                  </mat-select>\\r\\n               </td>\\r\\n               <td><input type=\\\"text\\\" class=\\\"form-control input-sm\\\" autocomplete=\\\"off\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [disabled]=\\\"customField.controlType=='Date' || customField.controlType=='Text'\\\" [(ngModel)]=\\\"customField.values\\\"></td>\\r\\n               <td style=\\\"text-align:center;padding-top: 14px;\\\">\\r\\n                  <a (click)=\\\"deleteCustomField(rowIndex)\\\" style=\\\"cursor:pointer\\\">\\r\\n                     <i class=\\\"fas fa-trash-alt\\\" title=\\\"Delete\\\" style=\\\"font-size: 15px; color: Red;\\\"></i>\\r\\n                  </a>\\r\\n               </td>\\r\\n            </tr>\\r\\n         </ng-container>\\r\\n         <tr *ngIf='customFields == null || customFields.length == 0'>\\r\\n            <td colspan=\\\"6\\\" class=\\\"check-mail\\\" style=\\\"text-align: center;\\\">\\r\\n               Custom fields not defined\\r\\n            </td>\\r\\n         </tr>\\r\\n      </tbody>\\r\\n   </table>\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"form-group\\\">\\r\\n   <table class=\\\"table table-bordered table-striped\\\">\\r\\n      <thead>\\r\\n         <tr>\\r\\n            <th>Supplier</th>\\r\\n            <th>SKU</th>\\r\\n            <th>Stock Qty</th>\\r\\n            <th>Price</th>\\r\\n            <th>Currency</th>\\r\\n            <th>Valid From</th>\\r\\n            <th>Valid To</th>\\r\\n            <th style=\\\"text-align: center;padding: 2px 0px;width: 50px;\\\">\\r\\n               <a (click)=\\\"addNewSupplier()\\\" style=\\\"cursor:pointer\\\">\\r\\n                  <i class=\\\"fas fa-plus-circle\\\" title=\\\"Add\\\" style=\\\"font-size: 20px; color: #3e53a4;margin: 5px;\\\"></i>\\r\\n               </a>\\r\\n            </th>\\r\\n         </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n         <ng-container *ngIf='supplierList && supplierList.length > 0'>\\r\\n            <tr *ngFor='let supplier of supplierList; let rowIndex = index;'>\\r\\n               <td><input type=\\\"text\\\" class=\\\"form-control input-sm\\\" autocomplete=\\\"off\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"supplier.name\\\"></td>\\r\\n               <td><input type=\\\"text\\\" class=\\\"form-control input-sm\\\" autocomplete=\\\"off\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"supplier.sku\\\"></td>\\r\\n               <td><input type=\\\"number\\\" class=\\\"form-control input-sm\\\" autocomplete=\\\"off\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"supplier.stockQty\\\"></td>\\r\\n               <td><input type=\\\"number\\\" class=\\\"form-control input-sm\\\" autocomplete=\\\"off\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"supplier.price\\\"></td>\\r\\n               <td><input type=\\\"text\\\" class=\\\"form-control input-sm\\\" autocomplete=\\\"off\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"supplier.currency\\\"></td>\\r\\n               <td><input type=\\\"date\\\" class=\\\"form-control input-sm\\\" autocomplete=\\\"off\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [ngModel]=\\\"supplier.validFrom | date:'yyyy-MM-dd'\\\" (ngModelChange)=\\\"supplier.validFrom = $event\\\"></td>\\r\\n               <td><input type=\\\"date\\\" class=\\\"form-control input-sm\\\" autocomplete=\\\"off\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [ngModel]=\\\"supplier.validTo | date:'yyyy-MM-dd'\\\" (ngModelChange)=\\\"supplier.validTo = $event\\\"></td>\\r\\n               <td style=\\\"text-align:center;padding-top: 14px;\\\">\\r\\n                  <a (click)=\\\"deleteSupplier(rowIndex)\\\" style=\\\"cursor:pointer\\\">\\r\\n                     <i class=\\\"fas fa-trash-alt\\\" title=\\\"Delete\\\" style=\\\"font-size: 15px; color: Red;\\\"></i>\\r\\n                  </a>\\r\\n               </td>\\r\\n            </tr>\\r\\n         </ng-container>\\r\\n         <tr *ngIf='supplierList == null || supplierList.length == 0'>\\r\\n            <td colspan=\\\"8\\\" class=\\\"check-mail\\\" style=\\\"text-align: center;\\\">\\r\\n               Supplier not defined\\r\\n            </td>\\r\\n         </tr>\\r\\n      </tbody>\\r\\n   </table>\\r\\n</div>\\r\\n\"","export default \"<section class=\\\"content-header\\\">\\r\\n   <h1>Manage Entities <small> {{title}} </small></h1>\\r\\n   <ol class=\\\"breadcrumb\\\">\\r\\n      <li><a [routerLink]=\\\"['/']\\\"><i class=\\\"fa fa-home\\\"></i> Home</a></li>\\r\\n      <li><a [routerLink]=\\\"['/entities']\\\"> Entities</a></li>\\r\\n   </ol>\\r\\n</section>\\r\\n<section class=\\\"content\\\">\\r\\n   <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-xs-12\\\">\\r\\n         <div class=\\\"box\\\">\\r\\n            <div class=\\\"box-header with-border ui-sortable-handle\\\">\\r\\n               <h3 class=\\\"box-title\\\">Cable Details</h3>\\r\\n               <div class=\\\"box-tools pull-right\\\" data-original-title=\\\"Status\\\" data-toggle=\\\"tooltip\\\" title=\\\"\\\">\\r\\n                  <button class=\\\"btn btn-social-icon btn-xs btn-danger\\\" (click)=\\\"goBack()\\\">\\r\\n                     <i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                  </button>\\r\\n                  <button class=\\\"btn btn-social-icon btn-xs btn-success\\\" type=\\\"submit\\\" style=\\\"margin-left: 5px;\\\" (click)=\\\"save()\\\" [disabled]=\\\"form.invalid\\\">\\r\\n                     <i class=\\\"far fa-save\\\"></i>\\r\\n                  </button>\\r\\n               </div>\\r\\n            </div>\\r\\n            <form name=\\\"form\\\" action=\\\"javascript:{}\\\" #form=\\\"ngForm\\\" novalidate autocomplete=\\\"off\\\">\\r\\n               <div class=\\\"box-body\\\">\\r\\n                  <div class=\\\"panel panel-default\\\">\\r\\n                     <div class=\\\"panel-heading\\\">\\r\\n                        <h4 class=\\\"panel-title\\\">\\r\\n                           General Information\\r\\n                        </h4>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel-collapse collapse in\\\">\\r\\n                        <div class=\\\"panel-body\\\">\\r\\n                           <div class=\\\"form-group col-md-6\\\">\\r\\n                              <label for=\\\"name\\\" class=\\\"control-label\\\">Name <span style=\\\"color:red;\\\">*</span></label>\\r\\n                              <input type=\\\"text\\\" name=\\\"name\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"cable.name\\\" required/>\\r\\n                           </div>\\r\\n                           <div class=\\\"form-group col-md-6\\\">\\r\\n                              <label for=\\\"parentType\\\" class=\\\"control-label\\\">Parent Type</label>\\r\\n                              <mat-select name=\\\"parentType\\\" [(ngModel)]=\\\"cable.parentEntityType\\\">\\r\\n                                 <mat-option>Select Parent Entity Type</mat-option>\\r\\n                                 <mat-option value=\\\"Cable\\\">Cable</mat-option>\\r\\n                                 <mat-option value=\\\"Chamber\\\">Chamber</mat-option>\\r\\n                                 <mat-option value=\\\"Duct\\\">Duct</mat-option>\\r\\n                                 <mat-option value=\\\"ODF\\\">ODF</mat-option>\\r\\n                                 <mat-option value=\\\"Pole\\\">Pole</mat-option>\\r\\n                                 <mat-option value=\\\"SpliceClosure\\\">Splice Closure</mat-option>\\r\\n                                 <mat-option value=\\\"Splitter\\\">Splitter</mat-option>\\r\\n                              </mat-select>\\r\\n                           </div>\\r\\n                           <div class=\\\"form-group col-md-6\\\">\\r\\n                              <label for=\\\"isUnderground\\\" class=\\\"control-label\\\" style=\\\"width:100%\\\">&nbsp;</label>\\r\\n                              <mat-checkbox name=\\\"isUnderground\\\" [(ngModel)]=\\\"cable.isUnderground\\\" [checked]=\\\"cable.isUnderground\\\">Is Underground Cable</mat-checkbox>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"panel-group\\\" id=\\\"accordion\\\">\\r\\n\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#make\\\">Make</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"make\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"type\\\" class=\\\"control-label\\\">Type</label>\\r\\n                                    <input type=\\\"text\\\" name=\\\"type\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"cable.type\\\" />\\r\\n                                 </div>\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"brand\\\" class=\\\"control-label\\\">Brand</label>\\r\\n                                    <input type=\\\"text\\\" name=\\\"brand\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"cable.brand\\\" />\\r\\n                                 </div>\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"model\\\" class=\\\"control-label\\\">Model</label>\\r\\n                                    <input type=\\\"text\\\" name=\\\"model\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"cable.model\\\" />\\r\\n                                 </div>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#cableInfo\\\">Cable Information</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"cableInfo\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"noOfTubes\\\" class=\\\"control-label\\\">Number of Tubes</label>\\r\\n                                    <input type=\\\"number\\\" name=\\\"noOfTubes\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"cable.noOfTubes\\\" />\\r\\n                                 </div>\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"corePerTube\\\" class=\\\"control-label\\\">Core Per Tube</label>\\r\\n                                    <input type=\\\"number\\\" name=\\\"corePerTube\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"cable.corePerTube\\\" />\\r\\n                                 </div>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#optics\\\">Optical Information</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"optics\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"frequency\\\" class=\\\"control-label\\\">Frequency</label>\\r\\n                                    <input type=\\\"number\\\" name=\\\"frequency\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"cable.optics.frequency\\\" />\\r\\n                                 </div>\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"attenuationDb\\\" class=\\\"control-label\\\">Attenuation</label>\\r\\n                                    <input type=\\\"number\\\" name=\\\"attenuationDb\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"cable.optics.attenuationDb\\\" />\\r\\n                                 </div>\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"opticalInPutPower\\\" class=\\\"control-label\\\">Optical InPut Power</label>\\r\\n                                    <input type=\\\"number\\\" name=\\\"opticalInPutPower\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"cable.optics.opticalInPutPower\\\" />\\r\\n                                 </div>\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"opticalOutputPower\\\" class=\\\"control-label\\\">Optical Output Power</label>\\r\\n                                    <input type=\\\"number\\\" name=\\\"opticalOutputPower\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"cable.optics.opticalOutputPower\\\" />\\r\\n                                 </div>\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"resistanceOhm\\\" class=\\\"control-label\\\">Resistance</label>\\r\\n                                    <input type=\\\"number\\\" name=\\\"resistanceOhm\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"cable.optics.resistanceOhm\\\" />\\r\\n                                 </div>\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"wavelength\\\" class=\\\"control-label\\\">Wavelength</label>\\r\\n                                    <input type=\\\"number\\\" name=\\\"wavelength\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"cable.optics.wavelength\\\" />\\r\\n                                 </div>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#zoomSettings\\\">Zoom Settings</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"zoomSettings\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-11\\\">\\r\\n                                 <mat-slider name=\\\"zoomLevel\\\" thumbLabel step=\\\"1\\\" min=\\\"0\\\" max=\\\"21\\\" style=\\\"width:100%\\\" [(ngModel)]=\\\"cable.zoomLevel\\\"></mat-slider>\\r\\n                              </div>\\r\\n                              <div class=\\\"col-sm-1\\\" style=\\\"padding-top: 7px;\\\">\\r\\n                                 <input type=\\\"number\\\" min=\\\"0\\\" max=\\\"21\\\" class=\\\"form-control input-sm\\\" name=\\\"zoom\\\" [(ngModel)]=\\\"cable.zoomLevel\\\">\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#pricing\\\">Pricing</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"pricing\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <suppliers [supplierList]=\\\"cable.suppliers\\\"></suppliers>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#customFields\\\">Custom Fields</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"customFields\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <custom-fields [customFields]=\\\"cable.customFields\\\"></custom-fields>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                  </div>\\r\\n\\r\\n               </div>\\r\\n               <div class=\\\"box-footer\\\">\\r\\n                  <div class=\\\"pull-right\\\">\\r\\n                     <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"goBack()\\\">Close</button>\\r\\n                     <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" style=\\\"margin-left:10px\\\" (click)=\\\"save()\\\" [disabled]=\\\"form.invalid\\\">Save</button>\\r\\n                  </div>\\r\\n               </div>\\r\\n            </form>\\r\\n         </div>\\r\\n      </div>\\r\\n   </div>\\r\\n</section>\\r\\n\"","export default \"<section class=\\\"content-header\\\">\\r\\n   <h1>Manage Entities <small> {{title}} </small></h1>\\r\\n   <ol class=\\\"breadcrumb\\\">\\r\\n      <li><a [routerLink]=\\\"['/']\\\"><i class=\\\"fa fa-home\\\"></i> Home</a></li>\\r\\n      <li><a [routerLink]=\\\"['/entities']\\\"> Entities</a></li>\\r\\n   </ol>\\r\\n</section>\\r\\n<section class=\\\"content\\\">\\r\\n   <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-xs-12\\\">\\r\\n         <div class=\\\"box\\\">\\r\\n            <div class=\\\"box-header with-border ui-sortable-handle\\\">\\r\\n               <h3 class=\\\"box-title\\\">Chamber Details</h3>\\r\\n               <div class=\\\"box-tools pull-right\\\" data-original-title=\\\"Status\\\" data-toggle=\\\"tooltip\\\" title=\\\"\\\">\\r\\n                  <button class=\\\"btn btn-social-icon btn-xs btn-danger\\\" (click)=\\\"goBack()\\\">\\r\\n                     <i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                  </button>\\r\\n                  <button class=\\\"btn btn-social-icon btn-xs btn-success\\\" type=\\\"submit\\\" style=\\\"margin-left: 5px;\\\" (click)=\\\"save()\\\" [disabled]=\\\"form.invalid\\\">\\r\\n                     <i class=\\\"far fa-save\\\"></i>\\r\\n                  </button>\\r\\n               </div>\\r\\n            </div>\\r\\n            <form name=\\\"form\\\" action=\\\"javascript:{}\\\" #form=\\\"ngForm\\\" novalidate autocomplete=\\\"off\\\">\\r\\n               <div class=\\\"box-body\\\">\\r\\n                  <div class=\\\"panel panel-default\\\">\\r\\n                     <div class=\\\"panel-heading\\\">\\r\\n                        <h4 class=\\\"panel-title\\\">\\r\\n                           General Information\\r\\n                        </h4>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel-collapse collapse in\\\">\\r\\n                        <div class=\\\"panel-body\\\">\\r\\n                           <div class=\\\"form-group col-md-6\\\">\\r\\n                              <label for=\\\"name\\\" class=\\\"control-label\\\">Name <span style=\\\"color:red;\\\">*</span></label>\\r\\n                              <input type=\\\"text\\\" name=\\\"name\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"chamber.name\\\" required />\\r\\n                           </div>\\r\\n                           <div class=\\\"form-group col-md-6\\\">\\r\\n                              <label for=\\\"parentType\\\" class=\\\"control-label\\\">Parent Type</label>\\r\\n                              <mat-select name=\\\"parentType\\\" [(ngModel)]=\\\"chamber.parentEntityType\\\">\\r\\n                                 <mat-option>Select Parent Entity Type</mat-option>\\r\\n                                 <mat-option value=\\\"Cable\\\">Cable</mat-option>\\r\\n                                 <mat-option value=\\\"Chamber\\\">Chamber</mat-option>\\r\\n                                 <mat-option value=\\\"Duct\\\">Duct</mat-option>\\r\\n                                 <mat-option value=\\\"ODF\\\">ODF</mat-option>\\r\\n                                 <mat-option value=\\\"Pole\\\">Pole</mat-option>\\r\\n                                 <mat-option value=\\\"SpliceClosure\\\">Splice Closure</mat-option>\\r\\n                                 <mat-option value=\\\"Splitter\\\">Splitter</mat-option>\\r\\n                              </mat-select>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"panel-group\\\" id=\\\"accordion\\\">\\r\\n\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#make\\\">Make</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"make\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"type\\\" class=\\\"control-label\\\">Type</label>\\r\\n                                    <input type=\\\"text\\\" name=\\\"type\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"chamber.type\\\" />\\r\\n                                 </div>\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"brand\\\" class=\\\"control-label\\\">Brand</label>\\r\\n                                    <input type=\\\"text\\\" name=\\\"brand\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"chamber.brand\\\" />\\r\\n                                 </div>\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"model\\\" class=\\\"control-label\\\">Model</label>\\r\\n                                    <input type=\\\"text\\\" name=\\\"model\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"chamber.model\\\" />\\r\\n                                 </div>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#chamberInfo\\\">Chamber Information</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"chamberInfo\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"category\\\" class=\\\"control-label\\\">Category</label>\\r\\n                                    <input type=\\\"text\\\" name=\\\"category\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"chamber.category\\\" />\\r\\n                                 </div>\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"closureType\\\" class=\\\"control-label\\\">Closure Type</label>\\r\\n                                    <input type=\\\"text\\\" name=\\\"closureType\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"chamber.closureType\\\" />\\r\\n                                 </div>\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"spliceTrayCount\\\" class=\\\"control-label\\\">Splice Tray Count</label>\\r\\n                                    <input type=\\\"text\\\" name=\\\"spliceTrayCount\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"chamber.spliceTrayCount\\\" />\\r\\n                                 </div>\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"isBuried\\\" class=\\\"control-label\\\" style=\\\"width:100%\\\">&nbsp;</label>\\r\\n                                    <mat-checkbox name=\\\"isBuried\\\" [(ngModel)]=\\\"chamber.isBuried\\\" [checked]=\\\"chamber.isBuried\\\">Is Buried</mat-checkbox>\\r\\n                                 </div>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#zoomSettings\\\">Zoom Settings</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"zoomSettings\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-11\\\">\\r\\n                                 <mat-slider name=\\\"zoomLevel\\\" thumbLabel step=\\\"1\\\" min=\\\"0\\\" max=\\\"21\\\" style=\\\"width:100%\\\" [(ngModel)]=\\\"chamber.zoomLevel\\\"></mat-slider>\\r\\n                              </div>\\r\\n                              <div class=\\\"col-sm-1\\\" style=\\\"padding-top: 7px;\\\">\\r\\n                                 <input type=\\\"number\\\" min=\\\"0\\\" max=\\\"21\\\" class=\\\"form-control input-sm\\\" name=\\\"zoom\\\" [(ngModel)]=\\\"chamber.zoomLevel\\\">\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#pricing\\\">Pricing</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"pricing\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <suppliers [supplierList]=\\\"chamber.suppliers\\\"></suppliers>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#customFields\\\">Custom Fields</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"customFields\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <custom-fields [customFields]=\\\"chamber.customFields\\\"></custom-fields>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                  </div>\\r\\n\\r\\n               </div>\\r\\n               <div class=\\\"box-footer\\\">\\r\\n                  <div class=\\\"pull-right\\\">\\r\\n                     <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"goBack()\\\">Close</button>\\r\\n                     <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" style=\\\"margin-left:10px\\\" (click)=\\\"save()\\\" [disabled]=\\\"form.invalid\\\">Save</button>\\r\\n                  </div>\\r\\n               </div>\\r\\n            </form>\\r\\n         </div>\\r\\n      </div>\\r\\n   </div>\\r\\n</section>\\r\\n\"","export default \"<section class=\\\"content-header\\\">\\r\\n   <h1>Manage Entities <small> {{title}} </small></h1>\\r\\n   <ol class=\\\"breadcrumb\\\">\\r\\n      <li><a [routerLink]=\\\"['/']\\\"><i class=\\\"fa fa-home\\\"></i> Home</a></li>\\r\\n      <li><a [routerLink]=\\\"['/entities']\\\"> Entities</a></li>\\r\\n   </ol>\\r\\n</section>\\r\\n<section class=\\\"content\\\">\\r\\n   <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-xs-12\\\">\\r\\n         <div class=\\\"box\\\">\\r\\n            <div class=\\\"box-header with-border ui-sortable-handle\\\">\\r\\n               <h3 class=\\\"box-title\\\">Duct Details</h3>\\r\\n               <div class=\\\"box-tools pull-right\\\" data-original-title=\\\"Status\\\" data-toggle=\\\"tooltip\\\" title=\\\"\\\">\\r\\n                  <button class=\\\"btn btn-social-icon btn-xs btn-danger\\\" (click)=\\\"goBack()\\\">\\r\\n                     <i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                  </button>\\r\\n                  <button class=\\\"btn btn-social-icon btn-xs btn-success\\\" type=\\\"submit\\\" style=\\\"margin-left: 5px;\\\" (click)=\\\"save()\\\" [disabled]=\\\"form.invalid\\\">\\r\\n                     <i class=\\\"far fa-save\\\"></i>\\r\\n                  </button>\\r\\n               </div>\\r\\n            </div>\\r\\n            <form name=\\\"form\\\" action=\\\"javascript:{}\\\" #form=\\\"ngForm\\\" novalidate autocomplete=\\\"off\\\">\\r\\n               <div class=\\\"box-body\\\">\\r\\n                  <div class=\\\"panel panel-default\\\">\\r\\n                     <div class=\\\"panel-heading\\\">\\r\\n                        <h4 class=\\\"panel-title\\\">\\r\\n                           General Information\\r\\n                        </h4>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel-collapse collapse in\\\">\\r\\n                        <div class=\\\"panel-body\\\">\\r\\n                           <div class=\\\"form-group col-md-6\\\">\\r\\n                              <label for=\\\"name\\\" class=\\\"control-label\\\">Name <span style=\\\"color:red;\\\">*</span></label>\\r\\n                              <input type=\\\"text\\\" name=\\\"name\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"duct.name\\\" required/>\\r\\n                           </div>\\r\\n                           <div class=\\\"form-group col-md-6\\\">\\r\\n                              <label for=\\\"parentType\\\" class=\\\"control-label\\\">Parent Type</label>\\r\\n                              <mat-select name=\\\"parentType\\\" [(ngModel)]=\\\"duct.parentEntityType\\\">\\r\\n                                 <mat-option>Select Parent Entity Type</mat-option>\\r\\n                                 <mat-option value=\\\"Cable\\\">Cable</mat-option>\\r\\n                                 <mat-option value=\\\"Chamber\\\">Chamber</mat-option>\\r\\n                                 <mat-option value=\\\"Duct\\\">Duct</mat-option>\\r\\n                                 <mat-option value=\\\"ODF\\\">ODF</mat-option>\\r\\n                                 <mat-option value=\\\"Pole\\\">Pole</mat-option>\\r\\n                                 <mat-option value=\\\"SpliceClosure\\\">Splice Closure</mat-option>\\r\\n                                 <mat-option value=\\\"Splitter\\\">Splitter</mat-option>\\r\\n                              </mat-select>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"panel-group\\\" id=\\\"accordion\\\">\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#make\\\">Make</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"make\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"type\\\" class=\\\"control-label\\\">Type</label>\\r\\n                                    <input type=\\\"text\\\" name=\\\"type\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"duct.type\\\" />\\r\\n                                 </div>\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"brand\\\" class=\\\"control-label\\\">Brand</label>\\r\\n                                    <input type=\\\"text\\\" name=\\\"brand\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"duct.brand\\\" />\\r\\n                                 </div>\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"model\\\" class=\\\"control-label\\\">Model</label>\\r\\n                                    <input type=\\\"text\\\" name=\\\"model\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"duct.model\\\" />\\r\\n                                 </div>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#ductInfo\\\">Duct Info</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"ductInfo\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"height\\\" class=\\\"control-label\\\">Height</label>\\r\\n                                    <input type=\\\"number\\\" name=\\\"height\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"duct.height\\\" />\\r\\n                                 </div>\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"width\\\" class=\\\"control-label\\\">Width</label>\\r\\n                                    <input type=\\\"number\\\" name=\\\"width\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"duct.width\\\" />\\r\\n                                 </div>\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"innerDiameter\\\" class=\\\"control-label\\\">Inner Diameter</label>\\r\\n                                    <input type=\\\"number\\\" name=\\\"innerDiameter\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"duct.innerDiameter\\\" />\\r\\n                                 </div>\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"outerDiameter\\\" class=\\\"control-label\\\">Outer Diameter</label>\\r\\n                                    <input type=\\\"number\\\" name=\\\"outerDiameter\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"duct.outerDiameter\\\" />\\r\\n                                 </div>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#zoomSettings\\\">Zoom Settings</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"zoomSettings\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-11\\\">\\r\\n                                 <mat-slider name=\\\"zoomLevel\\\" thumbLabel step=\\\"1\\\" min=\\\"0\\\" max=\\\"21\\\" style=\\\"width:100%\\\" [(ngModel)]=\\\"duct.zoomLevel\\\"></mat-slider>\\r\\n                              </div>\\r\\n                              <div class=\\\"col-sm-1\\\" style=\\\"padding-top: 7px;\\\">\\r\\n                                 <input type=\\\"number\\\" min=\\\"0\\\" max=\\\"21\\\" class=\\\"form-control input-sm\\\" name=\\\"zoom\\\" [(ngModel)]=\\\"duct.zoomLevel\\\">\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#pricing\\\">Pricing</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"pricing\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <suppliers [supplierList]=\\\"duct.suppliers\\\"></suppliers>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#customFields\\\">Custom Fields</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"customFields\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <custom-fields [customFields]=\\\"duct.customFields\\\"></custom-fields>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                  </div>\\r\\n\\r\\n               </div>\\r\\n               <div class=\\\"box-footer\\\">\\r\\n                  <div class=\\\"pull-right\\\">\\r\\n                     <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"goBack()\\\">Close</button>\\r\\n                     <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" style=\\\"margin-left:10px\\\" (click)=\\\"save()\\\" [disabled]=\\\"form.invalid\\\">Save</button>\\r\\n                  </div>\\r\\n               </div>\\r\\n            </form>\\r\\n         </div>\\r\\n      </div>\\r\\n   </div>\\r\\n</section>\\r\\n\"","export default \"<section class=\\\"content-header\\\">\\r\\n   <h1>Manage Entities</h1>\\r\\n   <ol class=\\\"breadcrumb\\\">\\r\\n      <li><a [routerLink]=\\\"['/home']\\\"><i class=\\\"fas fa-home\\\"></i> Home</a></li>\\r\\n   </ol>\\r\\n</section>\\r\\n\\r\\n<section class=\\\"content\\\">\\r\\n   <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-xs-12\\\">\\r\\n         <div class=\\\"box\\\">\\r\\n            <div class=\\\"box-header with-border\\\">\\r\\n               <h3 class=\\\"box-title\\\">Entity List</h3>\\r\\n               <div class=\\\"box-tools pull-right\\\">\\r\\n                  <div class=\\\"btn-group\\\" data-toggle=\\\"btn-toggle\\\">\\r\\n                     <button aria-expanded=\\\"false\\\" class=\\\"btn btn-primary btn-xs dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" style=\\\"text-align: left;\\\" type=\\\"button\\\">\\r\\n                        New Entity\\r\\n                     <div class=\\\"fa fa-caret-down pull-right\\\" style=\\\"padding-top: 2px;padding-right: 2px;padding-left: 10px;\\\"></div>\\r\\n                     </button>\\r\\n                     <ul class=\\\"dropdown-menu\\\">\\r\\n                        <li><a [routerLink]=\\\"['cable','']\\\">Cable</a></li>\\r\\n                        <li><a [routerLink]=\\\"['chamber','']\\\">Chamber</a></li>\\r\\n                        <li><a [routerLink]=\\\"['duct','']\\\">Duct</a></li>\\r\\n                        <li><a [routerLink]=\\\"['odf','']\\\">ODF</a></li>\\r\\n                        <li><a [routerLink]=\\\"['pole','']\\\">Pole</a></li>\\r\\n                        <li><a [routerLink]=\\\"['pop','']\\\">POP</a></li>\\r\\n                        <li><a [routerLink]=\\\"['spliceclosure','']\\\">Splice Closure</a></li>\\r\\n                        <li><a [routerLink]=\\\"['splitter','']\\\">Splitter</a></li>\\r\\n                        <!--<li class=\\\"divider\\\"></li>-->\\r\\n                        <li><a [routerLink]=\\\"['homepass','']\\\">Homepass</a></li>\\r\\n                     </ul>\\r\\n                  </div>\\r\\n               </div>\\r\\n            </div>\\r\\n            <div class=\\\"box-body\\\">\\r\\n               <div class=\\\"input-group input-group-sm\\\" style=\\\"padding-bottom:20px\\\">\\r\\n                  <div class=\\\"input-group-btn\\\">\\r\\n                     <button type=\\\"button\\\" class=\\\"btn btn-primary dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" aria-expanded=\\\"false\\\" style=\\\"width:100px;text-align: left; border-radius: 3px;\\\">\\r\\n                        {{selectedEntityType}}\\r\\n                        <span class=\\\"fa fa-caret-down btn-caret-down\\\"></span>\\r\\n                     </button>\\r\\n                     <ul class=\\\"dropdown-menu\\\">\\r\\n                        <li><a [routerLink]=\\\"\\\" (click)=\\\"onEntityTypeChange('Cable')\\\">Cable</a></li>\\r\\n                        <li><a [routerLink]=\\\"\\\" (click)=\\\"onEntityTypeChange('Chamber')\\\">Chamber</a></li>\\r\\n                        <li><a [routerLink]=\\\"\\\" (click)=\\\"onEntityTypeChange('Duct')\\\">Duct</a></li>\\r\\n                        <li><a [routerLink]=\\\"\\\" (click)=\\\"onEntityTypeChange('ODF')\\\">ODF</a></li>\\r\\n                        <li><a [routerLink]=\\\"\\\" (click)=\\\"onEntityTypeChange('Pole')\\\">Pole</a></li>\\r\\n                        <li><a [routerLink]=\\\"\\\" (click)=\\\"onEntityTypeChange('SpliceClosure')\\\">Splice Closure</a></li>\\r\\n                        <li><a [routerLink]=\\\"\\\" (click)=\\\"onEntityTypeChange('Splitter')\\\">Splitter</a></li>\\r\\n                        <li><a [routerLink]=\\\"\\\" (click)=\\\"onEntityTypeChange('Homepass')\\\">Homepass</a></li>\\r\\n                     </ul>\\r\\n                  </div>\\r\\n                  <div class=\\\"input-group-btn\\\" style=\\\"padding-left:10px\\\">\\r\\n                     <button type=\\\"button\\\" class=\\\"btn btn-warning dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" aria-expanded=\\\"false\\\" style=\\\"width:100px;border-bottom-right-radius: 0px;border-top-right-radius: 0px;text-align: left;\\\">\\r\\n                        {{selectedField.label}}\\r\\n                        <span class=\\\"fa fa-caret-down btn-caret-down\\\"></span>\\r\\n                     </button>\\r\\n                     <ul class=\\\"dropdown-menu\\\">\\r\\n                        <ng-container *ngIf='searchFields && searchFields.length > 0'>\\r\\n                           <li *ngFor='let searchField of searchFields'>\\r\\n                              <a [routerLink]=\\\"\\\" (click)=setSearchField(searchField)>{{searchField.label}}</a>\\r\\n                           </li>\\r\\n                        </ng-container>\\r\\n                        <li class=\\\"divider\\\"></li>\\r\\n                        <li><a [routerLink]=\\\"\\\" data-toggle=\\\"modal\\\" data-target=\\\"#advancedSearch\\\">Advanced Search</a></li>\\r\\n\\r\\n                     </ul>\\r\\n                  </div>\\r\\n                  <input [type]=selectedField.dataType class=\\\"form-control\\\" name=\\\"dateSearch\\\" [(ngModel)]=\\\"searchText\\\" autocomplete=\\\"off\\\">\\r\\n                  <span class=\\\"input-group-btn\\\">\\r\\n                     <button type=\\\"button\\\" class=\\\"btn btn-info btn-flat\\\" (click)=\\\"currentPage = 1; search()\\\"><i class=\\\"fas fa-search\\\"></i></button>\\r\\n                  </span>\\r\\n               </div>\\r\\n               <div>\\r\\n                  <div class=\\\"pull-left\\\">\\r\\n                     <span style=\\\"padding-right: 10px;font-size: small;\\\">Pages</span>\\r\\n                     <div class=\\\"btn-group\\\" style=\\\"padding-right: 10px;\\\">\\r\\n                        <button type=\\\"button\\\" class=\\\"btn btn-default dropdown-toggle btn-sm\\\" data-toggle=\\\"dropdown\\\" aria-expanded=\\\"false\\\">\\r\\n                           <span style=\\\"padding-right: 5px;\\\"> {{pageSize}} </span>\\r\\n                           <span class=\\\"caret\\\"></span>\\r\\n                        </button>\\r\\n                        <ul class=\\\"dropdown-menu\\\">\\r\\n                           <li><a [routerLink]=\\\"\\\" (click)=\\\"pageSize = 10; getFormData()\\\">10</a></li>\\r\\n                           <li><a [routerLink]=\\\"\\\" (click)=\\\"pageSize = 20; getFormData()\\\">20</a></li>\\r\\n                           <li><a [routerLink]=\\\"\\\" (click)=\\\"pageSize = 50; getFormData()\\\">50</a></li>\\r\\n                           <li><a [routerLink]=\\\"\\\" (click)=\\\"pageSize = 100; getFormData()\\\">100</a></li>\\r\\n                        </ul>\\r\\n                     </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"pull-right\\\">\\r\\n                     <span style=\\\"padding-right: 10px;font-size: small;\\\">Showing page {{currentPage}} of {{totalPages}}</span>\\r\\n                     <div class=\\\"btn-group\\\" style=\\\"padding-bottom:5px\\\">\\r\\n                        <button class=\\\"btn btn-default btn-sm\\\" type=\\\"button\\\" (click)=\\\"setPage(currentPage - 1)\\\" [ngClass]=\\\"{disabled:currentPage === 1}\\\"><i class=\\\"fa fa-chevron-left fa-fw\\\"></i></button>\\r\\n                        <button class=\\\"btn btn-default btn-sm\\\" type=\\\"button\\\" (click)=\\\"setPage(currentPage + 1)\\\" [ngClass]=\\\"{disabled:currentPage === totalPages}\\\"><i class=\\\"fa fa-chevron-right fa-fw\\\"></i></button>\\r\\n                     </div>\\r\\n                  </div>\\r\\n               </div>\\r\\n               <table class=\\\"table table-bordered table-striped\\\">\\r\\n                  <thead>\\r\\n                     <tr (click)=\\\"onColumnClick($event.target)\\\">\\r\\n                        <th data-column=\\\"Name\\\" class=\\\"table-sorter\\\">Name</th>\\r\\n                        <th data-column=\\\"UpdatedBy\\\" class=\\\"table-sorter\\\" style=\\\"width: 150px;\\\">Updated By</th>\\r\\n                        <th data-column=\\\"UpdatedDate\\\" class=\\\"table-sorter\\\" style=\\\"width: 125px;\\\">Updated On</th>\\r\\n                        <th style=\\\"width:72px\\\"></th>\\r\\n                     </tr>\\r\\n                  </thead>\\r\\n                  <tbody>\\r\\n                     <ng-container *ngIf='entities && entities.length > 0'>\\r\\n                        <tr *ngFor='let entity of entities'>\\r\\n                           <td>{{entity.name}}</td>\\r\\n                           <td>{{entity.updatedBy}}</td>\\r\\n                           <td>{{entity.updatedDate | date:'dd/MM/yyyy'}}</td>\\r\\n                           <td>\\r\\n                              <a>\\r\\n                                 <i class=\\\"fa fa-edit\\\" [routerLink]=\\\"[selectedEntityType.toLowerCase(), entity.id]\\\" title=\\\"Edit\\\" style=\\\"font-size: 14px; cursor:pointer\\\"></i>\\r\\n                              </a>&nbsp;\\r\\n                              <a>\\r\\n                                 <i class=\\\"fa fa-trash\\\" (click)=\\\"delete(entity)\\\" title=\\\"Remove\\\" style=\\\"font-size: 14px; cursor:pointer; color:red\\\"></i>\\r\\n                              </a>\\r\\n                           </td>\\r\\n                        </tr>\\r\\n                     </ng-container>\\r\\n                     <tr *ngIf='entities == null || entities.length == 0'>\\r\\n                        <td colspan=\\\"4\\\" style=\\\"text-align: center;\\\">\\r\\n                           {{statusMessage}}\\r\\n                        </td>\\r\\n                     </tr>\\r\\n                  </tbody>\\r\\n               </table>\\r\\n            </div>\\r\\n         </div>\\r\\n      </div>\\r\\n   </div>\\r\\n</section>\\r\\n<div id=\\\"advancedSearch\\\" class=\\\"modal fade\\\" role=\\\"dialog\\\">\\r\\n   <div class=\\\"modal-dialog\\\">\\r\\n      <div class=\\\"modal-content\\\" style=\\\"border-radius:3px\\\">\\r\\n         <div class=\\\"modal-header\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\r\\n            <h4 class=\\\"modal-title\\\">Advanced Search</h4>\\r\\n         </div>\\r\\n         <div class=\\\"modal-body\\\">\\r\\n            <table class=\\\"table table-bordered\\\">\\r\\n               <thead>\\r\\n                  <tr>\\r\\n                     <th style=\\\"width: 200px;\\\">Field</th>\\r\\n                     <th>Value</th>\\r\\n                  </tr>\\r\\n               </thead>\\r\\n               <tbody>\\r\\n                  <ng-container *ngIf='searchFields && searchFields.length > 0'>\\r\\n                     <tr *ngFor='let searchField of searchFields'>\\r\\n                        <td>{{searchField.label}}</td>\\r\\n                        <td><input [type]=searchField.dataType class=\\\"form-control input-sm\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"searchField.value\\\"></td>\\r\\n                     </tr>\\r\\n                  </ng-container>\\r\\n                  <tr *ngIf='searchFields == null || searchFields.length == 0'>\\r\\n                     <td colspan=\\\"2\\\" style=\\\"text-align: center;\\\">\\r\\n                        No search fields defined\\r\\n                     </td>\\r\\n                  </tr>\\r\\n               </tbody>\\r\\n            </table>\\r\\n         </div>\\r\\n         <div class=\\\"modal-footer\\\">\\r\\n            <button class=\\\"btn btn-info\\\" data-dismiss=\\\"modal\\\" type=\\\"button\\\" (click)=\\\"advancedSearch()\\\">Search</button>\\r\\n            <button class=\\\"btn btn-default pull-left\\\" data-dismiss=\\\"modal\\\" type=\\\"button\\\" (click)=\\\"clearSearch()\\\">Close</button>\\r\\n         </div>\\r\\n      </div>\\r\\n   </div>\\r\\n</div>\\r\\n\"","export default \"<section class=\\\"content-header\\\">\\r\\n   <h1>Manage Entities <small> {{title}} </small></h1>\\r\\n   <ol class=\\\"breadcrumb\\\">\\r\\n      <li><a [routerLink]=\\\"['/']\\\"><i class=\\\"fa fa-home\\\"></i> Home</a></li>\\r\\n      <li><a [routerLink]=\\\"['/entities']\\\"> Entities</a></li>\\r\\n   </ol>\\r\\n</section>\\r\\n<section class=\\\"content\\\">\\r\\n   <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-xs-12\\\">\\r\\n         <div class=\\\"box\\\">\\r\\n            <div class=\\\"box-header with-border ui-sortable-handle\\\">\\r\\n               <h3 class=\\\"box-title\\\">Homepass Details</h3>\\r\\n               <div class=\\\"box-tools pull-right\\\" data-original-title=\\\"Status\\\" data-toggle=\\\"tooltip\\\" title=\\\"\\\">\\r\\n                  <button class=\\\"btn btn-social-icon btn-xs btn-danger\\\" (click)=\\\"goBack()\\\">\\r\\n                     <i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                  </button>\\r\\n                  <button class=\\\"btn btn-social-icon btn-xs btn-success\\\" type=\\\"submit\\\" style=\\\"margin-left: 5px;\\\" (click)=\\\"save()\\\" [disabled]=\\\"form.invalid\\\">\\r\\n                     <i class=\\\"far fa-save\\\"></i>\\r\\n                  </button>\\r\\n               </div>\\r\\n            </div>\\r\\n            <form name=\\\"form\\\" action=\\\"javascript:{}\\\" #form=\\\"ngForm\\\" novalidate autocomplete=\\\"off\\\">\\r\\n               <div class=\\\"box-body\\\">\\r\\n                  <div class=\\\"panel panel-default\\\">\\r\\n                     <div class=\\\"panel-heading\\\">\\r\\n                        <h4 class=\\\"panel-title\\\">\\r\\n                           General Information\\r\\n                        </h4>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel-collapse collapse in\\\">\\r\\n                        <div class=\\\"panel-body\\\">\\r\\n                           <div class=\\\"form-group col-md-6\\\">\\r\\n                              <label for=\\\"name\\\" class=\\\"control-label\\\">Name <span style=\\\"color:red;\\\">*</span></label>\\r\\n                              <input type=\\\"text\\\" name=\\\"name\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"homepass.name\\\" required/>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"panel-group\\\" id=\\\"accordion\\\">\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#homepassInfo\\\">Homepass Info</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"homepassInfo\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"type\\\" class=\\\"control-label\\\">Type</label>\\r\\n                                    <input type=\\\"text\\\" name=\\\"type\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"homepass.type\\\" />\\r\\n                                 </div>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#zoomSettings\\\">Zoom Settings</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"zoomSettings\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-11\\\">\\r\\n                                 <mat-slider name=\\\"zoomLevel\\\" thumbLabel step=\\\"1\\\" min=\\\"0\\\" max=\\\"21\\\" style=\\\"width:100%\\\" [(ngModel)]=\\\"homepass.zoomLevel\\\"></mat-slider>\\r\\n                              </div>\\r\\n                              <div class=\\\"col-sm-1\\\" style=\\\"padding-top: 7px;\\\">\\r\\n                                 <input type=\\\"number\\\" min=\\\"0\\\" max=\\\"21\\\" class=\\\"form-control input-sm\\\" name=\\\"zoom\\\" [(ngModel)]=\\\"homepass.zoomLevel\\\">\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#customFields\\\">Custom Fields</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"customFields\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <custom-fields [customFields]=\\\"homepass.customFields\\\"></custom-fields>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                  </div>\\r\\n\\r\\n               </div>\\r\\n               <div class=\\\"box-footer\\\">\\r\\n                  <div class=\\\"pull-right\\\">\\r\\n                     <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"goBack()\\\">Close</button>\\r\\n                     <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" style=\\\"margin-left:10px\\\" (click)=\\\"save()\\\" [disabled]=\\\"form.invalid\\\">Save</button>\\r\\n                  </div>\\r\\n               </div>\\r\\n            </form>\\r\\n         </div>\\r\\n      </div>\\r\\n   </div>\\r\\n</section>\\r\\n\"","export default \"<section class=\\\"content-header\\\">\\r\\n   <h1>Manage Entities <small> {{title}} </small></h1>\\r\\n   <ol class=\\\"breadcrumb\\\">\\r\\n      <li><a [routerLink]=\\\"['/']\\\"><i class=\\\"fa fa-home\\\"></i> Home</a></li>\\r\\n      <li><a [routerLink]=\\\"['/entities']\\\"> Entities</a></li>\\r\\n   </ol>\\r\\n</section>\\r\\n<section class=\\\"content\\\">\\r\\n   <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-xs-12\\\">\\r\\n         <div class=\\\"box\\\">\\r\\n            <div class=\\\"box-header with-border ui-sortable-handle\\\">\\r\\n               <h3 class=\\\"box-title\\\">ODF Details</h3>\\r\\n               <div class=\\\"box-tools pull-right\\\" data-original-title=\\\"Status\\\" data-toggle=\\\"tooltip\\\" title=\\\"\\\">\\r\\n                  <button class=\\\"btn btn-social-icon btn-xs btn-danger\\\" (click)=\\\"goBack()\\\">\\r\\n                     <i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                  </button>\\r\\n                  <button class=\\\"btn btn-social-icon btn-xs btn-success\\\" type=\\\"submit\\\" style=\\\"margin-left: 5px;\\\" (click)=\\\"save()\\\" [disabled]=\\\"form.invalid\\\">\\r\\n                     <i class=\\\"far fa-save\\\"></i>\\r\\n                  </button>\\r\\n               </div>\\r\\n            </div>\\r\\n            <form name=\\\"form\\\" action=\\\"javascript:{}\\\" #form=\\\"ngForm\\\" novalidate autocomplete=\\\"off\\\">\\r\\n               <div class=\\\"box-body\\\">\\r\\n                  <div class=\\\"panel panel-default\\\">\\r\\n                     <div class=\\\"panel-heading\\\">\\r\\n                        <h4 class=\\\"panel-title\\\">\\r\\n                           General Information\\r\\n                        </h4>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel-collapse collapse in\\\">\\r\\n                        <div class=\\\"panel-body\\\">\\r\\n                           <div class=\\\"form-group col-md-6\\\">\\r\\n                              <label for=\\\"name\\\" class=\\\"control-label\\\">Name <span style=\\\"color:red;\\\">*</span></label>\\r\\n                              <input type=\\\"text\\\" name=\\\"name\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"odf.name\\\" required />\\r\\n                           </div>\\r\\n                           <div class=\\\"form-group col-md-6\\\">\\r\\n                              <label for=\\\"parentType\\\" class=\\\"control-label\\\">Parent Type</label>\\r\\n                              <mat-select name=\\\"parentType\\\" [(ngModel)]=\\\"odf.parentEntityType\\\">\\r\\n                                 <mat-option>Select Parent Entity Type</mat-option>\\r\\n                                 <mat-option value=\\\"Cable\\\">Cable</mat-option>\\r\\n                                 <mat-option value=\\\"Chamber\\\">Chamber</mat-option>\\r\\n                                 <mat-option value=\\\"Duct\\\">Duct</mat-option>\\r\\n                                 <mat-option value=\\\"ODF\\\">ODF</mat-option>\\r\\n                                 <mat-option value=\\\"Pole\\\">Pole</mat-option>\\r\\n                                 <mat-option value=\\\"SpliceClosure\\\">Splice Closure</mat-option>\\r\\n                                 <mat-option value=\\\"Splitter\\\">Splitter</mat-option>\\r\\n\\r\\n                              </mat-select>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"panel-group\\\" id=\\\"accordion\\\">\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#make\\\">Make</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"make\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"type\\\" class=\\\"control-label\\\">Type</label>\\r\\n                                    <input type=\\\"text\\\" name=\\\"type\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"odf.type\\\" />\\r\\n                                 </div>\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"brand\\\" class=\\\"control-label\\\">Brand</label>\\r\\n                                    <input type=\\\"text\\\" name=\\\"brand\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"odf.brand\\\" />\\r\\n                                 </div>\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"model\\\" class=\\\"control-label\\\">Model</label>\\r\\n                                    <input type=\\\"text\\\" name=\\\"model\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"odf.model\\\" />\\r\\n                                 </div>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#odfInfo\\\">ODF Info</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"odfInfo\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"noOfPorts\\\" class=\\\"control-label\\\">No Of Ports</label>\\r\\n                                    <input type=\\\"number\\\" name=\\\"noOfPorts\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"odf.noOfPorts\\\" />\\r\\n                                 </div>\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"mountingType\\\" class=\\\"control-label\\\">Mounting Type</label>\\r\\n                                    <input type=\\\"text\\\" name=\\\"mountingType\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"odf.mountingType\\\" />\\r\\n                                 </div>\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"height\\\" class=\\\"control-label\\\">Height</label>\\r\\n                                    <input type=\\\"number\\\" name=\\\"height\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"odf.height\\\" />\\r\\n                                 </div>\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"width\\\" class=\\\"control-label\\\">Width</label>\\r\\n                                    <input type=\\\"number\\\" name=\\\"width\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"odf.width\\\" />\\r\\n                                 </div>\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"length\\\" class=\\\"control-label\\\">Length</label>\\r\\n                                    <input type=\\\"number\\\" name=\\\"length\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"odf.length\\\" />\\r\\n                                 </div>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#zoomSettings\\\">Zoom Settings</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"zoomSettings\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-11\\\">\\r\\n                                 <mat-slider name=\\\"zoomLevel\\\" thumbLabel step=\\\"1\\\" min=\\\"0\\\" max=\\\"21\\\" style=\\\"width:100%\\\" [(ngModel)]=\\\"odf.zoomLevel\\\"></mat-slider>\\r\\n                              </div>\\r\\n                              <div class=\\\"col-sm-1\\\" style=\\\"padding-top: 7px;\\\">\\r\\n                                 <input type=\\\"number\\\" min=\\\"0\\\" max=\\\"21\\\" class=\\\"form-control input-sm\\\" name=\\\"zoom\\\" [(ngModel)]=\\\"odf.zoomLevel\\\">\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#pricing\\\">Pricing</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"pricing\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <suppliers [supplierList]=\\\"odf.suppliers\\\"></suppliers>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#customFields\\\">Custom Fields</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"customFields\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <custom-fields [customFields]=\\\"odf.customFields\\\"></custom-fields>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                  </div>\\r\\n\\r\\n               </div>\\r\\n               <div class=\\\"box-footer\\\">\\r\\n                  <div class=\\\"pull-right\\\">\\r\\n                     <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"goBack()\\\">Close</button>\\r\\n                     <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" style=\\\"margin-left:10px\\\" (click)=\\\"save()\\\" [disabled]=\\\"form.invalid\\\">Save</button>\\r\\n                  </div>\\r\\n               </div>\\r\\n            </form>\\r\\n         </div>\\r\\n      </div>\\r\\n   </div>\\r\\n</section>\\r\\n\"","export default \"<section class=\\\"content-header\\\">\\r\\n   <h1>Manage Entities <small> {{title}} </small></h1>\\r\\n   <ol class=\\\"breadcrumb\\\">\\r\\n      <li><a [routerLink]=\\\"['/']\\\"><i class=\\\"fa fa-home\\\"></i> Home</a></li>\\r\\n      <li><a [routerLink]=\\\"['/entities']\\\"> Entities</a></li>\\r\\n   </ol>\\r\\n</section>\\r\\n<section class=\\\"content\\\">\\r\\n   <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-xs-12\\\">\\r\\n         <div class=\\\"box\\\">\\r\\n            <div class=\\\"box-header with-border ui-sortable-handle\\\">\\r\\n               <h3 class=\\\"box-title\\\">Pole Details</h3>\\r\\n               <div class=\\\"box-tools pull-right\\\" data-original-title=\\\"Status\\\" data-toggle=\\\"tooltip\\\" title=\\\"\\\">\\r\\n                  <button class=\\\"btn btn-social-icon btn-xs btn-danger\\\" (click)=\\\"goBack()\\\">\\r\\n                     <i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                  </button>\\r\\n                  <button class=\\\"btn btn-social-icon btn-xs btn-success\\\" type=\\\"submit\\\" style=\\\"margin-left: 5px;\\\" (click)=\\\"save()\\\" [disabled]=\\\"form.invalid\\\">\\r\\n                     <i class=\\\"far fa-save\\\"></i>\\r\\n                  </button>\\r\\n               </div>\\r\\n            </div>\\r\\n            <form name=\\\"form\\\" action=\\\"javascript:{}\\\" #form=\\\"ngForm\\\" novalidate autocomplete=\\\"off\\\">\\r\\n               <div class=\\\"box-body\\\">\\r\\n                  <div class=\\\"panel panel-default\\\">\\r\\n                     <div class=\\\"panel-heading\\\">\\r\\n                        <h4 class=\\\"panel-title\\\">\\r\\n                           General Information\\r\\n                        </h4>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel-collapse collapse in\\\">\\r\\n                        <div class=\\\"panel-body\\\">\\r\\n                           <div class=\\\"form-group col-md-6\\\">\\r\\n                              <label for=\\\"name\\\" class=\\\"control-label\\\">Name <span style=\\\"color:red;\\\">*</span></label>\\r\\n                              <input type=\\\"text\\\" name=\\\"name\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"pole.name\\\" required/>\\r\\n                           </div>\\r\\n                           <div class=\\\"form-group col-md-6\\\">\\r\\n                              <label for=\\\"parentType\\\" class=\\\"control-label\\\">Parent Type</label>\\r\\n                              <mat-select name=\\\"parentType\\\" [(ngModel)]=\\\"pole.parentEntityType\\\">\\r\\n                                 <mat-option>Select Parent Entity Type</mat-option>\\r\\n                                 <mat-option value=\\\"Cable\\\">Cable</mat-option>\\r\\n                                 <mat-option value=\\\"Chamber\\\">Chamber</mat-option>\\r\\n                                 <mat-option value=\\\"Duct\\\">Duct</mat-option>\\r\\n                                 <mat-option value=\\\"ODF\\\">ODF</mat-option>\\r\\n                                 <mat-option value=\\\"Pole\\\">Pole</mat-option>\\r\\n                                 <mat-option value=\\\"SpliceClosure\\\">Splice Closure</mat-option>\\r\\n                                 <mat-option value=\\\"Splitter\\\">Splitter</mat-option>\\r\\n                              </mat-select>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"panel-group\\\" id=\\\"accordion\\\">\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#make\\\">Make</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"make\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"type\\\" class=\\\"control-label\\\">Type</label>\\r\\n                                    <input type=\\\"text\\\" name=\\\"type\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"pole.type\\\" />\\r\\n                                 </div>\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"brand\\\" class=\\\"control-label\\\">Brand</label>\\r\\n                                    <input type=\\\"text\\\" name=\\\"brand\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"pole.brand\\\" />\\r\\n                                 </div>\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"model\\\" class=\\\"control-label\\\">Model</label>\\r\\n                                    <input type=\\\"text\\\" name=\\\"model\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"pole.model\\\" />\\r\\n                                 </div>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#poleInfo\\\">Pole Info</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"poleInfo\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"height\\\" class=\\\"control-label\\\">Height</label>\\r\\n                                    <input type=\\\"number\\\" name=\\\"height\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"pole.height\\\" />\\r\\n                                 </div>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#zoomSettings\\\">Zoom Settings</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"zoomSettings\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-11\\\">\\r\\n                                 <mat-slider name=\\\"zoomLevel\\\" thumbLabel step=\\\"1\\\" min=\\\"0\\\" max=\\\"21\\\" style=\\\"width:100%\\\" [(ngModel)]=\\\"pole.zoomLevel\\\"></mat-slider>\\r\\n                              </div>\\r\\n                              <div class=\\\"col-sm-1\\\" style=\\\"padding-top: 7px;\\\">\\r\\n                                 <input type=\\\"number\\\" min=\\\"0\\\" max=\\\"21\\\" class=\\\"form-control input-sm\\\" name=\\\"zoom\\\" [(ngModel)]=\\\"pole.zoomLevel\\\">\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#pricing\\\">Pricing</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"pricing\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <suppliers [supplierList]=\\\"pole.suppliers\\\"></suppliers>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#customFields\\\">Custom Fields</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"customFields\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <custom-fields [customFields]=\\\"pole.customFields\\\"></custom-fields>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                  </div>\\r\\n\\r\\n               </div>\\r\\n               <div class=\\\"box-footer\\\">\\r\\n                  <div class=\\\"pull-right\\\">\\r\\n                     <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"goBack()\\\">Close</button>\\r\\n                     <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" style=\\\"margin-left:10px\\\" (click)=\\\"save()\\\" [disabled]=\\\"form.invalid\\\">Save</button>\\r\\n                  </div>\\r\\n               </div>\\r\\n            </form>\\r\\n         </div>\\r\\n      </div>\\r\\n   </div>\\r\\n</section>\\r\\n\"","export default \"<section class=\\\"content-header\\\">\\r\\n   <h1>Manage Entities <small> {{title}} </small></h1>\\r\\n   <ol class=\\\"breadcrumb\\\">\\r\\n      <li><a [routerLink]=\\\"['/']\\\"><i class=\\\"fa fa-home\\\"></i> Home</a></li>\\r\\n      <li><a [routerLink]=\\\"['/entities']\\\"> Entities</a></li>\\r\\n   </ol>\\r\\n</section>\\r\\n<section class=\\\"content\\\">\\r\\n   <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-xs-12\\\">\\r\\n         <div class=\\\"box\\\">\\r\\n            <div class=\\\"box-header with-border ui-sortable-handle\\\">\\r\\n               <h3 class=\\\"box-title\\\">SpliceClosure Details</h3>\\r\\n               <div class=\\\"box-tools pull-right\\\" data-original-title=\\\"Status\\\" data-toggle=\\\"tooltip\\\" title=\\\"\\\">\\r\\n                  <button class=\\\"btn btn-social-icon btn-xs btn-danger\\\" (click)=\\\"goBack()\\\">\\r\\n                     <i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                  </button>\\r\\n                  <button class=\\\"btn btn-social-icon btn-xs btn-success\\\" type=\\\"submit\\\" style=\\\"margin-left: 5px;\\\" (click)=\\\"save()\\\" [disabled]=\\\"form.invalid\\\">\\r\\n                     <i class=\\\"far fa-save\\\"></i>\\r\\n                  </button>\\r\\n               </div>\\r\\n            </div>\\r\\n            <form name=\\\"form\\\" action=\\\"javascript:{}\\\" #form=\\\"ngForm\\\" novalidate autocomplete=\\\"off\\\">\\r\\n               <div class=\\\"box-body\\\">\\r\\n                  <div class=\\\"panel panel-default\\\">\\r\\n                     <div class=\\\"panel-heading\\\">\\r\\n                        <h4 class=\\\"panel-title\\\">\\r\\n                           General Information\\r\\n                        </h4>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel-collapse collapse in\\\">\\r\\n                        <div class=\\\"panel-body\\\">\\r\\n                           <div class=\\\"form-group col-md-6\\\">\\r\\n                              <label for=\\\"name\\\" class=\\\"control-label\\\">Name <span style=\\\"color:red;\\\">*</span></label>\\r\\n                              <input type=\\\"text\\\" name=\\\"name\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"spliceClosure.name\\\" required />\\r\\n                           </div>\\r\\n                           <div class=\\\"form-group col-md-6\\\">\\r\\n                              <label for=\\\"parentType\\\" class=\\\"control-label\\\">Parent Type</label>\\r\\n                              <mat-select name=\\\"parentType\\\" [(ngModel)]=\\\"spliceClosure.parentEntityType\\\">\\r\\n                                 <mat-option>Select Parent Entity Type</mat-option>\\r\\n                                 <mat-option value=\\\"Cable\\\">Cable</mat-option>\\r\\n                                 <mat-option value=\\\"Chamber\\\">Chamber</mat-option>\\r\\n                                 <mat-option value=\\\"Duct\\\">Duct</mat-option>\\r\\n                                 <mat-option value=\\\"ODF\\\">ODF</mat-option>\\r\\n                                 <mat-option value=\\\"Pole\\\">Pole</mat-option>\\r\\n                                 <mat-option value=\\\"SpliceClosure\\\">Splice Closure</mat-option>\\r\\n                                 <mat-option value=\\\"Splitter\\\">Splitter</mat-option>\\r\\n                              </mat-select>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"panel-group\\\" id=\\\"accordion\\\">\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#make\\\">Make</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"make\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"type\\\" class=\\\"control-label\\\">Type</label>\\r\\n                                    <input type=\\\"text\\\" name=\\\"type\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"spliceClosure.type\\\" />\\r\\n                                 </div>\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"brand\\\" class=\\\"control-label\\\">Brand</label>\\r\\n                                    <input type=\\\"text\\\" name=\\\"brand\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"spliceClosure.brand\\\" />\\r\\n                                 </div>\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"model\\\" class=\\\"control-label\\\">Model</label>\\r\\n                                    <input type=\\\"text\\\" name=\\\"model\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"spliceClosure.model\\\" />\\r\\n                                 </div>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#spliceClosureInfo\\\">SpliceClosure Info</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"spliceClosureInfo\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"noOfPorts\\\" class=\\\"control-label\\\">No Of Ports</label>\\r\\n                                    <input type=\\\"number\\\" name=\\\"noOfPorts\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"spliceClosure.noOfPorts\\\" />\\r\\n                                 </div>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#zoomSettings\\\">Zoom Settings</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"zoomSettings\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-11\\\">\\r\\n                                 <mat-slider name=\\\"zoomLevel\\\" thumbLabel step=\\\"1\\\" min=\\\"0\\\" max=\\\"21\\\" style=\\\"width:100%\\\" [(ngModel)]=\\\"spliceClosure.zoomLevel\\\"></mat-slider>\\r\\n                              </div>\\r\\n                              <div class=\\\"col-sm-1\\\" style=\\\"padding-top: 7px;\\\">\\r\\n                                 <input type=\\\"number\\\" min=\\\"0\\\" max=\\\"21\\\" class=\\\"form-control input-sm\\\" name=\\\"zoom\\\" [(ngModel)]=\\\"spliceClosure.zoomLevel\\\">\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#pricing\\\">Pricing</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"pricing\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <suppliers [supplierList]=\\\"spliceClosure.suppliers\\\"></suppliers>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#customFields\\\">Custom Fields</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"customFields\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <custom-fields [customFields]=\\\"spliceClosure.customFields\\\"></custom-fields>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                  </div>\\r\\n\\r\\n               </div>\\r\\n               <div class=\\\"box-footer\\\">\\r\\n                  <div class=\\\"pull-right\\\">\\r\\n                     <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"goBack()\\\">Close</button>\\r\\n                     <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" style=\\\"margin-left:10px\\\" (click)=\\\"save()\\\" [disabled]=\\\"form.invalid\\\">Save</button>\\r\\n                  </div>\\r\\n               </div>\\r\\n            </form>\\r\\n         </div>\\r\\n      </div>\\r\\n   </div>\\r\\n</section>\\r\\n\"","export default \"<section class=\\\"content-header\\\">\\r\\n   <h1>Manage Entities <small> {{title}} </small></h1>\\r\\n   <ol class=\\\"breadcrumb\\\">\\r\\n      <li><a [routerLink]=\\\"['/']\\\"><i class=\\\"fa fa-home\\\"></i> Home</a></li>\\r\\n      <li><a [routerLink]=\\\"['/entities']\\\"> Entities</a></li>\\r\\n   </ol>\\r\\n</section>\\r\\n<section class=\\\"content\\\">\\r\\n   <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-xs-12\\\">\\r\\n         <div class=\\\"box\\\">\\r\\n            <div class=\\\"box-header with-border ui-sortable-handle\\\">\\r\\n               <h3 class=\\\"box-title\\\">Splitter Details</h3>\\r\\n               <div class=\\\"box-tools pull-right\\\" data-original-title=\\\"Status\\\" data-toggle=\\\"tooltip\\\" title=\\\"\\\">\\r\\n                  <button class=\\\"btn btn-social-icon btn-xs btn-danger\\\" (click)=\\\"goBack()\\\">\\r\\n                     <i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                  </button>\\r\\n                  <button class=\\\"btn btn-social-icon btn-xs btn-success\\\" type=\\\"submit\\\" style=\\\"margin-left: 5px;\\\" (click)=\\\"save()\\\" [disabled]=\\\"form.invalid\\\">\\r\\n                     <i class=\\\"far fa-save\\\"></i>\\r\\n                  </button>\\r\\n               </div>\\r\\n            </div>\\r\\n            <form name=\\\"form\\\" action=\\\"javascript:{}\\\" #form=\\\"ngForm\\\" novalidate autocomplete=\\\"off\\\">\\r\\n               <div class=\\\"box-body\\\">\\r\\n                  <div class=\\\"panel panel-default\\\">\\r\\n                     <div class=\\\"panel-heading\\\">\\r\\n                        <h4 class=\\\"panel-title\\\">\\r\\n                           General Information\\r\\n                        </h4>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel-collapse collapse in\\\">\\r\\n                        <div class=\\\"panel-body\\\">\\r\\n                           <div class=\\\"form-group col-md-6\\\">\\r\\n                              <label for=\\\"name\\\" class=\\\"control-label\\\">Name <span style=\\\"color:red;\\\">*</span></label>\\r\\n                              <input type=\\\"text\\\" name=\\\"name\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"splitter.name\\\" required />\\r\\n                           </div>\\r\\n                           <div class=\\\"form-group col-md-6\\\">\\r\\n                              <label for=\\\"parentType\\\" class=\\\"control-label\\\">Parent Type</label>\\r\\n                              <mat-select name=\\\"parentType\\\" [(ngModel)]=\\\"splitter.parentEntityType\\\">\\r\\n                                 <mat-option>Select Parent Entity Type</mat-option>\\r\\n                                 <mat-option value=\\\"Cable\\\">Cable</mat-option>\\r\\n                                 <mat-option value=\\\"Chamber\\\">Chamber</mat-option>\\r\\n                                 <mat-option value=\\\"Duct\\\">Duct</mat-option>\\r\\n                                 <mat-option value=\\\"ODF\\\">ODF</mat-option>\\r\\n                                 <mat-option value=\\\"Pole\\\">Pole</mat-option>\\r\\n                                 <mat-option value=\\\"SpliceClosure\\\">Splice Closure</mat-option>\\r\\n                                 <mat-option value=\\\"Splitter\\\">Splitter</mat-option>\\r\\n                              </mat-select>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"panel-group\\\" id=\\\"accordion\\\">\\r\\n\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#make\\\">Make</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"make\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"type\\\" class=\\\"control-label\\\">Type</label>\\r\\n                                    <input type=\\\"text\\\" name=\\\"type\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"splitter.type\\\" />\\r\\n                                 </div>\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"brand\\\" class=\\\"control-label\\\">Brand</label>\\r\\n                                    <input type=\\\"text\\\" name=\\\"brand\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"splitter.brand\\\" />\\r\\n                                 </div>\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"model\\\" class=\\\"control-label\\\">Model</label>\\r\\n                                    <input type=\\\"text\\\" name=\\\"model\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"splitter.model\\\" />\\r\\n                                 </div>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#splitterInfo\\\">Splitter Information</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"splitterInfo\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"splitterRatio\\\" class=\\\"control-label\\\">Splitter Ratio</label>\\r\\n                                    <input type=\\\"text\\\" name=\\\"splitterRatio\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"splitter.splitterRatio\\\" />\\r\\n                                 </div>\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"lossValue\\\" class=\\\"control-label\\\">Loss Value</label>\\r\\n                                    <input type=\\\"number\\\" name=\\\"lossValue\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"splitter.lossValue\\\" />\\r\\n                                 </div>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#optics\\\">Optical Information</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"optics\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"frequency\\\" class=\\\"control-label\\\">Frequency</label>\\r\\n                                    <input type=\\\"number\\\" name=\\\"frequency\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"splitter.optics.frequency\\\" />\\r\\n                                 </div>\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"attenuationDb\\\" class=\\\"control-label\\\">Attenuation</label>\\r\\n                                    <input type=\\\"number\\\" name=\\\"attenuationDb\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"splitter.optics.attenuationDb\\\" />\\r\\n                                 </div>\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"opticalInPutPower\\\" class=\\\"control-label\\\">Optical InPut Power</label>\\r\\n                                    <input type=\\\"number\\\" name=\\\"opticalInPutPower\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"splitter.optics.opticalInPutPower\\\" />\\r\\n                                 </div>\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"opticalOutputPower\\\" class=\\\"control-label\\\">Optical Output Power</label>\\r\\n                                    <input type=\\\"number\\\" name=\\\"opticalOutputPower\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"splitter.optics.opticalOutputPower\\\" />\\r\\n                                 </div>\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"resistanceOhm\\\" class=\\\"control-label\\\">Resistance</label>\\r\\n                                    <input type=\\\"number\\\" name=\\\"resistanceOhm\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"splitter.optics.resistanceOhm\\\" />\\r\\n                                 </div>\\r\\n                                 <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label for=\\\"wavelength\\\" class=\\\"control-label\\\">Wavelength</label>\\r\\n                                    <input type=\\\"number\\\" name=\\\"wavelength\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"splitter.optics.wavelength\\\" />\\r\\n                                 </div>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#zoomSettings\\\">Zoom Settings</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"zoomSettings\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-11\\\">\\r\\n                                 <mat-slider name=\\\"zoomLevel\\\" thumbLabel step=\\\"1\\\" min=\\\"0\\\" max=\\\"21\\\" style=\\\"width:100%\\\" [(ngModel)]=\\\"splitter.zoomLevel\\\"></mat-slider>\\r\\n                              </div>\\r\\n                              <div class=\\\"col-sm-1\\\" style=\\\"padding-top: 7px;\\\">\\r\\n                                 <input type=\\\"number\\\" min=\\\"0\\\" max=\\\"21\\\" class=\\\"form-control input-sm\\\" name=\\\"zoom\\\" [(ngModel)]=\\\"splitter.zoomLevel\\\">\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#pricing\\\">Pricing</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"pricing\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <suppliers [supplierList]=\\\"splitter.suppliers\\\"></suppliers>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#customFields\\\">Custom Fields</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"customFields\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <custom-fields [customFields]=\\\"splitter.customFields\\\"></custom-fields>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                  </div>\\r\\n\\r\\n               </div>\\r\\n               <div class=\\\"box-footer\\\">\\r\\n                  <div class=\\\"pull-right\\\">\\r\\n                     <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"goBack()\\\">Close</button>\\r\\n                     <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" style=\\\"margin-left:10px\\\" (click)=\\\"save()\\\" [disabled]=\\\"form.invalid\\\">Save</button>\\r\\n                  </div>\\r\\n               </div>\\r\\n            </form>\\r\\n         </div>\\r\\n      </div>\\r\\n   </div>\\r\\n</section>\\r\\n\"","export default \"<section class=\\\"content-header\\\">\\r\\n   <h1>Manage General Settings</h1>\\r\\n   <ol class=\\\"breadcrumb\\\">\\r\\n      <li><a [routerLink]=\\\"['/home']\\\"><i class=\\\"fa fa-home\\\"></i> Home</a></li>\\r\\n   </ol>\\r\\n</section>\\r\\n\\r\\n<section class=\\\"content\\\">\\r\\n   <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-xs-12\\\">\\r\\n         <div class=\\\"box\\\">\\r\\n            <div class=\\\"box-header with-border ui-sortable-handle\\\">\\r\\n               <h3 class=\\\"box-title\\\">General Settings</h3>\\r\\n               <div class=\\\"box-tools pull-right\\\">\\r\\n                  <button class=\\\"btn btn-social-icon btn-xs btn-success\\\" type=\\\"submit\\\" style=\\\"margin-left: 5px;\\\" (click)=\\\"save()\\\" [disabled]=\\\"form.invalid\\\">\\r\\n                     <i class=\\\"far fa-save\\\"></i>\\r\\n                  </button>\\r\\n               </div>\\r\\n            </div>\\r\\n            <form name=\\\"form\\\" action=\\\"javascript:{}\\\" #form=\\\"ngForm\\\" novalidate>\\r\\n               <div class=\\\"box-body\\\">\\r\\n                  <div class=\\\"panel-group\\\" id=\\\"accordion\\\">\\r\\n                     <!--<div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#boundaryHierarchies\\\">Boundary Hierarchies</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"boundaryHierarchies\\\" class=\\\"panel-collapse collapse in\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <div class=\\\"form-group\\\">\\r\\n                                    <table class=\\\"table table-bordered table-striped\\\">\\r\\n                                       <thead>\\r\\n                                          <tr>\\r\\n                                             <th style=\\\"width: 50px; text-align:center\\\">Level</th>\\r\\n                                             <th>Name</th>\\r\\n                                             <th style=\\\"text-align: center;padding: 2px 0px;width: 50px;\\\">\\r\\n                                                <a (click)=\\\"addBoundaryHierarchy()\\\" style=\\\"cursor:pointer\\\">\\r\\n                                                   <i class=\\\"fa fa-plus-circle\\\" title=\\\"Add\\\" style=\\\"font-size: 20px; color: #3e53a4;margin: 5px;\\\"></i>\\r\\n                                                </a>\\r\\n                                             </th>\\r\\n                                          </tr>\\r\\n                                       </thead>\\r\\n                                       <tbody>\\r\\n                                          <ng-container *ngIf='generalSettings.boundaryHierarchies && generalSettings.boundaryHierarchies.length > 0'>\\r\\n                                             <tr *ngFor='let boundary of generalSettings.boundaryHierarchies; let rowIndex = index;'>\\r\\n                                                <td style=\\\"text-align:center\\\">{{rowIndex + 1}}</td>\\r\\n                                                <td><input type=\\\"text\\\" class=\\\"form-control input-sm\\\" autocomplete=\\\"off\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"boundary.name\\\" (keypress)=\\\"restrictAlpha($event)\\\"></td>\\r\\n                                                <td style=\\\"text-align:center;padding-top: 14px;\\\">\\r\\n                                                   <a (click)=\\\"deleteboundaryHierarchy(rowIndex)\\\" style=\\\"cursor:pointer\\\">\\r\\n                                                      <i class=\\\"fa fa-remove\\\" title=\\\"Delete\\\" style=\\\"font-size: 15px; color: Red;\\\"></i>\\r\\n                                                   </a>\\r\\n                                                </td>\\r\\n                                             </tr>\\r\\n                                          </ng-container>\\r\\n                                          <tr *ngIf='generalSettings.boundaryHierarchies == null || generalSettings.boundaryHierarchies.length == 0'>\\r\\n                                             <td colspan=\\\"5\\\" class=\\\"check-mail\\\" style=\\\"text-align: center;\\\">\\r\\n                                                Boundry Hierarchies not defined\\r\\n                                             </td>\\r\\n                                          </tr>\\r\\n                                       </tbody>\\r\\n                                    </table>\\r\\n                                 </div>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#constructionStages\\\">Construction Stages</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"constructionStages\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <div class=\\\"form-group\\\">\\r\\n                                    <table class=\\\"table table-bordered table-striped\\\">\\r\\n                                       <thead>\\r\\n                                          <tr>\\r\\n                                             <th>Name</th>\\r\\n                                             <th style=\\\"width: 202px;\\\">Color Code</th>\\r\\n                                             <th style=\\\"text-align: center;padding: 2px 0px;width: 50px;\\\">\\r\\n                                                <a (click)=\\\"addConstructionStage()\\\" style=\\\"cursor:pointer\\\">\\r\\n                                                   <i class=\\\"fa fa-plus-circle\\\" title=\\\"Add\\\" style=\\\"font-size: 20px; color: #3e53a4;margin: 5px;\\\"></i>\\r\\n                                                </a>\\r\\n                                             </th>\\r\\n                                          </tr>\\r\\n                                       </thead>\\r\\n                                       <tbody>\\r\\n                                          <ng-container *ngIf='generalSettings.constructionStages && generalSettings.constructionStages.length > 0'>\\r\\n                                             <tr *ngFor='let constStage of generalSettings.constructionStages; let rowIndex = index;'>\\r\\n                                                <td><input type=\\\"text\\\" class=\\\"form-control input-sm\\\" autocomplete=\\\"off\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"constStage.name\\\" (keypress)=\\\"restrictAlpha($event)\\\"></td>\\r\\n                                                <td>\\r\\n                                                   <input type=\\\"text\\\" class=\\\"form-control input-sm text-color-picker\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"constStage.colorCode\\\" readonly>\\r\\n                                                </td>\\r\\n                                                <td style=\\\"text-align:center;padding-top: 14px;\\\">\\r\\n                                                   <a (click)=\\\"deleteConstructionStage(rowIndex)\\\" style=\\\"cursor:pointer\\\">\\r\\n                                                      <i class=\\\"fa fa-remove\\\" title=\\\"Delete\\\" style=\\\"font-size: 15px; color: Red;\\\"></i>\\r\\n                                                   </a>\\r\\n                                                </td>\\r\\n                                             </tr>\\r\\n                                          </ng-container>\\r\\n                                          <tr *ngIf='generalSettings.constructionStages == null || generalSettings.constructionStages.length == 0'>\\r\\n                                             <td colspan=\\\"5\\\" class=\\\"check-mail\\\" style=\\\"text-align: center;\\\">\\r\\n                                                Construction Stages not defined\\r\\n                                             </td>\\r\\n                                          </tr>\\r\\n                                       </tbody>\\r\\n                                    </table>\\r\\n                                 </div>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#activationStages\\\">Activation Stage</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"activationStages\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <div class=\\\"form-group\\\">\\r\\n                                    <table class=\\\"table table-bordered table-striped\\\">\\r\\n                                       <thead>\\r\\n                                          <tr>\\r\\n                                             <th>Name</th>\\r\\n                                             <th style=\\\"width: 202px;\\\">Color Code</th>\\r\\n                                             <th style=\\\"text-align: center;padding: 2px 0px;width: 50px;\\\">\\r\\n                                                <a (click)=\\\"addActivationStage()\\\" style=\\\"cursor:pointer\\\">\\r\\n                                                   <i class=\\\"fa fa-plus-circle\\\" title=\\\"Add\\\" style=\\\"font-size: 20px; color: #3e53a4;margin: 5px;\\\"></i>\\r\\n                                                </a>\\r\\n                                             </th>\\r\\n                                          </tr>\\r\\n                                       </thead>\\r\\n                                       <tbody>\\r\\n                                          <ng-container *ngIf='generalSettings.activationStages && generalSettings.activationStages.length > 0'>\\r\\n                                             <tr *ngFor='let activationStage of generalSettings.activationStages; let rowIndex = index;'>\\r\\n                                                <td><input type=\\\"text\\\" class=\\\"form-control input-sm\\\" autocomplete=\\\"off\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"activationStage.name\\\" (keypress)=\\\"restrictAlpha($event)\\\"></td>\\r\\n                                                <td>\\r\\n                                                   <input type=\\\"text\\\" class=\\\"form-control input-sm text-color-picker\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"activationStage.colorCode\\\" readonly>\\r\\n                                                </td>\\r\\n                                                <td style=\\\"text-align:center;padding-top: 14px;\\\">\\r\\n                                                   <a (click)=\\\"deleteActivationStage(rowIndex)\\\" style=\\\"cursor:pointer\\\">\\r\\n                                                      <i class=\\\"fa fa-remove\\\" title=\\\"Delete\\\" style=\\\"font-size: 15px; color: Red;\\\"></i>\\r\\n                                                   </a>\\r\\n                                                </td>\\r\\n                                             </tr>\\r\\n                                          </ng-container>\\r\\n                                          <tr *ngIf='generalSettings.activationStages == null || generalSettings.activationStages.length == 0'>\\r\\n                                             <td colspan=\\\"5\\\" class=\\\"check-mail\\\" style=\\\"text-align: center;\\\">\\r\\n                                                Activation Stages not defined\\r\\n                                             </td>\\r\\n                                          </tr>\\r\\n                                       </tbody>\\r\\n                                    </table>\\r\\n                                 </div>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#accessibilities\\\">Accessibilities</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"accessibilities\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <div class=\\\"form-group\\\">\\r\\n                                    <table class=\\\"table table-bordered table-striped\\\">\\r\\n                                       <thead>\\r\\n                                          <tr>\\r\\n                                             <th>Name</th>\\r\\n                                             <th style=\\\"width: 202px;\\\">Color Code</th>\\r\\n                                             <th style=\\\"text-align: center;padding: 2px 0px;width: 50px;\\\">\\r\\n                                                <a (click)=\\\"addAccessibility()\\\" style=\\\"cursor:pointer\\\">\\r\\n                                                   <i class=\\\"fa fa-plus-circle\\\" title=\\\"Add\\\" style=\\\"font-size: 20px; color: #3e53a4;margin: 5px;\\\"></i>\\r\\n                                                </a>\\r\\n                                             </th>\\r\\n                                          </tr>\\r\\n                                       </thead>\\r\\n                                       <tbody>\\r\\n                                          <ng-container *ngIf='generalSettings.accessibilities && generalSettings.accessibilities.length > 0'>\\r\\n                                             <tr *ngFor='let accessibility of generalSettings.accessibilities; let rowIndex = index;'>\\r\\n                                                <td><input type=\\\"text\\\" class=\\\"form-control input-sm\\\" autocomplete=\\\"off\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"accessibility.name\\\" (keypress)=\\\"restrictAlpha($event)\\\"></td>\\r\\n                                                <td>\\r\\n                                                   <input type=\\\"text\\\" class=\\\"form-control input-sm text-color-picker\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"accessibility.colorCode\\\" readonly>\\r\\n                                                </td>\\r\\n                                                <td style=\\\"text-align:center;padding-top: 14px;\\\">\\r\\n                                                   <a (click)=\\\"deleteAccessibility(rowIndex)\\\" style=\\\"cursor:pointer\\\">\\r\\n                                                      <i class=\\\"fa fa-remove\\\" title=\\\"Delete\\\" style=\\\"font-size: 15px; color: Red;\\\"></i>\\r\\n                                                   </a>\\r\\n                                                </td>\\r\\n                                             </tr>\\r\\n                                          </ng-container>\\r\\n                                          <tr *ngIf='generalSettings.accessibilities == null || generalSettings.accessibilities.length == 0'>\\r\\n                                             <td colspan=\\\"5\\\" class=\\\"check-mail\\\" style=\\\"text-align: center;\\\">\\r\\n                                                Accessibilities not defined\\r\\n                                             </td>\\r\\n                                          </tr>\\r\\n                                       </tbody>\\r\\n                                    </table>\\r\\n                                 </div>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#hierarchyTypes\\\">Hierarchy Types</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"hierarchyTypes\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <div class=\\\"form-group\\\">\\r\\n                                    <table class=\\\"table table-bordered table-striped\\\">\\r\\n                                       <thead>\\r\\n                                          <tr>\\r\\n                                             <th>Name</th>\\r\\n                                             <th style=\\\"width: 202px;\\\">Color Code</th>\\r\\n                                             <th style=\\\"text-align: center;padding: 2px 0px;width: 50px;\\\">\\r\\n                                                <a (click)=\\\"addHierarchyType()\\\" style=\\\"cursor:pointer\\\">\\r\\n                                                   <i class=\\\"fa fa-plus-circle\\\" title=\\\"Add\\\" style=\\\"font-size: 20px; color: #3e53a4;margin: 5px;\\\"></i>\\r\\n                                                </a>\\r\\n                                             </th>\\r\\n                                          </tr>\\r\\n                                       </thead>\\r\\n                                       <tbody>\\r\\n                                          <ng-container *ngIf='generalSettings.hierarchyTypes && generalSettings.hierarchyTypes.length > 0'>\\r\\n                                             <tr *ngFor='let hierarchyType of generalSettings.hierarchyTypes; let rowIndex = index;'>\\r\\n                                                <td><input type=\\\"text\\\" class=\\\"form-control input-sm\\\" autocomplete=\\\"off\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"hierarchyType.name\\\" (keypress)=\\\"restrictAlpha($event)\\\"></td>\\r\\n                                                <td>\\r\\n                                                   <input type=\\\"text\\\" class=\\\"form-control input-sm text-color-picker\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"hierarchyType.colorCode\\\" readonly>\\r\\n                                                </td>\\r\\n                                                <td style=\\\"text-align:center;padding-top: 14px;\\\">\\r\\n                                                   <a (click)=\\\"deleteHierarchyType(rowIndex)\\\" style=\\\"cursor:pointer\\\">\\r\\n                                                      <i class=\\\"fa fa-remove\\\" title=\\\"Delete\\\" style=\\\"font-size: 15px; color: Red;\\\"></i>\\r\\n                                                   </a>\\r\\n                                                </td>\\r\\n                                             </tr>\\r\\n                                          </ng-container>\\r\\n                                          <tr *ngIf='generalSettings.hierarchyTypes == null || generalSettings.hierarchyTypes.length == 0'>\\r\\n                                             <td colspan=\\\"5\\\" class=\\\"check-mail\\\" style=\\\"text-align: center;\\\">\\r\\n                                                Hierarchy types not defined\\r\\n                                             </td>\\r\\n                                          </tr>\\r\\n                                       </tbody>\\r\\n                                    </table>\\r\\n                                 </div>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#opticalLinkBudget\\\">Optical Link Budget</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"opticalLinkBudget\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <div class=\\\"form-group\\\">\\r\\n                                    <table class=\\\"table table-bordered table-striped\\\">\\r\\n                                       <thead>\\r\\n                                          <tr>\\r\\n                                             <th style=\\\"width:50px;\\\">WaveLength Name</th>\\r\\n                                             <th style=\\\"width:150px;\\\">Cable length loss (dB)</th>\\r\\n                                             <th style=\\\"width: 130px;\\\"> Splice Loss (dB)</th>\\r\\n                                             <th style=\\\"width: 120px;\\\">Patching Loss (dB)</th>\\r\\n                                             <th style=\\\"width: 120px;\\\">Patch - connector loss (dB)</th>\\r\\n                                             <th style=\\\"text-align: center;padding: 2px 0px;width: 50px;\\\">\\r\\n                                                <a (click)=\\\"addOpticalLinkBudget()\\\" style=\\\"cursor:pointer\\\">\\r\\n                                                   <i class=\\\"fa fa-plus-circle\\\" title=\\\"Add\\\" style=\\\"font-size: 20px; margin: 5px;\\\"></i>\\r\\n                                                </a>\\r\\n                                             </th>\\r\\n                                          </tr>\\r\\n                                       </thead>\\r\\n                                       <tbody>\\r\\n                                          <ng-container *ngIf='generalSettings.opticalLinkBudget && generalSettings.opticalLinkBudget.length > 0'>\\r\\n                                             <tr *ngFor='let opticalLink of generalSettings.opticalLinkBudget; let rowIndex = index;'>\\r\\n                                                <td><input type=\\\"text\\\" class=\\\"form-control input-sm\\\" autocomplete=\\\"off\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"opticalLink.waveLengthName\\\" (keypress)=\\\"restrictAlpha($event)\\\"></td>\\r\\n                                                <td><input type=\\\"text\\\" class=\\\"form-control input-sm\\\" autocomplete=\\\"off\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"opticalLink.cablelengthLoss\\\" (keypress)=\\\"restrictAlpha($event)\\\"></td>\\r\\n                                                <td><input type=\\\"text\\\" class=\\\"form-control input-sm\\\" autocomplete=\\\"off\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"opticalLink.spliceLoss\\\" (keypress)=\\\"restrictAlpha($event)\\\"></td>\\r\\n                                                <td><input type=\\\"text\\\" class=\\\"form-control input-sm\\\" autocomplete=\\\"off\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"opticalLink.patchingLoss\\\" (keypress)=\\\"restrictAlpha($event)\\\"></td>\\r\\n                                                <td><input type=\\\"text\\\" class=\\\"form-control input-sm\\\" autocomplete=\\\"off\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"opticalLink.patchConnectorLoss\\\" (keypress)=\\\"restrictAlpha($event)\\\"></td>\\r\\n\\r\\n                                                <td style=\\\"text-align:center;padding-top: 14px;\\\">\\r\\n                                                   <a (click)=\\\"deleteOpticalLinkBudget(rowIndex)\\\" style=\\\"cursor:pointer\\\">\\r\\n                                                      <i class=\\\"fa fa-remove\\\" title=\\\"Delete\\\" style=\\\"font-size: 15px; color: Red;\\\"></i>\\r\\n                                                   </a>\\r\\n                                                </td>\\r\\n                                             </tr>\\r\\n                                          </ng-container>\\r\\n                                          <tr *ngIf='generalSettings.opticalLinkBudget == null || generalSettings.opticalLinkBudget.length == 0'>\\r\\n                                             <td colspan=\\\"5\\\" class=\\\"check-mail\\\" style=\\\"text-align: center;\\\">\\r\\n                                                opticalLinkBudget not defined\\r\\n                                             </td>\\r\\n                                          </tr>\\r\\n                                       </tbody>\\r\\n                                    </table>\\r\\n                                 </div>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>-->\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#fileAttachments\\\">File Attachments</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"fileAttachments\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"createdDate\\\" class=\\\"control-label\\\">Size limit (MBs)</label>\\r\\n                                    <input type=\\\"number\\\" class=\\\"form-control input-sm\\\" name=\\\"sizeLimit\\\" required value=\\\"0\\\" onkeypress=\\\"return (event.keyCode != 8 || event.keyCode !=32 ) && !(event.keyCode < 48 || event.keyCode > 57)\\\" [(ngModel)]=\\\"generalSettings.fileAttachmentLimit\\\">\\r\\n                                 </div>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                  </div>\\r\\n               </div>\\r\\n               <div class=\\\"box-footer\\\">\\r\\n                  <div class=\\\"pull-right\\\">\\r\\n                     <div>\\r\\n                        <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" tabindex=\\\"12\\\" style=\\\"margin-left:10px\\\" (click)=\\\"save()\\\" [disabled]=\\\"form.invalid\\\">Save</button>\\r\\n                     </div>\\r\\n                  </div>\\r\\n               </div>\\r\\n            </form>\\r\\n         </div>\\r\\n      </div>\\r\\n   </div>\\r\\n</section>\\r\\n\"","export default \"<section class=\\\"content-header\\\">\\r\\n   <h1>Manage Groups <small> {{title}} </small></h1>\\r\\n   <ol class=\\\"breadcrumb\\\">\\r\\n      <li><a [routerLink]=\\\"['/home']\\\"><i class=\\\"fa fa-home\\\"></i> Home</a></li>\\r\\n      <li><a [routerLink]=\\\"['/groups']\\\"> Groups</a></li>\\r\\n   </ol>\\r\\n</section>\\r\\n\\r\\n<section class=\\\"content\\\">\\r\\n   <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-xs-12\\\">\\r\\n         <div class=\\\"box\\\">\\r\\n            <div class=\\\"box-header with-border\\\">\\r\\n               <h3 class=\\\"box-title\\\">Group Details</h3>\\r\\n               <div class=\\\"box-tools pull-right\\\">\\r\\n                  <button class=\\\"btn btn-social-icon btn-xs btn-danger\\\" (click)=\\\"goBack()\\\">\\r\\n                     <i class=\\\"fas fa-times\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                  </button>\\r\\n                  <button class=\\\"btn btn-social-icon btn-xs btn-success\\\" type=\\\"submit\\\" style=\\\"margin-left: 5px;\\\" (click)=\\\"saveGroup()\\\" [disabled]=\\\"groupForm.invalid\\\">\\r\\n                     <i class=\\\"far fa-save\\\"></i>\\r\\n                  </button>\\r\\n               </div>\\r\\n            </div>\\r\\n            <form name=\\\"groupForm\\\" action=\\\"javascript:{}\\\" #groupForm=\\\"ngForm\\\" novalidate autocomplete=\\\"off\\\">\\r\\n               <div class=\\\"box-body\\\">\\r\\n\\r\\n                  <div class=\\\"panel panel-default\\\">\\r\\n                     <div class=\\\"panel-heading\\\">\\r\\n                        <h4 class=\\\"panel-title\\\">Group Info</h4>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel-collapse collapse in\\\">\\r\\n                        <div class=\\\"panel-body\\\">\\r\\n                           <div class=\\\"col-sm-12\\\">\\r\\n                              <div class=\\\"form-group\\\">\\r\\n                                 <label for=\\\"name\\\" class=\\\"control-label\\\">Name <span style=\\\"color:red;\\\">*</span></label>\\r\\n                                 <input type=\\\"text\\\" class=\\\"form-control input-sm\\\" name=\\\"name\\\" pattern=\\\"[a-zA-Z][a-zA-Z-' ]+\\\" minlength=\\\"3\\\" maxlength=\\\"50\\\"  #name=\\\"ngModel\\\" required [(ngModel)]=\\\"group.name\\\">\\r\\n                                 <div *ngIf=\\\"name.errors && (name.dirty || name.touched)\\\">\\r\\n                                    <div [hidden]=\\\"!name.errors.required\\\">\\r\\n                                       <span style=\\\"color: red;\\\">Name required</span>\\r\\n                                    </div>\\r\\n                                    <div [hidden]=\\\"!name.errors.minlength\\\">\\r\\n                                       <span style=\\\"color:red;\\\">Name should be in 3 to 50 characters</span>\\r\\n                                    </div>\\r\\n                                    <div [hidden]=\\\"!name.errors.pattern\\\">\\r\\n                                       <span style=\\\"color: red;\\\">Invalid characters! </span>\\r\\n                                    </div>\\r\\n                                 </div>\\r\\n                              </div>\\r\\n                              <div class=\\\"form-group\\\">\\r\\n                                 <label for=\\\"description\\\" class=\\\"control-label\\\">Description </label>\\r\\n                                 <input type=\\\"text\\\" class=\\\"form-control input-sm\\\" name=\\\"description\\\" [(ngModel)]=\\\"group.description\\\">\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"panel-group\\\" id=\\\"accordion\\\">\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#accessPermissions\\\">Access Permissions</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"accessPermissions\\\" class=\\\"panel-collapse collapse in\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                  <!--<p-tree [value]=\\\"treeModules\\\" selectionMode=\\\"checkbox\\\" [(selection)]=\\\"selectedModules\\\" [style]=\\\"{'width':'100%'}\\\" dataKey=\\\"id\\\"></p-tree>-->\\r\\n                                  <p-treeTable [value]=\\\"treeModules\\\" selectionMode=\\\"checkbox\\\" [(selection)]=\\\"selectedModules\\\">\\r\\n                                    <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n                                      <tr>\\r\\n                                        <th style=\\\"padding-left: 15px;\\\"><p-treeTableHeaderCheckbox></p-treeTableHeaderCheckbox> <span style=\\\"padding-left: 8px;\\\">Modules</span></th>\\r\\n                                      </tr>\\r\\n                                    </ng-template>\\r\\n                                    <ng-template pTemplate=\\\"body\\\" let-rowNode let-rowData=\\\"rowData\\\" let-columns=\\\"columns\\\">\\r\\n                                      <tr>\\r\\n                                        <td>\\r\\n                                          <p-treeTableToggler [rowNode]=\\\"rowNode\\\"></p-treeTableToggler>\\r\\n                                          <p-treeTableCheckbox [value]=\\\"rowNode\\\"></p-treeTableCheckbox>\\r\\n                                          {{rowData.name}}\\r\\n                                        </td>\\r\\n                                      </tr>\\r\\n                                    </ng-template>\\r\\n                                  </p-treeTable>\\r\\n                                </div>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                     <!--<div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#remarks\\\">Remarks</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"remarks\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"remarks\\\" class=\\\"control-label\\\">Comments</label>\\r\\n                                    <textarea class=\\\"form-control\\\" rows=\\\"3\\\" name=\\\"remarks\\\" tabindex=\\\"8\\\" [(ngModel)]=\\\"group.remarks\\\"></textarea>\\r\\n                                 </div>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#otherInfo\\\">Other Info</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"otherInfo\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"createdDate\\\" class=\\\"control-label\\\">Created Date</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control input-sm\\\" name=\\\"createdDate\\\" tabindex=\\\"9\\\" [ngModel]=\\\"group.createdDate | date:'dd/MM/yyyy'\\\" disabled>\\r\\n                                 </div>\\r\\n                                 <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"createdBy\\\" class=\\\"control-label\\\">Created By</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control input-sm\\\" name=\\\"createdBy\\\" tabindex=\\\"10\\\" [(ngModel)]=\\\"group.createdBy\\\" disabled>\\r\\n                                 </div>\\r\\n                                 <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"lastUpdatedDate\\\" class=\\\"control-label\\\">Last Updated Date</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control input-sm\\\" name=\\\"lastUpdatedDate\\\" tabindex=\\\"11\\\" [ngModel]=\\\"group.updatedDate | date:'dd/MM/yyyy'\\\" disabled>\\r\\n                                 </div>\\r\\n                                 <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"updatedBy\\\" class=\\\"control-label\\\">Updated By</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control input-sm\\\" name=\\\"updatedBy\\\" tabindex=\\\"12\\\" [(ngModel)]=\\\"group.updatedBy\\\" disabled>\\r\\n                                 </div>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>-->\\r\\n                  </div>\\r\\n               </div>\\r\\n               <div class=\\\"box-footer\\\">\\r\\n                  <div class=\\\"pull-right\\\">\\r\\n                     <div>\\r\\n                        <button type=\\\"submit\\\" class=\\\"btn btn-danger\\\" tabindex=\\\"13\\\" (click)=\\\"goBack()\\\">Close</button>\\r\\n                        <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" tabindex=\\\"14\\\" style=\\\"margin-left:10px\\\" (click)=\\\"saveGroup()\\\" [disabled]=\\\"groupForm.invalid\\\">Save</button>\\r\\n                     </div>\\r\\n                  </div>\\r\\n               </div>\\r\\n            </form>\\r\\n         </div>\\r\\n      </div>\\r\\n   </div>\\r\\n</section>\\r\\n\"","export default \"<section class=\\\"content-header\\\">\\r\\n   <h1>Manage Groups</h1>\\r\\n   <ol class=\\\"breadcrumb\\\">\\r\\n      <li><a [routerLink]=\\\"['/home']\\\"><i class=\\\"fas fa-home\\\"></i> Home</a></li>\\r\\n   </ol>\\r\\n</section>\\r\\n\\r\\n<section class=\\\"content\\\">\\r\\n   <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-xs-12\\\">\\r\\n         <div class=\\\"box\\\">\\r\\n            <div class=\\\"box-header with-border\\\">\\r\\n               <h3 class=\\\"box-title\\\">Group List</h3>\\r\\n               <div class=\\\"box-tools pull-right\\\" data-toggle=\\\"tooltip\\\" title=\\\"\\\" data-original-title=\\\"Status\\\">\\r\\n                  <button [routerLink]=\\\"['details']\\\" class=\\\"btn btn-block btn-xs btn-primary\\\"> New Group</button>\\r\\n               </div>\\r\\n            </div>\\r\\n            <div class=\\\"box-body\\\">\\r\\n\\r\\n               <dt-search [searchFields]=\\\"searchFields\\\" (onSearch)=\\\"search($event)\\\"></dt-search>\\r\\n               <dt-pagination [totalPages]=\\\"totalPages\\\" (onPageSizeChange)=\\\"onPageSizeChange($event)\\\" (onPageChange)=\\\"onPageChange($event)\\\"></dt-pagination>\\r\\n\\r\\n               <table class=\\\"table table-bordered table-striped\\\">\\r\\n                  <thead>\\r\\n                     <tr (click)=\\\"onColumnClick($event.target)\\\">\\r\\n                        <th data-column=\\\"Name\\\" class=\\\"table-sorter\\\" style=\\\"width: 200px;\\\">Name</th>\\r\\n                        <th data-column=\\\"Description\\\" class=\\\"table-sorter\\\" style=\\\"max-width:300px\\\">Description</th>\\r\\n                        <th data-column=\\\"UpdatedBy\\\" class=\\\"table-sorter\\\" style=\\\"width: 150px;\\\">Updated By</th>\\r\\n                        <th data-column=\\\"UpdatedDate\\\" class=\\\"table-sorter\\\" style=\\\"width: 125px;\\\">Updated On</th>\\r\\n                        <th style=\\\"width:60px\\\"></th>\\r\\n                     </tr>\\r\\n                  </thead>\\r\\n                  <tbody>\\r\\n                     <ng-container *ngIf='groups && groups.length > 0'>\\r\\n                        <tr *ngFor='let group of groups'>\\r\\n                           <td>{{group.name}}</td>\\r\\n                           <td class=\\\"text-overflow-ellipsis\\\">{{group.description}}</td>\\r\\n                           <td>{{group.updatedBy}}</td>\\r\\n                           <td>{{group.updatedDate | date:'dd/MM/yyyy'}}</td>\\r\\n                           <td>\\r\\n                              <a>\\r\\n                                 <i class=\\\"fa fa-edit\\\" [routerLink]=\\\"['details', group.id]\\\" title=\\\"Edit\\\" style=\\\"font-size: 14px; cursor:pointer\\\"></i>\\r\\n                              </a>&nbsp;\\r\\n                              <a>\\r\\n                                 <i class=\\\"fa fa-trash\\\" (click)=\\\"delete(group)\\\" title=\\\"Remove\\\" style=\\\"font-size: 14px; cursor:pointer; color:red\\\"></i>\\r\\n                              </a>\\r\\n                           </td>\\r\\n                        </tr>\\r\\n                     </ng-container>\\r\\n                     <tr *ngIf='groups == null || groups.length == 0'>\\r\\n                        <td colspan=\\\"5\\\" style=\\\"text-align: center;\\\">\\r\\n                           {{statusMessage}}\\r\\n                        </td>\\r\\n                     </tr>\\r\\n                  </tbody>\\r\\n               </table>\\r\\n            </div>\\r\\n         </div>\\r\\n      </div>\\r\\n   </div>\\r\\n</section>\\r\\n\"","export default \"<section class=\\\"content-header\\\">\\r\\n   <h1>Manage Layers <small> {{title}} </small></h1>\\r\\n   <ol class=\\\"breadcrumb\\\">\\r\\n      <li><a [routerLink]=\\\"['/home']\\\"><i class=\\\"fa fa-home\\\"></i> Home</a></li>\\r\\n      <li><a [routerLink]=\\\"['/layers']\\\"> Layers</a></li>\\r\\n   </ol>\\r\\n</section>\\r\\n\\r\\n<section class=\\\"content\\\">\\r\\n   <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-xs-12\\\">\\r\\n         <div class=\\\"box\\\">\\r\\n            <div class=\\\"box-header with-border\\\">\\r\\n               <h3 class=\\\"box-title\\\">Layer Details</h3>\\r\\n               <div class=\\\"box-tools pull-right\\\">\\r\\n                  <button class=\\\"btn btn-social-icon btn-xs btn-danger\\\" (click)=\\\"goBack()\\\">\\r\\n                     <i class=\\\"fas fa-times\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                  </button>\\r\\n                  <button class=\\\"btn btn-social-icon btn-xs btn-success\\\" type=\\\"submit\\\" style=\\\"margin-left: 5px;\\\" (click)=\\\"save()\\\" [disabled]=\\\"form.invalid\\\">\\r\\n                     <i class=\\\"far fa-save\\\"></i>\\r\\n                  </button>\\r\\n               </div>\\r\\n            </div>\\r\\n            <form name=\\\"form\\\" action=\\\"javascript:{}\\\" #form=\\\"ngForm\\\" novalidate autocomplete=\\\"off\\\">\\r\\n               <div class=\\\"box-body\\\">\\r\\n\\r\\n                  <div class=\\\"panel panel-default\\\">\\r\\n                     <div class=\\\"panel-heading\\\">\\r\\n                        <h4 class=\\\"panel-title\\\">Layer Info</h4>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel-collapse collapse in\\\">\\r\\n                        <div class=\\\"panel-body\\\">\\r\\n                           <div class=\\\"col-sm-12\\\">\\r\\n                              <div class=\\\"form-group\\\">\\r\\n                                 <label for=\\\"name\\\" class=\\\"control-label\\\">Name <span style=\\\"color:red;\\\">*</span></label>\\r\\n                                 <input type=\\\"text\\\" class=\\\"form-control input-sm\\\" name=\\\"name\\\" pattern=\\\"[a-zA-Z][a-zA-Z-' ]+\\\" minlength=\\\"3\\\" maxlength=\\\"50\\\" #name=\\\"ngModel\\\" required [(ngModel)]=\\\"layer.name\\\">\\r\\n                                 <div *ngIf=\\\"name.errors && (name.dirty || name.touched)\\\">\\r\\n                                    <div [hidden]=\\\"!name.errors.required\\\">\\r\\n                                       <span style=\\\"color: red;\\\">Name required</span>\\r\\n                                    </div>\\r\\n                                    <div [hidden]=\\\"!name.errors.minlength\\\">\\r\\n                                       <span style=\\\"color:red;\\\">Name should be in 3 to 50 characters</span>\\r\\n                                    </div>\\r\\n                                    <div [hidden]=\\\"!name.errors.pattern\\\">\\r\\n                                       <span style=\\\"color: red;\\\">Invalid characters! </span>\\r\\n                                    </div>\\r\\n                                 </div>\\r\\n                              </div>\\r\\n                              <div class=\\\"form-group\\\">\\r\\n                                 <label for=\\\"description\\\" class=\\\"control-label\\\">Description </label>\\r\\n                                 <input type=\\\"text\\\" class=\\\"form-control input-sm\\\" name=\\\"description\\\" [(ngModel)]=\\\"layer.description\\\">\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"panel-group\\\" id=\\\"accordion\\\">\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#accessPermissions\\\">Access Permissions</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"accessPermissions\\\" class=\\\"panel-collapse collapse in\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <div class=\\\"form-group\\\">\\r\\n                                    <p-treeTable [value]=\\\"treeModules\\\" selectionMode=\\\"checkbox\\\" [(selection)]=\\\"selectedModules\\\">\\r\\n                                       <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n                                          <tr>\\r\\n                                             <th style=\\\"padding-left: 15px;\\\"><p-treeTableHeaderCheckbox></p-treeTableHeaderCheckbox> <span style=\\\"padding-left: 8px;\\\">Modules/Permissions</span></th>\\r\\n                                          </tr>\\r\\n                                       </ng-template>\\r\\n                                       <ng-template pTemplate=\\\"body\\\" let-rowNode let-rowData=\\\"rowData\\\" let-columns=\\\"columns\\\">\\r\\n                                          <tr>\\r\\n                                             <td>\\r\\n                                                <p-treeTableToggler [rowNode]=\\\"rowNode\\\"></p-treeTableToggler>\\r\\n                                                <p-treeTableCheckbox [value]=\\\"rowNode\\\"></p-treeTableCheckbox>\\r\\n                                                {{rowData.name}}\\r\\n                                             </td>\\r\\n                                          </tr>\\r\\n                                       </ng-template>\\r\\n                                    </p-treeTable>\\r\\n                                 </div>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                     <!--<div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#remarks\\\">Remarks</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"remarks\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"remarks\\\" class=\\\"control-label\\\">Comments</label>\\r\\n                                    <textarea class=\\\"form-control\\\" rows=\\\"3\\\" name=\\\"remarks\\\" tabindex=\\\"8\\\" [(ngModel)]=\\\"group.remarks\\\"></textarea>\\r\\n                                 </div>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#otherInfo\\\">Other Info</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"otherInfo\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"createdDate\\\" class=\\\"control-label\\\">Created Date</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control input-sm\\\" name=\\\"createdDate\\\" tabindex=\\\"9\\\" [ngModel]=\\\"group.createdDate | date:'dd/MM/yyyy'\\\" disabled>\\r\\n                                 </div>\\r\\n                                 <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"createdBy\\\" class=\\\"control-label\\\">Created By</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control input-sm\\\" name=\\\"createdBy\\\" tabindex=\\\"10\\\" [(ngModel)]=\\\"group.createdBy\\\" disabled>\\r\\n                                 </div>\\r\\n                                 <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"lastUpdatedDate\\\" class=\\\"control-label\\\">Last Updated Date</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control input-sm\\\" name=\\\"lastUpdatedDate\\\" tabindex=\\\"11\\\" [ngModel]=\\\"group.updatedDate | date:'dd/MM/yyyy'\\\" disabled>\\r\\n                                 </div>\\r\\n                                 <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"updatedBy\\\" class=\\\"control-label\\\">Updated By</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control input-sm\\\" name=\\\"updatedBy\\\" tabindex=\\\"12\\\" [(ngModel)]=\\\"group.updatedBy\\\" disabled>\\r\\n                                 </div>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>-->\\r\\n                  </div>\\r\\n               </div>\\r\\n               <div class=\\\"box-footer\\\">\\r\\n                  <div class=\\\"pull-right\\\">\\r\\n                     <div>\\r\\n                        <button type=\\\"submit\\\" class=\\\"btn btn-danger\\\" tabindex=\\\"13\\\" (click)=\\\"goBack()\\\">Close</button>\\r\\n                        <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" tabindex=\\\"14\\\" style=\\\"margin-left:10px\\\" (click)=\\\"save()\\\" [disabled]=\\\"form.invalid\\\">Save</button>\\r\\n                     </div>\\r\\n                  </div>\\r\\n               </div>\\r\\n            </form>\\r\\n         </div>\\r\\n      </div>\\r\\n   </div>\\r\\n</section>\\r\\n\"","export default \"<section class=\\\"content-header\\\">\\r\\n   <h1>Manage Layers</h1>\\r\\n   <ol class=\\\"breadcrumb\\\">\\r\\n      <li><a [routerLink]=\\\"['/home']\\\"><i class=\\\"fas fa-home\\\"></i> Home</a></li>\\r\\n   </ol>\\r\\n</section>\\r\\n\\r\\n<section class=\\\"content\\\">\\r\\n   <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-xs-12\\\">\\r\\n         <div class=\\\"box\\\">\\r\\n            <div class=\\\"box-header with-border\\\">\\r\\n               <h3 class=\\\"box-title\\\">Layer List</h3>\\r\\n               <div class=\\\"box-tools pull-right\\\" data-toggle=\\\"tooltip\\\" title=\\\"\\\" data-original-title=\\\"Status\\\">\\r\\n                  <button [routerLink]=\\\"['details']\\\" class=\\\"btn btn-block btn-xs btn-primary\\\"> New Layer</button>\\r\\n               </div>\\r\\n            </div>\\r\\n            <div class=\\\"box-body\\\">\\r\\n               <dt-search [searchFields]=\\\"searchFields\\\" (onSearch)=\\\"search($event)\\\"></dt-search>\\r\\n               <dt-pagination [totalPages]=\\\"totalPages\\\" (onPageSizeChange)=\\\"onPageSizeChange($event)\\\" (onPageChange)=\\\"onPageChange($event)\\\"></dt-pagination>\\r\\n\\r\\n               <table id=\\\"layers\\\" class=\\\"table table-bordered table-striped\\\">\\r\\n                  <thead>\\r\\n                     <tr (click)=\\\"onColumnClick($event.target)\\\">\\r\\n                        <th data-column=\\\"Name\\\" class=\\\"table-sorter\\\" style=\\\"width: 200px;\\\">Name</th>\\r\\n                        <th data-column=\\\"Description\\\" class=\\\"table-sorter\\\" style=\\\"max-width:300px\\\">Description</th>\\r\\n                        <th data-column=\\\"UpdatedBy\\\" class=\\\"table-sorter\\\" style=\\\"width:150px\\\">Updated By</th>\\r\\n                        <th data-column=\\\"UpdatedDate\\\" class=\\\"table-sorter\\\" style=\\\"width:125px\\\">Updated On</th>\\r\\n                        <th style=\\\"width:72px\\\"></th>\\r\\n                     </tr>\\r\\n                  </thead>\\r\\n                  <tbody>\\r\\n                     <ng-container *ngIf='layers && layers.length > 0'>\\r\\n                        <tr *ngFor='let layer of layers'>\\r\\n                           <td>{{layer.name}}</td>\\r\\n                           <td class=\\\"text-overflow-ellipsis\\\">{{layer.description}}</td>\\r\\n                           <td>{{layer.updatedBy}}</td>\\r\\n                           <td>{{layer.updatedDate | date:'dd/MM/yyyy'}}</td>\\r\\n                           <td>\\r\\n                              <a>\\r\\n                                 <i class=\\\"fa fa-edit\\\" [routerLink]=\\\"['details', layer.id]\\\" title=\\\"Edit\\\" style=\\\"font-size: 14px; cursor:pointer\\\"></i>\\r\\n                              </a>&nbsp;\\r\\n                              <a>\\r\\n                                 <i class=\\\"fa fa-trash\\\" (click)=\\\"delete(layer)\\\" title=\\\"Remove\\\" style=\\\"font-size: 14px; cursor:pointer; color:red\\\"></i>\\r\\n                              </a>\\r\\n                           </td>\\r\\n                        </tr>\\r\\n                     </ng-container>\\r\\n                     <tr *ngIf='layers == null || layers.length == 0'>\\r\\n                        <td colspan=\\\"5\\\" style=\\\"text-align: center;\\\">\\r\\n                           {{statusMessage}}\\r\\n                        </td>\\r\\n                     </tr>\\r\\n                  </tbody>\\r\\n               </table>\\r\\n            </div>\\r\\n         </div>\\r\\n      </div>\\r\\n   </div>\\r\\n</section>\\r\\n\"","export default \"<section class=\\\"content-header\\\">\\r\\n   <h1>Manage Roles <small> {{title}} </small></h1>\\r\\n   <ol class=\\\"breadcrumb\\\">\\r\\n      <li><a [routerLink]=\\\"['/home']\\\"><i class=\\\"fa fa-home\\\"></i> Home</a></li>\\r\\n      <li><a [routerLink]=\\\"['/roles']\\\"> Roles</a></li>\\r\\n   </ol>\\r\\n</section>\\r\\n\\r\\n<section class=\\\"content\\\">\\r\\n   <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-xs-12\\\">\\r\\n         <div class=\\\"box\\\">\\r\\n            <div class=\\\"box-header with-border\\\">\\r\\n               <h3 class=\\\"box-title\\\">Role Details</h3>\\r\\n               <div class=\\\"box-tools pull-right\\\">\\r\\n                  <button class=\\\"btn btn-social-icon btn-xs btn-danger\\\" (click)=\\\"goBack()\\\">\\r\\n                     <i class=\\\"fas fa-times\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                  </button>\\r\\n                  <button class=\\\"btn btn-social-icon btn-xs btn-success\\\" type=\\\"submit\\\" style=\\\"margin-left: 5px;\\\" (click)=\\\"save()\\\" [disabled]=\\\"form.invalid\\\">\\r\\n                     <i class=\\\"far fa-save\\\"></i>\\r\\n                  </button>\\r\\n               </div>\\r\\n            </div>\\r\\n            <form name=\\\"form\\\" action=\\\"javascript:{}\\\" #form=\\\"ngForm\\\" novalidate autocomplete=\\\"off\\\">\\r\\n               <div class=\\\"box-body\\\">\\r\\n\\r\\n                  <div class=\\\"panel panel-default\\\">\\r\\n                     <div class=\\\"panel-heading\\\">\\r\\n                        <h4 class=\\\"panel-title\\\">Role Info</h4>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel-collapse collapse in\\\">\\r\\n                        <div class=\\\"panel-body\\\">\\r\\n                           <div class=\\\"col-sm-12\\\">\\r\\n                              <div class=\\\"form-group\\\">\\r\\n                                 <label for=\\\"name\\\" class=\\\"control-label\\\">Name <span style=\\\"color:red;\\\">*</span></label>\\r\\n                                 <input type=\\\"text\\\" class=\\\"form-control input-sm\\\" name=\\\"name\\\" pattern=\\\"[a-zA-Z][a-zA-Z-' ]+\\\" minlength=\\\"3\\\" maxlength=\\\"50\\\" #name=\\\"ngModel\\\" required [(ngModel)]=\\\"role.name\\\">\\r\\n                                 <div *ngIf=\\\"name.errors && (name.dirty || name.touched)\\\">\\r\\n                                    <div [hidden]=\\\"!name.errors.required\\\">\\r\\n                                       <span style=\\\"color: red;\\\">Name required</span>\\r\\n                                    </div>\\r\\n                                    <div [hidden]=\\\"!name.errors.minlength\\\">\\r\\n                                       <span style=\\\"color:red;\\\">Name should be in 3 to 50 characters</span>\\r\\n                                    </div>\\r\\n                                    <div [hidden]=\\\"!name.errors.pattern\\\">\\r\\n                                       <span style=\\\"color: red;\\\">Invalid characters! </span>\\r\\n                                    </div>\\r\\n                                 </div>\\r\\n                              </div>\\r\\n                              <div class=\\\"form-group\\\">\\r\\n                                 <label for=\\\"description\\\" class=\\\"control-label\\\">Description </label>\\r\\n                                 <input type=\\\"text\\\" class=\\\"form-control input-sm\\\" name=\\\"description\\\" [(ngModel)]=\\\"role.description\\\">\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"panel-group\\\" id=\\\"accordion\\\">\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#accessPermissions\\\">Access Permissions</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"accessPermissions\\\" class=\\\"panel-collapse collapse in\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <div class=\\\"form-group\\\">\\r\\n                                    <p-treeTable [value]=\\\"treeModules\\\" selectionMode=\\\"checkbox\\\" [(selection)]=\\\"selectedModules\\\">\\r\\n                                       <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n                                          <tr>\\r\\n                                             <th style=\\\"padding-left: 15px;\\\"><p-treeTableHeaderCheckbox></p-treeTableHeaderCheckbox> <span style=\\\"padding-left: 8px;\\\">Modules/Permissions</span></th>\\r\\n                                          </tr>\\r\\n                                       </ng-template>\\r\\n                                       <ng-template pTemplate=\\\"body\\\" let-rowNode let-rowData=\\\"rowData\\\" let-columns=\\\"columns\\\">\\r\\n                                          <tr>\\r\\n                                             <td>\\r\\n                                                <p-treeTableToggler [rowNode]=\\\"rowNode\\\"></p-treeTableToggler>\\r\\n                                                <p-treeTableCheckbox [value]=\\\"rowNode\\\"></p-treeTableCheckbox>\\r\\n                                                {{rowData.name}}\\r\\n                                             </td>\\r\\n                                          </tr>\\r\\n                                       </ng-template>\\r\\n                                    </p-treeTable>\\r\\n                                 </div>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                     <!--<div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#remarks\\\">Remarks</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"remarks\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"remarks\\\" class=\\\"control-label\\\">Comments</label>\\r\\n                                    <textarea class=\\\"form-control\\\" rows=\\\"3\\\" name=\\\"remarks\\\" tabindex=\\\"8\\\" [(ngModel)]=\\\"group.remarks\\\"></textarea>\\r\\n                                 </div>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#otherInfo\\\">Other Info</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"otherInfo\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"createdDate\\\" class=\\\"control-label\\\">Created Date</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control input-sm\\\" name=\\\"createdDate\\\" tabindex=\\\"9\\\" [ngModel]=\\\"group.createdDate | date:'dd/MM/yyyy'\\\" disabled>\\r\\n                                 </div>\\r\\n                                 <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"createdBy\\\" class=\\\"control-label\\\">Created By</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control input-sm\\\" name=\\\"createdBy\\\" tabindex=\\\"10\\\" [(ngModel)]=\\\"group.createdBy\\\" disabled>\\r\\n                                 </div>\\r\\n                                 <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"lastUpdatedDate\\\" class=\\\"control-label\\\">Last Updated Date</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control input-sm\\\" name=\\\"lastUpdatedDate\\\" tabindex=\\\"11\\\" [ngModel]=\\\"group.updatedDate | date:'dd/MM/yyyy'\\\" disabled>\\r\\n                                 </div>\\r\\n                                 <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"updatedBy\\\" class=\\\"control-label\\\">Updated By</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control input-sm\\\" name=\\\"updatedBy\\\" tabindex=\\\"12\\\" [(ngModel)]=\\\"group.updatedBy\\\" disabled>\\r\\n                                 </div>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>-->\\r\\n                  </div>\\r\\n               </div>\\r\\n               <div class=\\\"box-footer\\\">\\r\\n                  <div class=\\\"pull-right\\\">\\r\\n                     <div>\\r\\n                        <button type=\\\"submit\\\" class=\\\"btn btn-danger\\\" tabindex=\\\"13\\\" (click)=\\\"goBack()\\\">Close</button>\\r\\n                        <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" tabindex=\\\"14\\\" style=\\\"margin-left:10px\\\" (click)=\\\"save()\\\" [disabled]=\\\"form.invalid\\\">Save</button>\\r\\n                     </div>\\r\\n                  </div>\\r\\n               </div>\\r\\n            </form>\\r\\n         </div>\\r\\n      </div>\\r\\n   </div>\\r\\n</section>\\r\\n\"","export default \"<section class=\\\"content-header\\\">\\r\\n   <h1>Manage Roles</h1>\\r\\n   <ol class=\\\"breadcrumb\\\">\\r\\n      <li><a [routerLink]=\\\"['/home']\\\"><i class=\\\"fas fa-home\\\"></i> Home</a></li>\\r\\n   </ol>\\r\\n</section>\\r\\n\\r\\n<section class=\\\"content\\\">\\r\\n   <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-xs-12\\\">\\r\\n         <div class=\\\"box\\\">\\r\\n            <div class=\\\"box-header with-border\\\">\\r\\n               <h3 class=\\\"box-title\\\">Role List</h3>\\r\\n               <div class=\\\"box-tools pull-right\\\" data-toggle=\\\"tooltip\\\" title=\\\"\\\" data-original-title=\\\"Status\\\">\\r\\n                  <button [routerLink]=\\\"['details']\\\" class=\\\"btn btn-block btn-xs btn-primary\\\"> New Role</button>\\r\\n               </div>\\r\\n            </div>\\r\\n            <div class=\\\"box-body\\\">\\r\\n\\r\\n               <dt-search [searchFields]=\\\"searchFields\\\" (onSearch)=\\\"search($event)\\\"></dt-search>\\r\\n               <dt-pagination [totalPages]=\\\"totalPages\\\" (onPageSizeChange)=\\\"onPageSizeChange($event)\\\" (onPageChange)=\\\"onPageChange($event)\\\"></dt-pagination>\\r\\n\\r\\n               <table class=\\\"table table-bordered table-striped\\\">\\r\\n                  <thead>\\r\\n                     <tr (click)=\\\"onColumnClick($event.target)\\\">\\r\\n                        <th data-column=\\\"Name\\\" class=\\\"table-sorter\\\" style=\\\"width: 200px;\\\">Name</th>\\r\\n                        <th data-column=\\\"Description\\\" class=\\\"table-sorter\\\" style=\\\"max-width:300px\\\">Description</th>\\r\\n                        <th data-column=\\\"UpdatedBy\\\" class=\\\"table-sorter\\\" style=\\\"width:150px\\\">Updated By</th>\\r\\n                        <th data-column=\\\"UpdatedDate\\\" class=\\\"table-sorter\\\" style=\\\"width:125px\\\">Updated On</th>\\r\\n                        <th style=\\\"width:60px\\\"></th>\\r\\n                     </tr>\\r\\n                  </thead>\\r\\n                  <tbody>\\r\\n                     <ng-container *ngIf='roles && roles.length > 0'>\\r\\n                        <tr *ngFor='let role of roles'>\\r\\n                           <td>{{role.name}}</td>\\r\\n                           <td class=\\\"text-overflow-ellipsis\\\">{{role.description}}</td>\\r\\n                           <td>{{role.updatedBy}}</td>\\r\\n                           <td>{{role.updatedDate | date:'dd/MM/yyyy'}}</td>\\r\\n                           <td>\\r\\n                              <a>\\r\\n                                 <i class=\\\"fa fa-edit\\\" [routerLink]=\\\"['details', role.id]\\\" title=\\\"Edit\\\" style=\\\"font-size: 14px; cursor:pointer\\\"></i>\\r\\n                              </a>&nbsp;\\r\\n                              <a>\\r\\n                                 <i class=\\\"fa fa-trash\\\" (click)=\\\"delete(role)\\\" title=\\\"Remove\\\" style=\\\"font-size: 14px; cursor:pointer; color:red\\\"></i>\\r\\n                              </a>\\r\\n                           </td>\\r\\n                        </tr>\\r\\n                     </ng-container>\\r\\n                     <tr *ngIf='roles == null || roles.length == 0'>\\r\\n                        <td colspan=\\\"5\\\" style=\\\"text-align: center;\\\">\\r\\n                           {{statusMessage}}\\r\\n                        </td>\\r\\n                     </tr>\\r\\n                  </tbody>\\r\\n               </table>\\r\\n            </div>\\r\\n         </div>\\r\\n      </div>\\r\\n   </div>\\r\\n</section>\\r\\n\"","export default \"<section class=\\\"content-header\\\">\\r\\n   <h1>Manage Users <small> {{title}} </small></h1>\\r\\n   <ol class=\\\"breadcrumb\\\">\\r\\n      <li><a [routerLink]=\\\"['/']\\\"><i class=\\\"fa fa-home\\\"></i> Home</a></li>\\r\\n      <li><a [routerLink]=\\\"['/users']\\\"> Users</a></li>\\r\\n   </ol>\\r\\n</section>\\r\\n\\r\\n<section class=\\\"content\\\">\\r\\n   <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-xs-12\\\">\\r\\n         <div class=\\\"box\\\">\\r\\n            <div class=\\\"box-header with-border ui-sortable-handle\\\">\\r\\n               <h3 class=\\\"box-title\\\">User Details</h3>\\r\\n               <div class=\\\"box-tools pull-right\\\" data-original-title=\\\"Status\\\" data-toggle=\\\"tooltip\\\" title=\\\"\\\">\\r\\n                  <button class=\\\"btn btn-social-icon btn-xs btn-danger\\\" (click)=\\\"goBack()\\\">\\r\\n                     <i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                  </button>\\r\\n                  <button class=\\\"btn btn-social-icon btn-xs btn-success\\\" type=\\\"submit\\\" style=\\\"margin-left: 5px;\\\" (click)=\\\"saveUser()\\\" [disabled]=\\\"userForm.invalid\\\">\\r\\n                     <i class=\\\"far fa-save\\\"></i>\\r\\n                  </button>\\r\\n               </div>\\r\\n            </div>\\r\\n            <form name=\\\"userForm\\\" action=\\\"javascript:{}\\\" #userForm=\\\"ngForm\\\" novalidate autocomplete=\\\"off\\\">\\r\\n               <div class=\\\"box-body\\\">\\r\\n                  <div class=\\\"panel panel-default\\\">\\r\\n                     <div class=\\\"panel-heading\\\">\\r\\n                        <h4 class=\\\"panel-title\\\">\\r\\n                           Personal Information\\r\\n                        </h4>\\r\\n                     </div>\\r\\n                     <div class=\\\"panel-collapse collapse in\\\">\\r\\n                        <div class=\\\"panel-body\\\">\\r\\n                           <div class=\\\"form-group\\\">\\r\\n                              <label for=\\\"loginId\\\" class=\\\"control-label\\\">Login Id <span style=\\\"color:red;\\\">*</span></label>\\r\\n                              <input type=\\\"text\\\" class=\\\"form-control input-sm\\\" name=\\\"loginId\\\" required [(ngModel)]=\\\"user.loginId\\\" #loginId=\\\"ngModel\\\" pattern=\\\"[A-Za-z0-9]*\\\" minlength=\\\"5\\\" maxlength=\\\"20\\\">\\r\\n                              <div *ngIf=\\\"loginId.errors && (loginId.dirty || loginId.touched)\\\" style=\\\"font-size: smaller;\\\">\\r\\n                                 <div [hidden]=\\\"!loginId.errors.required\\\">\\r\\n                                    <span style=\\\"color:red ;\\\"> Login Id is required</span>\\r\\n                                 </div>\\r\\n                                 <div [hidden]=\\\"!loginId.errors.minlength\\\">\\r\\n                                    <span style=\\\"color:red;\\\"> Login Id should be in 5 to 20 characters</span>\\r\\n                                 </div>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                           <div class=\\\"form-group\\\">\\r\\n                              <label for=\\\"password\\\" class=\\\"control-label\\\">Password <span style=\\\"color:red;\\\">*</span></label>\\r\\n                              <div class=\\\"pull-right\\\" style=\\\"font-size:smaller\\\">\\r\\n                                 <!--<p-checkbox name=\\\"changePassword\\\" value=\\\"changePassword\\\" label=\\\"Change Password\\\" (onChange)=\\\"setNewPassword($event)\\\" *ngIf=\\\"user.id\\\"></p-checkbox>-->\\r\\n                                 <mat-checkbox name=\\\"changePassword\\\" [checked]=\\\"changePassword\\\" (change)=\\\"setNewPassword($event)\\\" *ngIf=\\\"user.id\\\">Change Password</mat-checkbox>\\r\\n                              </div>\\r\\n                              <input type=\\\"password\\\" class=\\\"form-control input-sm\\\" name=\\\"password\\\" required #password=\\\"ngModel\\\" [(ngModel)]=\\\"user.password\\\" pattern=\\\"(?=^.{8,30}$)(?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%^&*()_+}{:;?/>.<,])(?!.*\\\\s).*$\\\" [disabled]=\\\"changePassword? null: 'disabled'\\\">\\r\\n                              <div *ngIf=\\\"password.errors && (password.dirty || password.touched)\\\" style=\\\"font-size: smaller;\\\">\\r\\n                                 <div [hidden]=\\\"!password.errors.required\\\">\\r\\n                                    <span style=\\\"color:red ;\\\"> Password is required</span>\\r\\n                                 </div>\\r\\n                                 <div [hidden]=\\\"!password.errors.minlength\\\">\\r\\n                                    <span style=\\\"color:red;\\\"> Password should be min 8 characters long</span>\\r\\n                                 </div>\\r\\n                                 <div [hidden]=\\\"!password.errors.pattern\\\">\\r\\n                                    <span style=\\\"color: red;\\\"> Password needs to have minimum of 8 characters, 1 capital letter, 1 number and 1 symbol. </span>\\r\\n                                 </div>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                           <div class=\\\"form-group\\\">\\r\\n                              <label for=\\\"firstName\\\" class=\\\"control-label\\\">First Name <span style=\\\"color:red;\\\">*</span></label>\\r\\n                              <input type=\\\"text\\\" class=\\\"form-control input-sm\\\" name=\\\"firstName\\\" required #firstName=\\\"ngModel\\\" [(ngModel)]=\\\"user.firstName\\\" pattern=\\\"[a-zA-Z][a-zA-Z-' ]+\\\" minlength=\\\"3\\\" maxlength=\\\"50\\\">\\r\\n                              <div *ngIf=\\\"firstName.errors && (firstName.dirty || firstName.touched)\\\" style=\\\"font-size: smaller;\\\">\\r\\n                                 <div [hidden]=\\\"!firstName.errors.required\\\">\\r\\n                                    <span style=\\\"color: red;\\\">First Name is required</span>\\r\\n                                 </div>\\r\\n                                 <div [hidden]=\\\"!firstName.errors.minlength\\\">\\r\\n                                    <span style=\\\"color:red;\\\"> First Name should be in 3 to 50 characters</span>\\r\\n                                 </div>\\r\\n                                 <div [hidden]=\\\"!firstName.errors.pattern\\\">\\r\\n                                    <span style=\\\"color: red;\\\"> Invalid characters! </span>\\r\\n                                 </div>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                           <div class=\\\"form-group\\\">\\r\\n                              <label for=\\\"lastName\\\" class=\\\"control-label\\\">Last Name <span style=\\\"color:red;\\\">*</span></label>\\r\\n                              <input type=\\\"text\\\" class=\\\"form-control input-sm\\\" name=\\\"lastName\\\" required #lastName=\\\"ngModel\\\" [(ngModel)]=\\\"user.lastName\\\" pattern=\\\"[a-zA-Z][a-zA-Z-' ]+\\\" minlength=\\\"3\\\" maxlength=\\\"50\\\">\\r\\n                              <div *ngIf=\\\"lastName.errors && (lastName.dirty || lastName.touched)\\\" style=\\\"font-size: smaller;\\\">\\r\\n                                 <div [hidden]=\\\"!lastName.errors.required\\\">\\r\\n                                    <span style=\\\"color: red;\\\">Last Name is required</span>\\r\\n                                 </div>\\r\\n                                 <div [hidden]=\\\"!lastName.errors.pattern\\\">\\r\\n                                    <span style=\\\"color: red;\\\"> Invalid characters! </span>\\r\\n                                 </div>\\r\\n                                 <div [hidden]=\\\"!lastName.errors.minlength\\\">\\r\\n                                    <span style=\\\"color:red;\\\"> Last Name should be in 3 to 50 characters</span>\\r\\n                                 </div>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                           <div class=\\\"form-group\\\">\\r\\n                              <label for=\\\"emailId\\\" class=\\\"control-label\\\">Email Id <span style=\\\"color:red;\\\">*</span></label>\\r\\n                              <input type=\\\"email\\\" class=\\\"form-control input-sm\\\" name=\\\"emailId\\\" #emailId=\\\"ngModel\\\" required [(ngModel)]=\\\"user.emailId\\\" maxlength=\\\"50\\\" minlength=\\\"8\\\" pattern=\\\"^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\\\.[a-zA-Z]{2,4}$\\\">\\r\\n                              <div *ngIf=\\\"emailId.errors && (emailId.dirty || emailId.touched)\\\" style=\\\"font-size: smaller;\\\">\\r\\n                                 <div [hidden]=\\\"!emailId.errors.required\\\">\\r\\n                                    <span style=\\\"color: red;\\\">Email Id is required</span>\\r\\n                                 </div>\\r\\n                                 <div [hidden]=\\\"!emailId.errors.minlength\\\">\\r\\n                                    <span style=\\\"color:red;\\\"> Email Id should be in 8 to 50 characters</span>\\r\\n                                 </div>\\r\\n                                 <div [hidden]=\\\"!emailId.errors.pattern\\\">\\r\\n                                    <span style=\\\"color: red;\\\"> Invalid Email Id</span>\\r\\n                                 </div>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                           <div class=\\\"form-group\\\">\\r\\n                              <label for=\\\"phoneNumber\\\" class=\\\"control-label\\\">Phone <span style=\\\"color:red;\\\"></span></label>\\r\\n                              <input type=\\\"text\\\" class=\\\"form-control input-sm\\\" name=\\\"phoneNumber\\\" minlength=\\\"8\\\" maxlength=\\\"20\\\" #phoneNumber=\\\"ngModel\\\" pattern=\\\"[0-9+-.]+\\\" [(ngModel)]=\\\"user.phoneNumber\\\">\\r\\n                              <div *ngIf=\\\"phoneNumber.errors && (phoneNumber.dirty || phoneNumber.touched)\\\" style=\\\"font-size: smaller;\\\">\\r\\n                                 <div [hidden]=\\\"!phoneNumber.errors.minlength\\\">\\r\\n                                    <span style=\\\"color:red; \\\"> Phone Number  should be in 8 to 20 characters</span>\\r\\n                                 </div>\\r\\n                                 <div [hidden]=\\\"!phoneNumber.errors.pattern\\\">\\r\\n                                    <span style=\\\"color:red;\\\"> Invalid characters!</span>\\r\\n                                 </div>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"panel-group\\\" id=\\\"accordion\\\">\\r\\n\\r\\n                     <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#accessPermissions\\\">Access Permissions</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"accessPermissions\\\" class=\\\"panel-collapse collapse in\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"roles\\\" class=\\\"control-label\\\">Role <span style=\\\"color:red;\\\">*</span></label>\\r\\n                                    <mat-select name=\\\"roles\\\" [(ngModel)]=\\\"user.roleId\\\" #role=\\\"ngModel\\\">\\r\\n                                       <mat-option *ngFor=\\\"let role of roles\\\" [value]=\\\"role.id\\\">\\r\\n                                          {{role.name}}\\r\\n                                       </mat-option>\\r\\n                                    </mat-select>\\r\\n                                 </div>\\r\\n                                 <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"country\\\" class=\\\"control-label\\\">Groups</label>\\r\\n                                    <table class=\\\"table table-bordered table-striped\\\">\\r\\n                                       <thead>\\r\\n                                          <tr>\\r\\n                                             <th style=\\\"width:40px;text-align: center;\\\">\\r\\n                                                <mat-checkbox (change)=\\\"$event ? masterToggle() : null\\\"\\r\\n                                                              [checked]=\\\"user.groups?.length > 0 && isAllSelected()\\\"\\r\\n                                                              [indeterminate]=\\\"user.groups?.length > 0 && !isAllSelected()\\\">\\r\\n                                                </mat-checkbox>\\r\\n                                             </th>\\r\\n                                             <th>Groups</th>\\r\\n                                          </tr>\\r\\n                                       </thead>\\r\\n                                       <tbody>\\r\\n                                          <ng-container *ngIf='groups && groups.length > 0'>\\r\\n                                             <tr *ngFor='let group of groups'>\\r\\n                                                <td style=\\\"text-align: center;\\\">\\r\\n                                                   <mat-checkbox (click)=\\\"$event.stopPropagation()\\\"\\r\\n                                                                 (change)=\\\"$event ? toggleSelection(group) : null\\\"\\r\\n                                                                 [checked]=\\\"user.groups?.includes(group.id)\\\">\\r\\n                                                   </mat-checkbox>\\r\\n                                                </td>\\r\\n                                                <td>{{group.name}}</td>\\r\\n                                             </tr>\\r\\n                                          </ng-container>\\r\\n                                          <tr *ngIf='groups == null || groups.length == 0'>\\r\\n                                             <td colspan=\\\"2\\\" style=\\\"text-align: center;\\\">\\r\\n                                                Groups not defined\\r\\n                                             </td>\\r\\n                                          </tr>\\r\\n                                       </tbody>\\r\\n                                    </table>\\r\\n                                 </div>\\r\\n                                 <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"country\\\" class=\\\"control-label\\\">Activate User <span style=\\\"color:red;\\\">*</span></label>\\r\\n\\r\\n                                    <mat-radio-group name=\\\"isActive\\\" [(ngModel)]=\\\"user.isActive\\\">\\r\\n                                       <div class=\\\"form-group\\\" style=\\\"padding-bottom:20px;\\\">\\r\\n                                          <mat-radio-button [value]=\\\"true\\\" style=\\\"padding-right:20px\\\">Yes</mat-radio-button>\\r\\n                                          <mat-radio-button [value]=\\\"false\\\">No</mat-radio-button>\\r\\n                                       </div>\\r\\n                                    </mat-radio-group>\\r\\n\\r\\n                                 </div>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n\\r\\n                     <!--<div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                           <h4 class=\\\"panel-title\\\">\\r\\n                              <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#remarks\\\">Remarks</a>\\r\\n                           </h4>\\r\\n                        </div>\\r\\n                        <div id=\\\"remarks\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                           <div class=\\\"panel-body\\\">\\r\\n                              <div class=\\\"col-sm-12\\\">\\r\\n                                 <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"remarks\\\" class=\\\"control-label\\\">Comments</label>\\r\\n                                    <textarea class=\\\"form-control\\\" rows=\\\"3\\\" name=\\\"remarks\\\" [(ngModel)]=\\\"user.remarks\\\"></textarea>\\r\\n                                 </div>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>-->\\r\\n\\r\\n                  </div>\\r\\n\\r\\n               </div>\\r\\n               <div class=\\\"box-footer\\\">\\r\\n                  <div class=\\\"pull-right\\\">\\r\\n                     <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"goBack()\\\">Close</button>\\r\\n                     <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" style=\\\"margin-left:10px\\\" (click)=\\\"saveUser()\\\" [disabled]=\\\"userForm.invalid\\\">Save</button>\\r\\n                  </div>\\r\\n               </div>\\r\\n            </form>\\r\\n         </div>\\r\\n      </div>\\r\\n   </div>\\r\\n</section>\\r\\n\"","export default \"<section class=\\\"content-header\\\">\\r\\n   <h1>Manage Users</h1>\\r\\n   <ol class=\\\"breadcrumb\\\">\\r\\n      <li><a [routerLink]=\\\"['/home']\\\"><i class=\\\"fa fa-home\\\"></i> Home</a></li>\\r\\n   </ol>\\r\\n</section>\\r\\n\\r\\n<section class=\\\"content\\\">\\r\\n   <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-xs-12\\\">\\r\\n         <div class=\\\"box\\\">\\r\\n            <div class=\\\"box-header with-border\\\">\\r\\n               <h3 class=\\\"box-title\\\">User List</h3>\\r\\n               <div class=\\\"box-tools pull-right\\\" data-toggle=\\\"tooltip\\\" title=\\\"\\\" data-original-title=\\\"Status\\\">\\r\\n                  <div class=\\\"btn-group\\\" data-toggle=\\\"btn-toggle\\\">\\r\\n                     <button id=\\\"AddNewUser\\\" [routerLink]=\\\"['details']\\\" class=\\\"btn btn-block btn-xs btn-primary\\\"> New User</button>\\r\\n                  </div>\\r\\n               </div>\\r\\n            </div>\\r\\n            <div class=\\\"box-body\\\">\\r\\n               <dt-search [searchFields]=\\\"searchFields\\\" (onSearch)=\\\"search($event)\\\"></dt-search>\\r\\n               <dt-pagination [totalPages]=\\\"totalPages\\\" (onPageSizeChange)=\\\"onPageSizeChange($event)\\\" (onPageChange)=\\\"onPageChange($event)\\\"></dt-pagination>\\r\\n\\r\\n               <table id=\\\"users\\\" class=\\\"table table-bordered table-striped\\\">\\r\\n                  <thead>\\r\\n                     <tr (click)=\\\"onColumnClick($event.target)\\\">\\r\\n                        <th data-column=\\\"LoginId\\\" class=\\\"table-sorter\\\">Login Id</th>\\r\\n                        <th data-column=\\\"FirstName\\\" class=\\\"table-sorter\\\">Name</th>\\r\\n                        <th data-column=\\\"EmailId\\\" class=\\\"table-sorter\\\" style=\\\"width:250px\\\">Email Id</th>\\r\\n                        <th data-column=\\\"Role\\\" class=\\\"table-sorter\\\">Role</th>\\r\\n                        <th data-column=\\\"Status\\\" class=\\\"table-sorter\\\" style=\\\"width:80px\\\">Status</th>\\r\\n                        <th style=\\\"width:72px\\\"></th>\\r\\n                     </tr>\\r\\n                  </thead>\\r\\n                  <tbody>\\r\\n                     <ng-container *ngIf='users && users.length > 0'>\\r\\n                        <tr *ngFor='let user of users'>\\r\\n                           <td>{{user.loginId}}</td>\\r\\n                           <td>{{user.firstName}} {{user.lastName}}</td>\\r\\n                           <td>{{user.emailId}}</td>\\r\\n                           <td>{{getRoleDescription(user.roleId)}}</td>\\r\\n                           <td>{{user.isActive == true ? 'Active' : 'Block'}}</td>\\r\\n                           <td>\\r\\n                              <a>\\r\\n                                 <i class=\\\"fa fa-edit\\\" [routerLink]=\\\"['details', user.id]\\\" title=\\\"Edit\\\" style=\\\"font-size: 14px; cursor:pointer\\\"></i>\\r\\n                              </a>&nbsp;\\r\\n                              <a>\\r\\n                                 <i class=\\\"fa fa-trash\\\" (click)=\\\"delete(user)\\\" title=\\\"Remove\\\" style=\\\"font-size: 14px; cursor:pointer; color:red\\\"></i>\\r\\n                              </a>\\r\\n                           </td>\\r\\n                        </tr>\\r\\n                     </ng-container>\\r\\n                     <tr *ngIf='users == null || users.length == 0'>\\r\\n                        <td colspan=\\\"6\\\" class=\\\"check-mail\\\" style=\\\"text-align: center;\\\">\\r\\n                           {{statusMessage}}\\r\\n                        </td>\\r\\n                     </tr>\\r\\n                  </tbody>\\r\\n               </table>\\r\\n            </div>\\r\\n         </div>\\r\\n      </div>\\r\\n   </div>\\r\\n</section>\\r\\n\"","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatCheckboxModule, MatRadioModule, MatSelectModule, MatSliderModule } from '@angular/material';\r\nimport { SharedModule } from '../shared.module';\r\nimport { AccessoryRouting } from './accessory.routes';\r\nimport { AccessoryService } from './services/accessory.service';\r\nimport { AccessoryDetails } from './views/accessory-details';\r\nimport { AccessoryList } from './views/accessory-list';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        MatRadioModule, MatSelectModule, MatCheckboxModule, MatSliderModule,\r\n        AccessoryRouting,\r\n        SharedModule\r\n    ],\r\n    declarations: [\r\n        AccessoryList,\r\n        AccessoryDetails,\r\n    ],\r\n    providers: [\r\n        AccessoryService,\r\n\r\n    ]\r\n})\r\nexport class AccessoryModule { }\r\n","import { ModuleWithProviders } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AccessoryDetails } from './views/accessory-details';\r\nimport { AccessoryList } from './views/accessory-list';\r\n\r\nexport const accessoryRoutes: Routes = [\r\n    {\r\n        path: 'accessories',\r\n        children: [\r\n            { path: '', component: AccessoryList },\r\n            { path: 'details', component: AccessoryDetails },\r\n            { path: 'details/:id', component: AccessoryDetails }\r\n        ]\r\n    },\r\n];\r\n\r\nexport const AccessoryRouting: ModuleWithProviders = RouterModule.forChild(accessoryRoutes);\r\n","import { DbBaseEntity } from '../../common/models/dbBaseEntity';\r\nimport { CustomField } from '../../common/models/customField';\r\nimport { FileAttachment } from '../../common/models/FileAttachment';\r\nimport { Supplier } from '../../common/models/supplier';\r\n\r\nexport class Accessory extends DbBaseEntity {\r\n    name: string;\r\n    code?: string;\r\n    icon?: string;\r\n    parentId?: string;\r\n    parentEntityType?: string;\r\n    type?: string;\r\n    brand?: string;\r\n    model?: string;\r\n    zoomLevel: number;\r\n    customFields?: CustomField[] = new Array<CustomField>();\r\n    photos?: FileAttachment;\r\n    attachments?: FileAttachment;\r\n    suppliers?: Supplier[] = new Array<Supplier>();\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient, HttpParams } from \"@angular/common/http\";\r\n\r\nimport { Accessory } from '../models/accessory';\r\nimport { PaginationRequest, SortOrder } from '../../common/models/paginationRequest';\r\nimport { PaginationResponse } from '../../common/models/paginationResponse';\r\nimport { ServiceResponse } from '../../common/models/serviceResponse';\r\n\r\n@Injectable()\r\nexport class AccessoryService {\r\n\r\n    getAccessoriesApi = 'Accessories/GetAccessories/';\r\n    getAccessoryApi = 'Accessories/GetAccessory/';\r\n    checkNameExistsApi = 'Accessories/CheckNameExists/';\r\n    saveAccessoryApi = 'Accessories/SaveAccessory/';\r\n    deleteAccessoryApi = 'Accessories/DeleteAccessory/';\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    getAccessories(paginationRequest?: PaginationRequest): Observable<PaginationResponse> {\r\n\r\n        if (paginationRequest == null)\r\n            paginationRequest = {\r\n                page: null,\r\n                pageSize: null,\r\n                filter: null,\r\n                order: {\r\n                    orderByProperty: \"UpdatedDate\",\r\n                    sortOrder: SortOrder.descending\r\n                }\r\n            };\r\n\r\n        return this.http.post<PaginationResponse>(this.getAccessoriesApi, paginationRequest);\r\n    }\r\n\r\n    getAccessory(accessoryId): Observable<ServiceResponse> {\r\n\r\n        const params = new HttpParams()\r\n            .set('accessoryId', accessoryId);\r\n\r\n        return this.http.get<ServiceResponse>(this.getAccessoryApi, { params });\r\n    }\r\n\r\n    async checkNameExists(name: string): Promise<ServiceResponse> {\r\n\r\n        const params = new HttpParams()\r\n            .set('name', name);\r\n\r\n        return await this.http.get<ServiceResponse>(this.checkNameExistsApi, { params }).toPromise();\r\n    }\r\n\r\n    saveAccessory(accessory: Accessory): Observable<ServiceResponse> {\r\n\r\n        return this.http.post<ServiceResponse>(this.saveAccessoryApi, accessory);\r\n    }\r\n\r\n    deleteAccessory(accessoryId: string): Observable<ServiceResponse> {\r\n\r\n        const params = new HttpParams()\r\n            .set('accessoryId', accessoryId);\r\n\r\n        return this.http.delete<ServiceResponse>(this.deleteAccessoryApi, { params });\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport { forkJoin } from 'rxjs';\r\n\r\nimport { Helper } from '../../common/helper';\r\nimport { AccessoryService } from '../services/accessory.service';\r\nimport { Accessory } from '../models/accessory';\r\n\r\ndeclare var $: any;\r\n\r\n@Component({\r\n    templateUrl: './accessory-details.html',\r\n    providers: [AccessoryService],\r\n})\r\nexport class AccessoryDetails implements OnInit {\r\n\r\n    accessoryId: string;\r\n    accessory: Accessory = new Accessory();\r\n    title: string = \"New Accessory\";\r\n\r\n    constructor(\r\n        private location: Location,\r\n        private route: ActivatedRoute,\r\n        private accessoryService: AccessoryService,\r\n        private helper: Helper) { }\r\n\r\n    ngOnInit() {\r\n        this.route.params.subscribe(\r\n            params => {\r\n                this.accessoryId = params['id'];\r\n\r\n                if (this.accessoryId != null)\r\n                    this.title = \"Edit Accessory\";\r\n                else {\r\n                    this.title = \"New Accessory\";\r\n                }\r\n\r\n                this.getFormData(this.accessoryId);\r\n\r\n            });\r\n    }\r\n\r\n    getFormData(accessoryId: string) {\r\n\r\n        if (this.accessoryId != null) {\r\n\r\n            $(\"#ajax-loading\").show();\r\n\r\n            this.accessoryService.getAccessory(this.accessoryId).subscribe(\r\n                resp => {\r\n                    this.accessory = new Accessory();\r\n\r\n                    if (resp.status.toLowerCase() == \"error\") {\r\n                        this.helper.showAlertMessage(resp.message, \"error\");\r\n                    }\r\n                    else {\r\n                        if (resp.data != null) {\r\n                            this.accessory = resp.data;\r\n                        }\r\n                    }\r\n\r\n                    $(\"#ajax-loading\").hide();\r\n                },\r\n                (err) => {\r\n                    $(\"#ajax-loading\").hide();\r\n                    this.accessory = new Accessory();\r\n                    this.helper.showAlertMessage(\"Unable to fetch accessory details\", \"error\");\r\n                });\r\n        }\r\n        else\r\n            this.accessory = new Accessory();\r\n    }\r\n\r\n    addNewSupplier() {\r\n\r\n        if (this.accessory.suppliers == null)\r\n            this.accessory.suppliers = [];\r\n\r\n        this.accessory.suppliers.push({\r\n            name: \"\",\r\n            sku: \"\",\r\n            price: null,\r\n            validFrom: \"\",\r\n            validTo: \"\"\r\n        });\r\n    }\r\n\r\n    deleteSupplier(index: number) {\r\n        this.accessory.suppliers.splice(index, 1);\r\n    }\r\n\r\n    async save() {\r\n\r\n        var errorMessages = await this.validateEntity(this.accessory);\r\n\r\n        if (errorMessages.length == 0) {\r\n\r\n            this.accessoryService.saveAccessory(this.accessory).subscribe(\r\n                resp => {\r\n\r\n                    if (resp.status.toLowerCase() == \"error\") {\r\n                        this.helper.showAlertMessage(resp.message, \"error\");\r\n                    }\r\n                    else {\r\n                        if (resp.data != null) {\r\n                            this.helper.showAlertMessage(\"Accessory information saved\", \"success\");\r\n                            this.goBack();\r\n                        }\r\n                        else\r\n                            this.helper.showAlertMessage(\"Unable to save accessory information.\", \"error\");\r\n                    }\r\n                },\r\n                (err) => {\r\n                    //let msg = `Unable to save user information : ${err.message}`;\r\n                    this.helper.showAlertMessage(\"Unable to save accessory information.\", \"error\");\r\n                });\r\n        }\r\n        else {\r\n            this.helper.showAlertMessage(this.helper.getErrorMessagesText(errorMessages), \"error\");\r\n        }\r\n    }\r\n\r\n    async validateEntity(accessory: Accessory): Promise<string[]> {\r\n        var errorMessages = [];\r\n\r\n        if (accessory.name == null || accessory.name.trim() == '')\r\n            errorMessages.push(\"Name cannot be empty.\");\r\n        else {\r\n            let resp = await this.accessoryService.checkNameExists(accessory.name);\r\n\r\n            if (resp)\r\n                errorMessages.push(\"Name already exists.\");\r\n        }\r\n    //    if (user.loginId == null || user.loginId.trim() == \"\")\r\n    //        errorMessages.push(\"Login Id cannot be empty string\");\r\n\r\n    //    //if (user.password == null || user.password.trim() == \"\")\r\n    //    //   errorMessages.push(\"Password cannot be empty string\");\r\n\r\n        return errorMessages;\r\n    }\r\n\r\n    goBack(): void {\r\n        this.location.back();\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { Accessory } from '../models/accessory';\r\nimport { AccessoryService } from '../services/accessory.service';\r\n\r\nimport { Helper } from '../../common/helper';\r\nimport { SearchField } from '../../common/models/searchField';\r\nimport { SearchFilter, SortOrder, ConditionOperator, Filter } from '../../common/models/paginationRequest';\r\n\r\ndeclare var $: any;\r\ndeclare var jBox: any;\r\n\r\n@Component({\r\n    templateUrl: './accessory-list.html',\r\n    providers: [AccessoryService]\r\n})\r\nexport class AccessoryList implements OnInit {\r\n\r\n    accessories = new Array<Accessory>();\r\n    statusMessage: string = \"\";\r\n    pageSize = 10;\r\n    currentPage = 1;\r\n    totalPages = 1;\r\n    searchFields: SearchField[];\r\n    searchFilter: SearchFilter;\r\n    //selectedField: SearchField;\r\n    //filterPills: Filter[];\r\n    //searchText: string;\r\n    sortColumn: string;\r\n    sortOrder: SortOrder = SortOrder.descending;\r\n    previousElement: HTMLElement;\r\n    //conditionOption: boolean = true;\r\n\r\n    constructor(\r\n        private accessoryService: AccessoryService,\r\n        private helper: Helper) {\r\n\r\n        this.searchFields = new Array<SearchField>();\r\n        this.searchFields.push({ field: 'Name', label: 'Name', dataType: \"text\", value: \"\" });\r\n        this.searchFields.push({ field: 'parentEntityType', label: 'Parent Type', dataType: \"text\", value: \"\" });\r\n        this.searchFields.push({ field: 'UpdatedBy', label: 'Updated By', dataType: \"text\", value: \"\" });\r\n        this.searchFields.push({ field: 'UpdatedDate', label: 'Updated On', dataType: \"date\", value: \"\" });\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.statusMessage = \"Loading Accessories...\";\r\n        this.pageSize = 10;\r\n        this.currentPage = 1;\r\n        this.sortColumn = null;\r\n        this.sortOrder = SortOrder.noSort;\r\n        this.getFormData();\r\n    }\r\n\r\n    getFormData() {\r\n\r\n        $(\"#ajax-loading\").show();\r\n\r\n        this.totalPages = 1;\r\n\r\n        let paginationRequest = {\r\n            page: this.currentPage,\r\n            pageSize: this.pageSize,\r\n            filter: this.searchFilter,\r\n            order: {\r\n                orderByProperty: this.sortColumn,\r\n                sortOrder: this.sortOrder\r\n            }\r\n        };\r\n\r\n        this.accessoryService.getAccessories(paginationRequest).subscribe(\r\n            resp => {\r\n                this.accessories = null;\r\n\r\n                if (resp.status.toLowerCase() == \"error\") {\r\n                    this.statusMessage = resp.message;\r\n                    this.helper.showAlertMessage(this.statusMessage, \"error\");\r\n                }\r\n                else {\r\n                    if (resp.data != null && resp.data.length > 0) {\r\n                        this.accessories = resp.data;\r\n                        this.totalPages = Math.ceil(resp.recordCount / this.pageSize);\r\n                    }\r\n                    else {\r\n                        this.statusMessage = \"There are no registered accessories.\";\r\n                    }\r\n                }\r\n\r\n                $(\"#ajax-loading\").hide();\r\n            },\r\n            (err) => {\r\n                $(\"#ajax-loading\").hide();\r\n                this.accessories = null;\r\n                let msg = `Unable to fetch accessories : ${err.message}`;\r\n                this.helper.showAlertMessage(msg, \"error\");\r\n                this.statusMessage = \"Error fetching accessories.\";\r\n            });\r\n    }\r\n\r\n    search(searchFilter) {\r\n\r\n        this.searchFilter = searchFilter;\r\n        this.getFormData();\r\n    }\r\n\r\n    onPageSizeChange(pageSize) {\r\n        this.pageSize = pageSize;\r\n        this.getFormData();\r\n    }\r\n\r\n    onPageChange(currentPage) {\r\n        this.currentPage = currentPage;\r\n        this.getFormData();\r\n    }\r\n\r\n    onColumnClick(e: HTMLElement) {\r\n\r\n        if (this.previousElement && e.getAttribute('data-column') != this.previousElement.getAttribute('data-column')) {\r\n            this.previousElement.classList.remove('table-sorter-desc');\r\n            this.previousElement.classList.remove('table-sorter-asc');\r\n        }\r\n\r\n        this.previousElement = e;\r\n\r\n        this.sortColumn = e.getAttribute('data-column');\r\n\r\n        if (e.classList.contains(\"table-sorter-asc\")) {\r\n            e.classList.remove('table-sorter-asc');\r\n            e.classList.add('table-sorter-desc');\r\n            this.sortOrder = SortOrder.descending;\r\n        }\r\n        else if (e.classList.contains(\"table-sorter-desc\")) {\r\n            e.classList.remove('table-sorter-desc');\r\n            this.sortColumn = null;\r\n            this.sortOrder = SortOrder.noSort;\r\n        }\r\n        else {\r\n            e.classList.add('table-sorter-asc');\r\n            this.sortOrder = SortOrder.ascending;\r\n        }\r\n\r\n        this.getFormData();\r\n    }\r\n\r\n    delete(accessory: Accessory) {\r\n        new jBox(\"Confirm\", {\r\n            minWidth: 500,\r\n            minHeight: 70,\r\n            title: \"<b>Delete Accessory</b>\",\r\n            overlay: false,\r\n            content: \"Do you want to delete accessory - \" + accessory.name,\r\n            draggable: \"title\",\r\n            confirmButton: \"Yes\",\r\n            cancelButton: \"No\",\r\n            confirm: () => {\r\n                this.accessoryService.deleteAccessory(accessory.id).subscribe(\r\n                    resp => {\r\n                        if (resp.status.toLowerCase() == \"error\") {\r\n                            this.helper.showAlertMessage(resp.message, \"error\");\r\n                        }\r\n                        else {\r\n                            if (resp.data != null) {\r\n                                this.helper.showAlertMessage(\"Accessory deleted.\", \"success\");\r\n                                this.getFormData();\r\n                            }\r\n                            else {\r\n                                this.helper.showAlertMessage(\"Error deleting accessory\", \"error\");\r\n                            }\r\n                        }\r\n                    },\r\n                    (err) => {\r\n                        this.helper.showAlertMessage(\"Error deleting accessory\", \"error\");\r\n                    });\r\n            }\r\n        }).open();\r\n    }\r\n\r\n    //getPermission(featureCode: string, accessType: string): boolean {\r\n    //   return this.accountService.getPermission(featureCode, accessType);\r\n    //}\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatSelectModule } from '@angular/material';\r\nimport { SharedModule } from '../shared.module';\r\nimport { ActivityLogRouting } from './activityLog.routes';\r\nimport { ActivityLogService } from './services/activityLog.service';\r\nimport { ActivityLogDetails } from './views/activityLog-details';\r\nimport { ActivityLogList } from './views/activityLog-list';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        MatSelectModule,\r\n        ActivityLogRouting,\r\n        SharedModule\r\n    ],\r\n    declarations: [\r\n        ActivityLogList,\r\n        ActivityLogDetails\r\n    ],\r\n    providers: [\r\n        ActivityLogService,\r\n    ]\r\n})\r\nexport class ActivityLogModule { }\r\n","import { ModuleWithProviders } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ActivityLogDetails } from './views/activityLog-details';\r\nimport { ActivityLogList } from './views/activityLog-list';\r\n\r\nexport const activityLogRoutes: Routes = [\r\n   {\r\n      path: 'activityLogs',\r\n      children: [\r\n         { path: '', component: ActivityLogList },\r\n         { path: 'details/:id', component: ActivityLogDetails },\r\n      ]\r\n   },\r\n];\r\n\r\nexport const ActivityLogRouting: ModuleWithProviders = RouterModule.forChild(activityLogRoutes);\r\n","import { DbBaseEntity } from '../../common/models/dbBaseEntity';\r\n\r\nexport class ActivityLog extends DbBaseEntity {\r\n    loginId: string;\r\n    sourceIP: string;\r\n    application: string;\r\n    module: string;\r\n    action: string;\r\n    activityOn: string;\r\n    otherInfo: string;\r\n    webServer: string;\r\n    browser: string;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient, HttpParams } from \"@angular/common/http\";\r\n\r\nimport { ServiceResponse } from '../../common/models/serviceResponse';\r\nimport { PaginationRequest, SortOrder } from '../../common/models/paginationRequest';\r\nimport { PaginationResponse } from '../../common/models/paginationResponse';\r\n\r\n@Injectable()\r\nexport class ActivityLogService {\r\n\r\n   getActivityLogsApi = 'ActivityLogs/GetActivityLogs/';\r\n   getActivityLogApi = 'ActivityLogs/GetActivityLog/';\r\n\r\n   constructor(private http: HttpClient) { }\r\n\r\n   getActivityLogs(paginationRequest?: PaginationRequest): Observable<PaginationResponse> {\r\n\r\n      if (paginationRequest == null)\r\n         paginationRequest = {\r\n            page: null,\r\n            pageSize: null,\r\n            filter: null,\r\n            order: {\r\n               orderByProperty: \"ActivityOn\",\r\n               sortOrder: SortOrder.descending\r\n            }\r\n         };\r\n\r\n      return this.http.post<PaginationResponse>(this.getActivityLogsApi, paginationRequest);\r\n   }\r\n\r\n   getActivityLog(activityLogId): Observable<ServiceResponse> {\r\n\r\n      const params = new HttpParams()\r\n         .set('activityLogId', activityLogId);\r\n\r\n      return this.http.get<ServiceResponse>(this.getActivityLogApi, { params });\r\n   }\r\n\r\n   //LogActivity(activityLog: ActivityLog): Observable<ServiceResponse> {\r\n   //   return this.http.post<ServiceResponse>(this.LogActivityApi, activityLog);\r\n   //}\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\n\r\nimport { ActivityLogService } from '../services/activityLog.service';\r\nimport { ActivityLog } from '../models/activityLog';\r\nimport { Helper } from '../../common/helper';\r\n\r\ndeclare var $: any;\r\n\r\n@Component({\r\n   templateUrl: './activityLog-details.html',\r\n   providers: [ActivityLogService],\r\n})\r\nexport class ActivityLogDetails implements OnInit {\r\n\r\n   activityLogId: string = \"\";\r\n   activityLog: ActivityLog = new ActivityLog();\r\n   module_function: string = \"\";\r\n   otherInfo: string = \"\";\r\n\r\n   constructor(\r\n      private location: Location,\r\n      private route: ActivatedRoute,\r\n      private activityLogService: ActivityLogService,\r\n      private helper: Helper) { }\r\n\r\n\r\n   ngOnInit() {\r\n      this.route.params.subscribe(\r\n         params => {\r\n            this.activityLogId = params['id'];\r\n\r\n            this.getFormData(this.activityLogId);\r\n         });\r\n   }\r\n\r\n   getFormData(activityLogId: string) {\r\n\r\n      $(\"#ajax-loading\").show();\r\n\r\n      this.activityLogService.getActivityLog(activityLogId).subscribe(\r\n         resp => {\r\n            if (resp.status.toLowerCase() == \"error\") {\r\n               this.helper.showAlertMessage(resp.message, \"error\");\r\n            }\r\n            else {\r\n               if (resp.data != null) {\r\n                  this.activityLog = resp.data;\r\n                  this.module_function = this.activityLog.module + \" / \" + this.activityLog.action;\r\n                  this.otherInfo = JSON.stringify(JSON.parse(this.activityLog.otherInfo), undefined, 3);\r\n               }\r\n            }\r\n\r\n            $(\"#ajax-loading\").hide();\r\n         },\r\n         (err) => {\r\n            $(\"#ajax-loading\").hide();\r\n            this.helper.showAlertMessage(\"Error fetching activity log.\", \"error\");\r\n         });\r\n   }\r\n\r\n   goBack(): void {\r\n      this.location.back();\r\n   }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Helper } from '../../common/helper';\r\nimport { SearchFilter, SortOrder } from '../../common/models/paginationRequest';\r\nimport { SearchField } from '../../common/models/SearchField';\r\nimport { ActivityLog } from '../models/activityLog';\r\nimport { ActivityLogService } from '../services/activityLog.service';\r\n\r\ndeclare var $: any;\r\n\r\n@Component({\r\n    templateUrl: './activityLog-list.html',\r\n    providers: [ActivityLogService]\r\n})\r\n\r\nexport class ActivityLogList implements OnInit {\r\n\r\n    activityLogs = new Array<ActivityLog>();\r\n    statusMessage: string = \"\";\r\n    pageSize = 10;\r\n    currentPage = 1;\r\n    totalPages = 1;\r\n    searchFields: SearchField[];\r\n    searchFilter: SearchFilter;\r\n    //selectedField: SearchField;\r\n    //filterPills: Filter[];\r\n    //searchText: string;\r\n    sortColumn: string;\r\n    sortOrder: SortOrder = SortOrder.descending;\r\n    previousElement: HTMLElement;\r\n    //conditionOption: boolean = true;\r\n\r\n    constructor(\r\n        private activityLogService: ActivityLogService,\r\n        private helper: Helper) {\r\n\r\n        this.searchFields = new Array<SearchField>();\r\n        this.searchFields.push({ field: 'ActivityOn', label: 'Activity Date', dataType: \"date\", value: \"\" });\r\n        this.searchFields.push({ field: 'LoginId', label: 'Accessed By', dataType: \"text\", value: \"\" });\r\n        this.searchFields.push({ field: 'SourceIP', label: 'Source IP', dataType: \"text\", value: \"\" });\r\n        this.searchFields.push({ field: 'Application', label: 'Application', dataType: \"text\", value: \"\" });\r\n        this.searchFields.push({ field: 'Module', label: 'Module', dataType: \"text\", value: \"\" });\r\n        this.searchFields.push({ field: 'Action', label: 'Action', dataType: \"text\", value: \"\" });\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.statusMessage = \"Loading activity logs...\";\r\n        this.pageSize = 10;\r\n        this.currentPage = 1;\r\n        this.sortColumn = null;\r\n        this.sortOrder = SortOrder.noSort;\r\n\r\n        this.getFormData();\r\n    }\r\n\r\n    getFormData() {\r\n\r\n        $(\"#ajax-loading\").show();\r\n\r\n        this.totalPages = 1;\r\n\r\n        let paginationRequest = {\r\n            page: this.currentPage,\r\n            pageSize: this.pageSize,\r\n            filter: this.searchFilter,\r\n            order: {\r\n                orderByProperty: this.sortColumn,\r\n                sortOrder: this.sortOrder\r\n            }\r\n        };\r\n\r\n        this.activityLogService.getActivityLogs(paginationRequest).subscribe(\r\n            resp => {\r\n                this.activityLogs = null;\r\n                if (resp.status.toLowerCase() == \"error\") {\r\n                    this.statusMessage = resp.message;\r\n                    this.helper.showAlertMessage(this.statusMessage, \"error\");\r\n                }\r\n                else {\r\n                    if (resp.data != null && resp.data.length > 0) {\r\n                        this.activityLogs = resp.data;\r\n                        this.totalPages = Math.ceil(resp.recordCount / this.pageSize);\r\n                    }\r\n                    else {\r\n                        this.statusMessage = \"There are no activity logs generated.\";\r\n                    }\r\n                }\r\n\r\n                $(\"#ajax-loading\").hide();\r\n            },\r\n            (err) => {\r\n                $(\"#ajax-loading\").hide();\r\n                this.activityLogs = null;\r\n                let msg = `Unable to fetch activity logs : ${err.message}`;\r\n                this.helper.showAlertMessage(msg, \"error\");\r\n                this.statusMessage = \"Error fetching activity logs.\";\r\n            });\r\n\r\n    }\r\n\r\n    //setSearchField(searchField: any) {\r\n    //    this.selectedField = searchField;\r\n    //    this.searchText = '';\r\n    //}\r\n\r\n    //search() {\r\n\r\n    //    this.clearSearch();\r\n    //    this.searchFields.forEach(x => x.value = '');\r\n\r\n    //    if (this.searchText.trim() != \"\") {\r\n    //        if (this.selectedField.dataType == 'date') {\r\n    //            this.searchFilter.filters.push({\r\n    //                propertyName: this.selectedField.field,\r\n    //                operator: Operator.greaterThanOrEqual,\r\n    //                value: new Date(this.searchText).toISOString(),\r\n    //                caseSensitive: false\r\n    //            });\r\n    //            this.searchFilter.filters.push({\r\n    //                propertyName: this.selectedField.field,\r\n    //                operator: Operator.lessThan,\r\n    //                value: this.helper.addDays(new Date(this.searchText), 1).toISOString(),\r\n    //                caseSensitive: false\r\n    //            });\r\n    //        }\r\n    //        else {\r\n    //            this.searchFilter.filters.push({\r\n    //                propertyName: this.selectedField.field,\r\n    //                operator: Operator.contains,\r\n    //                value: this.searchText,\r\n    //                caseSensitive: false\r\n    //            });\r\n    //        }\r\n    //    }\r\n\r\n    //    this.getFormData();\r\n    //}\r\n\r\n    //advancedSearch() {\r\n\r\n    //    this.clearSearch();\r\n    //    this.searchText = \"\";\r\n\r\n    //    for (var i = 0; i < this.searchFields.length; i++) {\r\n    //        if (this.searchFields[i].value) {\r\n\r\n    //            if (this.searchFields[i].dataType == 'date') {\r\n    //                this.searchFilter.filters.push({\r\n    //                    propertyName: this.searchFields[i].field,\r\n    //                    operator: Operator.greaterThanOrEqual,\r\n    //                    value: new Date(this.searchFields[i].value).toISOString(),\r\n    //                    caseSensitive: false\r\n    //                });\r\n    //                this.searchFilter.filters.push({\r\n    //                    propertyName: this.searchFields[i].field,\r\n    //                    operator: Operator.lessThan,\r\n    //                    value: this.helper.addDays(new Date(this.searchFields[i].value), 1).toISOString(),\r\n    //                    caseSensitive: false\r\n    //                });\r\n    //            }\r\n    //            else {\r\n    //                this.searchFilter.filters.push({\r\n    //                    propertyName: this.searchFields[i].field,\r\n    //                    operator: Operator.contains,\r\n    //                    value: this.searchFields[i].value,\r\n    //                    caseSensitive: false\r\n    //                });\r\n    //            }\r\n    //            //let operator = this.searchFields[i].dataType == 'date' ? Operator.equals : Operator.contains\r\n    //            //this.searchFilter.filters.push({\r\n    //            //    propertyName: this.searchFields[i].field,\r\n    //            //    operator: operator,\r\n    //            //    value: this.searchFields[i].value,\r\n    //            //    caseSensitive: false\r\n    //            //});\r\n    //        }\r\n    //    }\r\n\r\n    //    this.getFormData();\r\n    //}\r\n\r\n    search(searchFilter) {\r\n\r\n        this.searchFilter = searchFilter;\r\n        this.getFormData();\r\n    }\r\n\r\n    onPageSizeChange(pageSize) {\r\n        this.pageSize = pageSize;\r\n        this.getFormData();\r\n    }\r\n\r\n    onPageChange(currentPage) {\r\n        this.currentPage = currentPage;\r\n        this.getFormData();\r\n    }\r\n\r\n    onColumnClick(e: HTMLElement) {\r\n\r\n        if (this.previousElement && e.getAttribute('data-column') != this.previousElement.getAttribute('data-column')) {\r\n            this.previousElement.classList.remove('table-sorter-desc');\r\n            this.previousElement.classList.remove('table-sorter-asc');\r\n        }\r\n\r\n        this.previousElement = e;\r\n\r\n        this.sortColumn = e.getAttribute('data-column');\r\n\r\n        if (e.classList.contains(\"table-sorter-asc\")) {\r\n            e.classList.remove('table-sorter-asc');\r\n            e.classList.add('table-sorter-desc');\r\n            this.sortOrder = SortOrder.descending;\r\n        }\r\n        else if (e.classList.contains(\"table-sorter-desc\")) {\r\n            e.classList.remove('table-sorter-desc');\r\n            this.sortColumn = null;\r\n            this.sortOrder = SortOrder.noSort;\r\n        }\r\n        else {\r\n            e.classList.add('table-sorter-asc');\r\n            this.sortOrder = SortOrder.ascending;\r\n        }\r\n\r\n\r\n        this.getFormData();\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { AuthService } from './common/auth/auth.service';\r\nimport { LoginUser } from './common/models/loginUser';\r\nimport { Helper } from './common/helper';\r\n\r\nconst STORE_KEY = 'NERP_Admin_LastAction';\r\nconst MINUTES_UNITL_AUTO_LOGOUT = 60 // in mins\r\nconst CHECK_INTERVAL = 15000 // in ms\r\n\r\n@Component({\r\n    selector: 'app-root',\r\n    templateUrl: './app.component.html'\r\n})\r\nexport class AppComponent implements OnInit {\r\n\r\n    loginUser: LoginUser;\r\n\r\n    constructor(\r\n        private authService: AuthService,\r\n        private helperService: Helper) {\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n        this.loginUser = new LoginUser();\r\n\r\n        this.getFormData();\r\n\r\n        this.initListener();\r\n        this.initInterval();\r\n    }\r\n\r\n    getFormData() {\r\n\r\n        this.loginUser = new LoginUser();\r\n\r\n    this.authService.getLoginUserProfile().subscribe(\r\n      res => {\r\n        if (res.data && res.status.toLowerCase() == \"ok\") {\r\n          this.loginUser = res.data;\r\n                    this.authService.loginUser = this.loginUser;\r\n        }\r\n                else {\r\n          this.helperService.showAlertMessage(res.message, \"error\");\r\n                    this.onLogout();\r\n                }\r\n            },\r\n            err => {\r\n                this.helperService.showAlertMessage(err.message, 'error');\r\n                this.onLogout();\r\n            },\r\n        );\r\n    }\r\n\r\n    initListener() {\r\n        document.body.addEventListener('click', () => this.reset());\r\n        document.body.addEventListener('mouseover', () => this.reset());\r\n        document.body.addEventListener('mouseout', () => this.reset());\r\n        document.body.addEventListener('keydown', () => this.reset());\r\n        document.body.addEventListener('keyup', () => this.reset());\r\n        document.body.addEventListener('keypress', () => this.reset());\r\n    }\r\n\r\n    reset() {\r\n        this.setLastAction(Date.now());\r\n    }\r\n\r\n    public getLastAction() {\r\n        return parseInt(localStorage.getItem(STORE_KEY));\r\n    }\r\n\r\n    public setLastAction(lastAction: number) {\r\n        localStorage.setItem(STORE_KEY, lastAction.toString());\r\n    }\r\n\r\n    initInterval() {\r\n        setInterval(() => {\r\n            this.check();\r\n        }, CHECK_INTERVAL);\r\n    }\r\n\r\n    check() {\r\n        const now = Date.now();\r\n        const timeleft = this.getLastAction() + MINUTES_UNITL_AUTO_LOGOUT * 60 * 1000;\r\n        const diff = timeleft - now;\r\n        const isTimeout = diff < 0;\r\n\r\n        if (isTimeout) {\r\n            localStorage.clear();\r\n            this.onLogout();\r\n        }\r\n    }\r\n\r\n    onLogout() {\r\n        localStorage.removeItem('NERP-Admin-token');\r\n        //this.router.navigate(['/login']);\r\n        window.location.href = '/Auth/Logout';\r\n  }\r\n  \r\n    getFeatureAccess(featureCode: string): boolean {\r\n        return this.authService.getFeatureAccess(featureCode);\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport 'hammerjs';\r\nimport { Routing } from './app.routing';\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { CacheInterceptor } from './common/interceptors/cacheInterceptor';\r\nimport { AuthService } from './common/auth/auth.service';\r\n\r\nimport { Dashboard } from './dashboard/views/dashboard';\r\nimport { GroupModule } from './groups/group.module';\r\nimport { RoleModule } from './roles/role.module';\r\nimport { UserModule } from './users/user.module';\r\nimport { EntitiesModule } from './entities/entities.module';\r\nimport { LayerModule } from './layers/layer.module';\r\nimport { AccessoryModule } from './accessories/accessory.module';\r\nimport { CivilworkModule } from './civilworks/civilwork.module';\r\nimport { GeneralSettingsModule } from './generalSettings/generalSettings.module';\r\nimport { ActivityLogModule } from './activityLogs/activityLog.module';\r\nimport { Helper } from './common/helper';\r\nimport { DTSearch } from './components/data-table/dt-search';\r\nimport { DTPagination } from './components/data-table/dt-pagination';\r\nimport { SharedModule } from 'primeng/components/common/shared';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent,\r\n        Dashboard,\r\n    ],\r\n    imports: [\r\n        BrowserModule,\r\n        BrowserAnimationsModule,\r\n        HttpClientModule,\r\n        Routing,\r\n        FormsModule,\r\n\r\n        GroupModule,\r\n        RoleModule,\r\n        UserModule,\r\n        EntitiesModule,\r\n        LayerModule,\r\n        AccessoryModule,\r\n        CivilworkModule,\r\n        GeneralSettingsModule,\r\n        ActivityLogModule,\r\n\r\n    ],\r\n\r\n    providers: [\r\n        AuthService,\r\n        Helper,\r\n        { provide: HTTP_INTERCEPTORS, useClass: CacheInterceptor, multi: true }\r\n    ],\r\n\r\n    bootstrap: [AppComponent]\r\n\r\n})\r\nexport class AppModule { }\r\n","import { Routes, RouterModule } from '@angular/router';\r\nimport { Dashboard } from './dashboard/views/dashboard';\r\n\r\nconst appRoutes: Routes = [\r\n    { path: '', redirectTo: 'home', pathMatch: 'full' },\r\n    { path: 'home', component: Dashboard },\r\n    {\r\n        path: 'groups',\r\n        loadChildren: () => import('./groups/group.module').then(m => m.GroupModule)\r\n    },\r\n    {\r\n        path: 'roles',\r\n        loadChildren: () => import('./roles/role.module').then(m => m.RoleModule)\r\n    },\r\n    {\r\n        path: 'users',\r\n        loadChildren: () => import('./users/user.module').then(m => m.UserModule)\r\n    },\r\n    {\r\n        path: 'entities',\r\n        loadChildren: () => import('./entities/entities.module').then(a => a.EntitiesModule)\r\n    },\r\n    {\r\n        path: 'accessories',\r\n        loadChildren: () => import('./accessories/accessory.module').then(a => a.AccessoryModule)\r\n    },\r\n    {\r\n        path: 'civilworks',\r\n        loadChildren: () => import('./civilworks/civilwork.module').then(a => a.CivilworkModule)\r\n    },\r\n    {\r\n        path: 'layers',\r\n        loadChildren: () => import('./layers/layer.module').then(a => a.LayerModule)\r\n    },\r\n    {\r\n        path: 'generalSettings',\r\n        loadChildren: () => import('./generalSettings/generalSettings.module').then(a => a.GeneralSettingsModule)\r\n    },\r\n    {\r\n        path: 'activityLogs',\r\n        loadChildren: () => import('./activityLogs/activityLog.module').then(a => a.ActivityLogModule)\r\n    }\r\n];\r\n\r\nexport const Routing = RouterModule.forRoot(appRoutes);\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatCheckboxModule, MatRadioModule, MatSelectModule, MatSliderModule } from '@angular/material';\r\nimport { SharedModule } from '../shared.module';\r\nimport { CivilworkRouting } from './civilwork.routes';\r\nimport { CivilworkService } from './services/civilwork.service';\r\nimport { CivilworkDetails } from './views/civilwork-details';\r\nimport { CivilworkList } from './views/civilwork-list';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        MatRadioModule, MatSelectModule, MatCheckboxModule, MatSliderModule,\r\n        CivilworkRouting,\r\n        SharedModule\r\n    ],\r\n    declarations: [\r\n        CivilworkList,\r\n        CivilworkDetails,\r\n    ],\r\n    providers: [\r\n        CivilworkService,\r\n\r\n    ]\r\n})\r\nexport class CivilworkModule { }\r\n","import { ModuleWithProviders } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { CivilworkDetails } from './views/civilwork-details';\r\nimport { CivilworkList } from './views/civilwork-list';\r\n\r\nexport const civilworkRoutes: Routes = [\r\n    {\r\n        path: 'civilworks',\r\n        children: [\r\n            { path: '', component: CivilworkList },\r\n            { path: 'details', component: CivilworkDetails },\r\n            { path: 'details/:id', component: CivilworkDetails }\r\n        ]\r\n    },\r\n];\r\n\r\nexport const CivilworkRouting: ModuleWithProviders = RouterModule.forChild(civilworkRoutes);\r\n","import { DbBaseEntity } from '../../common/models/dbBaseEntity';\r\nimport { CustomField } from '../../common/models/customField';\r\nimport { FileAttachment } from '../../common/models/FileAttachment';\r\nimport { Supplier } from '../../common/models/supplier';\r\n\r\nexport class Civilwork extends DbBaseEntity {\r\n    name: string;\r\n    code?: string;\r\n    parentId?: string;\r\n    parentEntityType?: string;\r\n    customFields?: CustomField[] = new Array<CustomField>();\r\n    photos?: FileAttachment;\r\n    attachments?: FileAttachment;\r\n    suppliers?: Supplier[] = new Array<Supplier>();\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient, HttpParams } from \"@angular/common/http\";\r\n\r\nimport { Civilwork } from '../models/civilwork';\r\nimport { PaginationRequest, SortOrder } from '../../common/models/paginationRequest';\r\nimport { PaginationResponse } from '../../common/models/paginationResponse';\r\nimport { ServiceResponse } from '../../common/models/serviceResponse';\r\n\r\n@Injectable()\r\nexport class CivilworkService {\r\n\r\n    getCivilworksApi = 'Civilworks/GetCivilworks/';\r\n    getCivilworkApi = 'Civilworks/GetCivilwork/';\r\n    checkNameExistsApi = 'Civilworks/CheckNameExists/';\r\n    saveCivilworkApi = 'Civilworks/SaveCivilwork/';\r\n    deleteCivilworkApi = 'Civilworks/DeleteCivilwork/';\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    getCivilworks(paginationRequest?: PaginationRequest): Observable<PaginationResponse> {\r\n\r\n        if (paginationRequest == null)\r\n            paginationRequest = {\r\n                page: null,\r\n                pageSize: null,\r\n                filter: null,\r\n                order: {\r\n                    orderByProperty: \"name\",\r\n                    sortOrder: SortOrder.descending\r\n                }\r\n            };\r\n\r\n        return this.http.post<PaginationResponse>(this.getCivilworksApi, paginationRequest);\r\n    }\r\n\r\n    getCivilwork(civilworkId): Observable<ServiceResponse> {\r\n\r\n        const params = new HttpParams()\r\n            .set('civilworkId', civilworkId);\r\n\r\n        return this.http.get<ServiceResponse>(this.getCivilworkApi, { params });\r\n    }\r\n\r\n    async checkNameExists(name: string): Promise<ServiceResponse> {\r\n\r\n        const params = new HttpParams()\r\n            .set('name', name);\r\n\r\n        return await this.http.get<ServiceResponse>(this.checkNameExistsApi, { params }).toPromise();\r\n    }\r\n\r\n    saveCivilwork(civilwork: Civilwork): Observable<ServiceResponse> {\r\n\r\n        return this.http.post<ServiceResponse>(this.saveCivilworkApi, civilwork);\r\n    }\r\n\r\n    deleteCivilwork(civilworkId: string): Observable<ServiceResponse> {\r\n\r\n        const params = new HttpParams()\r\n            .set('civilworkId', civilworkId);\r\n\r\n        return this.http.delete<ServiceResponse>(this.deleteCivilworkApi, { params });\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport { forkJoin } from 'rxjs';\r\n\r\nimport { Helper } from '../../common/helper';\r\nimport { CivilworkService } from '../services/civilwork.service';\r\nimport { Civilwork } from '../models/civilwork';\r\n\r\ndeclare var $: any;\r\n\r\n@Component({\r\n    templateUrl: './civilwork-details.html',\r\n    providers: [CivilworkService],\r\n})\r\nexport class CivilworkDetails implements OnInit {\r\n\r\n    civilworkId: string;\r\n    civilwork: Civilwork = new Civilwork();\r\n    title: string = \"New Civilwork\";\r\n\r\n    constructor(\r\n        private location: Location,\r\n        private route: ActivatedRoute,\r\n        private civilworkService: CivilworkService,\r\n        private helper: Helper) { }\r\n\r\n    ngOnInit() {\r\n        this.route.params.subscribe(\r\n            params => {\r\n                this.civilworkId = params['id'];\r\n\r\n                if (this.civilworkId != null)\r\n                    this.title = \"Edit Civilwork\";\r\n                else {\r\n                    this.title = \"New Civilwork\";\r\n                }\r\n\r\n                this.getFormData(this.civilworkId);\r\n\r\n            });\r\n    }\r\n\r\n    getFormData(civilworkId: string) {\r\n\r\n        if (this.civilworkId != null) {\r\n\r\n            $(\"#ajax-loading\").show();\r\n\r\n            this.civilworkService.getCivilwork(this.civilworkId).subscribe(\r\n                resp => {\r\n                    this.civilwork = new Civilwork();\r\n\r\n                    if (resp.status.toLowerCase() == \"error\") {\r\n                        this.helper.showAlertMessage(resp.message, \"error\");\r\n                    }\r\n                    else {\r\n                        if (resp.data != null) {\r\n                            this.civilwork = resp.data;\r\n                        }\r\n                    }\r\n\r\n                    $(\"#ajax-loading\").hide();\r\n                },\r\n                (err) => {\r\n                    $(\"#ajax-loading\").hide();\r\n                    this.civilwork = new Civilwork();\r\n                    this.helper.showAlertMessage(\"Unable to fetch civilwork details\", \"error\");\r\n                });\r\n        }\r\n        else\r\n            this.civilwork = new Civilwork();\r\n    }\r\n\r\n    addNewSupplier() {\r\n\r\n        if (this.civilwork.suppliers == null)\r\n            this.civilwork.suppliers = [];\r\n\r\n        this.civilwork.suppliers.push({\r\n            name: \"\",\r\n            sku: \"\",\r\n            price: null,\r\n            validFrom: \"\",\r\n            validTo: \"\"\r\n        });\r\n    }\r\n\r\n    deleteSupplier(index: number) {\r\n        this.civilwork.suppliers.splice(index, 1);\r\n    }\r\n\r\n    async save() {\r\n\r\n        var errorMessages = await this.validateEntity(this.civilwork);\r\n\r\n        if (errorMessages.length == 0) {\r\n\r\n            this.civilworkService.saveCivilwork(this.civilwork).subscribe(\r\n                resp => {\r\n\r\n                    if (resp.status.toLowerCase() == \"error\") {\r\n                        this.helper.showAlertMessage(resp.message, \"error\");\r\n                    }\r\n                    else {\r\n                        if (resp.data != null) {\r\n                            this.helper.showAlertMessage(\"Civilwork information saved\", \"success\");\r\n                            this.goBack();\r\n                        }\r\n                        else\r\n                            this.helper.showAlertMessage(\"Unable to save civilwork information.\", \"error\");\r\n                    }\r\n                },\r\n                (err) => {\r\n                    //let msg = `Unable to save user information : ${err.message}`;\r\n                    this.helper.showAlertMessage(\"Unable to save civilwork information.\", \"error\");\r\n                });\r\n        }\r\n        else {\r\n            this.helper.showAlertMessage(this.helper.getErrorMessagesText(errorMessages), \"error\");\r\n        }\r\n    }\r\n\r\n    async validateEntity(civilwork: Civilwork): Promise<string[]> {\r\n        var errorMessages = [];\r\n\r\n        if (civilwork.name == null || civilwork.name.trim() == '')\r\n            errorMessages.push(\"Name cannot be empty.\");\r\n        else {\r\n            let resp = await this.civilworkService.checkNameExists(civilwork.name);\r\n\r\n            if (resp)\r\n                errorMessages.push(\"Name already exists.\");\r\n        }\r\n\r\n        return errorMessages;\r\n    }\r\n\r\n    goBack(): void {\r\n        this.location.back();\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { Civilwork } from '../models/civilwork';\r\nimport { CivilworkService } from '../services/civilwork.service';\r\nimport { Helper } from '../../common/helper';\r\nimport { SortOrder, SearchFilter, ConditionOperator, Operator, Filter } from '../../common/models/paginationRequest';\r\nimport { SearchField } from '../../common/models/SearchField';\r\n\r\ndeclare var $: any;\r\ndeclare var jBox: any;\r\n\r\n@Component({\r\n    templateUrl: './civilwork-list.html',\r\n    providers: [CivilworkService]\r\n})\r\nexport class CivilworkList implements OnInit {\r\n\r\n    civilworks = new Array<Civilwork>();\r\n    statusMessage: string = \"\";\r\n    pageSize = 10;\r\n    currentPage = 1;\r\n    totalPages = 1;\r\n    searchFields: SearchField[];\r\n    searchFilter: SearchFilter;\r\n    sortColumn: string;\r\n    sortOrder: SortOrder = SortOrder.descending;\r\n    previousElement: HTMLElement;\r\n\r\n    constructor(\r\n        private civilworkService: CivilworkService,\r\n        private helper: Helper) {\r\n\r\n        this.searchFields = new Array<SearchField>();\r\n        this.searchFields.push({ field: 'Name', label: 'Name', dataType: \"text\", value: \"\" });\r\n        this.searchFields.push({ field: 'parentEntityType', label: 'Parent Type', dataType: \"text\", value: \"\" });\r\n        this.searchFields.push({ field: 'UpdatedBy', label: 'Updated By', dataType: \"text\", value: \"\" });\r\n        this.searchFields.push({ field: 'UpdatedDate', label: 'Updated On', dataType: \"date\", value: \"\" });\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.statusMessage = \"Loading Civilworks...\";\r\n        this.pageSize = 10;\r\n        this.currentPage = 1;\r\n        this.sortColumn = null;\r\n        this.sortOrder = SortOrder.noSort;\r\n        this.getFormData();\r\n    }\r\n\r\n    getFormData() {\r\n\r\n        $(\"#ajax-loading\").show();\r\n\r\n        this.totalPages = 1;\r\n\r\n        let paginationRequest = {\r\n            page: this.currentPage,\r\n            pageSize: this.pageSize,\r\n            filter: this.searchFilter,\r\n            order: {\r\n                orderByProperty: this.sortColumn,\r\n                sortOrder: this.sortOrder\r\n            }\r\n        };\r\n\r\n        this.civilworkService.getCivilworks(paginationRequest).subscribe(\r\n            resp => {\r\n                this.civilworks = null;\r\n\r\n                if (resp.status.toLowerCase() == \"error\") {\r\n                    this.statusMessage = resp.message;\r\n                    this.helper.showAlertMessage(this.statusMessage, \"error\");\r\n                }\r\n                else {\r\n                    if (resp.data != null && resp.data.length > 0) {\r\n                        this.civilworks = resp.data;\r\n                        this.totalPages = Math.ceil(resp.recordCount / this.pageSize);\r\n                    }\r\n                    else {\r\n                        this.statusMessage = \"There are no registered civilworks.\";\r\n                    }\r\n                }\r\n\r\n                $(\"#ajax-loading\").hide();\r\n            },\r\n            (err) => {\r\n                $(\"#ajax-loading\").hide();\r\n                this.civilworks = null;\r\n                let msg = `Unable to fetch civilworks : ${err.message}`;\r\n                this.helper.showAlertMessage(msg, \"error\");\r\n                this.statusMessage = \"Error fetching civilworks.\";\r\n            });\r\n    }\r\n\r\n    search(searchFilter) {\r\n\r\n        this.searchFilter = searchFilter;\r\n        this.getFormData();\r\n    }\r\n\r\n    onPageSizeChange(pageSize) {\r\n        this.pageSize = pageSize;\r\n        this.getFormData();\r\n    }\r\n\r\n    onPageChange(currentPage) {\r\n        this.currentPage = currentPage;\r\n        this.getFormData();\r\n    }\r\n\r\n    onColumnClick(e: HTMLElement) {\r\n\r\n        if (this.previousElement && e.getAttribute('data-column') != this.previousElement.getAttribute('data-column')) {\r\n            this.previousElement.classList.remove('table-sorter-desc');\r\n            this.previousElement.classList.remove('table-sorter-asc');\r\n        }\r\n\r\n        this.previousElement = e;\r\n\r\n        this.sortColumn = e.getAttribute('data-column');\r\n\r\n        if (e.classList.contains(\"table-sorter-asc\")) {\r\n            e.classList.remove('table-sorter-asc');\r\n            e.classList.add('table-sorter-desc');\r\n            this.sortOrder = SortOrder.descending;\r\n        }\r\n        else if (e.classList.contains(\"table-sorter-desc\")) {\r\n            e.classList.remove('table-sorter-desc');\r\n            this.sortColumn = null;\r\n            this.sortOrder = SortOrder.noSort;\r\n        }\r\n        else {\r\n            e.classList.add('table-sorter-asc');\r\n            this.sortOrder = SortOrder.ascending;\r\n        }\r\n\r\n        this.getFormData();\r\n    }\r\n\r\n    delete(civilwork: Civilwork) {\r\n        new jBox(\"Confirm\", {\r\n            minWidth: 500,\r\n            minHeight: 70,\r\n            title: \"<b>Delete Civilwork</b>\",\r\n            overlay: false,\r\n            content: \"Do you want to delete civilwork - \" + civilwork.name,\r\n            draggable: \"title\",\r\n            confirmButton: \"Yes\",\r\n            cancelButton: \"No\",\r\n            confirm: () => {\r\n                this.civilworkService.deleteCivilwork(civilwork.id).subscribe(\r\n                    resp => {\r\n                        if (resp.status.toLowerCase() == \"error\") {\r\n                            this.helper.showAlertMessage(resp.message, \"error\");\r\n                        }\r\n                        else {\r\n                            if (resp.data != null) {\r\n                                this.helper.showAlertMessage(\"Civilwork deleted.\", \"success\");\r\n                                this.getFormData();\r\n                            }\r\n                            else {\r\n                                this.helper.showAlertMessage(\"Error deleting civilwork\", \"error\");\r\n                            }\r\n                        }\r\n                    },\r\n                    (err) => {\r\n                        this.helper.showAlertMessage(\"Error deleting civilwork\", \"error\");\r\n                    });\r\n            }\r\n        }).open();\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, of, forkJoin } from 'rxjs';\r\nimport { HttpClient, HttpParams } from \"@angular/common/http\";\r\nimport { ServiceResponse } from '../models/serviceResponse';\r\nimport { LoginUser } from '../models/loginUser';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n\r\n    constructor(private http: HttpClient) { }\r\n    loginUser: LoginUser;\r\n\r\n    authenticateUser(loginCredentials: any): Observable<ServiceResponse> {\r\n\r\n        return this.http.post<ServiceResponse>('/Auth/Authenticate', loginCredentials);\r\n    }\r\n\r\n    getLoginUserProfile(): Observable<ServiceResponse> {\r\n\r\n        return this.http.get<ServiceResponse>('/Auth/GetLoginUserProfile');\r\n    }\r\n\r\n    getFeatureAccess(featureCode: string) {\r\n        if (this.loginUser)\r\n            return this.loginUser.features.includes(featureCode);\r\n        else\r\n            return false;\r\n    }\r\n\r\n    getFunctionalityAccess(permissionCode: string) {\r\n\r\n        if (this.loginUser)\r\n            return this.loginUser.permissions.includes(permissionCode);\r\n        else\r\n            return false;\r\n    }\r\n\r\n    //getLoginUser(force: boolean = false): any {\r\n\r\n    //    if (force !== true && this.loginUser)\r\n    //        return of(this.loginUser) as Observable<LoginUser>;\r\n\r\n    //    let usersSvc = this.http.get<ServiceResponse>(\"/Auth/GetLoginUserProfile\");\r\n    //    let rolesSvc = this.http.get<ServiceResponse>(\"Roles/GetRoles\");\r\n\r\n    //    return forkJoin(\r\n    //        usersSvc.pipe(map(resp => { this.loginUser = resp.data; return this.loginUser; })),\r\n    //        rolesSvc.pipe(map(resp => { this.roles = resp.data; })),\r\n    //    );\r\n    //}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { SearchField } from './models/SearchField';\r\nimport { SearchFilter, Filter, Operator, ConditionOperator } from './models/paginationRequest';\r\n\r\ndeclare var toastr: any;\r\n\r\n@Injectable()\r\nexport class Helper {\r\n\r\n    constructor() { }\r\n\r\n    showAlertMessage(message: string, alertType: string) {\r\n\r\n        if (alertType == \"error\") {\r\n            toastr.options = {\r\n                \"closeButton\": true,\r\n                \"timeOut\": 3000,\r\n                \"preventDuplicates\": true,\r\n                \"extendedTimeOut\": 1000,\r\n                \"positionClass\": \"toast-top-center\",\r\n            }\r\n            toastr.error(message, \"Error\").attr('style', 'width: 400px !important');\r\n        }\r\n        else if (alertType == \"success\") {\r\n            toastr.options = {\r\n                \"closeButton\": false,\r\n                \"timeOut\": 3000,\r\n                \"extendedTimeOut\": 1000,\r\n                \"positionClass\": \"toast-top-center\",\r\n            }\r\n            toastr.success(message).attr('style', 'width: 400px !important');\r\n        }\r\n        else if (alertType == \"info\") {\r\n            toastr.options = {\r\n                \"closeButton\": false,\r\n                \"timeOut\": 5000,\r\n                \"extendedTimeOut\": 1000,\r\n                \"positionClass\": \"toast-top-center\",\r\n            }\r\n            toastr.info(message).attr('style', 'width: 400px !important');\r\n        }\r\n    }\r\n\r\n    formatBytes(bytes: number, decimals: number) {\r\n        if (bytes == 0) return '0 Bytes';\r\n        var k = 1024,\r\n            dm = decimals || 2,\r\n            sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'],\r\n            i = Math.floor(Math.log(bytes) / Math.log(k));\r\n\r\n        return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\r\n    }\r\n\r\n    popupCenter(url, title, w, h) {\r\n        // Fixes dual-screen position Most browsers Firefox\r\n        var dualScreenLeft = window.screenLeft;\r\n        var dualScreenTop = window.screenTop;\r\n\r\n        var width = window.innerWidth ? window.innerWidth : document.documentElement.clientWidth ? document.documentElement.clientWidth : screen.width;\r\n        var height = window.innerHeight ? window.innerHeight : document.documentElement.clientHeight ? document.documentElement.clientHeight : screen.height;\r\n\r\n        var left = ((width / 2) - (w / 2)) + dualScreenLeft;\r\n        var top = ((height / 2) - (h / 2)) + dualScreenTop;\r\n        var newWindow = window.open(url, title, 'scrollbars=yes, width=' + w + ', height=' + h + ', top=' + top + ', left=' + left);\r\n\r\n        // Puts focus on the newWindow\r\n        if (window.focus) {\r\n            newWindow.focus();\r\n        }\r\n    }\r\n\r\n    getErrorMessagesText(errorMessages: string[]) {\r\n\r\n        var li = \"\";\r\n\r\n        for (let message of errorMessages) {\r\n            li += \"<li>\" + message + \"</li>\";\r\n        }\r\n\r\n        return \"<ul>\" + li + \"</li>\";\r\n    }\r\n\r\n    compare(a: number | string | boolean, b: number | string | boolean, isAsc: boolean) {\r\n        return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\r\n    }\r\n\r\n    getLastMonths(count) {\r\n        var monthFull = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\n        var monthShort = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\n\r\n        var months = []\r\n        var d = new Date()\r\n        for (var i = 0; i < count; i++) {\r\n            months.push({ \"name\": monthFull[d.getMonth()], \"value\": monthShort[d.getMonth()] });\r\n            d.setMonth(d.getMonth() - 1)\r\n        }\r\n        return months\r\n    }\r\n\r\n    getLastDay(year: number, month: string) {\r\n\r\n        var monthIndex = this.getMonthIndex(month);\r\n\r\n        return new Date(year, monthIndex + 1, 0).getDate();\r\n    }\r\n\r\n    getMonthIndex(month: string) {\r\n\r\n        var monthShort = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\n\r\n        var monthIndex = monthShort.findIndex(x => x == month);\r\n\r\n        return monthIndex;\r\n    }\r\n\r\n    addDays(date, days) {\r\n        var result = new Date(date);\r\n        result.setDate(result.getDate() + days);\r\n        return result;\r\n    }\r\n\r\n    daysBetween(startDate, endDate) {\r\n\r\n        let millisecondsPerDay = 1000 * 60 * 60 * 24;\r\n        let startDateUTC = Date.UTC(startDate.getFullYear(), startDate.getMonth(), startDate.getDate());\r\n        let endDateUTC = Date.UTC(endDate.getFullYear(), endDate.getMonth(), endDate.getDate());\r\n\r\n        return Math.floor((endDateUTC - startDateUTC) / millisecondsPerDay);\r\n    }\r\n\r\n    static getChunks(items: any, chunkSize: number) {\r\n\r\n        var index = 0;\r\n        var arrayLength = items.length;\r\n        var group = [];\r\n\r\n        for (index = 0; index < arrayLength; index += chunkSize) {\r\n            let chunk = items.slice(index, index + chunkSize);\r\n            group.push(chunk);\r\n        }\r\n\r\n        return group;\r\n    }\r\n\r\n    search(selectedField: SearchField, searchText: string, conditionOperator: ConditionOperator): SearchFilter {\r\n\r\n        let searchFilter = null;\r\n\r\n        if (searchText.trim() != \"\") {\r\n\r\n            searchFilter = new SearchFilter();\r\n            searchFilter.conditionOperator = conditionOperator;\r\n            searchFilter.filters = new Array<Filter>();\r\n\r\n            if (selectedField.dataType == 'date') {\r\n                searchFilter.filters.push({\r\n                    propertyName: selectedField.field,\r\n                    operator: Operator.greaterThanOrEqual,\r\n                    value: new Date(searchText).toISOString(),\r\n                    caseSensitive: false\r\n                });\r\n                searchFilter.filters.push({\r\n                    propertyName: selectedField.field,\r\n                    operator: Operator.lessThan,\r\n                    value: this.addDays(new Date(searchText), 1).toISOString(),\r\n                    caseSensitive: false\r\n                });\r\n            }\r\n            else {\r\n                searchFilter.filters.push({\r\n                    propertyName: selectedField.field,\r\n                    operator: Operator.contains,\r\n                    value: searchText,\r\n                    caseSensitive: false\r\n                });\r\n            }\r\n        }\r\n\r\n        return searchFilter\r\n    }\r\n\r\n    advancedSearch(searchFields: SearchField[], conditionOperator: ConditionOperator): SearchFilter {\r\n\r\n        let searchFilter = new SearchFilter();\r\n        searchFilter.conditionOperator = conditionOperator;\r\n        searchFilter.filters = new Array<Filter>();\r\n\r\n        for (var i = 0; i < searchFields.length; i++) {\r\n            if (searchFields[i].value) {\r\n\r\n                if (searchFields[i].dataType == 'date') {\r\n                    searchFilter.filters.push({\r\n                        propertyName: searchFields[i].field,\r\n                        operator: Operator.greaterThanOrEqual,\r\n                        value: new Date(searchFields[i].value).toISOString(),\r\n                        caseSensitive: false\r\n                    });\r\n                    searchFilter.filters.push({\r\n                        propertyName: searchFields[i].field,\r\n                        operator: Operator.lessThan,\r\n                        value: this.addDays(new Date(searchFields[i].value), 1).toISOString(),\r\n                        caseSensitive: false\r\n                    });\r\n                }\r\n                else {\r\n                    searchFilter.filters.push({\r\n                        propertyName: searchFields[i].field,\r\n                        operator: Operator.contains,\r\n                        value: searchFields[i].value,\r\n                        caseSensitive: false\r\n                    });\r\n                }\r\n                //let operator = this.searchFields[i].dataType == 'date' ? Operator.equals : Operator.contains\r\n                //this.searchFilter.filters.push({\r\n                //    propertyName: this.searchFields[i].field,\r\n                //    operator: operator,\r\n                //    value: this.searchFields[i].value,\r\n                //    caseSensitive: false\r\n                //});\r\n            }\r\n        }\r\n\r\n        return searchFilter;\r\n    }\r\n\r\n    generateTree(arr, parentId) {\r\n        var out = []\r\n\r\n        for (var i in arr) {\r\n            arr[i].label = arr[i].name;\r\n\r\n            if (arr[i].parentId == parentId) {\r\n                var children = this.generateTree(arr, arr[i].id)\r\n\r\n                if (children.length) {\r\n                    arr[i].children = children\r\n                }\r\n                out.push(arr[i])\r\n            }\r\n        }\r\n\r\n        return out\r\n    }\r\n\r\n    static generateObjectId() {\r\n        var timestamp = (new Date().getTime() / 1000 | 0).toString(16);\r\n        return timestamp + 'xxxxxxxxxxxxxxxx'.replace(/[x]/g, function () {\r\n            return (Math.random() * 16 | 0).toString(16);\r\n        }).toLowerCase();\r\n    }\r\n\r\n    generateTreeTable(arr, parentId, expanded?: boolean) {\r\n        var out = []\r\n\r\n        for (var i in arr) {\r\n            arr[i].label = arr[i].name;\r\n\r\n            arr[i].data = {\r\n                \"name\": arr[i].name\r\n            };\r\n\r\n            arr[i].expanded = expanded;\r\n\r\n            if (arr[i].parentId == parentId) {\r\n                var children = this.generateTree(arr, arr[i].id);\r\n\r\n                if (children.length) {\r\n                    arr[i].children = children;\r\n                }\r\n                out.push(arr[i]);\r\n            }\r\n        }\r\n\r\n        return out\r\n    }\r\n\r\n    findNode(id, currentNode) {\r\n        var stack = [], node, ii;\r\n        stack.push(currentNode);\r\n\r\n        while (stack.length > 0) {\r\n            node = stack.pop();\r\n            if (node.id == id) {\r\n                return node;\r\n            } else if (node.children && node.children.length) {\r\n                for (ii = 0; ii < node.children.length; ii += 1) {\r\n                    stack.push(node.children[ii]);\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    log(logEntity: any, logType: string, message: string) {\r\n\r\n        logEntity.log = logEntity.log + '\\n' + new Date() + \" [\" + logType + \"] \" + message;\r\n    }\r\n\r\n    isDate(value: any) {\r\n        return (null != value) && !isNaN(value) && (\"undefined\" !== typeof value.getDate);\r\n    }\r\n\r\n    static formatDate(value: any) {\r\n\r\n        var dd = value.getDate();\r\n\r\n        var mm = value.getMonth() + 1;\r\n        var yyyy = value.getFullYear();\r\n\r\n        if (dd < 10) {\r\n            dd = '0' + dd;\r\n        }\r\n\r\n        if (mm < 10) {\r\n            mm = '0' + mm;\r\n        }\r\n\r\n        return dd + '/' + mm + '/' + yyyy;\r\n\r\n    }\r\n\r\n    static groupBy(data, columnName) {\r\n\r\n        //var groupedData;\r\n\r\n        //data.reduce(function (result, current) {\r\n        //    var currentVal = current[columnName];\r\n\r\n        //    result[currentVal] = result[currentVal] || [];\r\n        //    result[currentVal].push(current);\r\n        //    groupedData = result;\r\n        //}, {});\r\n\r\n        //return groupedData;\r\n\r\n        let group = data.reduce((r, a) => {\r\n            r[a[columnName]] = [...r[a[columnName]] || [], a];\r\n            return r;\r\n        }, {});\r\n\r\n        let tempGroups = [];\r\n\r\n        for (var i in group) {\r\n            tempGroups.push(group[i]);\r\n        }\r\n\r\n        return tempGroups;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpHeaders } from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class CacheInterceptor implements HttpInterceptor {\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n    const httpRequest = req.clone({\r\n      headers: new HttpHeaders({\r\n        'Cache-Control': 'no-cache',\r\n        'Pragma': 'no-cache',\r\n        'Expires': 'Sat, 01 Jan 2000 00:00:00 GMT'\r\n      })\r\n    });\r\n\r\n    return next.handle(httpRequest);\r\n  }\r\n}","export class CustomField {\r\n    category: string;\r\n    label: string;\r\n    controlType: ControlType;\r\n    dataType: DataType;\r\n    values: string;\r\n    userValue?: any;\r\n}\r\n\r\nexport enum ControlType {\r\n    TextBox = 1,\r\n    Dropdown = 2,\r\n    Date = 3,\r\n    Radio = 4,\r\n    Checkbox = 5\r\n}\r\n\r\nexport enum DataType {\r\n    String = 1,\r\n    Number = 2,\r\n    Boolean = 3,\r\n    Date = 4\r\n\r\n}\r\n","export class DbBaseEntity {\r\n   id?: string;\r\n   createdBy?: string;\r\n   createdDate?: string;\r\n   updatedBy?: string;\r\n   updatedDate?: string;\r\n}\r\n","export class LoginUser {\r\n    id: string;\r\n    loginId: string;\r\n    name: string;\r\n    features: string[];\r\n    permissions: string[];\r\n    token: string;\r\n}\r\n","export class PaginationRequest {\r\n    page: number;\r\n    pageSize: number;\r\n    filter: SearchFilter;\r\n    order: Order;\r\n}\r\n\r\nexport class SearchFilter {\r\n    conditionOperator: ConditionOperator;\r\n    filters: Filter[];\r\n}\r\n\r\nexport enum ConditionOperator {\r\n    AND,\r\n    OR\r\n}\r\n\r\nexport class Filter {\r\n    propertyName: string;\r\n    operator: Operator;\r\n    value: any;\r\n    caseSensitive: boolean;\r\n}\r\n\r\nexport enum Operator {\r\n    equals,\r\n    greaterThan,\r\n    lessThan,\r\n    greaterThanOrEqual,\r\n    lessThanOrEqual,\r\n    contains,\r\n    startsWith,\r\n    endsWith,\r\n    notEquals\r\n}\r\n\r\nexport class Order {\r\n    orderByProperty: string;\r\n    sortOrder: SortOrder;\r\n}\r\n\r\nexport enum SortOrder {\r\n    ascending = 1,\r\n    descending = -1,\r\n    noSort = 0\r\n}\r\n","import { Component, EventEmitter, Output, Input } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'dt-pagination',\r\n    templateUrl: './dt-pagination.html'\r\n})\r\nexport class DTPagination {\r\n\r\n    @Input() public totalPages: number = 1;\r\n    @Output() onPageSizeChange: EventEmitter<any> = new EventEmitter();\r\n    @Output() onPageChange: EventEmitter<any> = new EventEmitter();\r\n\r\n    pageSize = 10;\r\n    currentPage = 1;\r\n\r\n    constructor() { }\r\n\r\n    ngOnInit() {\r\n        this.pageSize = 10;\r\n        this.currentPage = 1;\r\n    }\r\n\r\n    pageSizeChange() {\r\n        this.onPageSizeChange.emit(this.pageSize);\r\n    }\r\n\r\n    setPage(page: number) {\r\n\r\n        if (page < 1 || page > this.totalPages) {\r\n            return;\r\n        }\r\n\r\n        this.currentPage = page;\r\n\r\n        this.onPageChange.emit(this.currentPage);\r\n    }\r\n}\r\n","import { Component, Input, EventEmitter, Output } from '@angular/core';\r\nimport { SearchField } from '../../common/models/SearchField';\r\nimport { ConditionOperator, SearchFilter, Filter } from '../../common/models/paginationRequest';\r\nimport { Helper } from '../../common/helper';\r\n\r\n@Component({\r\n    selector: 'dt-search',\r\n    templateUrl: './dt-search.html'\r\n})\r\nexport class DTSearch {\r\n\r\n    @Input() public searchFields: SearchField[] = new Array<SearchField>();\r\n    @Output() onSearch: EventEmitter<any> = new EventEmitter();\r\n\r\n    selectedField: SearchField;\r\n    searchText: string;\r\n    searchFilter: SearchFilter;\r\n    filterPills: Filter[];\r\n    conditionOption: boolean = true;\r\n\r\n    constructor(private helper: Helper) { }\r\n\r\n    ngOnInit() {\r\n        this.selectedField = this.searchFields[0];\r\n        this.searchText = \"\";\r\n    }\r\n\r\n    setSearchField(searchField: any) {\r\n        this.selectedField = searchField;\r\n        this.searchText = '';\r\n    }\r\n\r\n    search() {\r\n\r\n        let conditionOption = this.conditionOption ? ConditionOperator.AND : ConditionOperator.OR;\r\n        this.searchFilter = this.helper.search(this.selectedField, this.searchText, conditionOption)\r\n        this.searchFields.forEach(x => x.value = '');\r\n\r\n        this.searchText = '';\r\n        this.populateFilterPills();\r\n\r\n        this.onSearch.emit(this.searchFilter);\r\n    }\r\n\r\n    populateFilterPills() {\r\n\r\n        let filters = new Array<Filter>();\r\n\r\n        this.searchFilter.filters.forEach(x => {\r\n\r\n            var index = filters.findIndex(y => y.propertyName == x.propertyName);\r\n\r\n            let newValue = x.value;\r\n\r\n            if (newValue.includes('T00:00:00.000Z')) {\r\n                newValue = Helper.formatDate(new Date(newValue));\r\n            }\r\n\r\n            if (index < 0) {\r\n                filters.push({\r\n                    operator: x.operator,\r\n                    propertyName: x.propertyName,\r\n                    caseSensitive: false,\r\n                    value: newValue\r\n                });\r\n            }\r\n        });\r\n\r\n        this.filterPills = filters;\r\n    }\r\n\r\n    removeFilter(index: any) {\r\n        if (index >= 0) {\r\n            let filter = this.searchFilter.filters[index];\r\n            this.searchFilter.filters = this.searchFilter.filters.filter(x => x.propertyName != filter.propertyName);\r\n\r\n            this.populateFilterPills();\r\n\r\n            this.onSearch.emit(this.searchFilter);\r\n        }\r\n    }\r\n\r\n    advancedSearch() {\r\n\r\n        let conditionOption = this.conditionOption ? ConditionOperator.AND : ConditionOperator.OR;\r\n        this.searchFilter = this.helper.advancedSearch(this.searchFields, conditionOption)\r\n        this.searchText = \"\";\r\n\r\n        this.onSearch.emit(this.searchFilter);\r\n        this.populateFilterPills();\r\n    }\r\n\r\n    clearSearch() {\r\n        this.searchFilter = this.helper.search(this.selectedField, this.searchText, ConditionOperator.AND)\r\n        this.searchFields.forEach(x => x.value = '');\r\n\r\n        this.onSearch.emit(this.searchFilter);\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient, HttpParams } from \"@angular/common/http\";\r\n\r\n@Injectable()\r\nexport class DashboardService {\r\n\r\n   constructor(private http: HttpClient) { }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { forkJoin } from 'rxjs';\r\n\r\nimport { DashboardService } from '../services/dashboard.service';\r\n\r\ndeclare var $: any;\r\ndeclare var echarts: any;\r\n\r\n@Component({\r\n   templateUrl: './dashboard.html',\r\n   providers: [DashboardService],\r\n})\r\nexport class Dashboard implements OnInit {\r\n\r\n   constructor(\r\n      private dashboardService: DashboardService) { }\r\n\r\n   ngOnInit() {\r\n      //this.getFormData();\r\n   }\r\n\r\n   getFormData() {\r\n\r\n      //$(\"#ajax-loading\").show();\r\n\r\n      //let taskSummarySvc = this.reportsService.getTaskSummary();\r\n      //let realTimeSummarySvc = this.reportsService.getRealTimeSummary();\r\n\r\n      //forkJoin([taskSummarySvc, realTimeSummarySvc]).subscribe(\r\n      //   async results => {\r\n      //      var roles=[]\r\n      //      if (results[0] && results[0].data) {\r\n      //         this.taskSummary = results[0].data;\r\n      //      }\r\n\r\n      //      if (results[1] && results[1].data) {\r\n      //         //this.eDeliverySummary = results[1].data;\r\n      //         //this.showRealTimeSummaryChart();\r\n      //      }\r\n\r\n      //      //await new Promise(resolve => {\r\n      //      //   setTimeout(() => {\r\n      //      //      roles = this.accountService.roles;\r\n      //      //      resolve();\r\n      //      //   }, 100);\r\n      //      //});\r\n\r\n          \r\n      //      var loginUser = this.accountService.loginUser;\r\n\r\n      //      this.userRole = roles.find(x => x.id.toLowerCase() == loginUser.role.toLowerCase());\r\n\r\n      //      $(\"#ajax-loading\").hide();\r\n\r\n      //   },\r\n      //   error => {\r\n      //      $(\"#ajax-loading\").hide();\r\n      //   });\r\n   }\r\n\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { CustomField, ControlType, DataType } from '../../common/models/customField';\r\n\r\n@Component({\r\n    selector: 'custom-fields',\r\n    templateUrl: './custom-fields.html'\r\n})\r\nexport class CustomFields {\r\n\r\n    @Input() public customFields: CustomField[] = new Array <CustomField>();\r\n\r\n    constructor() { }\r\n\r\n    addCustomField() {\r\n\r\n        if (this.customFields == null)\r\n            this.customFields = [];\r\n\r\n        this.customFields.push({\r\n            category: \"\",\r\n            label: \"\",\r\n            controlType: ControlType.TextBox,\r\n            dataType: DataType.String,\r\n            values: \"\"\r\n        });\r\n    }\r\n\r\n    deleteCustomField(index: number) {\r\n        this.customFields.splice(index, 1);\r\n    }\r\n\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { Supplier } from '../../common/models/supplier';\r\n\r\n@Component({\r\n    selector: 'suppliers',\r\n    templateUrl: './supplier.html'\r\n})\r\nexport class SupplierComponent {\r\n\r\n    @Input() public supplierList: Supplier[] = new Array <Supplier>();\r\n\r\n    constructor() { }\r\n\r\n    addNewSupplier() {\r\n\r\n        if (this.supplierList == null)\r\n            this.supplierList = [];\r\n\r\n        this.supplierList.push({\r\n            name: \"\",\r\n            sku: \"\",\r\n            price: null,\r\n            validFrom: \"\",\r\n            validTo: \"\"\r\n        });\r\n    }\r\n\r\n    deleteSupplier(index: number) {\r\n        this.supplierList.splice(index, 1);\r\n    }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatRadioModule, MatSelectModule, MatCheckboxModule, MatSliderModule } from '@angular/material';\r\n\r\nimport { EntitiesRouting } from './entities.routes';\r\nimport { EntityList } from './views/entity-list';\r\nimport { CustomFields } from './components/custom-fields';\r\nimport { CableDetails } from './views/cable-details';\r\nimport { ChamberDetails } from './views/chamber-details';\r\nimport { DuctDetails } from './views/duct-details';\r\nimport { ODFDetails } from './views/odf-details';\r\nimport { PoleDetails } from './views/pole-details';\r\nimport { SplitterDetails } from './views/splitter-details';\r\nimport { SpliceClosureDetails } from './views/spliceClosure-details';\r\nimport { CableService } from './services/cable.service';\r\nimport { ChamberService } from './services/chamber.service';\r\nimport { DuctService } from './services/duct.service';\r\nimport { ODFService } from './services/odf.service';\r\nimport { PoleService } from './services/pole.service';\r\nimport { SpliceClosureService } from './services/spliceClosure.service';\r\nimport { SplitterService } from './services/splitter.service';\r\nimport { SupplierComponent } from './components/supplier';\r\nimport { HomepassService } from './services/homepass.service';\r\nimport { HomepassDetails } from './views/homepass-details';\r\n\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        MatRadioModule, MatSelectModule, MatCheckboxModule, MatSliderModule,\r\n        EntitiesRouting\r\n    ],\r\n    declarations: [\r\n        EntityList,\r\n        CustomFields,\r\n        SupplierComponent,\r\n        CableDetails,\r\n        ChamberDetails,\r\n        DuctDetails,\r\n        ODFDetails,\r\n        PoleDetails,\r\n        SplitterDetails,\r\n        SpliceClosureDetails,\r\n        HomepassDetails\r\n    ],\r\n    providers: [\r\n        CableService,\r\n        ChamberService,\r\n        DuctService,\r\n        ODFService,\r\n        PoleService,\r\n        SpliceClosureService,\r\n        SplitterService,\r\n        HomepassService\r\n    ]\r\n})\r\nexport class EntitiesModule { }\r\n","import { ModuleWithProviders } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { EntityList } from './views/entity-list';\r\nimport { CableDetails } from './views/cable-details';\r\nimport { ChamberDetails } from './views/chamber-details';\r\nimport { DuctDetails } from './views/duct-details';\r\nimport { ODFDetails } from './views/odf-details';\r\nimport { PoleDetails } from './views/pole-details';\r\nimport { SplitterDetails } from './views/splitter-details';\r\nimport { SpliceClosureDetails } from './views/spliceClosure-details';\r\nimport { HomepassDetails } from './views/homepass-details';\r\n\r\nexport const entitiesRoutes: Routes = [\r\n   {\r\n      path: 'entities',\r\n      children: [\r\n          { path: '', component: EntityList },\r\n          { path: 'cable', component: CableDetails },\r\n          { path: 'cable/:id', component: CableDetails },\r\n          { path: 'chamber', component: ChamberDetails },\r\n          { path: 'chamber/:id', component: ChamberDetails },\r\n          { path: 'duct', component: DuctDetails },\r\n          { path: 'duct/:id', component: DuctDetails },\r\n          { path: 'odf', component: ODFDetails },\r\n          { path: 'odf/:id', component: ODFDetails },\r\n          { path: 'pole', component: PoleDetails },\r\n          { path: 'pole/:id', component: PoleDetails },\r\n          { path: 'splitter', component: SplitterDetails },\r\n          { path: 'splitter/:id', component: SplitterDetails },\r\n          { path: 'spliceclosure', component: SpliceClosureDetails },\r\n          { path: 'spliceclosure/:id', component: SpliceClosureDetails },\r\n          { path: 'homepass', component: HomepassDetails },\r\n          { path: 'homepass/:id', component: HomepassDetails },\r\n      ]\r\n   },\r\n];\r\n\r\nexport const EntitiesRouting: ModuleWithProviders = RouterModule.forChild(entitiesRoutes);\r\n","import { CustomField } from '../../common/models/customField';\r\nimport { DbBaseEntity } from '../../common/models/dbBaseEntity';\r\nimport { FileAttachment } from '../../common/models/FileAttachment';\r\nimport { Supplier } from '../../common/models/supplier';\r\n\r\nexport class BaseNetworkEntity extends DbBaseEntity {\r\n\r\n    name?: string;\r\n    icon?: string;\r\n    type?: string;\r\n    brand?: string;\r\n    model?: string;\r\n    zoomLevel?: number;\r\n\r\n    code?: string;\r\n    regionId?: string;\r\n    parentId?: string;\r\n    parentEntityType?: string;\r\n    constructionStage?: string;\r\n    activationStage?: string;\r\n    accessibility?: string;\r\n    hierarchyType?: string;\r\n    customFields?: CustomField[] = new Array<CustomField>();\r\n    photos?: FileAttachment[] = new Array<FileAttachment>();\r\n    attachments?: FileAttachment[] = new Array<FileAttachment>();\r\n    suppliers?: Supplier[] = new Array<Supplier>();\r\n\r\n    constructor(id?: string, code?: string) {\r\n        super();\r\n        this.id = id;\r\n        this.code = code;\r\n    }\r\n}\r\n","import { LineString } from '../../common/geo/geometry';\r\nimport { BaseNetworkEntity } from './baseNetworkEntity';\r\nimport { Installation } from './installation';\r\nimport { Optics } from './optics';\r\nimport { Owner } from './owner';\r\n\r\nexport class Cable extends BaseNetworkEntity {\r\n\r\n    aLocation?: string;\r\n    bLocation?: string;\r\n    geometry: LineString;\r\n    isUnderground?: boolean;\r\n    measuredLength?: number;\r\n    calculatedLength?: number;\r\n    noOfTubes?: number;\r\n    corePerTube?: number;\r\n    optics?: Optics = new Optics();\r\n    installation?: Installation = new Installation();\r\n    owner?: Owner = new Owner();\r\n\r\n    constructor(id?:string, code?: string, isUnderground?: boolean, noOfTubes?: number, corePerTube?: number, optics?: Optics) {\r\n        super(id, code);\r\n        this.isUnderground = isUnderground;\r\n        this.noOfTubes = noOfTubes;\r\n        this.corePerTube = corePerTube;\r\n        this.optics = optics==null? new Optics(): optics;\r\n    }\r\n}\r\n\r\n","import { Point } from '../../common/geo/geometry';\r\nimport { BaseNetworkEntity } from './baseNetworkEntity';\r\nimport { Installation } from './installation';\r\nimport { Owner } from './owner';\r\n\r\nexport class Chamber extends BaseNetworkEntity {\r\n\r\n    category?: string;\r\n    closureType?: string;\r\n    spliceTrayCount?: number;\r\n    isBuried?: boolean;\r\n\r\n    geometry: Point;\r\n    installation?: Installation = new Installation();\r\n    owner?: Owner = new Owner();\r\n}\r\n\r\n","import { LineString } from '../../common/geo/geometry';\r\nimport { BaseNetworkEntity } from './baseNetworkEntity';\r\nimport { Installation } from './installation';\r\nimport { Owner } from './owner';\r\n\r\nexport class Duct extends BaseNetworkEntity {\r\n\r\n    height?: number;\r\n    width?: number;\r\n    innerDiameter?: number;\r\n    outerDiameter?: number;\r\n\r\n    geometry: LineString;\r\n    measuredLength?: number;\r\n    calculatedLength?: number;\r\n\r\n    installation?: Installation = new Installation();\r\n    owner?: Owner = new Owner();\r\n}\r\n\r\n","import { Point } from '../../common/geo/geometry';\r\nimport { CustomField } from '../../common/models/customField';\r\nimport { DbBaseEntity } from '../../common/models/dbBaseEntity';\r\nimport { FileAttachment } from '../../common/models/FileAttachment';\r\n\r\nexport class Homepass extends DbBaseEntity {\r\n    name: string;\r\n    icon?: string;\r\n    zoomLevel?: number;\r\n\r\n    code: string;\r\n    description?: string;\r\n    type?: string;\r\n    geometry: Point;\r\n\r\n    customFields?: CustomField[] = new Array<CustomField>();\r\n    photos?: FileAttachment[] = new Array<FileAttachment>();\r\n    attachments?: FileAttachment[] = new Array<FileAttachment>();\r\n\r\n}\r\n","export class Installation {\r\n    number: string;\r\n    year?: number;\r\n    company: string;\r\n    technician: string;\r\n    productionYear?: number;\r\n    date?: string;\r\n}\r\n","import { Point } from '../../common/geo/geometry';\r\nimport { BaseNetworkEntity } from './baseNetworkEntity';\r\nimport { Installation } from './installation';\r\nimport { Owner } from './owner';\r\n\r\nexport class ODF extends BaseNetworkEntity {\r\n    noOfPorts?: number;\r\n    mountingType?: string;\r\n    height?: number;\r\n    width?: number;\r\n    length?: number;\r\n\r\n    geometry: Point;\r\n    installation?: Installation = new Installation();\r\n    owner?: Owner = new Owner();\r\n}\r\n","export class Optics {\r\n    frequency: number;\r\n    attenuationDb: number;\r\n    resistanceOhm: number;\r\n    opticalInPutPower: number;\r\n    opticalOutputPower: number;\r\n    wavelength: number;\r\n}\r\n","export class Owner {\r\n    name: string;\r\n    address: string;\r\n    mobileNumber: string;\r\n    fax: string;\r\n    emailId: string;\r\n}\r\n","import { Point } from '../../common/geo/geometry';\r\nimport { BaseNetworkEntity } from './baseNetworkEntity';\r\nimport { Installation } from './installation';\r\nimport { Owner } from './owner';\r\n\r\nexport class Pole extends BaseNetworkEntity {\r\n    height?: number;\r\n    geometry: Point;\r\n    installation?: Installation = new Installation();\r\n    owner?: Owner = new Owner();\r\n}\r\n","import { Point } from '../../common/geo/geometry';\r\nimport { BaseNetworkEntity } from './baseNetworkEntity';\r\nimport { Installation } from './installation';\r\nimport { Owner } from './owner';\r\n\r\nexport class SpliceClosure extends BaseNetworkEntity {\r\n    noOfPorts?: number;\r\n    geometry: Point;\r\n    installation?: Installation = new Installation();\r\n    owner?: Owner = new Owner();\r\n}\r\n","import { Point } from '../../common/geo/geometry';\r\nimport { BaseNetworkEntity } from './baseNetworkEntity';\r\nimport { Installation } from './installation';\r\nimport { Optics } from './optics';\r\nimport { Owner } from './owner';\r\n\r\nexport class Splitter extends BaseNetworkEntity {\r\n    splitterRatio?: string;\r\n    lossValue?: number;\r\n    optics?: Optics = new Optics();\r\n\r\n    geometry: Point;\r\n    installation?: Installation = new Installation();\r\n    owner?: Owner = new Owner();\r\n}\r\n","import { HttpClient, HttpParams } from \"@angular/common/http\";\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { PaginationRequest, SortOrder } from '../../common/models/paginationRequest';\r\nimport { ServiceResponse } from '../../common/models/serviceResponse';\r\nimport { Cable } from '../models/cable';\r\n\r\n@Injectable()\r\nexport class CableService {\r\n\r\n    getCablesApi = 'Cables/GetCables/';\r\n    getCableApi = 'Cables/GetCable/';\r\n    checkNameExistsApi = 'Cables/CheckNameExists/';\r\n    saveCableApi = 'Cables/SaveCable/';\r\n    deleteCableApi = 'Cables/DeleteCable/';\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    getCables(paginationRequest?: PaginationRequest): Observable<ServiceResponse> {\r\n\r\n        if (paginationRequest == null)\r\n            paginationRequest = {\r\n                page: null,\r\n                pageSize: null,\r\n                filter: null,\r\n                order: {\r\n                    orderByProperty: \"updatedDate\",\r\n                    sortOrder: SortOrder.descending\r\n                }\r\n            };\r\n\r\n        return this.http.post<ServiceResponse>(this.getCablesApi, paginationRequest);\r\n    }\r\n\r\n    getCable(cableId): Observable<ServiceResponse> {\r\n\r\n        const params = new HttpParams()\r\n            .set('cableId', cableId);\r\n\r\n        return this.http.get<ServiceResponse>(this.getCableApi, { params });\r\n    }\r\n\r\n    async checkNameExists(name: string): Promise<ServiceResponse> {\r\n\r\n        const params = new HttpParams()\r\n            .set('name', name);\r\n\r\n        return await this.http.get<ServiceResponse>(this.checkNameExistsApi, { params }).toPromise();\r\n    }\r\n\r\n    saveCable(cable: Cable): Observable<ServiceResponse> {\r\n        return this.http.post<ServiceResponse>(this.saveCableApi, cable);\r\n    }\r\n\r\n    deleteCable(cableId: string): Observable<ServiceResponse> {\r\n\r\n        const params = new HttpParams()\r\n            .set('cableId', cableId);\r\n\r\n        return this.http.delete<ServiceResponse>(this.deleteCableApi, { params });\r\n    }\r\n\r\n}\r\n","import { HttpClient, HttpParams } from \"@angular/common/http\";\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { PaginationRequest, SortOrder } from '../../common/models/paginationRequest';\r\nimport { ServiceResponse } from '../../common/models/serviceResponse';\r\nimport { Chamber } from '../models/chamber';\r\n\r\n\r\n@Injectable()\r\nexport class ChamberService {\r\n\r\n    getChambersApi = 'Chambers/GetChambers/';\r\n    getChamberApi = 'Chambers/GetChamber/';\r\n    checkNameExistsApi = 'Chambers/CheckNameExists/';\r\n    saveChamberApi = 'Chambers/SaveChamber/';\r\n    deleteChamberApi = 'Chambers/DeleteChamber/';\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    getChambers(paginationRequest?: PaginationRequest): Observable<ServiceResponse> {\r\n\r\n        if (paginationRequest == null)\r\n            paginationRequest = {\r\n                page: null,\r\n                pageSize: null,\r\n                filter: null,\r\n                order: {\r\n                    orderByProperty: \"updatedDate\",\r\n                    sortOrder: SortOrder.descending\r\n                }\r\n            };\r\n\r\n        return this.http.post<ServiceResponse>(this.getChambersApi, paginationRequest);\r\n    }\r\n\r\n    getChamber(chamberId): Observable<ServiceResponse> {\r\n\r\n        const params = new HttpParams()\r\n            .set('chamberId', chamberId);\r\n\r\n        return this.http.get<ServiceResponse>(this.getChamberApi, { params });\r\n    }\r\n\r\n    async checkNameExists(name: string): Promise<ServiceResponse> {\r\n\r\n        const params = new HttpParams()\r\n            .set('name', name);\r\n\r\n        return await this.http.get<ServiceResponse>(this.checkNameExistsApi, { params }).toPromise();\r\n    }\r\n\r\n    saveChamber(chamber: Chamber): Observable<ServiceResponse> {\r\n        return this.http.post<ServiceResponse>(this.saveChamberApi, chamber);\r\n    }\r\n\r\n    deleteChamber(chamberId: string): Observable<ServiceResponse> {\r\n\r\n        const params = new HttpParams()\r\n            .set('chamberId', chamberId);\r\n\r\n        return this.http.delete<ServiceResponse>(this.deleteChamberApi, { params });\r\n    }\r\n}\r\n","import { HttpClient, HttpParams } from \"@angular/common/http\";\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { PaginationRequest, SortOrder } from '../../common/models/paginationRequest';\r\nimport { ServiceResponse } from '../../common/models/serviceResponse';\r\nimport { Duct } from '../models/duct';\r\n\r\n\r\n@Injectable()\r\nexport class DuctService {\r\n\r\n    getDuctsApi = 'Ducts/GetDucts/';\r\n    getDuctApi = 'Ducts/GetDuct/';\r\n    checkNameExistsApi = 'Ducts/CheckNameExists/';\r\n    saveDuctApi = 'Ducts/SaveDuct/';\r\n    deleteDuctApi = 'Ducts/DeleteDuct/';\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    getDucts(paginationRequest?: PaginationRequest): Observable<ServiceResponse> {\r\n\r\n        if (paginationRequest == null)\r\n            paginationRequest = {\r\n                page: null,\r\n                pageSize: null,\r\n                filter: null,\r\n                order: {\r\n                    orderByProperty: \"updatedDate\",\r\n                    sortOrder: SortOrder.descending\r\n                }\r\n            };\r\n\r\n        return this.http.post<ServiceResponse>(this.getDuctsApi, paginationRequest);\r\n    }\r\n\r\n    getDuct(ductId): Observable<ServiceResponse> {\r\n\r\n        const params = new HttpParams()\r\n            .set('ductId', ductId);\r\n\r\n        return this.http.get<ServiceResponse>(this.getDuctApi, { params });\r\n    }\r\n\r\n    async checkNameExists(name: string): Promise<ServiceResponse> {\r\n\r\n        const params = new HttpParams()\r\n            .set('name', name);\r\n\r\n        return await this.http.get<ServiceResponse>(this.checkNameExistsApi, { params }).toPromise();\r\n    }\r\n\r\n    saveDuct(duct: Duct): Observable<ServiceResponse> {\r\n        return this.http.post<ServiceResponse>(this.saveDuctApi, duct);\r\n    }\r\n\r\n    deleteDuct(ductId: string): Observable<ServiceResponse> {\r\n\r\n        const params = new HttpParams()\r\n            .set('ductId', ductId);\r\n\r\n        return this.http.delete<ServiceResponse>(this.deleteDuctApi, { params });\r\n    }\r\n}\r\n","import { HttpClient, HttpParams } from \"@angular/common/http\";\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { PaginationRequest, SortOrder } from '../../common/models/paginationRequest';\r\nimport { PaginationResponse } from '../../common/models/paginationResponse';\r\nimport { ServiceResponse } from '../../common/models/serviceResponse';\r\nimport { Homepass } from '../models/homepass';\r\n\r\n@Injectable()\r\nexport class HomepassService {\r\n\r\n    getHomepassesApi = 'Homepasses/GetHomepasses/';\r\n    getHomepassApi = 'Homepasses/GetHomepass/';\r\n    checkNameExistsApi = 'Homepasses/CheckNameExists/';\r\n    saveHomepassApi = 'Homepasses/SaveHomepass/';\r\n    deleteHomepassApi = 'Homepasses/DeleteHomepass/';\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    getHomepasses(paginationRequest: PaginationRequest): Observable<PaginationResponse> {\r\n\r\n        if (paginationRequest == null)\r\n            paginationRequest = {\r\n                page: null,\r\n                pageSize: null,\r\n                filter: null,\r\n                order: {\r\n                    orderByProperty: \"name\",\r\n                    sortOrder: SortOrder.descending\r\n                }\r\n            };\r\n\r\n        return this.http.post<PaginationResponse>(this.getHomepassesApi, paginationRequest);\r\n    }\r\n\r\n    getHomepass(homepassId): Observable<ServiceResponse> {\r\n\r\n        const params = new HttpParams()\r\n            .set('homepassId', homepassId);\r\n\r\n        return this.http.get<ServiceResponse>(this.getHomepassApi, { params });\r\n    }\r\n\r\n    async checkNameExists(name: string): Promise<boolean> {\r\n\r\n        const params = new HttpParams()\r\n            .set('name', name);\r\n\r\n        return await this.http.get<boolean>(this.checkNameExistsApi, { params }).toPromise();\r\n    }\r\n\r\n    saveHomepass(homepass: Homepass): Observable<ServiceResponse> {\r\n\r\n        return this.http.post<ServiceResponse>(this.saveHomepassApi, homepass);\r\n    }\r\n\r\n    deleteHomepass(homepassId: string): Observable<ServiceResponse> {\r\n\r\n        const params = new HttpParams()\r\n            .set('homepassId', homepassId);\r\n\r\n        return this.http.delete<ServiceResponse>(this.deleteHomepassApi, { params });\r\n    }\r\n}\r\n","import { HttpClient, HttpParams } from \"@angular/common/http\";\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { PaginationRequest, SortOrder } from '../../common/models/paginationRequest';\r\nimport { ServiceResponse } from '../../common/models/serviceResponse';\r\nimport { ODF } from '../models/odf';\r\n\r\n\r\n@Injectable()\r\nexport class ODFService {\r\n\r\n    getODFsApi = 'ODFs/GetODFs/';\r\n    getODFApi = 'ODFs/GetODF/';\r\n    checkNameExistsApi = 'ODFs/CheckNameExists/';\r\n    saveODFApi = 'ODFs/SaveODF/';\r\n    deleteODFApi = 'ODFs/DeleteODF/';\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    getODFs(paginationRequest: PaginationRequest): Observable<ServiceResponse> {\r\n\r\n        if (paginationRequest == null)\r\n            paginationRequest = {\r\n                page: null,\r\n                pageSize: null,\r\n                filter: null,\r\n                order: {\r\n                    orderByProperty: \"updatedDate\",\r\n                    sortOrder: SortOrder.descending\r\n                }\r\n            };\r\n\r\n        return this.http.post<ServiceResponse>(this.getODFsApi, paginationRequest);\r\n    }\r\n\r\n    getODF(odfId): Observable<ServiceResponse> {\r\n\r\n        const params = new HttpParams()\r\n            .set('odfId', odfId);\r\n\r\n        return this.http.get<ServiceResponse>(this.getODFApi, { params });\r\n    }\r\n\r\n    async checkNameExists(name: string): Promise<ServiceResponse> {\r\n\r\n        const params = new HttpParams()\r\n            .set('name', name);\r\n\r\n        return await this.http.get<ServiceResponse>(this.checkNameExistsApi, { params }).toPromise();\r\n    }\r\n\r\n    saveODF(odf: ODF): Observable<ServiceResponse> {\r\n        return this.http.post<ServiceResponse>(this.saveODFApi, odf);\r\n    }\r\n\r\n    deleteODF(odfId: string): Observable<ServiceResponse> {\r\n\r\n        const params = new HttpParams()\r\n            .set('odfId', odfId);\r\n\r\n        return this.http.delete<ServiceResponse>(this.deleteODFApi, { params });\r\n    }\r\n\r\n}\r\n","import { HttpClient, HttpParams } from \"@angular/common/http\";\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { PaginationRequest, SortOrder } from '../../common/models/paginationRequest';\r\nimport { ServiceResponse } from '../../common/models/serviceResponse';\r\nimport { Pole } from '../models/pole';\r\n\r\n\r\n@Injectable()\r\nexport class PoleService {\r\n\r\n    getPolesApi = 'Poles/GetPoles/';\r\n    getPoleApi = 'Poles/GetPole/';\r\n    checkNameExistsApi = 'Poles/CheckNameExists/';\r\n    savePoleApi = 'Poles/SavePole/';\r\n    deletePoleApi = 'Poles/DeletePole/';\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    getPoles(paginationRequest?: PaginationRequest): Observable<ServiceResponse> {\r\n\r\n        if (paginationRequest == null)\r\n            paginationRequest = {\r\n                page: null,\r\n                pageSize: null,\r\n                filter: null,\r\n                order: {\r\n                    orderByProperty: \"updatedDate\",\r\n                    sortOrder: SortOrder.descending\r\n                }\r\n            };\r\n\r\n        return this.http.post<ServiceResponse>(this.getPolesApi, paginationRequest);\r\n    }\r\n\r\n    getPole(poleId): Observable<ServiceResponse> {\r\n\r\n        const params = new HttpParams()\r\n            .set('poleId', poleId);\r\n\r\n        return this.http.get<ServiceResponse>(this.getPoleApi, { params });\r\n    }\r\n\r\n    async checkNameExists(name: string): Promise<ServiceResponse> {\r\n\r\n        const params = new HttpParams()\r\n            .set('name', name);\r\n\r\n        return await this.http.get<ServiceResponse>(this.checkNameExistsApi, { params }).toPromise();\r\n    }\r\n\r\n    savePole(pole: Pole): Observable<ServiceResponse> {\r\n        return this.http.post<ServiceResponse>(this.savePoleApi, pole);\r\n    }\r\n\r\n    deletePole(poleId: string): Observable<ServiceResponse> {\r\n\r\n        const params = new HttpParams()\r\n            .set('poleId', poleId);\r\n\r\n        return this.http.delete<ServiceResponse>(this.deletePoleApi, { params });\r\n    }\r\n\r\n}\r\n","import { HttpClient, HttpParams } from \"@angular/common/http\";\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { PaginationRequest, SortOrder } from '../../common/models/paginationRequest';\r\nimport { ServiceResponse } from '../../common/models/serviceResponse';\r\nimport { SpliceClosure } from '../models/spliceClosure';\r\n\r\n\r\n@Injectable()\r\nexport class SpliceClosureService {\r\n\r\n    getSpliceClosuresApi = 'SpliceClosures/GetSpliceClosures/';\r\n    getSpliceClosureApi = 'SpliceClosures/GetSpliceClosure/';\r\n    checkNameExistsApi = 'SpliceClosures/CheckNameExists/';\r\n    saveSpliceClosureApi = 'SpliceClosures/SaveSpliceClosure/';\r\n    deleteSpliceClosureApi = 'SpliceClosures/DeleteSpliceClosure/';\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    getSpliceClosures(paginationRequest?: PaginationRequest): Observable<ServiceResponse> {\r\n\r\n        if (paginationRequest == null)\r\n            paginationRequest = {\r\n                page: null,\r\n                pageSize: null,\r\n                filter: null,\r\n                order: {\r\n                    orderByProperty: \"updatedDate\",\r\n                    sortOrder: SortOrder.descending\r\n                }\r\n            };\r\n\r\n        return this.http.post<ServiceResponse>(this.getSpliceClosuresApi, paginationRequest);\r\n    }\r\n\r\n    getSpliceClosure(spliceClosureId): Observable<ServiceResponse> {\r\n\r\n        const params = new HttpParams()\r\n            .set('spliceClosureId', spliceClosureId);\r\n\r\n        return this.http.get<ServiceResponse>(this.getSpliceClosureApi, { params });\r\n    }\r\n\r\n    async checkNameExists(name: string): Promise<ServiceResponse> {\r\n\r\n        const params = new HttpParams()\r\n            .set('name', name);\r\n\r\n        return await this.http.get<ServiceResponse>(this.checkNameExistsApi, { params }).toPromise();\r\n    }\r\n\r\n    saveSpliceClosure(spliceClosure: SpliceClosure): Observable<ServiceResponse> {\r\n        return this.http.post<ServiceResponse>(this.saveSpliceClosureApi, spliceClosure);\r\n    }\r\n\r\n    deleteSpliceClosure(spliceClosureId: string): Observable<ServiceResponse> {\r\n\r\n        const params = new HttpParams()\r\n            .set('spliceClosureId', spliceClosureId);\r\n\r\n        return this.http.delete<ServiceResponse>(this.deleteSpliceClosureApi, { params });\r\n    }\r\n}\r\n","import { HttpClient, HttpParams } from \"@angular/common/http\";\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { PaginationRequest, SortOrder } from '../../common/models/paginationRequest';\r\nimport { ServiceResponse } from '../../common/models/serviceResponse';\r\nimport { Splitter } from '../models/splitter';\r\n\r\n\r\n@Injectable()\r\nexport class SplitterService {\r\n\r\n    getSplittersApi = 'Splitters/GetSplitters/';\r\n    getSplitterApi = 'Splitters/GetSplitter/';\r\n    checkNameExistsApi = 'Splitters/CheckNameExists/';\r\n    saveSplitterApi = 'Splitters/SaveSplitter/';\r\n    deleteSplitterApi = 'Splitters/DeleteSplitter/';\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    getSplitters(paginationRequest?: PaginationRequest): Observable<ServiceResponse> {\r\n\r\n        if (paginationRequest == null)\r\n            paginationRequest = {\r\n                page: null,\r\n                pageSize: null,\r\n                filter: null,\r\n                order: {\r\n                    orderByProperty: \"updatedDate\",\r\n                    sortOrder: SortOrder.descending\r\n                }\r\n            };\r\n\r\n        return this.http.post<ServiceResponse>(this.getSplittersApi, paginationRequest);\r\n    }\r\n\r\n    getSplitter(splitterId): Observable<ServiceResponse> {\r\n\r\n        const params = new HttpParams()\r\n            .set('splitterId', splitterId);\r\n\r\n        return this.http.get<ServiceResponse>(this.getSplitterApi, { params });\r\n    }\r\n\r\n    async checkNameExists(name: string): Promise<ServiceResponse> {\r\n\r\n        const params = new HttpParams()\r\n            .set('name', name);\r\n\r\n        return await this.http.get<ServiceResponse>(this.checkNameExistsApi, { params }).toPromise();\r\n    }\r\n\r\n    saveSplitter(splitter: Splitter): Observable<ServiceResponse> {\r\n        return this.http.post<ServiceResponse>(this.saveSplitterApi, splitter);\r\n    }\r\n\r\n    deleteSplitter(splitterId: string): Observable<ServiceResponse> {\r\n\r\n        const params = new HttpParams()\r\n            .set('splitterId', splitterId);\r\n\r\n        return this.http.delete<ServiceResponse>(this.deleteSplitterApi, { params });\r\n    }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport { forkJoin } from 'rxjs';\r\n\r\nimport { Helper } from '../../common/helper';\r\nimport { CableService } from '../services/cable.service';\r\nimport { Cable } from '../models/cable';\r\n\r\ndeclare var $: any;\r\n\r\n@Component({\r\n    templateUrl: './cable-details.html',\r\n    providers: [CableService],\r\n})\r\nexport class CableDetails implements OnInit {\r\n\r\n    cableId: string;\r\n    cable: Cable;\r\n    title: string = \"New Cable\";\r\n\r\n    constructor(\r\n        private location: Location,\r\n        private route: ActivatedRoute,\r\n        private cableService: CableService,\r\n        private helper: Helper) {\r\n\r\n        this.cable = new Cable();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.route.params.subscribe(\r\n            params => {\r\n                this.cableId = params['id'];\r\n\r\n                if (this.cableId != null)\r\n                    this.title = \"Edit Cable\";\r\n                else {\r\n                    this.title = \"New Cable\";\r\n                }\r\n\r\n                this.getFormData(this.cableId);\r\n\r\n            });\r\n    }\r\n\r\n    getFormData(cableId: string) {\r\n\r\n        if (cableId != null) {\r\n\r\n            $(\"#ajax-loading\").show();\r\n\r\n            this.cableService.getCable(cableId).subscribe(\r\n                resp => {\r\n                    this.cable = new Cable();\r\n\r\n                    if (resp.status.toLowerCase() == \"error\") {\r\n                        this.helper.showAlertMessage(resp.message, \"error\");\r\n                    }\r\n                    else {\r\n                        if (resp.data != null) {\r\n                            this.cable = resp.data;\r\n                        }\r\n                    }\r\n\r\n                    $(\"#ajax-loading\").hide();\r\n                },\r\n                (err) => {\r\n                    $(\"#ajax-loading\").hide();\r\n                    this.cable = new Cable();\r\n                    this.helper.showAlertMessage(\"Unable to fetch cable details\", \"error\");\r\n                });\r\n        }\r\n        else\r\n            this.cable = new Cable();\r\n    }\r\n\r\n    async save() {\r\n\r\n        var errorMessages = await this.validateEntity(this.cable);\r\n\r\n        if (errorMessages.length == 0) {\r\n\r\n            this.cableService.saveCable(this.cable).subscribe(\r\n                resp => {\r\n\r\n                    if (resp.status.toLowerCase() == \"error\") {\r\n                        this.helper.showAlertMessage(resp.message, \"error\");\r\n                    }\r\n                    else {\r\n                        if (resp.data != null) {\r\n                            this.helper.showAlertMessage(\"Cable information saved\", \"success\");\r\n                            this.goBack();\r\n                        }\r\n                        else\r\n                            this.helper.showAlertMessage(\"Unable to save cable information.\", \"error\");\r\n                    }\r\n                },\r\n                (err) => {\r\n                    //let msg = `Unable to save user information : ${err.message}`;\r\n                    this.helper.showAlertMessage(\"Unable to save cable information.\", \"error\");\r\n                });\r\n        }\r\n        else {\r\n            this.helper.showAlertMessage(this.helper.getErrorMessagesText(errorMessages), \"error\");\r\n        }\r\n    }\r\n\r\n    async validateEntity(cable: Cable): Promise<string[]> {\r\n        var errorMessages = [];\r\n\r\n        if (cable.name == null || cable.name.trim() == '')\r\n            errorMessages.push(\"Name cannot be empty.\");\r\n        else {\r\n            let resp = await this.cableService.checkNameExists(cable.name);\r\n\r\n            if (resp)\r\n                errorMessages.push(\"Name already exists.\");\r\n        }\r\n    //    if (user.loginId == null || user.loginId.trim() == \"\")\r\n    //        errorMessages.push(\"Login Id cannot be empty string\");\r\n\r\n    //    //if (user.password == null || user.password.trim() == \"\")\r\n    //    //   errorMessages.push(\"Password cannot be empty string\");\r\n\r\n        return errorMessages;\r\n    }\r\n\r\n    goBack(): void {\r\n        this.location.back();\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport { forkJoin } from 'rxjs';\r\n\r\nimport { Helper } from '../../common/helper';\r\nimport { ChamberService } from '../services/chamber.service';\r\nimport { Chamber } from '../models/chamber';\r\n\r\ndeclare var $: any;\r\n\r\n@Component({\r\n    templateUrl: './chamber-details.html',\r\n    providers: [ChamberService],\r\n})\r\nexport class ChamberDetails implements OnInit {\r\n\r\n    chamberId: string;\r\n    chamber: Chamber;\r\n    title: string = \"New Chamber\";\r\n\r\n    constructor(\r\n        private location: Location,\r\n        private route: ActivatedRoute,\r\n        private chamberService: ChamberService,\r\n        private helper: Helper) {\r\n\r\n        this.chamber = new Chamber();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.route.params.subscribe(\r\n            params => {\r\n                this.chamberId = params['id'];\r\n\r\n                if (this.chamberId != null)\r\n                    this.title = \"Edit Chamber\";\r\n                else {\r\n                    this.title = \"New Chamber\";\r\n                }\r\n\r\n                this.getFormData(this.chamberId);\r\n\r\n            });\r\n    }\r\n\r\n    getFormData(chamberId: string) {\r\n\r\n        if (chamberId != null) {\r\n\r\n            $(\"#ajax-loading\").show();\r\n\r\n            this.chamberService.getChamber(chamberId).subscribe(\r\n                resp => {\r\n                    this.chamber = new Chamber();\r\n\r\n                    if (resp.status.toLowerCase() == \"error\") {\r\n                        this.helper.showAlertMessage(resp.message, \"error\");\r\n                    }\r\n                    else {\r\n                        if (resp.data != null) {\r\n                            this.chamber = resp.data;\r\n                        }\r\n                    }\r\n\r\n                    $(\"#ajax-loading\").hide();\r\n                },\r\n                (err) => {\r\n                    $(\"#ajax-loading\").hide();\r\n                    this.chamber = new Chamber();\r\n                    this.helper.showAlertMessage(\"Unable to fetch chamber details\", \"error\");\r\n                });\r\n        }\r\n        else\r\n            this.chamber = new Chamber();\r\n    }\r\n\r\n    async save() {\r\n\r\n        var errorMessages = await this.validateEntity(this.chamber);\r\n\r\n        if (errorMessages.length == 0) {\r\n\r\n            this.chamberService.saveChamber(this.chamber).subscribe(\r\n                resp => {\r\n\r\n                    if (resp.status.toLowerCase() == \"error\") {\r\n                        this.helper.showAlertMessage(resp.message, \"error\");\r\n                    }\r\n                    else {\r\n                        if (resp.data != null) {\r\n                            this.helper.showAlertMessage(\"Chamber information saved\", \"success\");\r\n                            this.goBack();\r\n                        }\r\n                        else\r\n                            this.helper.showAlertMessage(\"Unable to save chamber information.\", \"error\");\r\n                    }\r\n                },\r\n                (err) => {\r\n                    //let msg = `Unable to save user information : ${err.message}`;\r\n                    this.helper.showAlertMessage(\"Unable to save chamber information.\", \"error\");\r\n                });\r\n        }\r\n        else {\r\n            this.helper.showAlertMessage(this.helper.getErrorMessagesText(errorMessages), \"error\");\r\n        }\r\n    }\r\n\r\n    async validateEntity(chamber: Chamber): Promise<string[]> {\r\n        var errorMessages = [];\r\n\r\n        if (chamber.name == null || chamber.name.trim() == '')\r\n            errorMessages.push(\"Name cannot be empty.\");\r\n        else {\r\n            let resp = await this.chamberService.checkNameExists(chamber.name);\r\n\r\n            if (resp)\r\n                errorMessages.push(\"Name already exists.\");\r\n        }\r\n        //    if (user.loginId == null || user.loginId.trim() == \"\")\r\n        //        errorMessages.push(\"Login Id cannot be empty string\");\r\n\r\n        //    //if (user.password == null || user.password.trim() == \"\")\r\n        //    //   errorMessages.push(\"Password cannot be empty string\");\r\n\r\n        return errorMessages;\r\n    }\r\n\r\n    goBack(): void {\r\n        this.location.back();\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\n\r\nimport { Helper } from '../../common/helper';\r\nimport { DuctService } from '../services/duct.service';\r\nimport { Duct } from '../models/duct';\r\n\r\ndeclare var $: any;\r\n\r\n@Component({\r\n    templateUrl: './duct-details.html',\r\n    providers: [DuctService],\r\n})\r\nexport class DuctDetails implements OnInit {\r\n\r\n    ductId: string;\r\n    duct: Duct;\r\n    title: string = \"New Duct\";\r\n\r\n    constructor(\r\n        private location: Location,\r\n        private route: ActivatedRoute,\r\n        private ductService: DuctService,\r\n        private helper: Helper) {\r\n\r\n        this.duct = new Duct();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.route.params.subscribe(\r\n            params => {\r\n                this.ductId = params['id'];\r\n\r\n                if (this.ductId != null)\r\n                    this.title = \"Edit Duct\";\r\n                else {\r\n                    this.title = \"New Duct\";\r\n                }\r\n\r\n                this.getFormData(this.ductId);\r\n\r\n            });\r\n    }\r\n\r\n    getFormData(ductId: string) {\r\n\r\n        if (ductId != null) {\r\n\r\n            $(\"#ajax-loading\").show();\r\n\r\n            this.ductService.getDuct(ductId).subscribe(\r\n                resp => {\r\n                    this.duct = new Duct();\r\n\r\n                    if (resp.status.toLowerCase() == \"error\") {\r\n                        this.helper.showAlertMessage(resp.message, \"error\");\r\n                    }\r\n                    else {\r\n                        if (resp.data != null) {\r\n                            this.duct = resp.data;\r\n                        }\r\n                    }\r\n\r\n                    $(\"#ajax-loading\").hide();\r\n                },\r\n                (err) => {\r\n                    $(\"#ajax-loading\").hide();\r\n                    this.duct = new Duct();\r\n                    this.helper.showAlertMessage(\"Unable to fetch duct details\", \"error\");\r\n                });\r\n        }\r\n        else\r\n            this.duct = new Duct();\r\n    }\r\n\r\n    async save() {\r\n\r\n        var errorMessages = await this.validateEntity(this.duct);\r\n\r\n        if (errorMessages.length == 0) {\r\n\r\n            this.ductService.saveDuct(this.duct).subscribe(\r\n                resp => {\r\n\r\n                    if (resp.status.toLowerCase() == \"error\") {\r\n                        this.helper.showAlertMessage(resp.message, \"error\");\r\n                    }\r\n                    else {\r\n                        if (resp.data != null) {\r\n                            this.helper.showAlertMessage(\"Duct information saved\", \"success\");\r\n                            this.goBack();\r\n                        }\r\n                        else\r\n                            this.helper.showAlertMessage(\"Unable to save duct information.\", \"error\");\r\n                    }\r\n                },\r\n                (err) => {\r\n                    //let msg = `Unable to save user information : ${err.message}`;\r\n                    this.helper.showAlertMessage(\"Unable to save duct information.\", \"error\");\r\n                });\r\n        }\r\n        else {\r\n            this.helper.showAlertMessage(this.helper.getErrorMessagesText(errorMessages), \"error\");\r\n        }\r\n    }\r\n\r\n    async validateEntity(duct: Duct): Promise<string[]> {\r\n        var errorMessages = [];\r\n\r\n        if (duct.name == null || duct.name.trim() == '')\r\n                errorMessages.push(\"Name cannot be empty.\");\r\n        else {\r\n            let resp = await this.ductService.checkNameExists(duct.name);\r\n\r\n            if (resp)\r\n                errorMessages.push(\"Name already exists.\");\r\n        }\r\n        //    if (user.loginId == null || user.loginId.trim() == \"\")\r\n        //        errorMessages.push(\"Login Id cannot be empty string\");\r\n\r\n        //    //if (user.password == null || user.password.trim() == \"\")\r\n        //    //   errorMessages.push(\"Password cannot be empty string\");\r\n\r\n        return errorMessages;\r\n    }\r\n\r\n    goBack(): void {\r\n        this.location.back();\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { forkJoin } from 'rxjs';\r\n\r\nimport { Helper } from '../../common/helper';\r\nimport { SortOrder, SearchFilter, ConditionOperator, Filter, Operator } from '../../common/models/paginationRequest';\r\nimport { SearchField } from '../../common/models/SearchField';\r\nimport { CableService } from '../services/cable.service';\r\nimport { ChamberService } from '../services/chamber.service';\r\nimport { ODFService } from '../services/odf.service';\r\nimport { DuctService } from '../services/duct.service';\r\nimport { PoleService } from '../services/pole.service';\r\nimport { SpliceClosureService } from '../services/spliceClosure.service';\r\nimport { SplitterService } from '../services/splitter.service';\r\nimport { BaseNetworkEntity } from '../models/baseNetworkEntity';\r\nimport { HomepassService } from '../services/homepass.service';\r\n\r\ndeclare var $: any;\r\ndeclare var jBox: any;\r\n\r\n@Component({\r\n    templateUrl: './entity-list.html',\r\n})\r\nexport class EntityList implements OnInit {\r\n\r\n    statusMessage: string = \"\";\r\n    pageSize = 10;\r\n    currentPage = 1;\r\n    totalPages = 1;\r\n    searchFields: SearchField[];\r\n    searchFilter: SearchFilter;\r\n    selectedField: SearchField;\r\n    searchText: string;\r\n    sortColumn: string;\r\n    sortOrder: SortOrder = SortOrder.descending;\r\n    previousElement: HTMLElement;\r\n    selectedEntityType: string = \"Cable\";\r\n    entities: BaseNetworkEntity[];\r\n\r\n\r\n    constructor(\r\n        private cableService: CableService,\r\n        private chamberService: ChamberService,\r\n        private ductService: DuctService,\r\n        private odfService: ODFService,\r\n        private poleService: PoleService,\r\n        private spliceClosureService: SpliceClosureService,\r\n        private splitterService: SplitterService,\r\n        private homepassService: HomepassService,\r\n        private helper: Helper) {\r\n\r\n        this.searchFields = new Array<SearchField>();\r\n        this.searchFields.push({ field: 'Name', label: 'Name', dataType: \"text\", value: \"\" });\r\n        this.searchFields.push({ field: 'UpdatedBy', label: 'Updated By', dataType: \"text\", value: \"\" });\r\n        this.searchFields.push({ field: 'UpdatedDate', label: 'Updated On', dataType: \"date\", value: \"\" });\r\n\r\n        this.selectedField = this.searchFields[0];\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n        this.statusMessage = \"Loading Entities...\";\r\n        this.pageSize = 10;\r\n        this.currentPage = 1;\r\n        this.sortColumn = null;\r\n        this.sortOrder = SortOrder.noSort;\r\n        this.searchText = \"\";\r\n        this.getFormData();\r\n    }\r\n\r\n    getFormData() {\r\n\r\n        $(\"#ajax-loading\").show();\r\n\r\n        this.totalPages = 1;\r\n\r\n        let paginationRequest = {\r\n            page: this.currentPage,\r\n            pageSize: this.pageSize,\r\n            filter: this.searchFilter,\r\n            order: {\r\n                orderByProperty: this.sortColumn,\r\n                sortOrder: this.sortOrder\r\n            }\r\n        };\r\n\r\n        let entitySvc = null;\r\n\r\n        switch (this.selectedEntityType) {\r\n            case \"Cable\":\r\n                entitySvc = this.cableService.getCables(paginationRequest);\r\n                break;\r\n            case \"Chamber\":\r\n                entitySvc = this.chamberService.getChambers(paginationRequest);\r\n                break;\r\n            case \"Duct\":\r\n                entitySvc = this.ductService.getDucts(paginationRequest);\r\n                break;\r\n            case \"ODF\":\r\n                entitySvc = this.odfService.getODFs(paginationRequest);\r\n                break;\r\n            case \"Pole\":\r\n                entitySvc = this.poleService.getPoles(paginationRequest);\r\n                break;\r\n            case \"SpliceClosure\":\r\n                entitySvc = this.spliceClosureService.getSpliceClosures(paginationRequest);\r\n                break;\r\n            case \"Splitter\":\r\n                entitySvc = this.splitterService.getSplitters(paginationRequest);\r\n                break;\r\n            case \"Homepass\":\r\n                entitySvc = this.homepassService.getHomepasses(paginationRequest);\r\n                break;\r\n            default:\r\n                entitySvc = this.cableService.getCables(paginationRequest);\r\n        }\r\n\r\n        entitySvc.subscribe(\r\n            resp => {\r\n                this.entities = null;\r\n                if (resp.status.toLowerCase() == \"error\") {\r\n                    this.statusMessage = resp.message;\r\n                    this.helper.showAlertMessage(this.statusMessage, \"error\");\r\n                }\r\n                else {\r\n                    if (resp.data != null && resp.data.length > 0) {\r\n                        this.entities = resp.data;\r\n                        this.totalPages = Math.ceil(resp.recordCount / this.pageSize);\r\n                    }\r\n                    else {\r\n                        this.statusMessage = \"There are no registered entities.\";\r\n                    }\r\n                }\r\n\r\n                $(\"#ajax-loading\").hide();\r\n            },\r\n            (err) => {\r\n                $(\"#ajax-loading\").hide();\r\n                this.entities = null;\r\n                let msg = `Unable to fetch entities : ${err.message}`;\r\n                this.helper.showAlertMessage(msg, \"error\");\r\n                this.statusMessage = \"Error fetching entities.\";\r\n            });\r\n\r\n        //let usersSvc = this.userService.getUsers(paginationRequest);\r\n        //let rolesSvc = this.roleService.getRoles(null);\r\n\r\n        //forkJoin([rolesSvc, usersSvc]).subscribe(results => {\r\n\r\n        //    this.users = null;\r\n\r\n        //    if (results[0] && results[0].data) {\r\n        //        this.roles = results[0].data;\r\n        //    }\r\n\r\n        //    if (results[1].status.toLowerCase() == \"error\") {\r\n        //        this.statusMessage = results[1].message;\r\n        //        this.helper.showAlertMessage(this.statusMessage, \"error\");\r\n        //    }\r\n        //    else {\r\n        //        if (results[1].data != null && results[1].data.length > 0) {\r\n        //            this.users = results[1].data;\r\n        //            this.totalPages = Math.ceil(results[1].recordCount / this.pageSize);\r\n        //        }\r\n        //        else {\r\n        //            this.statusMessage = \"There are no registered users.\";\r\n        //        }\r\n        //    }\r\n\r\n        //    $(\"#ajax-loading\").hide();\r\n        //},\r\n        //    error => {\r\n        //        this.users = null;\r\n        //        $(\"#ajax-loading\").hide();\r\n        //    });\r\n    }\r\n\r\n    onEntityTypeChange(entityType: string) {\r\n        this.selectedEntityType = entityType;\r\n\r\n        this.currentPage = 1;\r\n        this.sortColumn = null;\r\n        this.sortOrder = SortOrder.noSort;\r\n        this.searchText = \"\";\r\n\r\n        this.getFormData();\r\n    }\r\n\r\n    setSearchField(searchField: any) {\r\n        this.selectedField = searchField;\r\n        this.searchText = '';\r\n    }\r\n\r\n    search() {\r\n\r\n        this.searchFilter = this.helper.search(this.selectedField, this.searchText, ConditionOperator.AND)\r\n        this.searchFields.forEach(x => x.value = '');\r\n\r\n        this.getFormData();\r\n    }\r\n\r\n    advancedSearch() {\r\n\r\n        this.searchFilter = this.helper.advancedSearch(this.searchFields, ConditionOperator.AND)\r\n        this.searchText = \"\";\r\n\r\n        this.getFormData();\r\n    }\r\n\r\n    clearSearch() {\r\n        this.searchFilter = this.helper.search(this.selectedField, this.searchText, ConditionOperator.AND)\r\n        this.searchFields.forEach(x => x.value = '');\r\n    }\r\n\r\n    setPage(page: number) {\r\n\r\n        if (page < 1 || page > this.totalPages) {\r\n            return;\r\n        }\r\n\r\n        this.currentPage = page;\r\n\r\n        this.getFormData();\r\n    }\r\n\r\n    onColumnClick(e: HTMLElement) {\r\n\r\n        if (this.previousElement && e.getAttribute('data-column') != this.previousElement.getAttribute('data-column')) {\r\n            this.previousElement.classList.remove('table-sorter-desc');\r\n            this.previousElement.classList.remove('table-sorter-asc');\r\n        }\r\n\r\n        this.previousElement = e;\r\n\r\n        this.sortColumn = e.getAttribute('data-column');\r\n\r\n        if (e.classList.contains(\"table-sorter-asc\")) {\r\n            e.classList.remove('table-sorter-asc');\r\n            e.classList.add('table-sorter-desc');\r\n            this.sortOrder = SortOrder.descending;\r\n        }\r\n        else if (e.classList.contains(\"table-sorter-desc\")) {\r\n            e.classList.remove('table-sorter-desc');\r\n            this.sortColumn = null;\r\n            this.sortOrder = SortOrder.noSort;\r\n        }\r\n        else {\r\n            e.classList.add('table-sorter-asc');\r\n            this.sortOrder = SortOrder.ascending;\r\n        }\r\n\r\n\r\n        this.getFormData();\r\n    }\r\n\r\n    delete(entity: any) {\r\n        new jBox(\"Confirm\", {\r\n            minWidth: 500,\r\n            minHeight: 70,\r\n            title: \"<b>Delete Entity</b>\",\r\n            overlay: false,\r\n            content: `Do you want to delete ${this.selectedEntityType} - ${entity.name}`,\r\n            draggable: \"title\",\r\n            confirmButton: \"Yes\",\r\n            cancelButton: \"No\",\r\n            confirm: () => {\r\n\r\n                let entitySvc = null;\r\n\r\n                switch (this.selectedEntityType) {\r\n                    case \"Cable\":\r\n                        entitySvc = this.cableService.deleteCable(entity.id);\r\n                        break;\r\n                    case \"Chamber\":\r\n                        entitySvc = this.chamberService.deleteChamber(entity.id);\r\n                        break;\r\n                    case \"Duct\":\r\n                        entitySvc = this.ductService.deleteDuct(entity.id);\r\n                        break;\r\n                    case \"ODF\":\r\n                        entitySvc = this.odfService.deleteODF(entity.id);\r\n                        break;\r\n                    case \"Pole\":\r\n                        entitySvc = this.poleService.deletePole(entity.id);\r\n                        break;\r\n                    case \"SpliceClosure\":\r\n                        entitySvc = this.spliceClosureService.deleteSpliceClosure(entity.id);\r\n                        break;\r\n                    case \"Splitter\":\r\n                        entitySvc = this.splitterService.deleteSplitter(entity.id);\r\n                        break;\r\n                    case \"Homepass\":\r\n                        entitySvc = this.homepassService.deleteHomepass(entity.id);\r\n                        break;\r\n                    default:\r\n                        entitySvc = this.cableService.deleteCable(entity.id);\r\n                }\r\n\r\n                entitySvc.subscribe(\r\n                    resp => {\r\n                        if (resp.status.toLowerCase() == \"error\") {\r\n                            this.helper.showAlertMessage(resp.message, \"error\");\r\n                        }\r\n                        else {\r\n                            if (resp.data != null) {\r\n                                this.helper.showAlertMessage(`${this.selectedEntityType} deleted`, \"success\");\r\n                                this.getFormData();\r\n                            }\r\n                            else {\r\n                                this.helper.showAlertMessage(`Error deleting ${this.selectedEntityType}`, \"error\");\r\n                            }\r\n                        }\r\n                    },\r\n                    (err) => {\r\n                        this.helper.showAlertMessage(`Error deleting ${this.selectedEntityType}`, \"error\");\r\n                    });\r\n            }\r\n        }).open();\r\n    }\r\n\r\n    //getPermission(featureCode: string, accessType: string): boolean {\r\n    //   return this.accountService.getPermission(featureCode, accessType);\r\n    //}\r\n\r\n}\r\n","import { Location } from '@angular/common';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Helper } from '../../common/helper';\r\nimport { Homepass } from '../models/homepass';\r\nimport { HomepassService } from '../services/homepass.service';\r\n\r\ndeclare var $: any;\r\n\r\n@Component({\r\n    templateUrl: './homepass-details.html',\r\n    providers: [HomepassService],\r\n})\r\nexport class HomepassDetails implements OnInit {\r\n\r\n    homepassId: string;\r\n    homepass: Homepass;\r\n    title: string = \"New Homepass\";\r\n\r\n    constructor(\r\n        private location: Location,\r\n        private route: ActivatedRoute,\r\n        private homepassService: HomepassService,\r\n        private helper: Helper) {\r\n\r\n        this.homepass = new Homepass();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.route.params.subscribe(\r\n            params => {\r\n                this.homepassId = params['id'];\r\n\r\n                if (this.homepassId != null)\r\n                    this.title = \"Edit Homepass\";\r\n                else {\r\n                    this.title = \"New Homepass\";\r\n                }\r\n\r\n                this.getFormData(this.homepassId);\r\n\r\n            });\r\n    }\r\n\r\n    getFormData(homepassId: string) {\r\n\r\n        if (homepassId != null) {\r\n\r\n            $(\"#ajax-loading\").show();\r\n\r\n            this.homepassService.getHomepass(homepassId).subscribe(\r\n                resp => {\r\n                    this.homepass = new Homepass();\r\n\r\n                    if (resp.status.toLowerCase() == \"error\") {\r\n                        this.helper.showAlertMessage(resp.message, \"error\");\r\n                    }\r\n                    else {\r\n                        if (resp.data != null) {\r\n                            this.homepass = resp.data;\r\n                        }\r\n                    }\r\n\r\n                    $(\"#ajax-loading\").hide();\r\n                },\r\n                (err) => {\r\n                    $(\"#ajax-loading\").hide();\r\n                    this.homepass = new Homepass();\r\n                    this.helper.showAlertMessage(\"Unable to fetch homepass details\", \"error\");\r\n                });\r\n        }\r\n        else\r\n            this.homepass = new Homepass();\r\n    }\r\n\r\n    async save() {\r\n\r\n        var errorMessages = await this.validateEntity(this.homepass);\r\n\r\n        if (errorMessages.length == 0) {\r\n\r\n            this.homepassService.saveHomepass(this.homepass).subscribe(\r\n                resp => {\r\n\r\n                    if (resp.status.toLowerCase() == \"error\") {\r\n                        this.helper.showAlertMessage(resp.message, \"error\");\r\n                    }\r\n                    else {\r\n                        if (resp.data != null) {\r\n                            this.helper.showAlertMessage(\"Homepass information saved\", \"success\");\r\n                            this.goBack();\r\n                        }\r\n                        else\r\n                            this.helper.showAlertMessage(\"Unable to save homepass information.\", \"error\");\r\n                    }\r\n                },\r\n                (err) => {\r\n                    //let msg = `Unable to save user information : ${err.message}`;\r\n                    this.helper.showAlertMessage(\"Unable to save homepass information.\", \"error\");\r\n                });\r\n        }\r\n        else {\r\n            this.helper.showAlertMessage(this.helper.getErrorMessagesText(errorMessages), \"error\");\r\n        }\r\n    }\r\n\r\n    async validateEntity(homepass: Homepass): Promise<string[]> {\r\n        var errorMessages = [];\r\n\r\n        if (homepass.name == null || homepass.name.trim() == '')\r\n                errorMessages.push(\"Name cannot be empty.\");\r\n        else {\r\n            let resp = await this.homepassService.checkNameExists(homepass.name);\r\n\r\n            if (resp)\r\n                errorMessages.push(\"Name already exists.\");\r\n        }\r\n        //    if (user.loginId == null || user.loginId.trim() == \"\")\r\n        //        errorMessages.push(\"Login Id cannot be empty string\");\r\n\r\n        //    //if (user.password == null || user.password.trim() == \"\")\r\n        //    //   errorMessages.push(\"Password cannot be empty string\");\r\n\r\n        return errorMessages;\r\n    }\r\n\r\n    goBack(): void {\r\n        this.location.back();\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport { forkJoin } from 'rxjs';\r\n\r\nimport { Helper } from '../../common/helper';\r\nimport { ODFService } from '../services/odf.service';\r\nimport { ODF } from '../models/odf';\r\n\r\ndeclare var $: any;\r\n\r\n@Component({\r\n    templateUrl: './odf-details.html',\r\n    providers: [ODFService],\r\n})\r\nexport class ODFDetails implements OnInit {\r\n\r\n    odfId: string;\r\n    odf: ODF;\r\n    title: string = \"New ODF\";\r\n\r\n    constructor(\r\n        private location: Location,\r\n        private route: ActivatedRoute,\r\n        private odfService: ODFService,\r\n        private helper: Helper) {\r\n\r\n        this.odf = new ODF();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.route.params.subscribe(\r\n            params => {\r\n                this.odfId = params['id'];\r\n\r\n                if (this.odfId != null)\r\n                    this.title = \"Edit ODF\";\r\n                else {\r\n                    this.title = \"New ODF\";\r\n                }\r\n\r\n                this.getFormData(this.odfId);\r\n\r\n            });\r\n    }\r\n\r\n    getFormData(odfId: string) {\r\n\r\n        if (odfId != null) {\r\n\r\n            $(\"#ajax-loading\").show();\r\n\r\n            this.odfService.getODF(odfId).subscribe(\r\n                resp => {\r\n                    this.odf = new ODF();\r\n\r\n                    if (resp.status.toLowerCase() == \"error\") {\r\n                        this.helper.showAlertMessage(resp.message, \"error\");\r\n                    }\r\n                    else {\r\n                        if (resp.data != null) {\r\n                            this.odf = resp.data;\r\n                        }\r\n                    }\r\n\r\n                    $(\"#ajax-loading\").hide();\r\n                },\r\n                (err) => {\r\n                    $(\"#ajax-loading\").hide();\r\n                    this.odf = new ODF();\r\n                    this.helper.showAlertMessage(\"Unable to fetch odf details\", \"error\");\r\n                });\r\n        }\r\n        else\r\n            this.odf = new ODF();\r\n    }\r\n\r\n    async save() {\r\n\r\n        var errorMessages = await this.validateEntity(this.odf);\r\n\r\n        if (errorMessages.length == 0) {\r\n\r\n            this.odfService.saveODF(this.odf).subscribe(\r\n                resp => {\r\n\r\n                    if (resp.status.toLowerCase() == \"error\") {\r\n                        this.helper.showAlertMessage(resp.message, \"error\");\r\n                    }\r\n                    else {\r\n                        if (resp.data != null) {\r\n                            this.helper.showAlertMessage(\"ODF information saved\", \"success\");\r\n                            this.goBack();\r\n                        }\r\n                        else\r\n                            this.helper.showAlertMessage(\"Unable to save ODF information.\", \"error\");\r\n                    }\r\n                },\r\n                (err) => {\r\n                    //let msg = `Unable to save user information : ${err.message}`;\r\n                    this.helper.showAlertMessage(\"Unable to save ODF information.\", \"error\");\r\n                });\r\n        }\r\n        else {\r\n            this.helper.showAlertMessage(this.helper.getErrorMessagesText(errorMessages), \"error\");\r\n        }\r\n    }\r\n\r\n    async validateEntity(odf: ODF): Promise<string[]> {\r\n        var errorMessages = [];\r\n\r\n        if (odf.name == null || odf.name.trim() == '')\r\n                errorMessages.push(\"Name cannot be empty.\");\r\n        else {\r\n            let resp = await this.odfService.checkNameExists(odf.name);\r\n\r\n            if (resp)\r\n                errorMessages.push(\"Name already exists.\");\r\n        }\r\n        //    if (user.loginId == null || user.loginId.trim() == \"\")\r\n        //        errorMessages.push(\"Login Id cannot be empty string\");\r\n\r\n        //    //if (user.password == null || user.password.trim() == \"\")\r\n        //    //   errorMessages.push(\"Password cannot be empty string\");\r\n\r\n        return errorMessages;\r\n    }\r\n\r\n    goBack(): void {\r\n        this.location.back();\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport { forkJoin } from 'rxjs';\r\n\r\nimport { Helper } from '../../common/helper';\r\nimport { PoleService } from '../services/pole.service';\r\nimport { Pole } from '../models/pole';\r\n\r\ndeclare var $: any;\r\n\r\n@Component({\r\n    templateUrl: './pole-details.html',\r\n    providers: [PoleService],\r\n})\r\nexport class PoleDetails implements OnInit {\r\n\r\n    poleId: string;\r\n    pole: Pole;\r\n    title: string = \"New Pole\";\r\n\r\n    constructor(\r\n        private location: Location,\r\n        private route: ActivatedRoute,\r\n        private poleService: PoleService,\r\n        private helper: Helper) {\r\n\r\n        this.pole = new Pole();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.route.params.subscribe(\r\n            params => {\r\n                this.poleId = params['id'];\r\n\r\n                if (this.poleId != null)\r\n                    this.title = \"Edit Pole\";\r\n                else {\r\n                    this.title = \"New Pole\";\r\n                }\r\n\r\n                this.getFormData(this.poleId);\r\n\r\n            });\r\n    }\r\n\r\n    getFormData(poleId: string) {\r\n\r\n\r\n\r\n        if (poleId != null) {\r\n\r\n            $(\"#ajax-loading\").show();\r\n\r\n            this.poleService.getPole(poleId).subscribe(\r\n                resp => {\r\n                    this.pole = new Pole();\r\n\r\n                    if (resp.status.toLowerCase() == \"error\") {\r\n                        this.helper.showAlertMessage(resp.message, \"error\");\r\n                    }\r\n                    else {\r\n                        if (resp.data != null) {\r\n                            this.pole = resp.data;\r\n                        }\r\n                    }\r\n\r\n                    $(\"#ajax-loading\").hide();\r\n                },\r\n                (err) => {\r\n                    $(\"#ajax-loading\").hide();\r\n                    this.pole = new Pole();\r\n                    this.helper.showAlertMessage(\"Unable to fetch pole details\", \"error\");\r\n                });\r\n        }\r\n        else\r\n            this.pole = new Pole();\r\n    }\r\n\r\n    async save() {\r\n\r\n        var errorMessages = await this.validateEntity(this.pole);\r\n\r\n        if (errorMessages.length == 0) {\r\n\r\n            this.poleService.savePole(this.pole).subscribe(\r\n                resp => {\r\n\r\n                    if (resp.status.toLowerCase() == \"error\") {\r\n                        this.helper.showAlertMessage(resp.message, \"error\");\r\n                    }\r\n                    else {\r\n                        if (resp.data != null) {\r\n                            this.helper.showAlertMessage(\"Pole information saved\", \"success\");\r\n                            this.goBack();\r\n                        }\r\n                        else\r\n                            this.helper.showAlertMessage(\"Unable to save pole information.\", \"error\");\r\n                    }\r\n                },\r\n                (err) => {\r\n                    //let msg = `Unable to save user information : ${err.message}`;\r\n                    this.helper.showAlertMessage(\"Unable to save pole information.\", \"error\");\r\n                });\r\n        }\r\n        else {\r\n            this.helper.showAlertMessage(this.helper.getErrorMessagesText(errorMessages), \"error\");\r\n        }\r\n    }\r\n\r\n    async validateEntity(pole: Pole): Promise<string[]> {\r\n        var errorMessages = [];\r\n\r\n        if (pole.name == null || pole.name.trim() == '')\r\n                errorMessages.push(\"Name cannot be empty.\");\r\n        else {\r\n            let resp = await this.poleService.checkNameExists(pole.name);\r\n\r\n            if (resp)\r\n                errorMessages.push(\"Name already exists.\");\r\n        }\r\n        //    if (user.loginId == null || user.loginId.trim() == \"\")\r\n        //        errorMessages.push(\"Login Id cannot be empty string\");\r\n\r\n        //    //if (user.password == null || user.password.trim() == \"\")\r\n        //    //   errorMessages.push(\"Password cannot be empty string\");\r\n\r\n        return errorMessages;\r\n    }\r\n\r\n    goBack(): void {\r\n        this.location.back();\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport { forkJoin } from 'rxjs';\r\n\r\nimport { Helper } from '../../common/helper';\r\nimport { SpliceClosureService } from '../services/spliceClosure.service';\r\nimport { SpliceClosure } from '../models/spliceClosure';\r\n\r\ndeclare var $: any;\r\n\r\n@Component({\r\n    templateUrl: './spliceClosure-details.html',\r\n    providers: [SpliceClosureService],\r\n})\r\nexport class SpliceClosureDetails implements OnInit {\r\n\r\n    spliceClosureId: string;\r\n    spliceClosure: SpliceClosure;\r\n    title: string = \"New SpliceClosure\";\r\n\r\n    constructor(\r\n        private location: Location,\r\n        private route: ActivatedRoute,\r\n        private spliceClosureService: SpliceClosureService,\r\n        private helper: Helper) {\r\n\r\n        this.spliceClosure = new SpliceClosure();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.route.params.subscribe(\r\n            params => {\r\n                this.spliceClosureId = params['id'];\r\n\r\n                if (this.spliceClosureId != null)\r\n                    this.title = \"Edit SpliceClosure\";\r\n                else {\r\n                    this.title = \"New SpliceClosure\";\r\n                }\r\n\r\n                this.getFormData(this.spliceClosureId);\r\n\r\n            });\r\n    }\r\n\r\n    getFormData(spliceClosureId: string) {\r\n\r\n        if (spliceClosureId != null) {\r\n\r\n            $(\"#ajax-loading\").show();\r\n\r\n            this.spliceClosureService.getSpliceClosure(spliceClosureId).subscribe(\r\n                resp => {\r\n                    this.spliceClosure = new SpliceClosure();\r\n\r\n                    if (resp.status.toLowerCase() == \"error\") {\r\n                        this.helper.showAlertMessage(resp.message, \"error\");\r\n                    }\r\n                    else {\r\n                        if (resp.data != null) {\r\n                            this.spliceClosure = resp.data;\r\n                        }\r\n                    }\r\n\r\n                    $(\"#ajax-loading\").hide();\r\n                },\r\n                (err) => {\r\n                    $(\"#ajax-loading\").hide();\r\n                    this.spliceClosure = new SpliceClosure();\r\n                    this.helper.showAlertMessage(\"Unable to fetch spliceClosure details\", \"error\");\r\n                });\r\n        }\r\n        else\r\n            this.spliceClosure = new SpliceClosure();\r\n    }\r\n\r\n    async save() {\r\n\r\n        var errorMessages = await this.validateEntity(this.spliceClosure);\r\n\r\n        if (errorMessages.length == 0) {\r\n\r\n            this.spliceClosureService.saveSpliceClosure(this.spliceClosure).subscribe(\r\n                resp => {\r\n\r\n                    if (resp.status.toLowerCase() == \"error\") {\r\n                        this.helper.showAlertMessage(resp.message, \"error\");\r\n                    }\r\n                    else {\r\n                        if (resp.data != null) {\r\n                            this.helper.showAlertMessage(\"Splice Closure information saved\", \"success\");\r\n                            this.goBack();\r\n                        }\r\n                        else\r\n                            this.helper.showAlertMessage(\"Unable to save splice closure information.\", \"error\");\r\n                    }\r\n                },\r\n                (err) => {\r\n                    //let msg = `Unable to save user information : ${err.message}`;\r\n                    this.helper.showAlertMessage(\"Unable to save splice closure information.\", \"error\");\r\n                });\r\n        }\r\n        else {\r\n            this.helper.showAlertMessage(this.helper.getErrorMessagesText(errorMessages), \"error\");\r\n        }\r\n    }\r\n\r\n    async validateEntity(spliceClosure: SpliceClosure): Promise<string[]> {\r\n        var errorMessages = [];\r\n\r\n        if (spliceClosure.name == null || spliceClosure.name.trim() == '')\r\n                errorMessages.push(\"Name cannot be empty.\");\r\n        else {\r\n            let resp = await this.spliceClosureService.checkNameExists(spliceClosure.name);\r\n\r\n            if (resp)\r\n                errorMessages.push(\"Name already exists.\");\r\n        }\r\n        //    if (user.loginId == null || user.loginId.trim() == \"\")\r\n        //        errorMessages.push(\"Login Id cannot be empty string\");\r\n\r\n        //    //if (user.password == null || user.password.trim() == \"\")\r\n        //    //   errorMessages.push(\"Password cannot be empty string\");\r\n\r\n        return errorMessages;\r\n    }\r\n\r\n    goBack(): void {\r\n        this.location.back();\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport { forkJoin } from 'rxjs';\r\n\r\nimport { Helper } from '../../common/helper';\r\nimport { SplitterService } from '../services/splitter.service';\r\nimport { Splitter } from '../models/splitter';\r\n\r\ndeclare var $: any;\r\n\r\n@Component({\r\n    templateUrl: './splitter-details.html',\r\n    providers: [SplitterService],\r\n})\r\nexport class SplitterDetails implements OnInit {\r\n\r\n    splitterId: string;\r\n    splitter: Splitter;\r\n    title: string = \"New Splitter\";\r\n\r\n    constructor(\r\n        private location: Location,\r\n        private route: ActivatedRoute,\r\n        private splitterService: SplitterService,\r\n        private helper: Helper) {\r\n\r\n        this.splitter = new Splitter();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.route.params.subscribe(\r\n            params => {\r\n                this.splitterId = params['id'];\r\n\r\n                if (this.splitterId != null)\r\n                    this.title = \"Edit Splitter\";\r\n                else {\r\n                    this.title = \"New Splitter\";\r\n                }\r\n\r\n                this.getFormData(this.splitterId);\r\n\r\n            });\r\n    }\r\n\r\n    getFormData(splitterId: string) {\r\n\r\n        if (splitterId != null) {\r\n\r\n            $(\"#ajax-loading\").show();\r\n\r\n            this.splitterService.getSplitter(splitterId).subscribe(\r\n                resp => {\r\n                    this.splitter = new Splitter();\r\n\r\n                    if (resp.status.toLowerCase() == \"error\") {\r\n                        this.helper.showAlertMessage(resp.message, \"error\");\r\n                    }\r\n                    else {\r\n                        if (resp.data != null) {\r\n                            this.splitter = resp.data;\r\n                        }\r\n                    }\r\n\r\n                    $(\"#ajax-loading\").hide();\r\n                },\r\n                (err) => {\r\n                    $(\"#ajax-loading\").hide();\r\n                    this.splitter = new Splitter();\r\n                    this.helper.showAlertMessage(\"Unable to fetch splitter details\", \"error\");\r\n                });\r\n        }\r\n        else\r\n            this.splitter = new Splitter();\r\n    }\r\n\r\n    async save() {\r\n\r\n        var errorMessages = await this.validateEntity(this.splitter);\r\n\r\n        if (errorMessages.length == 0) {\r\n\r\n            this.splitterService.saveSplitter(this.splitter).subscribe(\r\n                resp => {\r\n\r\n                    if (resp.status.toLowerCase() == \"error\") {\r\n                        this.helper.showAlertMessage(resp.message, \"error\");\r\n                    }\r\n                    else {\r\n                        if (resp.data != null) {\r\n                            this.helper.showAlertMessage(\"Splitter information saved\", \"success\");\r\n                            this.goBack();\r\n                        }\r\n                        else\r\n                            this.helper.showAlertMessage(\"Unable to save splitter information.\", \"error\");\r\n                    }\r\n                },\r\n                (err) => {\r\n                    //let msg = `Unable to save user information : ${err.message}`;\r\n                    this.helper.showAlertMessage(\"Unable to save splitter information.\", \"error\");\r\n                });\r\n        }\r\n        else {\r\n            this.helper.showAlertMessage(this.helper.getErrorMessagesText(errorMessages), \"error\");\r\n        }\r\n    }\r\n\r\n    async validateEntity(splitter: Splitter): Promise<string[]> {\r\n        var errorMessages = [];\r\n\r\n        if (splitter.name == null || splitter.name.trim() == '')\r\n                errorMessages.push(\"Name cannot be empty.\");\r\n        else {\r\n            let resp = await this.splitterService.checkNameExists(splitter.name);\r\n\r\n            if (resp)\r\n                errorMessages.push(\"Name already exists.\");\r\n        }\r\n        //    if (user.loginId == null || user.loginId.trim() == \"\")\r\n        //        errorMessages.push(\"Login Id cannot be empty string\");\r\n\r\n        //    //if (user.password == null || user.password.trim() == \"\")\r\n        //    //   errorMessages.push(\"Password cannot be empty string\");\r\n\r\n        return errorMessages;\r\n    }\r\n\r\n    goBack(): void {\r\n        this.location.back();\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { GeneralSettingsRouting } from './generalSettings.routes';\r\nimport { GeneralSettingsService } from './services/generalSettings.service';\r\nimport { GeneralSettingsDetails } from './views/generalSettings-details';\r\n//import { ColorPickerModule } from '../../components/color-picker/color-picker.module';\r\n\r\n@NgModule({\r\n   imports: [\r\n      CommonModule,\r\n      FormsModule,\r\n      GeneralSettingsRouting,\r\n      //ColorPickerModule\r\n   ],\r\n   declarations: [\r\n      GeneralSettingsDetails\r\n   ],\r\n   providers: [\r\n      GeneralSettingsService\r\n   ]\r\n})\r\nexport class GeneralSettingsModule { }\r\n","import { ModuleWithProviders } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { GeneralSettingsDetails } from './views/generalSettings-details';\r\n\r\nexport const generalSettingsRoutes: Routes = [\r\n   {\r\n      path: 'generalSettings',\r\n      children: [\r\n         { path: '', component: GeneralSettingsDetails },\r\n      ]\r\n   },\r\n];\r\n\r\nexport const GeneralSettingsRouting: ModuleWithProviders = RouterModule.forChild(generalSettingsRoutes);\r\n","import { DbBaseEntity } from '../../common/models/dbBaseEntity';\r\n\r\nexport class GeneralSettings extends DbBaseEntity{\r\n   \r\n   //boundaryHierarchies: BoundaryHierarchy[];\r\n   //constructionStages: ConstructionStage[];\r\n   //activationStages: ActivationStage[];\r\n   //accessibilities: Accessibility[]\r\n   //hierarchyTypes: HierarchyType[];\r\n   //opticalLinkBudget: OpticalLinkBudget[];\r\n   //ofcUtilization: OFCUtilization[];\r\n\r\n   fileAttachmentLimit: number = 5;\r\n}\r\n\r\n//export class ConstructionStage {\r\n//   name: string;\r\n//   colorCode: string;\r\n//}\r\n//export class OFCUtilization {\r\n//   name: string;\r\n//   colorCode: string;\r\n//}\r\n\r\n//export class ActivationStage {\r\n//   name: string;\r\n//   colorCode: string;\r\n//}\r\n\r\n//export class Accessibility {\r\n//   name: string;\r\n//   colorCode: string;\r\n//}\r\n\r\n//export class HierarchyType {\r\n//   name: string;\r\n//   colorCode: string;\r\n//}\r\n\r\n//export class BoundaryHierarchy {\r\n//   name: string;\r\n//   colorCode: string;\r\n//}\r\n//export class OpticalLinkBudget {\r\n//   waveLengthName: string;\r\n//   cablelengthLoss: string;\r\n//   spliceLoss: string;\r\n//   patchingLoss: string;\r\n//   patchConnectorLoss: string;\r\n\r\n//}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient, HttpParams } from \"@angular/common/http\";\r\n\r\nimport { ServiceResponse } from '../../common/models/serviceResponse';\r\nimport { GeneralSettings } from '../model/generalSettings';\r\n\r\n\r\n@Injectable()\r\nexport class GeneralSettingsService {\r\n\r\n   getGeneralSettingsApi = 'GeneralSettings/GetGeneralSettings/';\r\n   saveGeneralSettingApi = 'GeneralSettings/SaveGeneralSettings/';\r\n\r\n   constructor(private http: HttpClient) { }\r\n\r\n   getGeneralSettings(): Observable<ServiceResponse> {\r\n\r\n      return this.http.get<ServiceResponse>(this.getGeneralSettingsApi);\r\n   }\r\n\r\n   saveGeneralSettings(generalSettings: GeneralSettings): Observable<ServiceResponse> {\r\n\r\n      return this.http.post<ServiceResponse>(this.saveGeneralSettingApi, generalSettings);\r\n   }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { forkJoin } from 'rxjs';\r\n\r\nimport { GeneralSettings } from '../model/generalSettings';\r\nimport { GeneralSettingsService } from '../services/generalSettings.service';\r\nimport { Helper } from '../../common/helper';\r\n\r\ndeclare var $: any\r\n\r\n@Component({\r\n   templateUrl: './generalSetting-details.html',\r\n   providers: [GeneralSettingsService],\r\n})\r\nexport class GeneralSettingsDetails implements OnInit {\r\n\r\n   generalSettings: GeneralSettings = new GeneralSettings();\r\n\r\n   constructor(\r\n      private router: Router,\r\n      private route: ActivatedRoute,\r\n      private generalSettingsService: GeneralSettingsService,\r\n      private helper: Helper) { }\r\n\r\n   ngOnInit() {\r\n       this.getFormData();\r\n   }\r\n\r\n   //public settings: PaletteSettings = {\r\n   //   //palette: [\r\n   //   //   \"#7f8000\", \"#00ff00\", \"#0017ff\", \"#0098b3\",\r\n   //   //   \"#9000ec\", \"#108810\", \"#505050\", \"#ffe134\", \"#ff0000\",\r\n   //   //   \"#ff1193\"\r\n   //   //],\r\n   //   palette: [\r\n   //      \"#00ff00\", \"#0017ff\", \"#9000ec\", \"#ffe134\", \"#ff0000\",\r\n   //   ],\r\n   //   columns: 5,\r\n   //   tileSize: 25\r\n   //}\r\n\r\n  // addBoundaryHierarchy() {\r\n  //    if (this.generalSettings.boundaryHierarchies == null)\r\n  //       this.generalSettings.boundaryHierarchies = [];\r\n\r\n  //    this.generalSettings.boundaryHierarchies.push({ name: \"\", colorCode: \"\" });\r\n  // }\r\n\r\n  // deleteboundaryHierarchy(index) {\r\n  //    this.generalSettings.boundaryHierarchies.splice(index, 1);\r\n  // }\r\n\r\n  ///* addUtilization() {\r\n\r\n  //    if (this.generalSettings.ofcUtilization == null)\r\n  //       this.generalSettings.ofcUtilization = [];\r\n\r\n  //    this.generalSettings.ofcUtilization.push({ name: \"\", colorCode: \"\" });\r\n  // }\r\n\r\n  // deleteofcUtilization(index) {\r\n  //    this.generalSettings.ofcUtilization.splice(index, 1);\r\n  // }*/\r\n  // addConstructionStage() {\r\n\r\n  //    if (this.generalSettings.constructionStages == null)\r\n  //       this.generalSettings.constructionStages = [];\r\n\r\n  //    this.generalSettings.constructionStages.push({ name: \"\", colorCode: \"#0017ff\" });\r\n  // }\r\n\r\n  // deleteConstructionStage(index) {\r\n  //    this.generalSettings.constructionStages.splice(index, 1);\r\n  // }\r\n\r\n  // addActivationStage() {\r\n\r\n  //    if (this.generalSettings.activationStages == null)\r\n  //       this.generalSettings.activationStages = [];\r\n\r\n  //    this.generalSettings.activationStages.push({ name: \"\", colorCode: \"#0017ff\" });\r\n  // }\r\n\r\n  // deleteActivationStage(index) {\r\n  //    this.generalSettings.activationStages.splice(index, 1);\r\n  // }\r\n\r\n  // addAccessibility() {\r\n\r\n  //    if (this.generalSettings.accessibilities == null)\r\n  //       this.generalSettings.accessibilities = [];\r\n\r\n  //    this.generalSettings.accessibilities.push({ name: \"\", colorCode: \"#0017ff\" });\r\n  // }\r\n\r\n  // deleteAccessibility(index) {\r\n  //    this.generalSettings.accessibilities.splice(index, 1);\r\n  // }\r\n\r\n  // addHierarchyType() {\r\n\r\n  //    if (this.generalSettings.hierarchyTypes == null)\r\n  //       this.generalSettings.hierarchyTypes = [];\r\n\r\n  //    this.generalSettings.hierarchyTypes.push({ name: \"\", colorCode: \"#0017ff\" });\r\n  // }\r\n\r\n  // deleteHierarchyType(index) {\r\n  //    this.generalSettings.hierarchyTypes.splice(index, 1);\r\n  // }\r\n  // addOpticalLinkBudget() {\r\n\r\n  //    if (this.generalSettings.opticalLinkBudget == null)\r\n  //       this.generalSettings.opticalLinkBudget = [];\r\n\r\n  //    this.generalSettings.opticalLinkBudget.push({ waveLengthName: \"\", cablelengthLoss: \"\", spliceLoss: \"\", patchingLoss: \"\", patchConnectorLoss:\"\"});\r\n  // }\r\n\r\n  // deleteOpticalLinkBudget(index) {\r\n  //    this.generalSettings.opticalLinkBudget.splice(index, 1);\r\n  // }\r\n    getFormData() {\r\n        $(\"#ajax-loading\").show();\r\n\r\n        this.generalSettingsService.getGeneralSettings().subscribe(\r\n            resp => {\r\n                this.generalSettings = new GeneralSettings();\r\n\r\n                if (resp.status.toLowerCase() == \"error\") {\r\n                    this.helper.showAlertMessage(resp.message, \"error\");\r\n                }\r\n                else {\r\n                    if (resp.data != null) {\r\n                        this.generalSettings = resp.data;\r\n                    }\r\n                }\r\n\r\n                $(\"#ajax-loading\").hide();\r\n            },\r\n            (err) => {\r\n                $(\"#ajax-loading\").hide();\r\n                this.generalSettings = new GeneralSettings();\r\n                let msg = `Unable to fetch general settings : ${err.message}`;\r\n                this.helper.showAlertMessage(msg, \"error\");\r\n            });\r\n\r\n   }\r\n\r\n   save() {\r\n\r\n      var errorMessages = this.validateGeneralSetting(this.generalSettings);\r\n\r\n      if (errorMessages.length == 0) {\r\n\r\n         this.generalSettingsService.saveGeneralSettings(this.generalSettings).subscribe(\r\n            resp => {\r\n\r\n               if (resp && resp.data && resp.status.toLowerCase() == \"ok\")\r\n                  this.helper.showAlertMessage(\"General settings are saved\", \"success\");\r\n               else\r\n                  this.helper.showAlertMessage(\"error saving general settings\", \"error\");\r\n            },\r\n            err => {\r\n               this.helper.showAlertMessage(\"Unable to save general settings.\", \"error\");\r\n            });\r\n      }\r\n      else {\r\n         this.helper.showAlertMessage(this.helper.getErrorMessagesText(errorMessages), \"error\");\r\n      }\r\n   }\r\n\r\n   validateGeneralSetting(generalSetting: GeneralSettings): string[] {\r\n      var errorMessages = [];\r\n\r\n       if (generalSetting.fileAttachmentLimit < 0 || generalSetting.fileAttachmentLimit > 20)\r\n         errorMessages.push(\"File attachments must be within the range of 0 to 20 MBs\")\r\n      \r\n      return errorMessages;\r\n   }\r\n   \r\n   //public restrictAlpha(event): boolean {\r\n   //  // var event = e.keyCode == 0 ? e.charCode : e.keyCode;\r\n   //   return (event.charCode > 96 && event.charCode < 123) || (event.charCode > 64 && event.charCode < 91) || (event.charCode >= 48 && event.charCode <= 57) || event.charCode <= 32;\r\n   //}\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { CheckboxModule } from 'primeng/checkbox';\r\n\r\nimport { TreeTableModule } from 'primeng/treetable';\r\n\r\nimport { GroupList } from './views/group-list';\r\nimport { GroupDetails } from './views/group-details';\r\nimport { GroupService } from './services/group.service';\r\nimport { GroupRouting } from './group.routes';\r\nimport { SharedModule } from '../shared.module';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        CheckboxModule,\r\n        TreeTableModule,\r\n        GroupRouting,\r\n        SharedModule\r\n    ],\r\n    declarations: [\r\n        GroupList,\r\n        GroupDetails\r\n    ],\r\n    providers: [\r\n        GroupService\r\n    ]\r\n})\r\nexport class GroupModule { }\r\n","import { ModuleWithProviders } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { GroupList } from './views/group-list';\r\nimport { GroupDetails } from './views/group-details';\r\n\r\nexport const groupRoutes: Routes = [\r\n   {\r\n      path: 'groups',\r\n      children: [\r\n         { path: '', component: GroupList },\r\n         { path: 'details', component: GroupDetails },\r\n         { path: 'details/:id', component: GroupDetails },\r\n      ]\r\n   },\r\n];\r\n\r\nexport const GroupRouting: ModuleWithProviders = RouterModule.forChild(groupRoutes);\r\n","import { DbBaseEntity } from '../../common/models/dbBaseEntity';\r\n\r\nexport class Group extends DbBaseEntity {\r\n\r\n    name: string;\r\n    description: string;\r\n    moduleFeatures: ModuleFeature[];\r\n}\r\n\r\nexport class ModuleFeature {\r\n\r\n    moduleId: string;\r\n    moduleName: string;\r\n    featureCodes: string[];\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient, HttpParams } from \"@angular/common/http\";\r\n\r\nimport { Group } from '../models/group';\r\nimport { PaginationRequest, SortOrder } from '../../common/models/paginationRequest';\r\nimport { PaginationResponse } from '../../common/models/paginationResponse';\r\nimport { ServiceResponse } from '../../common/models/serviceResponse';\r\n\r\n@Injectable()\r\nexport class GroupService {\r\n\r\n   getGroupsApi = 'Groups/GetGroups/';\r\n   getGroupApi = 'Groups/GetGroup/';\r\n   checkNameExistsApi = 'Groups/CheckNameExists/';\r\n   saveGroupApi = 'Groups/SaveGroup/';\r\n   deleteGroupApi = 'Groups/DeleteGroup/';\r\n\r\n   constructor(private http: HttpClient) { }\r\n\r\n   getGroups(paginationRequest: PaginationRequest): Observable<PaginationResponse> {\r\n\r\n      if (paginationRequest == null)\r\n         paginationRequest = {\r\n            page: null,\r\n            pageSize: null,\r\n            filter: null,\r\n            order: {\r\n               orderByProperty: \"name\",\r\n               sortOrder: SortOrder.descending\r\n            }\r\n         };\r\n\r\n      return this.http.post<PaginationResponse>(this.getGroupsApi, paginationRequest);\r\n   }\r\n\r\n   getGroup(groupId): Observable<ServiceResponse> {\r\n\r\n      const params = new HttpParams()\r\n         .set('groupId', groupId);\r\n\r\n      return this.http.get<ServiceResponse>(this.getGroupApi, { params });\r\n   }\r\n\r\n   async checkNameExists(name: string): Promise<ServiceResponse> {\r\n\r\n      const params = new HttpParams()\r\n         .set('name', name);\r\n\r\n      return await this.http.get<ServiceResponse>(this.checkNameExistsApi, { params }).toPromise();\r\n   }\r\n\r\n   saveGroup(group: Group): Observable<ServiceResponse> {\r\n\r\n      return this.http.post<ServiceResponse>(this.saveGroupApi, group);\r\n   }\r\n\r\n   deleteGroup(groupId: string): Observable<ServiceResponse> {\r\n\r\n      const params = new HttpParams()\r\n         .set('groupId', groupId);\r\n\r\n      return this.http.delete<ServiceResponse>(this.deleteGroupApi, { params });\r\n   }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport { forkJoin } from 'rxjs';\r\n\r\nimport { Group } from '../models/group';\r\nimport { GroupService } from '../services/group.service';\r\nimport { Helper } from '../../common/helper';\r\nimport { Module } from '../../modules/models/module';\r\nimport { ModuleService } from '../../modules/services/module.service';\r\n\r\n\r\n@Component({\r\n    templateUrl: './group-details.html',\r\n    providers: [GroupService, ModuleService],\r\n})\r\nexport class GroupDetails implements OnInit {\r\n\r\n    groupId: string = \"\";\r\n    group: Group = new Group();\r\n    modules: Module[] = new Array<Module>();\r\n    treeModules: any;\r\n    selectedModules: any;\r\n    title: string = \"New Group\";\r\n\r\n    constructor(\r\n        private location: Location,\r\n        private route: ActivatedRoute,\r\n        private groupService: GroupService,\r\n        private moduleService: ModuleService,\r\n        private helper: Helper) { }\r\n\r\n\r\n    ngOnInit() {\r\n        this.route.params.subscribe(\r\n            params => {\r\n                this.groupId = params['id'];\r\n\r\n                if (this.groupId == null)\r\n                    this.title = \"New Group\";\r\n                else\r\n                    this.title = \"Edit Group\";\r\n\r\n                this.getFormData(this.groupId);\r\n            });\r\n    }\r\n\r\n    getFormData(groupId: string) {\r\n\r\n        let groupsSvc = this.groupService.getGroup(groupId);\r\n        let modulesSvc = this.moduleService.getModules(null);\r\n\r\n        forkJoin([modulesSvc, groupsSvc]).subscribe(results => {\r\n\r\n            if (results[0] && results[0].data) {\r\n                this.modules = results[0].data;\r\n\r\n                let treeNodes = [];\r\n\r\n                this.modules.forEach(m => {\r\n                    let parentId = m.parentId == null ? \"0\" : m.parentId;\r\n                    treeNodes.push({ name: m.name, id: m.id, parentId: parentId });\r\n                    m.features.forEach(f => {\r\n                        treeNodes.push({ name: f.name, id: f.code, parentId: m.id, isFeature: true });\r\n                    });\r\n                });\r\n\r\n                this.treeModules = this.helper.generateTreeTable(treeNodes, \"0\", true);\r\n            }\r\n\r\n            if (groupId && results[1]) {\r\n\r\n                if (results[1].status.toLowerCase() == \"error\") {\r\n                    this.helper.showAlertMessage(results[1].message, \"error\");\r\n                }\r\n                else {\r\n                    if (results[1].data != null) {\r\n                        this.group = results[1].data;\r\n                        this.selectedModules = [];\r\n\r\n                        //this.group.modules.forEach(x => {\r\n                        //    let module = this.treeModules.find(m => m.id == x);\r\n                        //    //module.parent = null;\r\n\r\n                        //    //module.partialSelected = false;\r\n                        //    this.selectedModules.push(module);\r\n                        //});\r\n\r\n                        this.group.moduleFeatures.forEach(x => {\r\n\r\n                            x.featureCodes.forEach(code => {\r\n\r\n                                var node = null;\r\n\r\n                                for (var i = 0; i < this.treeModules.length; i++) {\r\n                                    node = this.helper.findNode(code, this.treeModules[i]);\r\n\r\n                                    if (node) break;\r\n                                }\r\n\r\n                                if (node) {\r\n                                    this.selectedModules.push(node);\r\n                                }\r\n                            });\r\n\r\n                        });\r\n                    }\r\n                    else\r\n                        this.helper.showAlertMessage(results[1].message, \"error\");\r\n                }\r\n            }\r\n            else\r\n                this.group = new Group();\r\n        });\r\n    }\r\n\r\n    async saveGroup() {\r\n\r\n        let errorMessages = await this.validateGroup(this.group);\r\n\r\n        this.group.moduleFeatures = [];\r\n\r\n        var features = this.selectedModules.filter(x => x.isFeature == true);\r\n\r\n        features.forEach(f => {\r\n            var index = this.group.moduleFeatures.findIndex(x => x.moduleId == f.parentId);\r\n\r\n            if (index < 0) {\r\n                this.group.moduleFeatures.push({\r\n                    moduleId: f.parentId,\r\n                    moduleName: f.parent.name,\r\n                    featureCodes: [f.id]\r\n                });\r\n            }\r\n            else {\r\n                this.group.moduleFeatures[index].featureCodes.push(f.id);\r\n            }\r\n        });\r\n\r\n        if (errorMessages.length == 0) {\r\n\r\n            this.groupService.saveGroup(this.group).subscribe(\r\n                resp => {\r\n                    if (resp.status.toLowerCase() == \"error\") {\r\n                        this.helper.showAlertMessage(resp.message, \"error\");\r\n                    }\r\n                    else {\r\n                        if (resp.data != null) {\r\n                            this.helper.showAlertMessage(\"Group information saved\", \"success\");\r\n                            this.goBack();\r\n                        }\r\n                        else\r\n                            this.helper.showAlertMessage(\"Unable to save group information.\", \"error\");\r\n                    }\r\n                },\r\n                (err) => {\r\n                    this.helper.showAlertMessage(\"Unable to save group information.\", \"error\");\r\n                });\r\n        }\r\n        else {\r\n            let errorMessage = this.helper.getErrorMessagesText(errorMessages);\r\n            this.helper.showAlertMessage(errorMessage, \"error\");\r\n        }\r\n    }\r\n\r\n    async validateGroup(group: Group): Promise<string[]> {\r\n        let errorMessages = [];\r\n\r\n       if (group.name == null || group.name.trim() == '')\r\n          errorMessages.push(\"Group name cannot be empty\");\r\n       else {\r\n          let resp = await this.groupService.checkNameExists(group.name);\r\n\r\n          if (resp.data != null && resp.data != group.id)\r\n             errorMessages.push(\"Name already exists.\");\r\n       }\r\n        return errorMessages;\r\n    }\r\n\r\n    goBack(): void {\r\n        this.location.back();\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Group } from '../models/group';\r\nimport { GroupService } from '../services/group.service';\r\nimport { Helper } from '../../common/helper';\r\nimport { SortOrder, SearchFilter, ConditionOperator, Filter, Operator } from '../../common/models/paginationRequest';\r\nimport { SearchField } from '../../common/models/SearchField';\r\n\r\ndeclare var $: any;\r\ndeclare var jBox: any;\r\n\r\n@Component({\r\n    templateUrl: './group-list.html',\r\n    providers: [GroupService]\r\n})\r\nexport class GroupList implements OnInit {\r\n\r\n    groups = new Array<Group>();\r\n    statusMessage: string = \"\";\r\n    pageSize = 10;\r\n    currentPage = 1;\r\n    totalPages = 1;\r\n    searchFields: SearchField[];\r\n    searchFilter: SearchFilter;\r\n    sortColumn: string;\r\n    sortOrder: SortOrder = SortOrder.descending;\r\n    previousElement: HTMLElement;\r\n\r\n    constructor(\r\n        private groupService: GroupService,\r\n        private helper: Helper) {\r\n\r\n        this.searchFields = new Array<SearchField>();\r\n        this.searchFields.push({ field: 'Name', label: 'Name', dataType: \"text\", value: \"\" });\r\n        this.searchFields.push({ field: 'Description', label: 'Description', dataType: \"text\", value: \"\" });\r\n        this.searchFields.push({ field: 'UpdatedBy', label: 'Updated By', dataType: \"text\", value: \"\" });\r\n        this.searchFields.push({ field: 'UpdatedDate', label: 'Updated On', dataType: \"date\", value: \"\" });\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.statusMessage = \"Loading Groups...\";\r\n        this.pageSize = 10;\r\n        this.currentPage = 1;\r\n        this.sortColumn = null;\r\n        this.sortOrder = SortOrder.noSort;\r\n        this.getFormData();\r\n    }\r\n\r\n    getFormData() {\r\n\r\n        $(\"#ajax-loading\").show();\r\n\r\n        this.totalPages = 1;\r\n\r\n        let paginationRequest = {\r\n            page: this.currentPage,\r\n            pageSize: this.pageSize,\r\n            filter: this.searchFilter,\r\n            order: {\r\n                orderByProperty: this.sortColumn,\r\n                sortOrder: this.sortOrder\r\n            }\r\n        };\r\n\r\n        this.groupService.getGroups(paginationRequest).subscribe(\r\n            resp => {\r\n                this.groups = null;\r\n\r\n                if (resp.status.toLowerCase() == \"error\") {\r\n                    this.statusMessage = resp.message;\r\n                    this.helper.showAlertMessage(this.statusMessage, \"error\");\r\n                }\r\n                else {\r\n                    if (resp.data != null && resp.data.length > 0) {\r\n                        this.groups = resp.data;\r\n                        this.totalPages = Math.ceil(resp.recordCount / this.pageSize);\r\n                    }\r\n                    else {\r\n                        this.statusMessage = \"There are no registered groups.\";\r\n                    }\r\n                }\r\n\r\n                $(\"#ajax-loading\").hide();\r\n            },\r\n            (err) => {\r\n                $(\"#ajax-loading\").hide();\r\n                this.groups = null;\r\n                let msg = `Unable to fetch groups : ${err.message}`;\r\n                this.helper.showAlertMessage(msg, \"error\");\r\n                this.statusMessage = \"Error fetching groups.\";\r\n            });\r\n    }\r\n\r\n    search(searchFilter) {\r\n\r\n        this.searchFilter = searchFilter;\r\n        this.getFormData();\r\n    }\r\n\r\n    onPageSizeChange(pageSize) {\r\n        this.pageSize = pageSize;\r\n        this.getFormData();\r\n    }\r\n\r\n    onPageChange(currentPage) {\r\n        this.currentPage = currentPage;\r\n        this.getFormData();\r\n    }\r\n\r\n    onColumnClick(e: HTMLElement) {\r\n\r\n        if (this.previousElement && e.getAttribute('data-column') != this.previousElement.getAttribute('data-column')) {\r\n            this.previousElement.classList.remove('table-sorter-desc');\r\n            this.previousElement.classList.remove('table-sorter-asc');\r\n        }\r\n\r\n        this.previousElement = e;\r\n\r\n        this.sortColumn = e.getAttribute('data-column');\r\n\r\n        if (e.classList.contains(\"table-sorter-asc\")) {\r\n            e.classList.remove('table-sorter-asc');\r\n            e.classList.add('table-sorter-desc');\r\n            this.sortOrder = SortOrder.descending;\r\n        }\r\n        else if (e.classList.contains(\"table-sorter-desc\")) {\r\n            e.classList.remove('table-sorter-desc');\r\n            this.sortColumn = null;\r\n            this.sortOrder = SortOrder.noSort;\r\n        }\r\n        else {\r\n            e.classList.add('table-sorter-asc');\r\n            this.sortOrder = SortOrder.ascending;\r\n        }\r\n\r\n        this.getFormData();\r\n    }\r\n    \r\n    delete(group: Group) {\r\n        new jBox(\"Confirm\", {\r\n            minWidth: 500,\r\n            minHeight: 70,\r\n            title: \"<b>Delete Group</b>\",\r\n            overlay: false,\r\n            content: \"Do you want to delete group - \" + group.name,\r\n            draggable: \"title\",\r\n            confirmButton: \"Yes\",\r\n            cancelButton: \"No\",\r\n            confirm: () => {\r\n                this.groupService.deleteGroup(group.id).subscribe(\r\n                    resp => {\r\n                        if (resp.status.toLowerCase() == \"error\") {\r\n                            this.helper.showAlertMessage(resp.message, \"error\");\r\n                        }\r\n                        else {\r\n                            if (resp.data != null) {\r\n                                this.helper.showAlertMessage(\"Group deleted.\", \"success\");\r\n                                this.getFormData();\r\n                            }\r\n                            else {\r\n                                this.helper.showAlertMessage(\"Error deleting group\", \"error\");\r\n                            }\r\n                        }\r\n                    },\r\n                    (err) => {\r\n                        this.helper.showAlertMessage(\"Error deleting group\", \"error\");\r\n                    });\r\n            }\r\n        }).open();\r\n    }\r\n\r\n    //getPermission(featureCode: string, accessType: string): boolean {\r\n    //   return this.accountService.getPermission(featureCode, accessType);\r\n    //}\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { CheckboxModule } from 'primeng/checkbox';\r\n\r\nimport { TreeTableModule } from 'primeng/treetable';\r\n\r\nimport { LayerList } from './views/layer-list';\r\nimport { LayerDetails } from './views/layer-details';\r\nimport { LayerService } from './services/layer.service';\r\nimport { LayerRouting } from './layer.routes';\r\nimport { SharedModule } from '../shared.module';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        CheckboxModule,\r\n        TreeTableModule,\r\n        LayerRouting,\r\n        SharedModule\r\n    ],\r\n    declarations: [\r\n        LayerList,\r\n        LayerDetails\r\n    ],\r\n    providers: [\r\n        LayerService\r\n    ]\r\n})\r\nexport class LayerModule { }\r\n","import { ModuleWithProviders } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { LayerList } from './views/layer-list';\r\nimport { LayerDetails } from './views/layer-details';\r\n\r\nexport const layerRoutes: Routes = [\r\n   {\r\n      path: 'layers',\r\n      children: [\r\n         { path: '', component: LayerList },\r\n         { path: 'details', component: LayerDetails },\r\n         { path: 'details/:id', component: LayerDetails },\r\n      ]\r\n   },\r\n];\r\n\r\nexport const LayerRouting: ModuleWithProviders = RouterModule.forChild(layerRoutes);\r\n\r\n\r\n\r\n","import { DbBaseEntity } from '../../common/models/dbBaseEntity';\r\n\r\nexport class Layer extends DbBaseEntity {\r\n    name: string;\r\n    description: string;\r\n    modulePermissions: ModulePermission[];\r\n}\r\n\r\nexport class ModulePermission {\r\n    moduleId: string;\r\n    permissionCodes: string[];\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { HttpClient, HttpParams } from \"@angular/common/http\";\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { Layer } from '../models/layer';\r\nimport { PaginationRequest, SortOrder } from '../../common/models/paginationRequest';\r\nimport { PaginationResponse } from '../../common/models/paginationResponse';\r\nimport { ServiceResponse } from '../../common/models/serviceResponse';\r\n\r\n@Injectable()\r\nexport class LayerService {\r\n\r\n   getLayersApi = 'Layers/GetLayers/';\r\n   getLayerApi = 'Layers/GetLayer/';\r\n   saveLayerApi = 'Layers/SaveLayer/';\r\n   deleteLayerApi = 'Layers/DeleteLayer/';\r\n\r\n   allLayers: Layer[];\r\n\r\n   constructor(private http: HttpClient) { }\r\n\r\n   getLayers(paginationRequest: PaginationRequest): Observable<PaginationResponse> {\r\n\r\n      if (paginationRequest == null)\r\n         paginationRequest = {\r\n            page: null,\r\n            pageSize: null,\r\n            filter: null,\r\n            order: {\r\n               orderByProperty: \"name\",\r\n               sortOrder: SortOrder.descending\r\n            }\r\n         };\r\n\r\n      return this.http.post<PaginationResponse>(this.getLayersApi, paginationRequest);\r\n   }\r\n\r\n   getLayer(layerId): Observable<ServiceResponse> {\r\n\r\n      const params = new HttpParams()\r\n         .set('layerId', layerId);\r\n\r\n      return this.http.get<ServiceResponse>(this.getLayerApi, { params });\r\n   }\r\n\r\n   saveLayer(layer: Layer): Observable<ServiceResponse> {\r\n\r\n      return this.http.post<ServiceResponse>(this.saveLayerApi, layer);\r\n   }\r\n\r\n   deleteLayer(layerId: string): Observable<ServiceResponse> {\r\n\r\n      const params = new HttpParams()\r\n         .set('layerId', layerId);\r\n\r\n      return this.http.delete<ServiceResponse>(this.deleteLayerApi, { params });\r\n   }\r\n\r\n   //getAllLayers(): Observable<Layer[]> {\r\n\r\n   //   if (this.allLayers)\r\n   //      return of(this.allLayers) as Observable<Layer[]>;\r\n\r\n   //   return this.http.get<ServiceResponse>(this.getLayersApi)\r\n   //      .pipe(\r\n   //         map(svcResponse => {\r\n\r\n   //            if (svcResponse.status.toLowerCase() == \"ok\") {\r\n\r\n   //               this.allLayers = svcResponse.data;\r\n\r\n   //               return this.allLayers;\r\n   //            }\r\n   //            else {\r\n   //               throw Observable.throw(new Error(svcResponse.message));\r\n   //            }\r\n\r\n   //         }),\r\n   //         //err => Observable.throw(err)\r\n   //      );\r\n   //}\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport { forkJoin } from 'rxjs';\r\n\r\nimport { LayerService } from '../services/layer.service';\r\nimport { ModuleService } from '../../modules/services/module.service';\r\nimport { Helper } from '../../common/helper';\r\nimport { Layer } from '../models/layer';\r\nimport { Module } from '../../modules/models/module';\r\nimport { TreeNode } from 'primeng/components/common/treenode';\r\n\r\n@Component({\r\n    templateUrl: './layer-details.html',\r\n    providers: [LayerService, ModuleService],\r\n})\r\nexport class LayerDetails implements OnInit {\r\n\r\n    layerId: string = \"\";\r\n    layer: Layer = new Layer();\r\n    modules: Module[] = new Array<Module>();\r\n    treeModules: any;\r\n    selectedModules: any;\r\n    title: string = \"New Layer\";\r\n\r\n    constructor(\r\n        private location: Location,\r\n        private route: ActivatedRoute,\r\n        private layerService: LayerService,\r\n        private moduleService: ModuleService,\r\n        private helper: Helper) { }\r\n\r\n    ngOnInit() {\r\n        this.route.params.subscribe(\r\n            params => {\r\n                this.layerId = params['id'];\r\n\r\n                if (this.layerId == null)\r\n                    this.title = \"New Layer\";\r\n                else\r\n                    this.title = \"Edit Layer\";\r\n\r\n                this.getFormData(this.layerId);\r\n            });\r\n    }\r\n\r\n    getFormData(layerId: string) {\r\n\r\n        let layersSvc = this.layerService.getLayer(layerId);\r\n        let modulesSvc = this.moduleService.getModules(null);\r\n\r\n        forkJoin([modulesSvc, layersSvc]).subscribe(results => {\r\n\r\n            if (results[0] && results[0].data) {\r\n                this.modules = results[0].data;\r\n\r\n                let treeNodes = [];\r\n\r\n                this.modules.forEach(m => {\r\n                    let parentId = m.parentId == null ? \"0\" : m.parentId;\r\n                    treeNodes.push({ name: m.name, id: m.id, parentId: parentId });\r\n                    m.permissions.forEach(f => {\r\n                        treeNodes.push({ id: f.code, name: f.name, parentId: m.id, isPermission: true });\r\n                    });\r\n                });\r\n\r\n                this.treeModules = this.helper.generateTreeTable(treeNodes, \"0\", true);\r\n            }\r\n\r\n            if (layerId && results[1]) {\r\n                if (results[1].status.toLowerCase() == \"error\") {\r\n                    this.helper.showAlertMessage(results[1].message, \"error\");\r\n                }\r\n                else {\r\n                    if (results[1].data != null) {\r\n                        this.layer = results[1].data;\r\n                        this.selectedModules = [];\r\n\r\n                        this.layer.modulePermissions.forEach(x => {\r\n\r\n                            //this.checkNode(this.treeModules, x.permissionCodes);\r\n\r\n                            x.permissionCodes.forEach(code => {\r\n\r\n                                var node = null;\r\n\r\n                                for (var i = 0; i < this.treeModules.length; i++) {\r\n                                    node = this.helper.findNode(code, this.treeModules[i]);\r\n\r\n                                    if (node) break;\r\n                                }\r\n\r\n                                if (node) {\r\n                                    this.selectedModules.push(node);\r\n                                }\r\n                            });\r\n\r\n                        });\r\n                    }\r\n                    else\r\n                        this.helper.showAlertMessage(results[1].message, \"error\");\r\n                }\r\n            }\r\n            else\r\n                this.layer = new Layer();\r\n        });\r\n    }\r\n\r\n    //checkNode(nodes: any, str: string[]) {\r\n    //    for (let i = 0; i < nodes.length; i++) {\r\n    //        //if (!nodes[i].leaf && nodes[i].children[0].leaf) {\r\n    //            for (let j = 0; j < nodes[i].children.length; j++) {\r\n    //                if (str.includes(nodes[i].children[j].id)) {\r\n    //                    if (!this.selectedModules.includes(nodes[i].children[j])) {\r\n    //                        this.selectedModules.push(nodes[i].children[j]);\r\n    //                    }\r\n    //                }\r\n    //            }\r\n    //        //}\r\n    //        //if (nodes[i].leaf) {\r\n    //        //    return;\r\n    //        //}\r\n    //        this.checkNode(nodes[i].children, str);\r\n    //        let count = nodes[i].children.length;\r\n    //        let c = 0;\r\n    //        for (let j = 0; j < nodes[i].children.length; j++) {\r\n    //            if (this.selectedModules.includes(nodes[i].children[j])) {\r\n    //                c++;\r\n    //            }\r\n    //            if (nodes[i].children[j].partialSelected) nodes[i].partialSelected = true;\r\n    //        }\r\n    //        if (c == 0) { }\r\n    //        else if (c == count) {\r\n    //            nodes[i].partialSelected = false;\r\n    //            if (!this.selectedModules.includes(nodes[i])) {\r\n    //                this.selectedModules.push(nodes[i]);\r\n    //            }\r\n    //        }\r\n    //        else {\r\n    //            nodes[i].partialSelected = true;\r\n    //        }\r\n    //    }\r\n    //}\r\n\r\n    save() {\r\n\r\n        let errorMessages = this.validateLayer(this.layer);\r\n\r\n        this.layer.modulePermissions = [];\r\n\r\n        var features = this.selectedModules.filter(x => x.isPermission == true);\r\n\r\n        features.forEach(f => {\r\n            var index = this.layer.modulePermissions.findIndex(x => x.moduleId == f.parentId);\r\n\r\n            if (index < 0) {\r\n\r\n\r\n                this.layer.modulePermissions.push({\r\n                    moduleId: f.parentId,\r\n                    permissionCodes: [f.id]\r\n                });\r\n            }\r\n            else {\r\n                this.layer.modulePermissions[index].permissionCodes.push(f.id);\r\n            }\r\n        });\r\n\r\n        if (errorMessages.length == 0) {\r\n\r\n            this.layerService.saveLayer(this.layer).subscribe(\r\n                resp => {\r\n                    if (resp.status.toLowerCase() == \"error\") {\r\n                        this.helper.showAlertMessage(resp.message, \"error\");\r\n                    }\r\n                    else {\r\n                        if (resp.data != null) {\r\n                            this.helper.showAlertMessage(\"Layer information saved\", \"success\");\r\n                            this.goBack();\r\n                        }\r\n                        else\r\n                            this.helper.showAlertMessage(\"Unable to save layer information.\", \"error\");\r\n                    }\r\n                },\r\n                (err) => {\r\n                    this.helper.showAlertMessage(\"Unable to save layer information.\", \"error\");\r\n                });\r\n        }\r\n        else {\r\n            let errorMessage = this.helper.getErrorMessagesText(errorMessages);\r\n            this.helper.showAlertMessage(errorMessage, \"error\");\r\n        }\r\n    }\r\n\r\n    validateLayer(layer: Layer): string[] {\r\n        let errorMessages = [];\r\n\r\n        if (layer.name == null || layer.name.trim() == '')\r\n            errorMessages.push(\"Layer name cannot be empty\");\r\n\r\n        return errorMessages;\r\n    }\r\n\r\n    goBack(): void {\r\n        this.location.back();\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Layer } from '../models/layer';\r\nimport { LayerService } from '../services/layer.service';\r\nimport { Helper } from '../../common/helper';\r\nimport { SortOrder, Filter, SearchFilter, ConditionOperator, Operator } from '../../common/models/paginationRequest';\r\nimport { SearchField } from '../../common/models/SearchField';\r\n\r\ndeclare var $: any;\r\ndeclare var jBox: any;\r\n\r\n@Component({\r\n    templateUrl: './layer-list.html',\r\n    providers: [LayerService]\r\n})\r\nexport class LayerList implements OnInit {\r\n\r\n    layers = new Array<Layer>();\r\n    statusMessage: string = \"\";\r\n    pageSize = 10;\r\n    currentPage = 1;\r\n    totalPages = 1;\r\n    searchFields: SearchField[];\r\n    searchFilter: SearchFilter;\r\n    sortColumn: string;\r\n    sortOrder: SortOrder = SortOrder.descending;\r\n    previousElement: HTMLElement;\r\n\r\n    constructor(\r\n        private layerService: LayerService,\r\n        private helper: Helper) {\r\n\r\n        this.searchFields = new Array<SearchField>();\r\n        this.searchFields.push({ field: 'Name', label: 'Name', dataType: \"text\", value:\"\" });\r\n        this.searchFields.push({ field: 'Description', label: 'Description', dataType: \"text\", value:\"\" });\r\n        this.searchFields.push({ field: 'UpdatedBy', label: 'Updated By', dataType: \"text\", value:\"\" });\r\n        this.searchFields.push({ field: 'UpdatedDate', label: 'Updated On', dataType: \"date\", value:\"\" });\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n        this.statusMessage = \"Loading Layers...\";\r\n        this.pageSize = 10;\r\n        this.currentPage = 1;\r\n        this.sortColumn = null;\r\n        this.sortOrder = SortOrder.noSort;\r\n        this.getFormData();\r\n    }\r\n\r\n    getFormData() {\r\n\r\n        $(\"#ajax-loading\").show();\r\n\r\n        this.totalPages = 1;\r\n\r\n        let paginationRequest = {\r\n            page: this.currentPage,\r\n            pageSize: this.pageSize,\r\n            filter: this.searchFilter,\r\n            order: {\r\n                orderByProperty: this.sortColumn,\r\n                sortOrder: this.sortOrder\r\n            }\r\n        };\r\n\r\n        this.layerService.getLayers(paginationRequest).subscribe(\r\n            resp => {\r\n                this.layers = null;\r\n                if (resp.status.toLowerCase() == \"error\") {\r\n                    this.statusMessage = resp.message;\r\n                    this.helper.showAlertMessage(this.statusMessage, \"error\");\r\n                }\r\n                else {\r\n                    if (resp.data != null && resp.data.length > 0) {\r\n                        this.layers = resp.data;\r\n                        this.totalPages = Math.ceil(resp.recordCount / this.pageSize);\r\n                    }\r\n                    else {\r\n                        this.statusMessage = \"There are no registered layers.\";\r\n                    }\r\n                }\r\n\r\n                $(\"#ajax-loading\").hide();\r\n            },\r\n            (err) => {\r\n                $(\"#ajax-loading\").hide();\r\n                this.layers = null;\r\n                let msg = `Unable to fetch layers : ${err.message}`;\r\n                this.helper.showAlertMessage(msg, \"error\");\r\n                this.statusMessage = \"Error fetching layers.\";\r\n            });\r\n    }\r\n\r\n    search(searchFilter) {\r\n\r\n        this.searchFilter = searchFilter;\r\n        this.getFormData();\r\n    }\r\n\r\n    onPageSizeChange(pageSize) {\r\n        this.pageSize = pageSize;\r\n        this.getFormData();\r\n    }\r\n\r\n    onPageChange(currentPage) {\r\n        this.currentPage = currentPage;\r\n        this.getFormData();\r\n    }\r\n\r\n    onColumnClick(e: HTMLElement) {\r\n\r\n        if (this.previousElement && e.getAttribute('data-column') != this.previousElement.getAttribute('data-column')) {\r\n            this.previousElement.classList.remove('table-sorter-desc');\r\n            this.previousElement.classList.remove('table-sorter-asc');\r\n        }\r\n\r\n        this.previousElement = e;\r\n\r\n        this.sortColumn = e.getAttribute('data-column');\r\n\r\n        if (e.classList.contains(\"table-sorter-asc\")) {\r\n            e.classList.remove('table-sorter-asc');\r\n            e.classList.add('table-sorter-desc');\r\n            this.sortOrder = SortOrder.descending;\r\n        }\r\n        else if (e.classList.contains(\"table-sorter-desc\")) {\r\n            e.classList.remove('table-sorter-desc');\r\n            this.sortColumn = null;\r\n            this.sortOrder = SortOrder.noSort;\r\n        }\r\n        else {\r\n            e.classList.add('table-sorter-asc');\r\n            this.sortOrder = SortOrder.ascending;\r\n        }\r\n\r\n        this.getFormData();\r\n    }\r\n\r\n    delete(layer: Layer) {\r\n        new jBox(\"Confirm\", {\r\n            minWidth: 500,\r\n            minHeight: 70,\r\n            title: \"<b>Delete Layer</b>\",\r\n            overlay: false,\r\n            content: \"Do you want to delete layer - \" + layer.name,\r\n            draggable: \"title\",\r\n            confirmButton: \"Yes\",\r\n            cancelButton: \"No\",\r\n            confirm: () => {\r\n                this.layerService.deleteLayer(layer.id).subscribe(\r\n                    resp => {\r\n                        if (resp.status.toLowerCase() == \"error\") {\r\n                            this.helper.showAlertMessage(resp.message, \"error\");\r\n                        }\r\n                        else {\r\n                            if (resp.data != null) {\r\n                                this.helper.showAlertMessage(\"Layer deleted.\", \"success\");\r\n                                this.getFormData();\r\n                            }\r\n                            else {\r\n                                this.helper.showAlertMessage(\"Error deleting layer\", \"error\");\r\n                            }\r\n                        }\r\n                    },\r\n                    (err) => {\r\n                        this.helper.showAlertMessage(\"Error deleting layer\", \"error\");\r\n                    });\r\n            }\r\n        }).open();\r\n    }\r\n\r\n    //getPermission(featureCode: string, accessType: string): boolean {\r\n    //   return this.accountService.getPermission(featureCode, accessType);\r\n    //}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient, HttpParams } from \"@angular/common/http\";\r\n\r\nimport { Module } from '../models/module';\r\nimport { ServiceResponse } from '../../common/models/serviceResponse';\r\nimport { PaginationRequest, SortOrder } from '../../common/models/paginationRequest';\r\nimport { PaginationResponse } from '../../common/models/paginationResponse';\r\n\r\n\r\n@Injectable()\r\nexport class ModuleService {\r\n\r\n   getModulesApi = \"Modules/GetModules/\";\r\n   getModuleApi = 'Modules/GetModule/';\r\n   saveModuleApi = 'Modules/SaveModule/';\r\n   deleteModuleApi = 'Modules/DeleteModule/';\r\n\r\n   constructor(private http: HttpClient) { }\r\n\r\n   getModules(paginationRequest: PaginationRequest): Observable<PaginationResponse> {\r\n\r\n      if (paginationRequest == null)\r\n         paginationRequest = {\r\n            page: null,\r\n            pageSize: null,\r\n            filter: null,\r\n            order: {\r\n               orderByProperty: \"name\",\r\n               sortOrder: SortOrder.descending\r\n            }\r\n         };\r\n\r\n      return this.http.post<PaginationResponse>(this.getModulesApi, paginationRequest);\r\n   }\r\n\r\n   getModule(moduleId: string): Observable<ServiceResponse> {\r\n\r\n      const params = new HttpParams()\r\n         .set('moduleId', moduleId);\r\n\r\n      return this.http.get<ServiceResponse>(this.getModuleApi, { params });\r\n   }\r\n\r\n   saveModule(module: Module): Observable<ServiceResponse> {\r\n\r\n      return this.http.post<ServiceResponse>(this.saveModuleApi, module);\r\n   }\r\n\r\n   deleteModule(moduleId: string): Observable<ServiceResponse> {\r\n      const params = new HttpParams()\r\n         .set('moduleId', moduleId);\r\n\r\n      return this.http.delete<ServiceResponse>(this.deleteModuleApi, { params });\r\n   }\r\n}\r\n","import { DbBaseEntity } from '../../common/models/dbBaseEntity';\r\n\r\nexport class Role extends DbBaseEntity {\r\n    name: string;\r\n    description: string;\r\n    modulePermissions: ModulePermission[];\r\n}\r\n\r\nexport class ModulePermission {\r\n    moduleId: string;\r\n    permissionCodes: string[];\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { CheckboxModule } from 'primeng/checkbox';\r\n\r\n//import { TreeModule } from 'primeng/tree';\r\nimport { TreeTableModule } from 'primeng/treetable';\r\n\r\nimport { RoleList } from './views/role-list';\r\nimport { RoleDetails } from './views/role-details';\r\nimport { RoleService } from './services/role.service';\r\nimport { RoleRouting } from './role.routes';\r\nimport { SharedModule } from '../shared.module';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        CheckboxModule,\r\n        TreeTableModule,\r\n        RoleRouting,\r\n        SharedModule\r\n    ],\r\n    declarations: [\r\n        RoleList,\r\n        RoleDetails\r\n    ],\r\n    providers: [\r\n        RoleService\r\n    ]\r\n})\r\nexport class RoleModule { }\r\n","import { ModuleWithProviders } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { RoleList } from './views/role-list';\r\nimport { RoleDetails } from './views/role-details';\r\n\r\nexport const roleRoutes: Routes = [\r\n   {\r\n      path: 'roles',\r\n      children: [\r\n         { path: '', component: RoleList },\r\n         { path: 'details', component: RoleDetails },\r\n         { path: 'details/:id', component: RoleDetails },\r\n      ]\r\n   },\r\n];\r\n\r\nexport const RoleRouting: ModuleWithProviders = RouterModule.forChild(roleRoutes);\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { HttpClient, HttpParams } from \"@angular/common/http\";\r\n\r\nimport { Role } from '../models/role';\r\nimport { map } from 'rxjs/operators';\r\nimport { PaginationRequest, SortOrder } from '../../common/models/paginationRequest';\r\nimport { PaginationResponse } from '../../common/models/paginationResponse';\r\nimport { ServiceResponse } from '../../common/models/serviceResponse';\r\n\r\n@Injectable()\r\nexport class RoleService {\r\n\r\n   getRolesApi = 'Roles/GetRoles/';\r\n   getRoleApi = 'Roles/GetRole/';\r\n   checkNameExistsApi = 'Roles/CheckNameExists/';\r\n   saveRoleApi = 'Roles/SaveRole/';\r\n   deleteRoleApi = 'Roles/DeleteRole/';\r\n\r\n   allRoles: Role[];\r\n\r\n   constructor(private http: HttpClient) { }\r\n\r\n   getRoles(paginationRequest: PaginationRequest): Observable<PaginationResponse> {\r\n\r\n      if (paginationRequest == null)\r\n         paginationRequest = {\r\n            page: null,\r\n            pageSize: null,\r\n            filter: null,\r\n            order: {\r\n               orderByProperty: \"name\",\r\n               sortOrder: SortOrder.descending\r\n            }\r\n         };\r\n\r\n      return this.http.post<PaginationResponse>(this.getRolesApi, paginationRequest);\r\n   }\r\n\r\n   getRole(roleId): Observable<ServiceResponse> {\r\n\r\n      const params = new HttpParams()\r\n         .set('roleId', roleId);\r\n\r\n      return this.http.get<ServiceResponse>(this.getRoleApi, { params });\r\n   }\r\n\r\n   async checkNameExists(name: string): Promise<ServiceResponse> {\r\n\r\n      const params = new HttpParams()\r\n         .set('name', name);\r\n\r\n      return await this.http.get<ServiceResponse>(this.checkNameExistsApi, { params }).toPromise();\r\n   }\r\n\r\n   saveRole(role: Role): Observable<ServiceResponse> {\r\n\r\n      return this.http.post<ServiceResponse>(this.saveRoleApi, role);\r\n   }\r\n\r\n   deleteRole(roleId: string): Observable<ServiceResponse> {\r\n\r\n      const params = new HttpParams()\r\n         .set('roleId', roleId);\r\n\r\n      return this.http.delete<ServiceResponse>(this.deleteRoleApi, { params });\r\n   }\r\n\r\n   //getAllRoles(): Observable<Role[]> {\r\n\r\n   //   if (this.allRoles)\r\n   //      return of(this.allRoles) as Observable<Role[]>;\r\n\r\n   //   return this.http.get<ServiceResponse>(this.getRolesApi)\r\n   //      .pipe(\r\n   //         map(svcResponse => {\r\n\r\n   //            if (svcResponse.status.toLowerCase() == \"ok\") {\r\n\r\n   //               this.allRoles = svcResponse.data;\r\n\r\n   //               return this.allRoles;\r\n   //            }\r\n   //            else {\r\n   //               throw Observable.throw(new Error(svcResponse.message));\r\n   //            }\r\n\r\n   //         }),\r\n   //         //err => Observable.throw(err)\r\n   //      );\r\n   //}\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport { forkJoin } from 'rxjs';\r\n\r\nimport { RoleService } from '../services/role.service';\r\nimport { ModuleService } from '../../modules/services/module.service';\r\nimport { Helper } from '../../common/helper';\r\nimport { Role } from '../models/role';\r\nimport { Module } from '../../modules/models/module';\r\nimport { TreeNode } from 'primeng/components/common/treenode';\r\n\r\n@Component({\r\n    templateUrl: './role-details.html',\r\n    providers: [RoleService, ModuleService],\r\n})\r\nexport class RoleDetails implements OnInit {\r\n\r\n    roleId: string = \"\";\r\n    role: Role = new Role();\r\n    modules: Module[] = new Array<Module>();\r\n    treeModules: any;\r\n    selectedModules: any;\r\n    title: string = \"New Role\";\r\n\r\n    constructor(\r\n        private location: Location,\r\n        private route: ActivatedRoute,\r\n        private roleService: RoleService,\r\n        private moduleService: ModuleService,\r\n        private helper: Helper) { }\r\n\r\n    ngOnInit() {\r\n        this.route.params.subscribe(\r\n            params => {\r\n                this.roleId = params['id'];\r\n\r\n                if (this.roleId == null)\r\n                    this.title = \"New Role\";\r\n                else\r\n                    this.title = \"Edit Role\";\r\n\r\n                this.getFormData(this.roleId);\r\n            });\r\n    }\r\n\r\n    getFormData(roleId: string) {\r\n\r\n        let rolesSvc = this.roleService.getRole(roleId);\r\n        let modulesSvc = this.moduleService.getModules(null);\r\n\r\n        forkJoin([modulesSvc, rolesSvc]).subscribe(results => {\r\n\r\n            if (results[0] && results[0].data) {\r\n                this.modules = results[0].data;\r\n\r\n                let treeNodes = [];\r\n\r\n                this.modules.forEach(m => {\r\n                    let parentId = m.parentId == null ? \"0\" : m.parentId;\r\n                    treeNodes.push({ name: m.name, id: m.id, parentId: parentId });\r\n                    m.permissions.forEach(f => {\r\n                        treeNodes.push({ id: f.code, name: f.name, parentId: m.id, isPermission: true });\r\n                    });\r\n                });\r\n\r\n                this.treeModules = this.helper.generateTreeTable(treeNodes, \"0\", true);\r\n            }\r\n\r\n            if (roleId && results[1]) {\r\n                if (results[1].status.toLowerCase() == \"error\") {\r\n                    this.helper.showAlertMessage(results[1].message, \"error\");\r\n                }\r\n                else {\r\n                    if (results[1].data != null) {\r\n                        this.role = results[1].data;\r\n                        this.selectedModules = [];\r\n\r\n                        this.role.modulePermissions.forEach(x => {\r\n\r\n                            //this.checkNode(this.treeModules, x.permissionCodes);\r\n\r\n                            x.permissionCodes.forEach(code => {\r\n\r\n                                var node = null;\r\n\r\n                                for (var i = 0; i < this.treeModules.length; i++) {\r\n                                    node = this.helper.findNode(code, this.treeModules[i]);\r\n\r\n                                    if (node) break;\r\n                                }\r\n\r\n                                if (node) {\r\n                                    this.selectedModules.push(node);\r\n                                }\r\n                            });\r\n\r\n                        });\r\n                    }\r\n                    else\r\n                        this.helper.showAlertMessage(results[1].message, \"error\");\r\n                }\r\n            }\r\n            else\r\n                this.role = new Role();\r\n        });\r\n    }\r\n\r\n    //checkNode(nodes: any, str: string[]) {\r\n    //    for (let i = 0; i < nodes.length; i++) {\r\n    //        //if (!nodes[i].leaf && nodes[i].children[0].leaf) {\r\n    //            for (let j = 0; j < nodes[i].children.length; j++) {\r\n    //                if (str.includes(nodes[i].children[j].id)) {\r\n    //                    if (!this.selectedModules.includes(nodes[i].children[j])) {\r\n    //                        this.selectedModules.push(nodes[i].children[j]);\r\n    //                    }\r\n    //                }\r\n    //            }\r\n    //        //}\r\n    //        //if (nodes[i].leaf) {\r\n    //        //    return;\r\n    //        //}\r\n    //        this.checkNode(nodes[i].children, str);\r\n    //        let count = nodes[i].children.length;\r\n    //        let c = 0;\r\n    //        for (let j = 0; j < nodes[i].children.length; j++) {\r\n    //            if (this.selectedModules.includes(nodes[i].children[j])) {\r\n    //                c++;\r\n    //            }\r\n    //            if (nodes[i].children[j].partialSelected) nodes[i].partialSelected = true;\r\n    //        }\r\n    //        if (c == 0) { }\r\n    //        else if (c == count) {\r\n    //            nodes[i].partialSelected = false;\r\n    //            if (!this.selectedModules.includes(nodes[i])) {\r\n    //                this.selectedModules.push(nodes[i]);\r\n    //            }\r\n    //        }\r\n    //        else {\r\n    //            nodes[i].partialSelected = true;\r\n    //        }\r\n    //    }\r\n    //}\r\n\r\n    async save() {\r\n\r\n        let errorMessages = await this.validateRole(this.role);\r\n\r\n        this.role.modulePermissions = [];\r\n\r\n        var features = this.selectedModules.filter(x => x.isPermission == true);\r\n\r\n        features.forEach(f => {\r\n            var index = this.role.modulePermissions.findIndex(x => x.moduleId == f.parentId);\r\n\r\n            if (index < 0) {\r\n\r\n\r\n                this.role.modulePermissions.push({\r\n                    moduleId: f.parentId,\r\n                    permissionCodes: [f.id]\r\n                });\r\n            }\r\n            else {\r\n                this.role.modulePermissions[index].permissionCodes.push(f.id);\r\n            }\r\n        });\r\n\r\n        if (errorMessages.length == 0) {\r\n\r\n            this.roleService.saveRole(this.role).subscribe(\r\n                resp => {\r\n                    if (resp.status.toLowerCase() == \"error\") {\r\n                        this.helper.showAlertMessage(resp.message, \"error\");\r\n                    }\r\n                    else {\r\n                        if (resp.data != null) {\r\n                            this.helper.showAlertMessage(\"Role information saved\", \"success\");\r\n                            this.goBack();\r\n                        }\r\n                        else\r\n                            this.helper.showAlertMessage(\"Unable to save role information.\", \"error\");\r\n                    }\r\n                },\r\n                (err) => {\r\n                    this.helper.showAlertMessage(\"Unable to save role information.\", \"error\");\r\n                });\r\n        }\r\n        else {\r\n            let errorMessage = this.helper.getErrorMessagesText(errorMessages);\r\n            this.helper.showAlertMessage(errorMessage, \"error\");\r\n        }\r\n    }\r\n\r\n    async validateRole(role: Role): Promise<string[]> {\r\n        let errorMessages = [];\r\n\r\n        if (role.name == null || role.name.trim() == '')\r\n            errorMessages.push(\"Role name cannot be empty\");\r\n        else {\r\n           let resp = await this.roleService.checkNameExists(role.name);\r\n\r\n         if (resp.data != null && resp.data != role.id)\r\n            errorMessages.push(\"Name already exists.\");\r\n      }\r\n\r\n        return errorMessages;\r\n    }\r\n\r\n    goBack(): void {\r\n        this.location.back();\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Role } from '../models/role';\r\nimport { RoleService } from '../services/role.service';\r\nimport { Helper } from '../../common/helper';\r\nimport { SortOrder, Filter, SearchFilter, ConditionOperator, Operator } from '../../common/models/paginationRequest';\r\nimport { SearchField } from '../../common/models/SearchField';\r\n\r\ndeclare var $: any;\r\ndeclare var jBox: any;\r\n\r\n@Component({\r\n    templateUrl: './role-list.html',\r\n    providers: [RoleService]\r\n})\r\nexport class RoleList implements OnInit {\r\n\r\n    roles = new Array<Role>();\r\n    statusMessage: string = \"\";\r\n    pageSize = 10;\r\n    currentPage = 1;\r\n    totalPages = 1;\r\n    searchFields: SearchField[];\r\n    searchFilter: SearchFilter;\r\n    sortColumn: string;\r\n    sortOrder: SortOrder = SortOrder.descending;\r\n    previousElement: HTMLElement;\r\n\r\n    constructor(\r\n        private roleService: RoleService,\r\n        private helper: Helper) {\r\n\r\n        this.searchFields = new Array<SearchField>();\r\n        this.searchFields.push({ field: 'Name', label: 'Name', dataType: \"text\", value:\"\" });\r\n        this.searchFields.push({ field: 'Description', label: 'Description', dataType: \"text\", value:\"\" });\r\n        this.searchFields.push({ field: 'UpdatedBy', label: 'Updated By', dataType: \"text\", value:\"\" });\r\n        this.searchFields.push({ field: 'UpdatedDate', label: 'Updated On', dataType: \"date\", value:\"\" });\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n        this.statusMessage = \"Loading Roles...\";\r\n        this.pageSize = 10;\r\n        this.currentPage = 1;\r\n        this.sortColumn = null;\r\n        this.sortOrder = SortOrder.noSort;\r\n        this.getFormData();\r\n    }\r\n\r\n    getFormData() {\r\n\r\n        $(\"#ajax-loading\").show();\r\n\r\n        this.totalPages = 1;\r\n\r\n        let paginationRequest = {\r\n            page: this.currentPage,\r\n            pageSize: this.pageSize,\r\n            filter: this.searchFilter,\r\n            order: {\r\n                orderByProperty: this.sortColumn,\r\n                sortOrder: this.sortOrder\r\n            }\r\n        };\r\n\r\n        this.roleService.getRoles(paginationRequest).subscribe(\r\n            resp => {\r\n                this.roles = null;\r\n                if (resp.status.toLowerCase() == \"error\") {\r\n                    this.statusMessage = resp.message;\r\n                    this.helper.showAlertMessage(this.statusMessage, \"error\");\r\n                }\r\n                else {\r\n                    if (resp.data != null && resp.data.length > 0) {\r\n                        this.roles = resp.data;\r\n                        this.totalPages = Math.ceil(resp.recordCount / this.pageSize);\r\n                    }\r\n                    else {\r\n                        this.statusMessage = \"There are no registered roles.\";\r\n                    }\r\n                }\r\n\r\n                $(\"#ajax-loading\").hide();\r\n            },\r\n            (err) => {\r\n                $(\"#ajax-loading\").hide();\r\n                this.roles = null;\r\n                let msg = `Unable to fetch roles : ${err.message}`;\r\n                this.helper.showAlertMessage(msg, \"error\");\r\n                this.statusMessage = \"Error fetching roles.\";\r\n            });\r\n    }\r\n\r\n    search(searchFilter) {\r\n\r\n        this.searchFilter = searchFilter;\r\n        this.getFormData();\r\n    }\r\n\r\n    onPageSizeChange(pageSize) {\r\n        this.pageSize = pageSize;\r\n        this.getFormData();\r\n    }\r\n\r\n    onPageChange(currentPage) {\r\n        this.currentPage = currentPage;\r\n        this.getFormData();\r\n    }\r\n\r\n    onColumnClick(e: HTMLElement) {\r\n\r\n        if (this.previousElement && e.getAttribute('data-column') != this.previousElement.getAttribute('data-column')) {\r\n            this.previousElement.classList.remove('table-sorter-desc');\r\n            this.previousElement.classList.remove('table-sorter-asc');\r\n        }\r\n\r\n        this.previousElement = e;\r\n\r\n        this.sortColumn = e.getAttribute('data-column');\r\n\r\n        if (e.classList.contains(\"table-sorter-asc\")) {\r\n            e.classList.remove('table-sorter-asc');\r\n            e.classList.add('table-sorter-desc');\r\n            this.sortOrder = SortOrder.descending;\r\n        }\r\n        else if (e.classList.contains(\"table-sorter-desc\")) {\r\n            e.classList.remove('table-sorter-desc');\r\n            this.sortColumn = null;\r\n            this.sortOrder = SortOrder.noSort;\r\n        }\r\n        else {\r\n            e.classList.add('table-sorter-asc');\r\n            this.sortOrder = SortOrder.ascending;\r\n        }\r\n\r\n        this.getFormData();\r\n    }\r\n    \r\n    delete(role: Role) {\r\n        new jBox(\"Confirm\", {\r\n            minWidth: 500,\r\n            minHeight: 70,\r\n            title: \"<b>Delete Role</b>\",\r\n            overlay: false,\r\n            content: \"Do you want to delete role - \" + role.name,\r\n            draggable: \"title\",\r\n            confirmButton: \"Yes\",\r\n            cancelButton: \"No\",\r\n            confirm: () => {\r\n                this.roleService.deleteRole(role.id).subscribe(\r\n                    resp => {\r\n                        if (resp.status.toLowerCase() == \"error\") {\r\n                            this.helper.showAlertMessage(resp.message, \"error\");\r\n                        }\r\n                        else {\r\n                            if (resp.data != null) {\r\n                                this.helper.showAlertMessage(\"Role deleted.\", \"success\");\r\n                                this.getFormData();\r\n                            }\r\n                            else {\r\n                                this.helper.showAlertMessage(\"Error deleting role\", \"error\");\r\n                            }\r\n                        }\r\n                    },\r\n                    (err) => {\r\n                        this.helper.showAlertMessage(\"Error deleting role\", \"error\");\r\n                    });\r\n            }\r\n        }).open();\r\n    }\r\n\r\n    //getPermission(featureCode: string, accessType: string): boolean {\r\n    //   return this.accountService.getPermission(featureCode, accessType);\r\n    //}\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { DTPagination } from './components/data-table/dt-pagination';\r\nimport { DTSearch } from './components/data-table/dt-search';\r\n\r\n\r\n@NgModule({\r\n    imports: [CommonModule, RouterModule, FormsModule],\r\n    declarations: [\r\n        DTSearch,\r\n        DTPagination\r\n    ],\r\n    exports: [\r\n        FormsModule,\r\n        RouterModule,\r\n        DTSearch,\r\n        DTPagination\r\n    ]\r\n})\r\n\r\nexport class SharedModule { }\r\n","import { DbBaseEntity } from '../../common/models/dbBaseEntity';\r\n\r\nexport class User extends DbBaseEntity {\r\n    loginId: string;\r\n    password: string;\r\n    firstName: string;\r\n    lastName: string;\r\n    phoneNumber: string;\r\n    emailId: string;\r\n    roleId: string;\r\n    groups: string[];\r\n    roleName: string;\r\n    isActive: boolean;\r\n    lastLogin: string;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient, HttpParams } from \"@angular/common/http\";\r\n\r\nimport { User } from '../models/user';\r\nimport { ServiceResponse } from '../../common/models/serviceResponse';\r\nimport { PaginationRequest, SortOrder } from '../../common/models/paginationRequest';\r\nimport { PaginationResponse } from '../../common/models/paginationResponse';\r\n\r\n\r\n@Injectable()\r\nexport class UserService {\r\n\r\n   getUsersApi = \"Users/GetUsers/\";\r\n   getUserApi = 'Users/GetUser/';\r\n   checkLoginIdExistsApi = 'Users/CheckLoginIdExists/';\r\n   saveUserApi = 'Users/SaveUser/';\r\n   deleteUserApi = 'Users/DeleteUser/';\r\n\r\n   constructor(private http: HttpClient) { }\r\n\r\n   authenticateUser(loginCredentials: any): Observable<ServiceResponse> {\r\n\r\n      return this.http.post<ServiceResponse>('/Users/Authenticate', loginCredentials);\r\n   }\r\n\r\n   getUserProfile(): Observable<ServiceResponse> {\r\n      return this.http.get<ServiceResponse>('/Users/GetUserProfile');\r\n   }\r\n\r\n   getUser(userId: string): Observable<ServiceResponse> {\r\n\r\n      const params = new HttpParams()\r\n         .set('userId', userId);\r\n\r\n      return this.http.get<ServiceResponse>(this.getUserApi, { params });\r\n   }\r\n\r\n   getUsers(paginationRequest?: PaginationRequest): Observable<PaginationResponse> {\r\n\r\n      if (paginationRequest == null)\r\n         paginationRequest = {\r\n            page: null,\r\n            pageSize: null,\r\n            filter: null,\r\n            order: {\r\n               orderByProperty: \"name\",\r\n               sortOrder: SortOrder.descending\r\n            }\r\n         };\r\n\r\n      return this.http.post<PaginationResponse>(this.getUsersApi, paginationRequest);\r\n   }\r\n\r\n   async checkLoginIdExists(loginId: string): Promise<ServiceResponse> {\r\n\r\n      const params = new HttpParams()\r\n         .set('loginId', loginId);\r\n\r\n      return await this.http.get<ServiceResponse>(this.checkLoginIdExistsApi, { params }).toPromise();\r\n   }\r\n\r\n   saveUser(user: User): Observable<ServiceResponse> {\r\n\r\n      return this.http.post<ServiceResponse>(this.saveUserApi, user);\r\n   }\r\n\r\n   deleteUser(userId: string): Observable<ServiceResponse> {\r\n      const params = new HttpParams()\r\n         .set('userId', userId);\r\n\r\n      return this.http.delete<ServiceResponse>(this.deleteUserApi, { params });\r\n   }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatRadioModule, MatSelectModule, MatCheckboxModule } from '@angular/material';\r\n\r\nimport { UserRouting } from './user.routes';\r\nimport { UserList } from './views/user-list';\r\nimport { UserDetails } from './views/user-details';\r\nimport { UserService } from './services/user.service';\r\nimport { SharedModule } from '../shared.module';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        UserRouting,\r\n        MatCheckboxModule,\r\n        MatRadioModule,\r\n        MatSelectModule,\r\n        SharedModule\r\n    ],\r\n    declarations: [\r\n        UserList,\r\n        UserDetails\r\n    ],\r\n    providers: [\r\n        UserService\r\n    ]\r\n})\r\nexport class UserModule { }\r\n","import { ModuleWithProviders } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { UserList } from './views/user-list';\r\nimport { UserDetails } from './views/user-details';\r\n\r\nexport const userRoutes: Routes = [\r\n    {\r\n        path: 'users',\r\n        children: [\r\n           { path: '', component: UserList },\r\n           { path: 'details', component: UserDetails },\r\n           { path: 'details/:id', component: UserDetails },\r\n        ]\r\n    },\r\n];\r\n\r\nexport const UserRouting: ModuleWithProviders = RouterModule.forChild(userRoutes);\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport { forkJoin } from 'rxjs';\r\n\r\nimport { User } from '../models/user';\r\nimport { Role } from '../../roles/models/role';\r\nimport { Group } from '../../groups/models/group';\r\nimport { UserService } from '../services/user.service';\r\nimport { RoleService } from '../../roles/services/role.service';\r\nimport { GroupService } from '../../groups/services/group.service';\r\nimport { Helper } from '../../common/helper';\r\n\r\n// declare var $: any;\r\n// declare var jBox: any;\r\n\r\n@Component({\r\n    templateUrl: './user-details.html',\r\n    providers: [UserService, GroupService],\r\n})\r\nexport class UserDetails implements OnInit {\r\n\r\n    userId: string;\r\n    user: User = new User();\r\n    roles: Role[] = new Array<Role>();\r\n    groups: Group[] = new Array<Group>();\r\n    currentUserPassword: string;\r\n    changePassword: boolean = false;\r\n\r\n    title: string = \"New User\";\r\n\r\n    constructor(\r\n        private location: Location,\r\n        private route: ActivatedRoute,\r\n        private userService: UserService,\r\n        private roleService: RoleService,\r\n        private groupService: GroupService,\r\n        private helper: Helper) { }\r\n\r\n    ngOnInit() {\r\n        this.route.params.subscribe(\r\n            params => {\r\n                this.userId = params['id'];\r\n\r\n                if (this.userId != null)\r\n                    this.title = \"Edit User\";\r\n                else {\r\n                    this.title = \"New User\";\r\n                    this.changePassword = true;\r\n                }\r\n\r\n                this.getFormData(this.userId);\r\n\r\n            });\r\n    }\r\n\r\n    getFormData(userId: string) {\r\n\r\n        let usersSvc = this.userService.getUser(userId);\r\n        let rolesSvc = this.roleService.getRoles(null);\r\n        let groupsSvc = this.groupService.getGroups(null);\r\n\r\n        forkJoin([rolesSvc, groupsSvc, usersSvc]).subscribe(results => {\r\n\r\n            if (results[0] && results[0].data) {\r\n                this.roles = results[0].data;\r\n            }\r\n\r\n            if (results[1] && results[1].data) {\r\n                this.groups = results[1].data;\r\n            }\r\n\r\n            if (userId && results[2]) {\r\n                if (results[2].data && results[2].status.toLowerCase() == \"ok\") {\r\n                    this.user = results[2].data;\r\n                    this.currentUserPassword = this.user.password;\r\n                }\r\n                else\r\n                    this.helper.showAlertMessage(results[2].message, \"error\");\r\n            }\r\n            else\r\n                this.user = new User();\r\n        });\r\n    }\r\n\r\n    setNewPassword(event) {\r\n        this.changePassword = event.checked;\r\n\r\n        if (event.checked)\r\n            this.user.password = \"\";\r\n        else\r\n            this.user.password = this.currentUserPassword;\r\n    }\r\n\r\n    isAllSelected() {\r\n        const numSelected = this.user.groups ? this.user.groups.length : 0;\r\n        const numRows = this.groups.length;\r\n        return numSelected === numRows;\r\n    }\r\n\r\n    toggleSelection(group: Group) {\r\n\r\n        var index = -1;\r\n\r\n        if (this.user.groups)\r\n            index = this.user.groups.findIndex(x => x == group.id);\r\n        else\r\n            this.user.groups = [];\r\n\r\n        if (index == -1)\r\n            this.user.groups.push(group.id);\r\n        else\r\n            this.user.groups.splice(index, 1);\r\n    }\r\n\r\n    masterToggle() {\r\n\r\n        if (this.isAllSelected()) {\r\n            this.user.groups = [];\r\n        }\r\n        else {\r\n            this.user.groups = [];\r\n            this.groups.forEach(x => this.user.groups.push(x.id));\r\n        }\r\n    }\r\n\r\n    async saveUser() {\r\n\r\n        if (!this.changePassword)\r\n            this.user.password = this.currentUserPassword;\r\n\r\n        var errorMessages = await this.validateUser(this.user);\r\n\r\n        if (errorMessages.length == 0) {\r\n\r\n            this.userService.saveUser(this.user).subscribe(\r\n                resp => {\r\n\r\n                    if (resp.status.toLowerCase() == \"error\") {\r\n                        this.helper.showAlertMessage(resp.message, \"error\");\r\n                    }\r\n                    else {\r\n                        if (resp.data != null) {\r\n                            this.helper.showAlertMessage(\"User information saved\", \"success\");\r\n                            this.goBack();\r\n                        }\r\n                        else\r\n                            this.helper.showAlertMessage(\"Unable to save user information.\", \"error\");\r\n                    }\r\n                },\r\n                (err) => {\r\n                    //let msg = `Unable to save user information : ${err.message}`;\r\n                    this.helper.showAlertMessage(\"Unable to save user information.\", \"error\");\r\n                });\r\n        }\r\n        else {\r\n            this.helper.showAlertMessage(this.helper.getErrorMessagesText(errorMessages), \"error\");\r\n        }\r\n    }\r\n\r\n    async validateUser(user: User): Promise<string[]> {\r\n        var errorMessages = [];\r\n\r\n        if (user.firstName == null)\r\n            errorMessages.push(\"User name cannot be empty.\");\r\n\r\n        if (user.loginId == null || user.loginId.trim() == \"\")\r\n          errorMessages.push(\"Login Id cannot be empty string\");\r\n        else {\r\n           let resp = await this.userService.checkLoginIdExists(user.loginId);\r\n\r\n           if (resp.data != null && resp.data != user.id)\r\n              errorMessages.push(\"Login Id already exists.\");\r\n        }\r\n\r\n        //if (user.password == null || user.password.trim() == \"\")\r\n        //   errorMessages.push(\"Password cannot be empty string\");\r\n\r\n        return errorMessages;\r\n    }\r\n\r\n    goBack(): void {\r\n        this.location.back();\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { forkJoin } from 'rxjs';\r\n\r\nimport { UserSummary } from '../models/UserSummary';\r\nimport { Role } from '../../roles/models/role';\r\nimport { UserService } from '../services/user.service';\r\nimport { RoleService } from '../../roles/services/role.service';\r\nimport { Helper } from '../../common/helper';\r\nimport { SortOrder, SearchFilter, ConditionOperator, Filter, Operator } from '../../common/models/paginationRequest';\r\nimport { User } from '../models/user';\r\nimport { SearchField } from '../../common/models/SearchField';\r\n\r\ndeclare var $: any;\r\ndeclare var jBox: any;\r\n\r\n@Component({\r\n    templateUrl: './user-list.html',\r\n    providers: [UserService]\r\n})\r\nexport class UserList implements OnInit {\r\n\r\n    users = new Array<UserSummary>();\r\n    roles: Role[] = new Array<Role>();\r\n    statusMessage: string = \"\";\r\n    pageSize = 10;\r\n    currentPage = 1;\r\n    totalPages = 1;\r\n    searchFields: SearchField[];\r\n    searchFilter: SearchFilter;\r\n    sortColumn: string;\r\n    sortOrder: SortOrder = SortOrder.descending;\r\n    previousElement: HTMLElement;\r\n\r\n    constructor(\r\n        private userService: UserService,\r\n        private roleService: RoleService,\r\n        private helper: Helper) {\r\n\r\n        this.statusMessage = \"Loading Users...\";\r\n        this.pageSize = 10;\r\n        this.currentPage = 1;\r\n        this.sortColumn = null;\r\n        this.sortOrder = SortOrder.noSort;\r\n\r\n        this.searchFields = new Array<SearchField>();\r\n        this.searchFields.push({ field: 'LoginId', label: 'Login Id', dataType: \"text\", value:\"\" });\r\n        this.searchFields.push({ field: 'FirstName', label: 'First Name', dataType: \"text\", value:\"\" });\r\n        this.searchFields.push({ field: 'LastName', label: 'Last Name', dataType: \"text\", value:\"\" });\r\n        this.searchFields.push({ field: 'EmailId', label: 'Email Id', dataType: \"text\", value:\"\" });\r\n        this.searchFields.push({ field: 'Status', label: 'Status', dataType: \"text\", value:\"\" });\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.getFormData();\r\n    }\r\n\r\n    getFormData() {\r\n\r\n        $(\"#ajax-loading\").show();\r\n\r\n        this.totalPages = 1;\r\n\r\n        let paginationRequest = {\r\n            page: this.currentPage,\r\n            pageSize: this.pageSize,\r\n            filter: this.searchFilter,\r\n            order: {\r\n                orderByProperty: this.sortColumn,\r\n                sortOrder: this.sortOrder\r\n            }\r\n        };\r\n\r\n        let usersSvc = this.userService.getUsers(paginationRequest);\r\n        let rolesSvc = this.roleService.getRoles(null);\r\n\r\n        forkJoin([rolesSvc, usersSvc]).subscribe(results => {\r\n\r\n            this.users = null;\r\n\r\n            if (results[0] && results[0].data) {\r\n                this.roles = results[0].data;\r\n            }\r\n\r\n            if (results[1].status.toLowerCase() == \"error\") {\r\n                this.statusMessage = results[1].message;\r\n                this.helper.showAlertMessage(this.statusMessage, \"error\");\r\n            }\r\n            else {\r\n                if (results[1].data != null && results[1].data.length > 0) {\r\n                    this.users = results[1].data;\r\n                    this.totalPages = Math.ceil(results[1].recordCount / this.pageSize);\r\n                }\r\n                else {\r\n                    this.statusMessage = \"There are no registered users.\";\r\n                }\r\n            }\r\n\r\n            $(\"#ajax-loading\").hide();\r\n        },\r\n         error => {\r\n               this.users = null;\r\n               $(\"#ajax-loading\").hide();\r\n         });\r\n    }\r\n\r\n    getRoleDescription(roleId: string) {\r\n\r\n        if (this.roles)\r\n            var roleDesc = this.roles.find(item => item.id == roleId);\r\n\r\n        if (roleDesc)\r\n            return roleDesc.name;\r\n        else\r\n            return \"\";\r\n    }\r\n\r\n    search(searchFilter) {\r\n\r\n        this.searchFilter = searchFilter;\r\n        this.getFormData();\r\n    }\r\n\r\n    onPageSizeChange(pageSize) {\r\n        this.pageSize = pageSize;\r\n        this.getFormData();\r\n    }\r\n\r\n    onPageChange(currentPage) {\r\n        this.currentPage = currentPage;\r\n        this.getFormData();\r\n    }\r\n\r\n    onColumnClick(e: HTMLElement) {\r\n\r\n        if (this.previousElement && e.getAttribute('data-column') != this.previousElement.getAttribute('data-column')) {\r\n            this.previousElement.classList.remove('table-sorter-desc');\r\n            this.previousElement.classList.remove('table-sorter-asc');\r\n        }\r\n\r\n        this.previousElement = e;\r\n\r\n        this.sortColumn = e.getAttribute('data-column');\r\n\r\n        if (e.classList.contains(\"table-sorter-asc\")) {\r\n            e.classList.remove('table-sorter-asc');\r\n            e.classList.add('table-sorter-desc');\r\n            this.sortOrder = SortOrder.descending;\r\n        }\r\n        else if (e.classList.contains(\"table-sorter-desc\")) {\r\n            e.classList.remove('table-sorter-desc');\r\n            this.sortColumn = null;\r\n            this.sortOrder = SortOrder.noSort;\r\n        }\r\n        else {\r\n            e.classList.add('table-sorter-asc');\r\n            this.sortOrder = SortOrder.ascending;\r\n        }\r\n\r\n        this.getFormData();\r\n    }\r\n\r\n    delete(user: User) {\r\n        new jBox(\"Confirm\", {\r\n            minWidth: 500,\r\n            minHeight: 70,\r\n            title: \"<b>Delete User</b>\",\r\n            overlay: false,\r\n            content: \"Do you want to delete user - \" + user.firstName + \" \" + user.lastName,\r\n            draggable: \"title\",\r\n            confirmButton: \"Yes\",\r\n            cancelButton: \"No\",\r\n            confirm: () => {\r\n                this.userService.deleteUser(user.id).subscribe(\r\n                    resp => {\r\n                        if (resp.status.toLowerCase() == \"error\") {\r\n                            this.helper.showAlertMessage(resp.message, \"error\");\r\n                        }\r\n                        else {\r\n                            if (resp.data != null) {\r\n                                this.helper.showAlertMessage(\"User deleted.\", \"success\");\r\n                                this.getFormData();\r\n                            }\r\n                            else {\r\n                                this.helper.showAlertMessage(\"Error deleting user\", \"error\");\r\n                            }\r\n                        }\r\n                    },\r\n                    (err) => {\r\n                        this.helper.showAlertMessage(\"Error deleting user\", \"error\");\r\n                    });\r\n            }\r\n        }).open();\r\n    }\r\n\r\n    //getPermission(featureCode: string, accessType: string): boolean {\r\n    //   return this.accountService.getPermission(featureCode, accessType);\r\n    //}\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n    production: false,\n    Url:\"\"\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}