{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/clusters/views/cluster-details.html","./src/app/clusters/views/cluster-list.html","./src/app/components/cf-group/cf-group.html","./src/app/components/data-table/dt-pagination.html","./src/app/components/data-table/dt-search.html","./src/app/dashboard/views/dashboard.html","./src/app/designs/components/dzn-accessories.html","./src/app/designs/components/dzn-bom.html","./src/app/designs/components/dzn-bookingIds.html","./src/app/designs/components/dzn-cable.html","./src/app/designs/components/dzn-civilworks.html","./src/app/designs/components/dzn-clusters.html","./src/app/designs/components/dzn-costing.html","./src/app/designs/components/dzn-documents.html","./src/app/designs/components/dzn-duct.html","./src/app/designs/components/dzn-entities.html","./src/app/designs/components/dzn-fdp.html","./src/app/designs/components/dzn-info.html","./src/app/designs/components/dzn-map.html","./src/app/designs/components/dzn-networkSettings.html","./src/app/designs/components/dzn-spliceClosure.html","./src/app/designs/views/design-details.html","./src/app/designs/views/design-list.html","./src/app/homepasses/views/homepass-details.html","./src/app/homepasses/views/homepass-list.html","./node_modules/tslib/tslib.es6.js","./src/app/accessories/services/accessory.service.ts","./src/app/app.component.ts","./src/app/app.config.ts","./src/app/app.module.ts","./src/app/app.routing.ts","./src/app/civilworks/services/civilwork.service.ts","./src/app/clusters/cluster.module.ts","./src/app/clusters/cluster.routes.ts","./src/app/clusters/services/cluster.service.ts","./src/app/clusters/views/cluster-details.ts","./src/app/clusters/views/cluster-list.ts","./src/app/common/auth/auth.service.ts","./src/app/common/geo/drawingMode.ts","./src/app/common/geo/geoHelper.ts","./src/app/common/geo/geoNode.ts","./src/app/common/geo/geometry.ts","./src/app/common/geo/googleMapsHelper.ts","./src/app/common/helper.ts","./src/app/common/interceptors/cacheInterceptor.ts","./src/app/common/models/dbBaseEntity.ts","./src/app/common/models/document.ts","./src/app/common/models/loginUser.ts","./src/app/common/models/paginationRequest.ts","./src/app/common/models/supplier.ts","./src/app/components/cf-group/cf-group.ts","./src/app/components/data-table/dt-pagination.ts","./src/app/components/data-table/dt-search.ts","./src/app/dashboard/services/dashboard.service.ts","./src/app/dashboard/views/dashboard.ts","./src/app/designs/components/dzn-accessories.ts","./src/app/designs/components/dzn-bom.ts","./src/app/designs/components/dzn-bookingIds.ts","./src/app/designs/components/dzn-cable.ts","./src/app/designs/components/dzn-civilworks.ts","./src/app/designs/components/dzn-clusters.ts","./src/app/designs/components/dzn-costing.ts","./src/app/designs/components/dzn-documents.ts","./src/app/designs/components/dzn-duct.ts","./src/app/designs/components/dzn-entities.ts","./src/app/designs/components/dzn-fdp.ts","./src/app/designs/components/dzn-info.ts","./src/app/designs/components/dzn-map.ts","./src/app/designs/components/dzn-networkSettings.ts","./src/app/designs/components/dzn-spliceClosure.ts","./src/app/designs/design.module.ts","./src/app/designs/design.routes.ts","./src/app/designs/models/design.ts","./src/app/designs/services/backbone.helper.ts","./src/app/designs/services/bom.helper.ts","./src/app/designs/services/design.helper.ts","./src/app/designs/services/design.service.ts","./src/app/designs/services/entities.helper.ts","./src/app/designs/services/fttx.helper.ts","./src/app/designs/services/geoNode.helper.ts","./src/app/designs/services/map-entities.helper.ts","./src/app/designs/views/design-details.ts","./src/app/designs/views/design-list.ts","./src/app/entities/models/MicroDuct.ts","./src/app/entities/models/Solution2.zip.ts","./src/app/entities/models/baseNetworkEntity.ts","./src/app/entities/models/cable.ts","./src/app/entities/models/chamber.ts","./src/app/entities/models/duct.ts","./src/app/entities/models/fat.ts","./src/app/entities/models/installation.ts","./src/app/entities/models/odf.ts","./src/app/entities/models/optics.ts","./src/app/entities/models/owner.ts","./src/app/entities/models/pole.ts","./src/app/entities/models/pop.ts","./src/app/entities/models/spliceClosure.ts","./src/app/entities/models/splitter.ts","./src/app/entities/services/cable.service.ts","./src/app/entities/services/chamber.service.ts","./src/app/entities/services/duct.service.ts","./src/app/entities/services/fat.service.ts","./src/app/entities/services/fdt.service.ts","./src/app/entities/services/odf.service.ts","./src/app/entities/services/pole.service.ts","./src/app/entities/services/pop.service.ts","./src/app/entities/services/spliceClosure.service.ts","./src/app/entities/services/splitter.service.ts","./src/app/homepasses/homepass.module.ts","./src/app/homepasses/homepass.routes.ts","./src/app/homepasses/services/homepass.service.ts","./src/app/homepasses/views/homepass-details.ts","./src/app/homepasses/views/homepass-list.ts","./src/app/shared.module.ts","./src/app/users/services/user.service.ts","./src/environments/environment.ts","./src/main.ts","fs (ignored)","crypto (ignored)","stream (ignored)"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \"<div class=\\\"wrapper\\\">\\r\\n   <header class=\\\"main-header\\\">\\r\\n      <a href=\\\"/\\\" class=\\\"logo\\\">\\r\\n         <img src=\\\"images/logo.svg\\\" style=\\\"height: 35px;\\\">\\r\\n      </a>\\r\\n      <nav class=\\\"navbar\\\" role=\\\"navigation\\\">\\r\\n         <a href=\\\"#\\\" class=\\\"sidebar-toggle\\\" data-toggle=\\\"push-menu\\\" role=\\\"button\\\">\\r\\n            <i class=\\\"fas fa-bars\\\"></i>\\r\\n         </a>\\r\\n         <div class=\\\"navbar-custom-menu\\\">\\r\\n            <ul class=\\\"nav navbar-nav\\\">\\r\\n               <li>\\r\\n                  <a href=\\\"#\\\">\\r\\n                     <span class=\\\"hidden-xs\\\">{{loginUser.name}}</span>\\r\\n                  </a>\\r\\n               </li>\\r\\n               <li>\\r\\n                  <a [routerLink]=\\\"\\\" title=\\\"Logout\\\" class=\\\"nav-link\\\" (click)=\\\"onLogout()\\\"><i class=\\\"fas fa-sign-out-alt\\\"></i></a>\\r\\n               </li>\\r\\n            </ul>\\r\\n         </div>\\r\\n      </nav>\\r\\n   </header>\\r\\n   <aside class=\\\"main-sidebar\\\">\\r\\n      <section class=\\\"sidebar\\\">\\r\\n         <ul class=\\\"sidebar-menu\\\" data-widget=\\\"tree\\\">\\r\\n            <li class=\\\"header\\\">MAIN NAVIGATION</li>\\r\\n            <li [routerLinkActive]=\\\"['active']\\\"><a [routerLink]=\\\"['/home']\\\"><span>Home</span></a></li>\\r\\n            <li [routerLinkActive]=\\\"['active']\\\"><a [routerLink]=\\\"['/homepasses']\\\" *ngIf=\\\"getFeatureAccess('RND_HOMEPASSSES')\\\"><span>Homepasses</span></a></li>\\r\\n            <li [routerLinkActive]=\\\"['active']\\\"><a [routerLink]=\\\"['/clusters']\\\" *ngIf=\\\"getFeatureAccess('RND_CLUSTERS')\\\"><span>Clusters</span></a></li>\\r\\n            <li [routerLinkActive]=\\\"['active']\\\"><a [routerLink]=\\\"['/designs']\\\" *ngIf=\\\"getFeatureAccess('RND_DESIGN')\\\"><span>Designs</span></a></li>\\r\\n         </ul>\\r\\n      </section>\\r\\n   </aside>\\r\\n   <div class=\\\"content-wrapper\\\">\\r\\n      <router-outlet></router-outlet>\\r\\n   </div>\\r\\n   <footer class=\\\"main-footer\\\">\\r\\n      <span>&copy; Pitney Bowes 2019</span>\\r\\n      <!--<div class=\\\"pull-right hidden-xs\\\">\\r\\n         <span>Best view with IE 11, Mozilla 51, Chrome 55 and Safari 10 and above</span>\\r\\n      </div>-->\\r\\n   </footer>\\r\\n</div>\\r\\n\"","export default \"<section class=\\\"content-header\\\">\\r\\n   <h1>Manage clusters <small> {{title}} </small></h1>\\r\\n   <ol class=\\\"breadcrumb\\\">\\r\\n      <li><a [routerLink]=\\\"['/home']\\\"><i class=\\\"fa fa-home\\\"></i> Home</a></li>\\r\\n      <li><a [routerLink]=\\\"['/clusters']\\\"> clusters</a></li>\\r\\n   </ol>\\r\\n</section>\\r\\n\\r\\n<section class=\\\"content\\\">\\r\\n   <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-xs-12\\\">\\r\\n         <div class=\\\"box\\\">\\r\\n            <div class=\\\"box-header with-border ui-sortable-handle\\\">\\r\\n               <ul class=\\\"nav nav-tabs form-menu\\\">\\r\\n                  <li [class]=\\\"isNew == true?'active': ''\\\" *ngIf=\\\"isNew == true\\\"><a href=\\\"#tab_import\\\" data-toggle=\\\"tab\\\"> <span style=\\\"font-size:1.2em\\\">Import</span></a></li>\\r\\n                  <li [class]=\\\"isNew == false?'active': ''\\\"><a href=\\\"#tab_map\\\" data-toggle=\\\"tab\\\"><span style=\\\"font-size:1.2em\\\">{{tabTitle}}</span></a></li>\\r\\n               </ul>\\r\\n               <div class=\\\"box-tools pull-right\\\">\\r\\n                  <button class=\\\"btn btn-social-icon btn-xs btn-danger\\\" (click)=\\\"goBack()\\\">\\r\\n                     <i class=\\\"fas fa-times\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                  </button>\\r\\n                  <button class=\\\"btn btn-social-icon btn-xs btn-success\\\" type=\\\"submit\\\" style=\\\"margin-left: 5px;\\\" (click)=\\\"save()\\\" [disabled]=\\\"form.invalid\\\">\\r\\n                     <i class=\\\"far fa-save\\\"></i>\\r\\n                  </button>\\r\\n               </div>\\r\\n            </div>\\r\\n            <div class=\\\"box-body\\\">\\r\\n               <form name=\\\"form\\\" action=\\\"javascript:{}\\\" #form=\\\"ngForm\\\" autocomplete=\\\"off\\\" novalidate>\\r\\n                  <div class=\\\"tab-content\\\">\\r\\n                     <div id=\\\"tab_import\\\" [class]=\\\"isNew == true?'tab-pane active': 'tab-pane'\\\">\\r\\n                        <div class=\\\"col-md-12\\\">\\r\\n                           <div class=\\\"form-group\\\">\\r\\n                              <label for=\\\"uploadFile\\\">Upload file</label>\\r\\n                              <div class=\\\"input-group\\\">\\r\\n                                 <input type=\\\"text\\\" class=\\\"form-control\\\" readonly id=\\\"uploadFile\\\" placeholder=\\\"Choose file\\\">\\r\\n                                 <span class=\\\"input-group-btn\\\">\\r\\n                                    <span class=\\\"btn btn-primary btn-file\\\">\\r\\n                                       Browse&hellip; <input type=\\\"file\\\" accept=\\\".csv, .kml, .zip\\\" (change)=\\\"fileChangeEvent($event)\\\">\\r\\n                                    </span>\\r\\n                                 </span>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                           <div class=\\\"form-group\\\">\\r\\n                              <label *ngIf=\\\"clusters && clusters.length > 0\\\">Total clusters: {{clusters.length}}</label>\\r\\n                              <table class=\\\"table table-bordered table-striped\\\">\\r\\n                                 <thead>\\r\\n                                    <tr>\\r\\n                                       <th style=\\\"width:150px\\\">Code</th>\\r\\n                                       <th>Name</th>\\r\\n                                       <th style=\\\"width:150px\\\">Type</th>\\r\\n                                       <th style=\\\"width:50px\\\" class='text-center'></th>\\r\\n                                    </tr>\\r\\n                                 </thead>\\r\\n                                 <tbody>\\r\\n                                    <ng-container *ngIf='clusters && clusters.length > 0'>\\r\\n                                       <tr *ngFor='let cstr of clusters;let rowIndex = index;'>\\r\\n                                          <td>{{cstr.code}}</td>\\r\\n                                          <td>{{cstr.name}}</td>\\r\\n                                          <td>{{cstr.type}}</td>\\r\\n                                          <td style=\\\"text-align:center\\\">\\r\\n                                             <a (click)=\\\"removeUploadedCluster(rowIndex)\\\" style=\\\"cursor:pointer\\\"><i class=\\\"fas fa-trash-alt\\\" style=\\\"font-size: 15px; color: Red;\\\" title=\\\"Delete\\\"></i></a>\\r\\n                                          </td>\\r\\n                                       </tr>\\r\\n                                    </ng-container>\\r\\n                                    <tr *ngIf='clusters == null || clusters.length == 0'>\\r\\n                                       <td colspan=\\\"4\\\" style=\\\"text-align: center;\\\">\\r\\n                                          Upload clusteres.\\r\\n                                       </td>\\r\\n                                    </tr>\\r\\n                                 </tbody>\\r\\n                              </table>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                     <div id=\\\"tab_map\\\" [class]=\\\"isNew == false?'tab-pane active': 'tab-pane'\\\">\\r\\n                        <div class=\\\"panel panel-default\\\">\\r\\n                           <div style=\\\"position: relative;\\\">\\r\\n                              <div id=\\\"clusterMap\\\" style=\\\"min-height: 481px;\\\"></div>\\r\\n                              <div class=\\\"box pull-right properties\\\" *ngIf=\\\"cluster != null\\\">\\r\\n                                 <div class=\\\"box-header with-border\\\">\\r\\n                                    <!--<div class=\\\"pull-right\\\">\\r\\n                                       <i class=\\\"pull-right fas fa-trash-alt\\\" style=\\\"font-size: 15px; color: Red; cursor:pointer\\\" (click)=\\\"deleteCluster()\\\"></i>\\r\\n                                    </div>-->\\r\\n                                    <ul class=\\\"nav nav-tabs control-sidebar-tabs\\\">\\r\\n                                       <li class=\\\"active\\\"><a href=\\\"#tab_properties\\\" data-toggle=\\\"tab\\\" aria-expanded=\\\"true\\\">Properties</a></li>\\r\\n                                       <li style=\\\"border-right: 1px solid; border-left: 1px solid;\\\"><a href=\\\"#tab_homepasses\\\" data-toggle=\\\"tab\\\" aria-expanded=\\\"false\\\">Homepasses</a></li>\\r\\n                                       <li style=\\\"padding-top: 3px; padding-left: 30px;\\\"><i class=\\\"pull-right fas fa-trash-alt\\\" style=\\\"color: Red; cursor:pointer\\\" (click)=\\\"deleteCluster()\\\"></i></li>\\r\\n                                    </ul>\\r\\n                                 </div>\\r\\n                                 <div class=\\\"box-body tab-content\\\">\\r\\n                                    <div id=\\\"tab_properties\\\" class=\\\"tab-pane active\\\" style=\\\"height: 420px;\\\">\\r\\n                                       <div class=\\\"form-group\\\">\\r\\n                                          <label for=\\\"name\\\" class=\\\"control-label\\\">Name <span style=\\\"color:red;\\\">*</span></label>\\r\\n                                          <input type=\\\"text\\\" class=\\\"form-control input-sm\\\" name=\\\"name\\\" [(ngModel)]=\\\"cluster.name\\\">\\r\\n                                       </div>\\r\\n                                       <div class=\\\"form-group\\\">\\r\\n                                          <label for=\\\"code\\\" class=\\\"control-label\\\">Code <span style=\\\"color:red;\\\">*</span></label>\\r\\n                                          <input type=\\\"text\\\" class=\\\"form-control input-sm\\\" name=\\\"code\\\" [(ngModel)]=\\\"cluster.code\\\">\\r\\n                                       </div>\\r\\n                                       <div class=\\\"form-group\\\">\\r\\n                                          <label for=\\\"description\\\" class=\\\"control-label\\\">Description </label>\\r\\n                                          <input type=\\\"text\\\" class=\\\"form-control input-sm\\\" name=\\\"description\\\" [(ngModel)]=\\\"cluster.description\\\">\\r\\n                                       </div>\\r\\n                                       <div class=\\\"form-group\\\">\\r\\n                                          <label for=\\\"coordinates\\\" class=\\\"control-label\\\">Coordinates(Lng,Lat) </label>\\r\\n                                          <textarea type=\\\"text\\\" rows=\\\"5\\\" class=\\\"form-control input-sm\\\" name=\\\"coordinates\\\" value=\\\"{{stringify(cluster.geometry.coordinates)}}\\\" readonly></textarea>\\r\\n                                       </div>\\r\\n                                    </div>\\r\\n                                    <div id=\\\"tab_homepasses\\\" class=\\\"tab-pane\\\" style=\\\"height: 419px;overflow-y: auto;\\\">\\r\\n                                       <table class=\\\"table table-bordered table-striped\\\">\\r\\n                                          <thead>\\r\\n                                             <tr>\\r\\n                                                <th style=\\\"width:40px;text-align: center;\\\">\\r\\n                                                   <mat-checkbox (change)=\\\"$event ? masterToggle() : null\\\"\\r\\n                                                                 [checked]=\\\"cluster.homepasses?.length > 0 && isAllSelected()\\\"\\r\\n                                                                 [indeterminate]=\\\"cluster.homepasses?.length > 0 && !isAllSelected()\\\">\\r\\n                                                   </mat-checkbox>\\r\\n                                                </th>\\r\\n                                                <th>Code</th>\\r\\n                                                <th>Name</th>\\r\\n                                             </tr>\\r\\n                                          </thead>\\r\\n                                          <tbody>\\r\\n                                             <ng-container *ngIf='cluster.allHomepasses && cluster.allHomepasses.length > 0'>\\r\\n                                                <tr *ngFor='let homepass of cluster.allHomepasses'>\\r\\n                                                   <td style=\\\"text-align: center;\\\">\\r\\n                                                      <mat-checkbox (click)=\\\"$event.stopPropagation()\\\"\\r\\n                                                                    (change)=\\\"$event ? toggleSelection(homepass) : null\\\"\\r\\n                                                                    [checked]=\\\"cluster.homepasses?.includes(homepass.id)\\\">\\r\\n                                                      </mat-checkbox>\\r\\n                                                   </td>\\r\\n                                                   <td>{{homepass.code}}</td>\\r\\n                                                   <td>{{homepass.name}}</td>\\r\\n                                                </tr>\\r\\n                                             </ng-container>\\r\\n                                             <tr *ngIf='cluster.allHomepasses == null || cluster.allHomepasses.length == 0'>\\r\\n                                                <td colspan=\\\"3\\\" style=\\\"text-align: center;\\\">\\r\\n                                                   No homepass available.\\r\\n                                                </td>\\r\\n                                             </tr>\\r\\n                                          </tbody>\\r\\n                                       </table>\\r\\n                                    </div>\\r\\n                                 </div>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                  </div>\\r\\n               </form>\\r\\n            </div>\\r\\n            <div class=\\\"box-footer\\\">\\r\\n               <div class=\\\"pull-right\\\">\\r\\n                  <button type=\\\"submit\\\" class=\\\"btn btn-danger\\\" (click)=\\\"goBack()\\\">Close</button>\\r\\n                  <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" style=\\\"margin-left:10px\\\" (click)=\\\"save()\\\" [disabled]=\\\"form.invalid\\\">Save</button>\\r\\n               </div>\\r\\n            </div>\\r\\n         </div>\\r\\n      </div>\\r\\n   </div>\\r\\n</section>\\r\\n\"","export default \"<section class=\\\"content-header\\\">\\r\\n   <h1>Manage Clusters</h1>\\r\\n   <ol class=\\\"breadcrumb\\\">\\r\\n      <li><a [routerLink]=\\\"['/home']\\\"><i class=\\\"fas fa-home\\\"></i> Home</a></li>\\r\\n   </ol>\\r\\n</section>\\r\\n\\r\\n<section class=\\\"content\\\">\\r\\n   <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-xs-12\\\">\\r\\n         <div class=\\\"box\\\">\\r\\n            <div class=\\\"box-header with-border\\\">\\r\\n               <h3 class=\\\"box-title\\\">Cluster List</h3>\\r\\n               <div class=\\\"box-tools pull-right\\\" data-toggle=\\\"tooltip\\\" title=\\\"\\\" data-original-title=\\\"Status\\\">\\r\\n                  <button [routerLink]=\\\"['details']\\\" class=\\\"btn btn-block btn-xs btn-primary\\\"> New Cluster</button>\\r\\n               </div>\\r\\n            </div>\\r\\n            <div class=\\\"box-body\\\">\\r\\n               <dt-search [searchFields]=\\\"searchFields\\\" (onSearch)=\\\"search($event)\\\"></dt-search>\\r\\n               <dt-pagination [totalPages]=\\\"totalPages\\\" (onPageSizeChange)=\\\"onPageSizeChange($event)\\\" (onPageChange)=\\\"onPageChange($event)\\\"></dt-pagination>\\r\\n\\r\\n               <table class=\\\"table table-bordered table-striped\\\">\\r\\n                  <thead>\\r\\n                     <tr (click)=\\\"onColumnClick($event.target)\\\">\\r\\n                        <th data-column=\\\"Code\\\" class=\\\"table-sorter\\\" style=\\\"width: 200px;\\\">Code</th>\\r\\n                        <th data-column=\\\"Name\\\" class=\\\"table-sorter\\\" style=\\\"width: 200px;\\\">Name</th>\\r\\n                        <th data-column=\\\"Description\\\" class=\\\"table-sorter\\\" style=\\\"max-width:300px\\\">Description</th>\\r\\n                        <th data-column=\\\"UpdatedBy\\\" class=\\\"table-sorter\\\" style=\\\"width: 150px;\\\">Updated By</th>\\r\\n                        <th data-column=\\\"UpdatedDate\\\" class=\\\"table-sorter\\\" style=\\\"width: 125px;\\\">Updated On</th>\\r\\n                        <th style=\\\"width:60px\\\"></th>\\r\\n                     </tr>\\r\\n                  </thead>\\r\\n                  <tbody>\\r\\n                     <ng-container *ngIf='clusters && clusters.length > 0'>\\r\\n                        <tr *ngFor='let cluster of clusters'>\\r\\n                           <td>{{cluster.code}}</td>\\r\\n                           <td>{{cluster.name}}</td>\\r\\n                           <td class=\\\"text-overflow-ellipsis\\\">{{cluster.description}}</td>\\r\\n                           <td>{{cluster.updatedBy}}</td>\\r\\n                           <td>{{cluster.updatedDate | date:'dd/MM/yyyy'}}</td>\\r\\n                           <td>\\r\\n                              <a>\\r\\n                                 <i class=\\\"fa fa-edit\\\" [routerLink]=\\\"['details', cluster.id]\\\" title=\\\"Edit\\\" style=\\\"font-size: 14px; cursor:pointer\\\"></i>\\r\\n                              </a>&nbsp;\\r\\n                              <a>\\r\\n                                 <i class=\\\"fa fa-trash\\\" (click)=\\\"delete(cluster)\\\" title=\\\"Remove\\\" style=\\\"font-size: 14px; cursor:pointer; color:red\\\"></i>\\r\\n                              </a>\\r\\n                           </td>\\r\\n                        </tr>\\r\\n                     </ng-container>\\r\\n                     <tr *ngIf='clusters == null || clusters.length == 0'>\\r\\n                        <td colspan=\\\"6\\\" style=\\\"text-align: center;\\\">\\r\\n                           {{statusMessage}}\\r\\n                        </td>\\r\\n                     </tr>\\r\\n                  </tbody>\\r\\n               </table>\\r\\n            </div>\\r\\n         </div>\\r\\n      </div>\\r\\n   </div>\\r\\n</section>\\r\\n\"","export default \"   <ng-container *ngIf='customFields && customFields.length > 0'>\\r\\n      <ng-container *ngFor='let groups of customFieldGroups;let rowIndex = index;'>\\r\\n         <ng-container *ngFor='let item of groups'>\\r\\n            <div class=\\\"panel panel-borderless\\\">\\r\\n               <div class=\\\"panel-heading\\\">\\r\\n                  <h4 class=\\\"panel-title\\\">\\r\\n                     <a class=\\\"accordion-toggle\\\" data-toggle=\\\"collapse\\\" [attr.data-parent]=\\\"'#'+accordionId\\\" [href]=\\\"'#cf_'+rowIndex\\\">{{item.category}}</a>\\r\\n                  </h4>\\r\\n               </div>\\r\\n               <div [id]=\\\"'cf_'+rowIndex\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                  <div class=\\\"panel-body\\\">\\r\\n                     <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"category\\\" class=\\\"control-label\\\">{{item.label}}</label>\\r\\n                        <input [type]=item.dataType class=\\\"form-control\\\" [name]=\\\"item.name\\\" [(ngModel)]=\\\"item.userValue\\\" autocomplete=\\\"off\\\">\\r\\n                     </div>\\r\\n                  </div>\\r\\n               </div>\\r\\n            </div>\\r\\n         </ng-container>\\r\\n      </ng-container>\\r\\n   </ng-container>\\r\\n\"","export default \"<div class=\\\"pull-left\\\">\\r\\n   <span style=\\\"padding-right: 10px;font-size: small;\\\">Pages</span>\\r\\n   <div class=\\\"btn-group\\\" style=\\\"padding-right: 10px;\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-default dropdown-toggle btn-sm\\\" data-toggle=\\\"dropdown\\\" aria-expanded=\\\"false\\\">\\r\\n         <span style=\\\"padding-right: 5px;\\\"> {{pageSize}} </span>\\r\\n         <span class=\\\"caret\\\"></span>\\r\\n      </button>\\r\\n      <ul class=\\\"dropdown-menu\\\">\\r\\n         <li><a [routerLink]=\\\"\\\" (click)=\\\"pageSize = 10; pageSizeChange()\\\">10</a></li>\\r\\n         <li><a [routerLink]=\\\"\\\" (click)=\\\"pageSize = 20; pageSizeChange()\\\">20</a></li>\\r\\n         <li><a [routerLink]=\\\"\\\" (click)=\\\"pageSize = 50; pageSizeChange()\\\">50</a></li>\\r\\n         <li><a [routerLink]=\\\"\\\" (click)=\\\"pageSize = 100; pageSizeChange()\\\">100</a></li>\\r\\n      </ul>\\r\\n   </div>\\r\\n</div>\\r\\n<div class=\\\"pull-right\\\">\\r\\n   <span style=\\\"padding-right: 10px;font-size: small;\\\">Showing page {{currentPage}} of {{totalPages}}</span>\\r\\n   <div class=\\\"btn-group\\\" style=\\\"padding-bottom:5px\\\">\\r\\n      <button class=\\\"btn btn-default btn-sm\\\" type=\\\"button\\\" (click)=\\\"setPage(currentPage - 1)\\\" [ngClass]=\\\"{disabled:currentPage === 1}\\\"><i class=\\\"fa fa-chevron-left fa-fw\\\"></i></button>\\r\\n      <button class=\\\"btn btn-default btn-sm\\\" type=\\\"button\\\" (click)=\\\"setPage(currentPage + 1)\\\" [ngClass]=\\\"{disabled:currentPage === totalPages}\\\"><i class=\\\"fa fa-chevron-right fa-fw\\\"></i></button>\\r\\n   </div>\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"input-group input-group-sm\\\" style=\\\"padding-bottom:20px\\\">\\r\\n   <div class=\\\"input-group-btn\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-warning dropdown-toggle search-dropdown\\\" data-toggle=\\\"dropdown\\\" aria-expanded=\\\"false\\\">\\r\\n         {{selectedField.label}}\\r\\n         <span class=\\\"fa fa-caret-down\\\"></span>\\r\\n      </button>\\r\\n      <ul class=\\\"dropdown-menu\\\">\\r\\n         <ng-container *ngIf='searchFields && searchFields.length > 0'>\\r\\n            <li *ngFor='let searchField of searchFields'>\\r\\n               <a [routerLink]=\\\"\\\" (click)=setSearchField(searchField)>{{searchField.label}}</a>\\r\\n            </li>\\r\\n         </ng-container>\\r\\n         <li class=\\\"divider\\\"></li>\\r\\n         <li><a [routerLink]=\\\"\\\" data-toggle=\\\"modal\\\" data-target=\\\"#advancedSearch\\\">Advanced Search</a></li>\\r\\n\\r\\n      </ul>\\r\\n   </div>\\r\\n   <input [type]=selectedField.dataType class=\\\"form-control\\\" name=\\\"dateSearch\\\" [(ngModel)]=\\\"searchText\\\" autocomplete=\\\"off\\\">\\r\\n   <span class=\\\"input-group-btn\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-info btn-flat\\\" (click)=\\\"search()\\\"><i class=\\\"fas fa-search\\\"></i></button>\\r\\n   </span>\\r\\n</div>\\r\\n<ng-container *ngIf=\\\"searchFilter && searchFilter.filters.length > 0\\\">\\r\\n   <div style=\\\"padding-bottom: 8px; border-bottom: 1px solid #ddd; margin-bottom: 10px;\\\">\\r\\n      <label>Search Filters:</label>\\r\\n      <div class=\\\"row\\\">\\r\\n         <ng-container *ngFor='let filter of filterPills; let rowIndex = index;'>\\r\\n            <span class=\\\"search-param\\\">{{filter.propertyName}} = {{filter.value}} <a (click)=\\\"removeFilter(rowIndex)\\\" style=\\\"cursor:pointer\\\"><i class=\\\"fa fa-times\\\" title=\\\"Remove\\\" style=\\\"color: Red; padding-left: 10px;\\\"></i></a></span>\\r\\n         </ng-container>\\r\\n      </div>\\r\\n   </div>\\r\\n</ng-container>\\r\\n\\r\\n<div id=\\\"advancedSearch\\\" class=\\\"modal fade\\\" role=\\\"dialog\\\">\\r\\n   <div class=\\\"modal-dialog\\\">\\r\\n      <div class=\\\"modal-content\\\" style=\\\"border-radius:3px\\\">\\r\\n         <div class=\\\"modal-header\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\r\\n            <h4 class=\\\"modal-title\\\">Advanced Search</h4>\\r\\n         </div>\\r\\n         <div class=\\\"modal-body\\\">\\r\\n            <div class=\\\"pull-right\\\">\\r\\n               <span style=\\\"padding-right:5px; vertical-align: top;\\\">Condition</span>\\r\\n               <label class=\\\"switch\\\">\\r\\n                  <input type=\\\"checkbox\\\" [checked]=\\\"conditionOption\\\" [(ngModel)]=\\\"conditionOption\\\">\\r\\n                  <span class=\\\"slider round\\\"></span>\\r\\n               </label>\\r\\n            </div>\\r\\n            <table class=\\\"table table-bordered\\\">\\r\\n               <thead>\\r\\n                  <tr>\\r\\n                     <th style=\\\"width: 200px;\\\">Field</th>\\r\\n                     <th>Value</th>\\r\\n                  </tr>\\r\\n               </thead>\\r\\n               <tbody>\\r\\n                  <ng-container *ngIf='searchFields && searchFields.length > 0'>\\r\\n                     <tr *ngFor='let searchField of searchFields'>\\r\\n                        <td>{{searchField.label}}</td>\\r\\n                        <td><input [type]=searchField.dataType class=\\\"form-control input-sm\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"searchField.value\\\"></td>\\r\\n                     </tr>\\r\\n                  </ng-container>\\r\\n                  <tr *ngIf='searchFields == null || searchFields.length == 0'>\\r\\n                     <td colspan=\\\"2\\\" style=\\\"text-align: center;\\\">\\r\\n                        No search fields defined\\r\\n                     </td>\\r\\n                  </tr>\\r\\n               </tbody>\\r\\n            </table>\\r\\n         </div>\\r\\n         <div class=\\\"modal-footer\\\">\\r\\n            <button class=\\\"btn btn-info\\\" data-dismiss=\\\"modal\\\" type=\\\"button\\\" (click)=\\\"advancedSearch()\\\">Search</button>\\r\\n            <button class=\\\"btn btn-default pull-left\\\" data-dismiss=\\\"modal\\\" type=\\\"button\\\" (click)=\\\"clearSearch()\\\">Clear</button>\\r\\n         </div>\\r\\n      </div>\\r\\n   </div>\\r\\n</div>\\r\\n\"","export default \"<section class=\\\"content-header\\\">\\r\\n    <h1>Dashboard</h1>\\r\\n</section>\\r\\n\\r\\n<!--<section class=\\\"content\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n            <div class=\\\"box\\\">\\r\\n                <div class=\\\"box-header with-border ui-sortable-handle\\\">\\r\\n                    <h3 class=\\\"box-title\\\">Task</h3>\\r\\n                </div>\\r\\n                <div class=\\\"box-body\\\">\\r\\n                   <div class=\\\"row\\\">\\r\\n\\r\\n                   </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n</section>-->\\r\\n\"","export default \"<div class=\\\"form-group col-md-12\\\">\\r\\n   <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"accessory\\\" class=\\\"control-label\\\">Select Accessory</label>\\r\\n      <div class=\\\"input-group input-group-sm\\\">\\r\\n         <mat-select name=\\\"accessory\\\" [(ngModel)]=\\\"selectedAccessory\\\">\\r\\n            <mat-option>Select Accessory</mat-option>\\r\\n            <ng-container *ngIf=\\\"accessoriesMaster && accessoriesMaster.length > 0\\\">\\r\\n               <mat-option *ngFor=\\\"let accessory of accessoriesMaster\\\" [value]=\\\"accessory\\\">\\r\\n                  {{accessory.name}}\\r\\n               </mat-option>\\r\\n            </ng-container>\\r\\n         </mat-select>\\r\\n         <span class=\\\"input-group-btn\\\"><button class=\\\"btn btn-info btn-flat\\\" type=\\\"button\\\" (click)=\\\"addAccessory()\\\"><i class=\\\"fas fa-plus\\\"></i></button></span>\\r\\n      </div>\\r\\n   </div>\\r\\n</div>\\r\\n<!--<div class=\\\"col-sm-6\\\">\\r\\n   <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"equipment\\\" class=\\\"control-label\\\">Accessory Option</label>\\r\\n      <mat-select name=\\\"accessoryOption\\\" [(ngModel)]=\\\"accessorySettings.dataSource\\\">\\r\\n         <mat-option>Accessory Option</mat-option>\\r\\n         <mat-option value=\\\"import\\\">Import</mat-option>\\r\\n         <mat-option value=\\\"existing\\\">Use from existing design</mat-option>\\r\\n         <mat-option value=\\\"automatic\\\">Place Automatically</mat-option>\\r\\n      </mat-select>\\r\\n   </div>\\r\\n</div>-->\\r\\n<!--<div class=\\\"form-group\\\" *ngIf=\\\"accessorySettings.dataSource == 'import'\\\">\\r\\n   <label for=\\\"equipment\\\" class=\\\"control-label\\\">Select Accessories File</label>\\r\\n   <div class=\\\"input-group\\\">\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" readonly id=\\\"uploadFile\\\" placeholder=\\\"Choose file\\\">\\r\\n      <span class=\\\"input-group-btn\\\">\\r\\n         <span class=\\\"btn btn-primary btn-file\\\">\\r\\n            Browse&hellip; <input type=\\\"file\\\" multiple #fileInput (click)=\\\"fileInput.value = null\\\" value=\\\"\\\" (change)=\\\"fileChangeEvent($event)\\\">\\r\\n         </span>\\r\\n      </span>\\r\\n   </div>\\r\\n</div>\\r\\n<div *ngIf=\\\"accessorySettings.dataSource == 'existing'\\\">\\r\\n   <div class=\\\"col-sm-6\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n         <label for=\\\"design\\\" class=\\\"control-label\\\">Select Design</label>\\r\\n         <mat-select name=\\\"design\\\" [(ngModel)]=\\\"accessorySettings.existingDesignId\\\" (ngModelChange)=\\\"onDesignChange($event)\\\">\\r\\n            <mat-option>Select Design</mat-option>\\r\\n            <mat-option *ngFor=\\\"let item of allDesigns\\\" [value]=\\\"item.id\\\">(ver {{item.version}}) {{item.name}}</mat-option>\\r\\n         </mat-select>\\r\\n      </div>\\r\\n   </div>\\r\\n   <div class=\\\"col-sm-6\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n         <label for=\\\"accessoryType\\\" class=\\\"control-label\\\">Accessory Type</label>\\r\\n         <mat-select name=\\\"accessoryType\\\" (ngModelChange)=\\\"onAccessoryChange($event)\\\">\\r\\n            <mat-option>Select Accessory Type</mat-option>\\r\\n            <mat-option *ngFor=\\\"let item of designAccessories\\\" [value]=\\\"item\\\">{{item.name}}</mat-option>\\r\\n         </mat-select>\\r\\n      </div>\\r\\n   </div>\\r\\n</div>-->\\r\\n<div class=\\\"col-sm-12\\\">\\r\\n   <div class=\\\"form-group\\\">\\r\\n      <table class=\\\"table table-bordered table-striped\\\">\\r\\n         <thead>\\r\\n            <tr>\\r\\n               <th>Name</th>\\r\\n               <th style=\\\"width:40px\\\"></th>\\r\\n            </tr>\\r\\n         </thead>\\r\\n         <tbody>\\r\\n            <ng-container *ngIf='accessorySettings.accessories && accessorySettings.accessories.length > 0'>\\r\\n               <tr *ngFor='let accessory of accessorySettings.accessories;let rowIndex = index;'>\\r\\n                  <td>{{accessory.name}}</td>\\r\\n                  <td>\\r\\n                     <a>\\r\\n                        <i class=\\\"fas fa-trash-alt\\\" style=\\\"font-size: 15px; color: Red; cursor:pointer\\\" (click)=\\\"removeAccessory(rowIndex)\\\" title=\\\"Remove\\\"></i>\\r\\n                     </a>\\r\\n                  </td>\\r\\n               </tr>\\r\\n            </ng-container>\\r\\n            <tr *ngIf='accessorySettings.accessories == null || accessorySettings.accessories.length == 0'>\\r\\n               <td colspan=\\\"2\\\" style=\\\"text-align: center;\\\">\\r\\n                  {{statusMessage}}\\r\\n               </td>\\r\\n            </tr>\\r\\n         </tbody>\\r\\n      </table>\\r\\n   </div>\\r\\n</div>\\r\\n\\r\\n\"","export default \"<ul class=\\\"nav nav-tabs\\\" id=\\\"myNavTabs1\\\">\\r\\n   <li class=\\\"active\\\"><a href=\\\"#divSummary\\\" data-toggle=\\\"tab\\\" aria-expanded=\\\"true\\\">Summary</a></li>\\r\\n   <li><a href=\\\"#divDetails\\\" data-toggle=\\\"tab\\\" aria-expanded=\\\"false\\\">Details</a></li>\\r\\n   <li class=\\\"btn-group pull-right open\\\" style=\\\"padding-left: 0px;\\\">\\r\\n      <button type=\\\"button\\\" (click)=\\\"ExportTOKml()\\\" class=\\\"btn btn-social-icon btn-md btn-default\\\">\\r\\n         <img src=\\\"images/file-ext/kml.svg\\\" style=\\\"width: 23px;margin-top: 5px;margin-left: 5px;\\\">\\r\\n      </button>\\r\\n   </li>\\r\\n   <li class=\\\"btn-group pull-right open\\\" style=\\\"padding-left: 10px;\\\">\\r\\n      <button type=\\\"button\\\" (click)=\\\"ExportTOExcel()\\\" class=\\\"btn btn-social-icon btn-md btn-default\\\">\\r\\n         <img src=\\\"images/file-ext/xlsx.svg\\\" style=\\\"width: 23px;margin-top: 5px;margin-left: 5px;\\\">\\r\\n      </button>\\r\\n   </li>\\r\\n</ul>\\r\\n<div class=\\\"panel-body\\\">\\r\\n   <div class=\\\"tab-content\\\">\\r\\n      <div id=\\\"divSummary\\\" class=\\\"tab-pane active\\\" #TABLE #table>\\r\\n         <table class=\\\"table table-bordered table-striped\\\">\\r\\n            <thead>\\r\\n               <tr>\\r\\n                  <th scope=\\\"col\\\" colspan=\\\"2\\\" style=\\\"text-align:center;\\\"><b>Total Cost Summary</b></th>\\r\\n               </tr>\\r\\n            <tbody>\\r\\n               <tr>\\r\\n                  <td><b>Total Material Cost</b></td>\\r\\n                  <td style=\\\"text-align:right\\\">{{totalMaterialCost | number : '1.2-2'}}</td>\\r\\n               </tr>\\r\\n               <tr>\\r\\n                  <td><b>Total Service Cost</b></td>\\r\\n                  <td style=\\\"text-align:right\\\">{{totalServiceCost | number : '1.2-2'}}</td>\\r\\n               </tr>\\r\\n            </tbody>\\r\\n            <tfoot>\\r\\n               <tr>\\r\\n                  <td><b>Total Cost</b></td>\\r\\n                  <td style=\\\"text-align:right\\\">{{totalCost | number : '1.2-2'}}</td>\\r\\n               </tr>\\r\\n            </tfoot>\\r\\n         </table>\\r\\n\\r\\n         <table class=\\\"table table-bordered table-striped\\\">\\r\\n            <thead>\\r\\n               <tr>\\r\\n                  <th scope=\\\"col\\\" colspan=\\\"7\\\" style=\\\"text-align:center;\\\"><b>Category Wise Cost Cummary</b></th>\\r\\n               </tr>\\r\\n               <tr>\\r\\n                  <th style=\\\"width: 60px;text-align: center;\\\">No.</th>\\r\\n                  <th>Description</th>\\r\\n                  <th style=\\\"width: 120px;text-align: center;\\\">Unit</th>\\r\\n                  <th style=\\\"width: 120px;text-align: center;\\\">Quantity</th>\\r\\n                  <th style=\\\"width: 120px;text-align: center;\\\">Material Cost</th>\\r\\n                  <th style=\\\"width: 120px;text-align: center;\\\">Service Cost</th>\\r\\n                  <th style=\\\"width: 120px;text-align: center;\\\">Total Cost</th>\\r\\n               </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n               <tr>\\r\\n                  <td style=\\\"text-align:center\\\">1</td>\\r\\n                  <td>Cables</td>\\r\\n                  <td style=\\\"text-align:center\\\">{{cableSummary.units}}</td>\\r\\n                  <td style=\\\"text-align:right\\\">{{cableSummary.quantity | number : '1.2-2'}}</td>\\r\\n                  <td style=\\\"text-align:right\\\">{{cableSummary.materialCost | number : '1.2-2'}}</td>\\r\\n                  <td style=\\\"text-align:right\\\">{{cableSummary.serviceCost | number : '1.2-2'}}</td>\\r\\n                  <td style=\\\"text-align:right\\\"><b>{{(cableSummary.materialCost + cableSummary.serviceCost) | number : '1.2-2'}}</b></td>\\r\\n               </tr>\\r\\n               <tr>\\r\\n                  <td style=\\\"text-align:center\\\">2</td>\\r\\n                  <td>Chambers</td>\\r\\n                  <td style=\\\"text-align:center\\\">{{chamberSummary.units}}</td>\\r\\n                  <td style=\\\"text-align:right\\\">{{chamberSummary.quantity | number : '1.2-2'}}</td>\\r\\n                  <td style=\\\"text-align:right\\\">{{chamberSummary.materialCost | number : '1.2-2'}}</td>\\r\\n                  <td style=\\\"text-align:right\\\">{{chamberSummary.serviceCost | number : '1.2-2'}}</td>\\r\\n                  <td style=\\\"text-align:right\\\"><b>{{(chamberSummary.materialCost + chamberSummary.serviceCost) | number : '1.2-2'}}</b></td>\\r\\n               </tr>\\r\\n               <tr>\\r\\n                  <td style=\\\"text-align:center\\\">3</td>\\r\\n                  <td>Ducts</td>\\r\\n                  <td style=\\\"text-align:center\\\">{{ductSummary.units}}</td>\\r\\n                  <td style=\\\"text-align:right\\\">{{ductSummary.quantity | number : '1.2-2'}}</td>\\r\\n                  <td style=\\\"text-align:right\\\">{{ductSummary.materialCost | number : '1.2-2'}}</td>\\r\\n                  <td style=\\\"text-align:right\\\">{{ductSummary.serviceCost | number : '1.2-2'}}</td>\\r\\n                  <td style=\\\"text-align:right\\\"><b>{{(ductSummary.materialCost + ductSummary.serviceCost) | number : '1.2-2'}}</b></td>\\r\\n               </tr>\\r\\n               <tr>\\r\\n                  <td style=\\\"text-align:center\\\">4</td>\\r\\n                  <td>ODFs</td>\\r\\n                  <td style=\\\"text-align:center\\\">{{odfSummary.units}}</td>\\r\\n                  <td style=\\\"text-align:right\\\">{{odfSummary.quantity | number : '1.2-2'}}</td>\\r\\n                  <td style=\\\"text-align:right\\\">{{odfSummary.materialCost | number : '1.2-2'}}</td>\\r\\n                  <td style=\\\"text-align:right\\\">{{odfSummary.serviceCost | number : '1.2-2'}}</td>\\r\\n                  <td style=\\\"text-align:right\\\"><b>{{(odfSummary.materialCost + odfSummary.serviceCost) | number : '1.2-2'}}</b></td>\\r\\n               </tr>\\r\\n               <tr>\\r\\n                  <td style=\\\"text-align:center\\\">5</td>\\r\\n                  <td>Poles</td>\\r\\n                  <td style=\\\"text-align:center\\\">{{poleSummary.units}}</td>\\r\\n                  <td style=\\\"text-align:right\\\">{{poleSummary.quantity | number : '1.2-2'}}</td>\\r\\n                  <td style=\\\"text-align:right\\\">{{poleSummary.materialCost | number : '1.2-2'}}</td>\\r\\n                  <td style=\\\"text-align:right\\\">{{poleSummary.serviceCost | number : '1.2-2'}}</td>\\r\\n                  <td style=\\\"text-align:right\\\"><b>{{(poleSummary.materialCost + poleSummary.serviceCost) | number : '1.2-2'}}</b></td>\\r\\n               </tr>\\r\\n               <tr>\\r\\n                  <td style=\\\"text-align:center\\\">6</td>\\r\\n                  <td>Splitters</td>\\r\\n                  <td style=\\\"text-align:center\\\">{{splitterSummary.units}}</td>\\r\\n                  <td style=\\\"text-align:right\\\">{{splitterSummary.quantity | number : '1.2-2'}}</td>\\r\\n                  <td style=\\\"text-align:right\\\">{{splitterSummary.materialCost | number : '1.2-2'}}</td>\\r\\n                  <td style=\\\"text-align:right\\\">{{splitterSummary.serviceCost | number : '1.2-2'}}</td>\\r\\n                  <td style=\\\"text-align:right\\\"><b>{{(splitterSummary.materialCost + splitterSummary.serviceCost) | number : '1.2-2'}}</b></td>\\r\\n               </tr>\\r\\n               <tr>\\r\\n                  <td style=\\\"text-align:center\\\">7</td>\\r\\n                  <td>Splice Closures</td>\\r\\n                  <td style=\\\"text-align:center\\\">{{spliceClosureSummary.units}}</td>\\r\\n                  <td style=\\\"text-align:right\\\">{{spliceClosureSummary.quantity | number : '1.2-2'}}</td>\\r\\n                  <td style=\\\"text-align:right\\\">{{spliceClosureSummary.materialCost | number : '1.2-2'}}</td>\\r\\n                  <td style=\\\"text-align:right\\\">{{spliceClosureSummary.serviceCost | number : '1.2-2'}}</td>\\r\\n                  <td style=\\\"text-align:right\\\"><b>{{(spliceClosureSummary.materialCost + spliceClosureSummary.serviceCost) | number : '1.2-2'}}</b></td>\\r\\n               </tr>\\r\\n               <tr>\\r\\n                  <td style=\\\"text-align:center\\\">8</td>\\r\\n                  <td>Accessories</td>\\r\\n                  <td style=\\\"text-align:center\\\">{{accessorySummary.units}}</td>\\r\\n                  <td style=\\\"text-align:right\\\">{{accessorySummary.quantity | number : '1.2-2'}}</td>\\r\\n                  <td style=\\\"text-align:right\\\">{{accessorySummary.materialCost | number : '1.2-2'}}</td>\\r\\n                  <td style=\\\"text-align:right\\\">{{accessorySummary.serviceCost | number : '1.2-2'}}</td>\\r\\n                  <td style=\\\"text-align:right\\\"><b>{{(accessorySummary.materialCost + accessorySummary.serviceCost) | number : '1.2-2'}}</b></td>\\r\\n               </tr>\\r\\n               <tr>\\r\\n                  <td style=\\\"text-align:center\\\">9</td>\\r\\n                  <td>Civilworks</td>\\r\\n                  <td style=\\\"text-align:center\\\">{{civilworkSummary.units}}</td>\\r\\n                  <td style=\\\"text-align:right\\\">{{civilworkSummary.quantity | number : '1.2-2'}}</td>\\r\\n                  <td style=\\\"text-align:right\\\">{{civilworkSummary.materialCost | number : '1.2-2'}}</td>\\r\\n                  <td style=\\\"text-align:right\\\">{{civilworkSummary.serviceCost | number : '1.2-2'}}</td>\\r\\n                  <td style=\\\"text-align:right\\\"><b>{{(civilworkSummary.materialCost + civilworkSummary.serviceCost) | number : '1.2-2'}}</b></td>\\r\\n               </tr>\\r\\n            </tbody>\\r\\n         </table>\\r\\n\\r\\n      </div>\\r\\n      <div id=\\\"divDetails\\\" class=\\\"tab-pane\\\" #TABLE1 #table>\\r\\n         <table class=\\\"table table-bordered table-striped\\\" style=\\\"font-size:smaller\\\">\\r\\n            <thead>\\r\\n               <tr>\\r\\n                  <th scope=\\\"col\\\" colspan=\\\"10\\\" style=\\\"text-align:center;\\\"><b>Cable</b></th>\\r\\n               </tr>\\r\\n               <tr>\\r\\n                  <th style=\\\"width: 60px;text-align: center;\\\">No.</th>\\r\\n                  <th>Description</th>\\r\\n                  <th style=\\\"width: 120px;text-align: center;\\\">Unit</th>\\r\\n                  <th style=\\\"width: 120px;text-align: center;\\\">Quantity</th>\\r\\n                  <th style=\\\"width: 120px;text-align: center;\\\">Currency</th>\\r\\n                  <th style=\\\"width: 120px;text-align: center;\\\">Material <br />Cost/Unit</th>\\r\\n                  <th style=\\\"width: 120px;text-align: center;\\\">Total <br />Material Cost</th>\\r\\n                  <th style=\\\"width: 120px;text-align: center;\\\">Service <br />Cost/Unit</th>\\r\\n                  <th style=\\\"width: 120px;text-align: center;\\\">Total <br />Service Cost</th>\\r\\n                  <th style=\\\"width: 120px;text-align: center;\\\">Total <br />Cost</th>\\r\\n               </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n               <ng-container *ngIf='cableGroups && cableGroups.length > 0'>\\r\\n                  <ng-container *ngFor='let items of cableGroups;'>\\r\\n                     <tr>\\r\\n                        <td colspan=\\\"10\\\"><b>{{items[0].levelName}}</b></td>\\r\\n                     </tr>\\r\\n                     <tr *ngFor='let item of items; let rowIndex = index'>\\r\\n                        <td style=\\\"text-align:center\\\">{{rowIndex}}</td>\\r\\n                        <td>{{item.description}}</td>\\r\\n                        <td style=\\\"text-align:center\\\">{{item.units}}</td>\\r\\n                        <td style=\\\"text-align:right\\\">{{item.quantity | number : '1.2-2'}}</td>\\r\\n                        <td style=\\\"text-align:center; width:80px\\\">{{item.currency}}</td>\\r\\n                        <td style=\\\"text-align:right\\\">{{item.materialCost | number : '1.2-2'}}</td>\\r\\n                        <td style=\\\"text-align:right\\\">{{item.materialCost * item.quantity | number : '1.2-2'}}</td>\\r\\n                        <td style=\\\"text-align:right\\\">{{item.serviceCost}}</td>\\r\\n                        <td style=\\\"text-align:right\\\">{{item.serviceCost * item.quantity | number : '1.2-2'}}</td>\\r\\n                        <td style=\\\"text-align:right\\\"><b>{{(item.materialCost * item.quantity) + (item.serviceCost * item.quantity) | number : '1.2-2'}}</b></td>\\r\\n                     </tr>\\r\\n                  </ng-container>\\r\\n               </ng-container>\\r\\n               <tr *ngIf='cableGroups == null || cableGroups.length == 0'>\\r\\n                  <td colspan=\\\"10\\\" style=\\\"text-align: center;\\\">&nbsp;</td>\\r\\n               </tr>\\r\\n            </tbody>\\r\\n         </table>\\r\\n\\r\\n         <table class=\\\"table table-bordered table-striped\\\" style=\\\"font-size:smaller\\\">\\r\\n            <thead>\\r\\n               <tr>\\r\\n                  <th scope=\\\"col\\\" colspan=\\\"10\\\" style=\\\"text-align:center;\\\"><b>Chambers</b></th>\\r\\n               </tr>\\r\\n               <tr>\\r\\n                  <th style=\\\"width: 60px;text-align: center;\\\">No.</th>\\r\\n                  <th>Description</th>\\r\\n                  <th style=\\\"width: 120px;text-align: center;\\\">Unit</th>\\r\\n                  <th style=\\\"width: 120px;text-align: center;\\\">Quantity</th>\\r\\n                  <th style=\\\"width: 120px;text-align: center;\\\">Currency</th>\\r\\n                  <th style=\\\"width: 120px;text-align: center;\\\">Material <br />Cost/Unit</th>\\r\\n                  <th style=\\\"width: 120px;text-align: center;\\\">Total <br />Material Cost</th>\\r\\n                  <th style=\\\"width: 120px;text-align: center;\\\">Service <br />Cost/Unit</th>\\r\\n                  <th style=\\\"width: 120px;text-align: center;\\\">Total <br />Service Cost</th>\\r\\n                  <th style=\\\"width: 120px;text-align: center;\\\">Total <br />Cost</th>\\r\\n               </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n               <ng-container *ngIf='chamberGroups && chamberGroups.length > 0'>\\r\\n                  <ng-container *ngFor='let items of chamberGroups;'>\\r\\n                     <tr>\\r\\n                        <td colspan=\\\"10\\\"><b>{{items[0].levelName}}</b></td>\\r\\n                     </tr>\\r\\n                     <tr *ngFor='let item of items; let rowIndex = index'>\\r\\n                        <td style=\\\"text-align:center\\\">{{rowIndex}}</td>\\r\\n                        <td>{{item.description}}</td>\\r\\n                        <td style=\\\"text-align:center\\\">{{item.units}}</td>\\r\\n                        <td style=\\\"text-align:right\\\">{{item.quantity | number : '1.2-2'}}</td>\\r\\n                        <td style=\\\"text-align:center; width:80px\\\">{{item.currency}}</td>\\r\\n                        <td style=\\\"text-align:right\\\">{{item.materialCost | number : '1.2-2'}}</td>\\r\\n                        <td style=\\\"text-align:right\\\">{{item.materialCost * item.quantity | number : '1.2-2'}}</td>\\r\\n                        <td style=\\\"text-align:right\\\">{{item.serviceCost}}</td>\\r\\n                        <td style=\\\"text-align:right\\\">{{item.serviceCost * item.quantity | number : '1.2-2'}}</td>\\r\\n                        <td style=\\\"text-align:right\\\"><b>{{(item.materialCost * item.quantity) + (item.serviceCost * item.quantity) | number : '1.2-2'}}</b></td>\\r\\n                     </tr>\\r\\n                  </ng-container>\\r\\n               </ng-container>\\r\\n               <tr *ngIf='chamberGroups == null || chamberGroups.length == 0'>\\r\\n                  <td colspan=\\\"10\\\" style=\\\"text-align: center;\\\">&nbsp;</td>\\r\\n               </tr>\\r\\n            </tbody>\\r\\n         </table>\\r\\n\\r\\n         <table class=\\\"table table-bordered table-striped\\\" style=\\\"font-size:smaller\\\">\\r\\n            <thead>\\r\\n               <tr>\\r\\n                  <th scope=\\\"col\\\" colspan=\\\"10\\\" style=\\\"text-align:center;\\\"><b>Ducts</b></th>\\r\\n               </tr>\\r\\n               <tr>\\r\\n                  <th style=\\\"width: 60px;text-align: center;\\\">No.</th>\\r\\n                  <th>Description</th>\\r\\n                  <th style=\\\"width: 120px;text-align: center;\\\">Unit</th>\\r\\n                  <th style=\\\"width: 120px;text-align: center;\\\">Quantity</th>\\r\\n                  <th style=\\\"width: 120px;text-align: center;\\\">Currency</th>\\r\\n                  <th style=\\\"width: 120px;text-align: center;\\\">Material <br />Cost/Unit</th>\\r\\n                  <th style=\\\"width: 120px;text-align: center;\\\">Total <br />Material Cost</th>\\r\\n                  <th style=\\\"width: 120px;text-align: center;\\\">Service <br />Cost/Unit</th>\\r\\n                  <th style=\\\"width: 120px;text-align: center;\\\">Total <br />Service Cost</th>\\r\\n                  <th style=\\\"width: 120px;text-align: center;\\\">Total <br />Cost</th>\\r\\n               </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n               <ng-container *ngIf='ductGroups && ductGroups.length > 0'>\\r\\n                  <ng-container *ngFor='let items of ductGroups; let rowIndex = index'>\\r\\n                     <tr>\\r\\n                        <td colspan=\\\"10\\\"><b>{{items[0].levelName}}</b></td>\\r\\n                     </tr>\\r\\n                     <tr *ngFor='let item of items; let rowIndex = index'>\\r\\n                        <td style=\\\"text-align:center\\\">{{rowIndex}}</td>\\r\\n                        <td>{{item.description}}</td>\\r\\n                        <td style=\\\"text-align:center\\\">{{item.units}}</td>\\r\\n                        <td style=\\\"text-align:right\\\">{{item.quantity | number : '1.2-2'}}</td>\\r\\n                        <td style=\\\"text-align:center; width:80px\\\">{{item.currency}}</td>\\r\\n                        <td style=\\\"text-align:right\\\">{{item.materialCost | number : '1.2-2'}}</td>\\r\\n                        <td style=\\\"text-align:right\\\">{{item.materialCost * item.quantity | number : '1.2-2'}}</td>\\r\\n                        <td style=\\\"text-align:right\\\">{{item.serviceCost}}</td>\\r\\n                        <td style=\\\"text-align:right\\\">{{item.serviceCost * item.quantity | number : '1.2-2'}}</td>\\r\\n                        <td style=\\\"text-align:right\\\"><b>{{(item.materialCost * item.quantity) + (item.serviceCost * item.quantity) | number : '1.2-2'}}</b></td>\\r\\n                     </tr>\\r\\n                  </ng-container>\\r\\n               </ng-container>\\r\\n               <tr *ngIf='ductGroups == null || ductGroups.length == 0'>\\r\\n                  <td colspan=\\\"10\\\" style=\\\"text-align: center;\\\">&nbsp;</td>\\r\\n               </tr>\\r\\n            </tbody>\\r\\n         </table>\\r\\n\\r\\n         <table class=\\\"table table-bordered table-striped\\\" style=\\\"font-size:smaller\\\">\\r\\n            <thead>\\r\\n               <tr>\\r\\n                  <th scope=\\\"col\\\" colspan=\\\"10\\\" style=\\\"text-align:center;\\\"><b>ODFs</b></th>\\r\\n               </tr>\\r\\n               <tr>\\r\\n                  <th style=\\\"width: 60px;text-align: center;\\\">No.</th>\\r\\n                  <th>Description</th>\\r\\n                  <th style=\\\"width: 120px;text-align: center;\\\">Unit</th>\\r\\n                  <th style=\\\"width: 120px;text-align: center;\\\">Quantity</th>\\r\\n                  <th style=\\\"width: 120px;text-align: center;\\\">Currency</th>\\r\\n                  <th style=\\\"width: 120px;text-align: center;\\\">Material <br />Cost/Unit</th>\\r\\n                  <th style=\\\"width: 120px;text-align: center;\\\">Total <br />Material Cost</th>\\r\\n                  <th style=\\\"width: 120px;text-align: center;\\\">Service <br />Cost/Unit</th>\\r\\n                  <th style=\\\"width: 120px;text-align: center;\\\">Total <br />Service Cost</th>\\r\\n                  <th style=\\\"width: 120px;text-align: center;\\\">Total <br />Cost</th>\\r\\n               </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n               <ng-container *ngIf='odfGroups && odfGroups.length > 0'>\\r\\n                  <ng-container *ngFor='let items of odfGroups; let rowIndex = index'>\\r\\n                     <tr>\\r\\n                        <td colspan=\\\"10\\\"><b>{{items[0].levelName}}</b></td>\\r\\n                     </tr>\\r\\n                     <tr *ngFor='let item of items; let rowIndex = index'>\\r\\n                        <td style=\\\"text-align:center\\\">{{rowIndex}}</td>\\r\\n                        <td>{{item.description}}</td>\\r\\n                        <td style=\\\"text-align:center\\\">{{item.units}}</td>\\r\\n                        <td style=\\\"text-align:right\\\">{{item.quantity | number : '1.2-2'}}</td>\\r\\n                        <td style=\\\"text-align:center; width:80px\\\">{{item.currency}}</td>\\r\\n                        <td style=\\\"text-align:right\\\">{{item.materialCost | number : '1.2-2'}}</td>\\r\\n                        <td style=\\\"text-align:right\\\">{{item.materialCost * item.quantity | number : '1.2-2'}}</td>\\r\\n                        <td style=\\\"text-align:right\\\">{{item.serviceCost}}</td>\\r\\n                        <td style=\\\"text-align:right\\\">{{item.serviceCost * item.quantity | number : '1.2-2'}}</td>\\r\\n                        <td style=\\\"text-align:right\\\"><b>{{(item.materialCost * item.quantity) + (item.serviceCost * item.quantity) | number : '1.2-2'}}</b></td>\\r\\n                     </tr>\\r\\n                  </ng-container>\\r\\n               </ng-container>\\r\\n               <tr *ngIf='odfGroups == null || odfGroups.length == 0'>\\r\\n                  <td colspan=\\\"10\\\" style=\\\"text-align: center;\\\">&nbsp;</td>\\r\\n               </tr>\\r\\n            </tbody>\\r\\n         </table>\\r\\n\\r\\n         <table class=\\\"table table-bordered table-striped\\\" style=\\\"font-size:smaller\\\">\\r\\n            <thead>\\r\\n               <tr>\\r\\n                  <th scope=\\\"col\\\" colspan=\\\"10\\\" style=\\\"text-align:center;\\\"><b>Poles</b></th>\\r\\n               </tr>\\r\\n               <tr>\\r\\n                  <th style=\\\"width: 60px;text-align: center;\\\">No.</th>\\r\\n                  <th>Description</th>\\r\\n                  <th style=\\\"width: 120px;text-align: center;\\\">Unit</th>\\r\\n                  <th style=\\\"width: 120px;text-align: center;\\\">Quantity</th>\\r\\n                  <th style=\\\"width: 120px;text-align: center;\\\">Currency</th>\\r\\n                  <th style=\\\"width: 120px;text-align: center;\\\">Material <br />Cost/Unit</th>\\r\\n                  <th style=\\\"width: 120px;text-align: center;\\\">Total <br />Material Cost</th>\\r\\n                  <th style=\\\"width: 120px;text-align: center;\\\">Service <br />Cost/Unit</th>\\r\\n                  <th style=\\\"width: 120px;text-align: center;\\\">Total <br />Service Cost</th>\\r\\n                  <th style=\\\"width: 120px;text-align: center;\\\">Total <br />Cost</th>\\r\\n               </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n               <ng-container *ngIf='poleGroups && poleGroups.length > 0'>\\r\\n                  <ng-container *ngFor='let items of poleGroups; let rowIndex = index'>\\r\\n                     <tr>\\r\\n                        <td colspan=\\\"10\\\"><b>{{items[0].levelName}}</b></td>\\r\\n                     </tr>\\r\\n                     <tr *ngFor='let item of items; let rowIndex = index'>\\r\\n                        <td style=\\\"text-align:center\\\">{{rowIndex}}</td>\\r\\n                        <td>{{item.description}}</td>\\r\\n                        <td style=\\\"text-align:center\\\">{{item.units}}</td>\\r\\n                        <td style=\\\"text-align:right\\\">{{item.quantity | number : '1.2-2'}}</td>\\r\\n                        <td style=\\\"text-align:center; width:80px\\\">{{item.currency}}</td>\\r\\n                        <td style=\\\"text-align:right\\\">{{item.materialCost | number : '1.2-2'}}</td>\\r\\n                        <td style=\\\"text-align:right\\\">{{item.materialCost * item.quantity | number : '1.2-2'}}</td>\\r\\n                        <td style=\\\"text-align:right\\\">{{item.serviceCost}}</td>\\r\\n                        <td style=\\\"text-align:right\\\">{{item.serviceCost * item.quantity | number : '1.2-2'}}</td>\\r\\n                        <td style=\\\"text-align:right\\\"><b>{{(item.materialCost * item.quantity) + (item.serviceCost * item.quantity) | number : '1.2-2'}}</b></td>\\r\\n                     </tr>\\r\\n                  </ng-container>\\r\\n               </ng-container>\\r\\n               <tr *ngIf='poleGroups == null || poleGroups.length == 0'>\\r\\n                  <td colspan=\\\"10\\\" style=\\\"text-align: center;\\\">&nbsp;</td>\\r\\n               </tr>\\r\\n            </tbody>\\r\\n         </table>\\r\\n\\r\\n         <table class=\\\"table table-bordered table-striped\\\" style=\\\"font-size:smaller\\\">\\r\\n            <thead>\\r\\n               <tr>\\r\\n                  <th scope=\\\"col\\\" colspan=\\\"10\\\" style=\\\"text-align:center;\\\"><b>Splitters</b></th>\\r\\n               </tr>\\r\\n               <tr>\\r\\n                  <th style=\\\"width: 60px;text-align: center;\\\">No.</th>\\r\\n                  <th>Description</th>\\r\\n                  <th style=\\\"width: 120px;text-align: center;\\\">Unit</th>\\r\\n                  <th style=\\\"width: 120px;text-align: center;\\\">Quantity</th>\\r\\n                  <th style=\\\"width: 120px;text-align: center;\\\">Currency</th>\\r\\n                  <th style=\\\"width: 120px;text-align: center;\\\">Material <br />Cost/Unit</th>\\r\\n                  <th style=\\\"width: 120px;text-align: center;\\\">Total <br />Material Cost</th>\\r\\n                  <th style=\\\"width: 120px;text-align: center;\\\">Service <br />Cost/Unit</th>\\r\\n                  <th style=\\\"width: 120px;text-align: center;\\\">Total <br />Service Cost</th>\\r\\n                  <th style=\\\"width: 120px;text-align: center;\\\">Total <br />Cost</th>\\r\\n               </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n               <ng-container *ngIf='splitterGroups && splitterGroups.length > 0'>\\r\\n                  <ng-container *ngFor='let items of splitterGroups; let rowIndex = index'>\\r\\n                     <tr>\\r\\n                        <td colspan=\\\"10\\\"><b>{{items[0].levelName}}</b></td>\\r\\n                     </tr>\\r\\n                     <tr *ngFor='let item of items; let rowIndex = index'>\\r\\n                        <td style=\\\"text-align:center\\\">{{rowIndex}}</td>\\r\\n                        <td>{{item.description}}</td>\\r\\n                        <td style=\\\"text-align:center\\\">{{item.units}}</td>\\r\\n                        <td style=\\\"text-align:right\\\">{{item.quantity | number : '1.2-2'}}</td>\\r\\n                        <td style=\\\"text-align:center; width:80px\\\">{{item.currency}}</td>\\r\\n                        <td style=\\\"text-align:right\\\">{{item.materialCost | number : '1.2-2'}}</td>\\r\\n                        <td style=\\\"text-align:right\\\">{{item.materialCost * item.quantity | number : '1.2-2'}}</td>\\r\\n                        <td style=\\\"text-align:right\\\">{{item.serviceCost}}</td>\\r\\n                        <td style=\\\"text-align:right\\\">{{item.serviceCost * item.quantity | number : '1.2-2'}}</td>\\r\\n                        <td style=\\\"text-align:right\\\"><b>{{(item.materialCost * item.quantity) + (item.serviceCost * item.quantity) | number : '1.2-2'}}</b></td>\\r\\n                     </tr>\\r\\n                  </ng-container>\\r\\n               </ng-container>\\r\\n               <tr *ngIf='splitterGroups == null || splitterGroups.length == 0'>\\r\\n                  <td colspan=\\\"10\\\" style=\\\"text-align: center;\\\">&nbsp;</td>\\r\\n               </tr>\\r\\n            </tbody>\\r\\n         </table>\\r\\n\\r\\n         <table class=\\\"table table-bordered table-striped\\\" style=\\\"font-size:smaller\\\">\\r\\n            <thead>\\r\\n               <tr>\\r\\n                  <th scope=\\\"col\\\" colspan=\\\"10\\\" style=\\\"text-align:center;\\\"><b>Splice Closures</b></th>\\r\\n               </tr>\\r\\n               <tr>\\r\\n                  <th style=\\\"width: 60px;text-align: center;\\\">No.</th>\\r\\n                  <th>Description</th>\\r\\n                  <th style=\\\"width: 120px;text-align: center;\\\">Unit</th>\\r\\n                  <th style=\\\"width: 120px;text-align: center;\\\">Quantity</th>\\r\\n                  <th style=\\\"width: 120px;text-align: center;\\\">Currency</th>\\r\\n                  <th style=\\\"width: 120px;text-align: center;\\\">Material <br />Cost/Unit</th>\\r\\n                  <th style=\\\"width: 120px;text-align: center;\\\">Total <br />Material Cost</th>\\r\\n                  <th style=\\\"width: 120px;text-align: center;\\\">Service <br />Cost/Unit</th>\\r\\n                  <th style=\\\"width: 120px;text-align: center;\\\">Total <br />Service Cost</th>\\r\\n                  <th style=\\\"width: 120px;text-align: center;\\\">Total <br />Cost</th>\\r\\n               </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n               <ng-container *ngIf='spliceClosureGroups && spliceClosureGroups.length > 0'>\\r\\n                  <ng-container *ngFor='let items of spliceClosureGroups; let rowIndex = index'>\\r\\n                     <tr>\\r\\n                        <td colspan=\\\"10\\\"><b>{{items[0].levelName}}</b></td>\\r\\n                     </tr>\\r\\n                     <tr *ngFor='let item of items; let rowIndex = index'>\\r\\n                        <td style=\\\"text-align:center\\\">{{rowIndex}}</td>\\r\\n                        <td>{{item.description}}</td>\\r\\n                        <td style=\\\"text-align:center\\\">{{item.units}}</td>\\r\\n                        <td style=\\\"text-align:right\\\">{{item.quantity | number : '1.2-2'}}</td>\\r\\n                        <td style=\\\"text-align:center; width:80px\\\">{{item.currency}}</td>\\r\\n                        <td style=\\\"text-align:right\\\">{{item.materialCost | number : '1.2-2'}}</td>\\r\\n                        <td style=\\\"text-align:right\\\">{{item.materialCost * item.quantity | number : '1.2-2'}}</td>\\r\\n                        <td style=\\\"text-align:right\\\">{{item.serviceCost}}</td>\\r\\n                        <td style=\\\"text-align:right\\\">{{item.serviceCost * item.quantity | number : '1.2-2'}}</td>\\r\\n                        <td style=\\\"text-align:right\\\"><b>{{(item.materialCost * item.quantity) + (item.serviceCost * item.quantity) | number : '1.2-2'}}</b></td>\\r\\n                     </tr>\\r\\n                  </ng-container>\\r\\n               </ng-container>\\r\\n               <tr *ngIf='spliceClosureGroups == null || spliceClosureGroups.length == 0'>\\r\\n                  <td colspan=\\\"10\\\" style=\\\"text-align: center;\\\">&nbsp;</td>\\r\\n               </tr>\\r\\n            </tbody>\\r\\n         </table>\\r\\n\\r\\n         <table class=\\\"table table-bordered table-striped\\\" style=\\\"font-size:smaller\\\">\\r\\n            <thead>\\r\\n               <tr>\\r\\n                  <th scope=\\\"col\\\" colspan=\\\"10\\\" style=\\\"text-align:center;\\\"><b>Accessories</b></th>\\r\\n               </tr>\\r\\n               <tr>\\r\\n                  <th style=\\\"width: 60px;text-align: center;\\\">No.</th>\\r\\n                  <th>Description</th>\\r\\n                  <th style=\\\"width: 120px;text-align: center;\\\">Unit</th>\\r\\n                  <th style=\\\"width: 120px;text-align: center;\\\">Quantity</th>\\r\\n                  <th style=\\\"width: 120px;text-align: center;\\\">Currency</th>\\r\\n                  <th style=\\\"width: 120px;text-align: center;\\\">Material <br />Cost/Unit</th>\\r\\n                  <th style=\\\"width: 120px;text-align: center;\\\">Total <br />Material Cost</th>\\r\\n                  <th style=\\\"width: 120px;text-align: center;\\\">Service <br />Cost/Unit</th>\\r\\n                  <th style=\\\"width: 120px;text-align: center;\\\">Total <br />Service Cost</th>\\r\\n                  <th style=\\\"width: 120px;text-align: center;\\\">Total <br />Cost</th>\\r\\n               </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n               <ng-container *ngIf='accessoryGroups && accessoryGroups.length > 0'>\\r\\n                  <ng-container *ngFor='let items of accessoryGroups; let rowIndex = index'>\\r\\n                     <tr>\\r\\n                        <td colspan=\\\"10\\\"><b>{{items[0].levelName}}</b></td>\\r\\n                     </tr>\\r\\n                     <tr *ngFor='let item of items; let rowIndex = index'>\\r\\n                        <td style=\\\"text-align:center\\\">{{rowIndex}}</td>\\r\\n                        <td>{{item.description}}</td>\\r\\n                        <td style=\\\"text-align:center\\\">{{item.units}}</td>\\r\\n                        <td style=\\\"text-align:right\\\">{{item.quantity | number : '1.2-2'}}</td>\\r\\n                        <td style=\\\"text-align:center; width:80px\\\">{{item.currency}}</td>\\r\\n                        <td style=\\\"text-align:right\\\">{{item.materialCost | number : '1.2-2'}}</td>\\r\\n                        <td style=\\\"text-align:right\\\">{{item.materialCost * item.quantity | number : '1.2-2'}}</td>\\r\\n                        <td style=\\\"text-align:right\\\">{{item.serviceCost}}</td>\\r\\n                        <td style=\\\"text-align:right\\\">{{item.serviceCost * item.quantity | number : '1.2-2'}}</td>\\r\\n                        <td style=\\\"text-align:right\\\"><b>{{(item.materialCost * item.quantity) + (item.serviceCost * item.quantity) | number : '1.2-2'}}</b></td>\\r\\n                     </tr>\\r\\n                  </ng-container>\\r\\n               </ng-container>\\r\\n               <tr *ngIf='accessoryGroups == null || accessoryGroups.length == 0'>\\r\\n                  <td colspan=\\\"10\\\" style=\\\"text-align: center;\\\">&nbsp;</td>\\r\\n               </tr>\\r\\n            </tbody>\\r\\n         </table>\\r\\n\\r\\n         <table class=\\\"table table-bordered table-striped\\\" style=\\\"font-size:smaller\\\">\\r\\n            <thead>\\r\\n               <tr>\\r\\n                  <th scope=\\\"col\\\" colspan=\\\"10\\\" style=\\\"text-align:center;\\\"><b>Civilworks</b></th>\\r\\n               </tr>\\r\\n               <tr>\\r\\n                  <th style=\\\"width: 60px;text-align: center;\\\">No.</th>\\r\\n                  <th>Description</th>\\r\\n                  <th style=\\\"width: 120px;text-align: center;\\\">Unit</th>\\r\\n                  <th style=\\\"width: 120px;text-align: center;\\\">Quantity</th>\\r\\n                  <th style=\\\"width: 120px;text-align: center;\\\">Currency</th>\\r\\n                  <th style=\\\"width: 120px;text-align: center;\\\">Material <br />Cost/Unit</th>\\r\\n                  <th style=\\\"width: 120px;text-align: center;\\\">Total <br />Material Cost</th>\\r\\n                  <th style=\\\"width: 120px;text-align: center;\\\">Service <br />Cost/Unit</th>\\r\\n                  <th style=\\\"width: 120px;text-align: center;\\\">Total <br />Service Cost</th>\\r\\n                  <th style=\\\"width: 120px;text-align: center;\\\">Total <br />Cost</th>\\r\\n               </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n               <ng-container *ngIf='civilworkGroups && civilworkGroups.length > 0'>\\r\\n                  <ng-container *ngFor='let items of civilworkGroups; let rowIndex = index'>\\r\\n                     <tr>\\r\\n                        <td colspan=\\\"10\\\"><b>{{items[0].levelName}}</b></td>\\r\\n                     </tr>\\r\\n                     <tr *ngFor='let item of items; let rowIndex = index'>\\r\\n                        <td style=\\\"text-align:center\\\">{{rowIndex}}</td>\\r\\n                        <td>{{item.description}}</td>\\r\\n                        <td style=\\\"text-align:center\\\">{{item.units}}</td>\\r\\n                        <td style=\\\"text-align:right\\\">{{item.quantity | number : '1.2-2'}}</td>\\r\\n                        <td style=\\\"text-align:center; width:80px\\\">{{item.currency}}</td>\\r\\n                        <td style=\\\"text-align:right\\\">{{item.materialCost | number : '1.2-2'}}</td>\\r\\n                        <td style=\\\"text-align:right\\\">{{item.materialCost * item.quantity | number : '1.2-2'}}</td>\\r\\n                        <td style=\\\"text-align:right\\\">{{item.serviceCost}}</td>\\r\\n                        <td style=\\\"text-align:right\\\">{{item.serviceCost * item.quantity | number : '1.2-2'}}</td>\\r\\n                        <td style=\\\"text-align:right\\\"><b>{{(item.materialCost * item.quantity) + (item.serviceCost * item.quantity) | number : '1.2-2'}}</b></td>\\r\\n                     </tr>\\r\\n                  </ng-container>\\r\\n               </ng-container>\\r\\n               <tr *ngIf='civilworkGroups == null || civilworkGroups.length == 0'>\\r\\n                  <td colspan=\\\"10\\\" style=\\\"text-align: center;\\\">&nbsp;</td>\\r\\n               </tr>\\r\\n            </tbody>\\r\\n         </table>\\r\\n\\r\\n      </div>\\r\\n   </div>\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"form-group col-md-12\\\">\\r\\n   <table class=\\\"table table-bordered table-striped\\\">\\r\\n      <thead>\\r\\n         <tr>\\r\\n            <th style=\\\"width:125px\\\">Entity Type</th>\\r\\n            <th>Format</th>\\r\\n            <th style=\\\"width:150px\\\">Sequence Starting</th>\\r\\n            <th style=\\\"width:150px\\\">Sequence Ending</th>\\r\\n            <th style=\\\"width:50px\\\" class='text-center'></th>\\r\\n         </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n         <ng-container *ngIf='design.bookingIds && design.bookingIds.length > 0'>\\r\\n            <ng-container *ngFor='let bookingId of design.bookingIds;let bookingIdIndex = index;'>\\r\\n               <tr>\\r\\n                  <td>{{bookingId.entityType}}</td>\\r\\n                  <td><input type=\\\"text\\\" class=\\\"form-control input-sm\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"bookingId.format\\\"></td>\\r\\n                  <td><input type=\\\"number\\\" style=\\\"width: 125px;\\\" class=\\\"form-control input-sm\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"bookingId.sequenceStart\\\"></td>\\r\\n                  <td><input type=\\\"number\\\" style=\\\"width: 125px;\\\" class=\\\"form-control input-sm\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"bookingId.sequenceEnd\\\"></td>\\r\\n                  <td style=\\\"vertical-align: middle;\\\" class=\\\"text-center\\\">\\r\\n                     <a (click)=\\\"clearBookingId(bookingIdIndex)\\\" style=\\\"cursor:pointer\\\"><i class=\\\"fas fa-eraser\\\" style=\\\"font-size: 15px; color: Red;\\\" title=\\\"Clear\\\"></i></a>\\r\\n                  </td>\\r\\n               </tr>\\r\\n            </ng-container>\\r\\n         </ng-container>\\r\\n         <tr *ngIf='design.bookingIds == null || design.bookingIds.length == 0'>\\r\\n            <td colspan=\\\"5\\\" style=\\\"text-align: center;\\\">\\r\\n               There are no phases defined.\\r\\n            </td>\\r\\n         </tr>\\r\\n      </tbody>\\r\\n   </table>\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"col-sm-6\\\">\\r\\n   <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"control-label\\\" for=\\\"cableType\\\">Cable Type<span style=\\\"color:red;\\\">*</span></label>\\r\\n      <mat-select name=\\\"cableType\\\" [(ngModel)]=\\\"cableSettings.cableType\\\" (ngModelChange)=\\\"onCableTypeChange($event)\\\">\\r\\n         <mat-option>Select Type</mat-option>\\r\\n         <mat-option value=\\\"overhead\\\">Overhead</mat-option>\\r\\n         <mat-option value=\\\"underground\\\">Underground</mat-option>\\r\\n      </mat-select>\\r\\n   </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"form-group col-sm-6\\\">\\r\\n   <label for=\\\"cable\\\" class=\\\"control-label\\\">Core Configuration</label>\\r\\n   <div class=\\\"input-group input-group-sm\\\">\\r\\n      <mat-select name=\\\"cable\\\" [(ngModel)]=\\\"selectedCable\\\">\\r\\n         <mat-option>Select Cable</mat-option>\\r\\n         <mat-option *ngFor=\\\"let cable of cablesMaster\\\" [value]=\\\"cable\\\">\\r\\n            {{cable.name}}\\r\\n         </mat-option>\\r\\n      </mat-select>\\r\\n      <span class=\\\"input-group-btn\\\"><button class=\\\"btn btn-info btn-flat\\\" type=\\\"button\\\" (click)=\\\"addCable()\\\"><i class=\\\"fas fa-plus\\\"></i></button></span>\\r\\n   </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"form-group col-sm-12\\\">\\r\\n   <table class=\\\"table table-bordered table-striped\\\">\\r\\n      <thead>\\r\\n         <tr>\\r\\n            <th>Name</th>\\r\\n            <th style=\\\"width:40px\\\"></th>\\r\\n         </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n         <ng-container *ngIf='cableSettings.cables && cableSettings.cables.length > 0'>\\r\\n            <tr *ngFor='let cable of cableSettings.cables;let rowIndex = index;'>\\r\\n               <td>{{cable.name}}</td>\\r\\n               <td>\\r\\n                  <a>\\r\\n                     <i class=\\\"fas fa-trash-alt\\\" style=\\\"font-size: 15px; color: Red; cursor:pointer\\\" (click)=\\\"removeCable(rowIndex)\\\" title=\\\"Remove\\\"></i>\\r\\n                  </a>\\r\\n               </td>\\r\\n            </tr>\\r\\n         </ng-container>\\r\\n         <tr *ngIf='cableSettings.cables == null || cableSettings.cables.length == 0'>\\r\\n            <td colspan=\\\"2\\\" style=\\\"text-align: center;\\\">\\r\\n               {{statusMessage}}\\r\\n            </td>\\r\\n         </tr>\\r\\n      </tbody>\\r\\n   </table>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"form-group col-sm-6\\\" *ngIf=\\\"cableSettings.cableType == 'overhead'\\\">\\r\\n   <label for=\\\"pole\\\" class=\\\"control-label\\\">Pole Type</label>\\r\\n   <mat-select name=\\\"pole\\\" [(ngModel)]=\\\"cableSettings.pole.id\\\" (ngModelChange)=\\\"onPoleChange($event)\\\">\\r\\n      <mat-option>Select Pole</mat-option>\\r\\n      <mat-option *ngFor=\\\"let pole of polesMaster\\\" [value]=\\\"pole.id\\\">\\r\\n         {{pole.name}}\\r\\n      </mat-option>\\r\\n   </mat-select>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"form-group col-sm-6\\\" *ngIf=\\\"cableSettings.cableType == 'underground'\\\">\\r\\n   <label for=\\\"chamber\\\" class=\\\"control-label\\\">Chamber Type</label>\\r\\n   <mat-select name=\\\"chamber\\\" [(ngModel)]=\\\"cableSettings.chamber.id\\\"  (ngModelChange)=\\\"onChamberChange($event)\\\">\\r\\n      <mat-option>Select Chamber</mat-option>\\r\\n      <mat-option *ngFor=\\\"let chamber of chambersMaster\\\" [value]=\\\"chamber.id\\\">\\r\\n         {{chamber.name}}\\r\\n      </mat-option>\\r\\n   </mat-select>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"col-sm-6\\\">\\r\\n   <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"control-label\\\" for=\\\"interval\\\" *ngIf=\\\"cableSettings.cableType == 'underground'\\\">Chamber Interval</label>\\r\\n      <label class=\\\"control-label\\\" for=\\\"interval\\\" *ngIf=\\\"cableSettings.cableType != 'underground'\\\">Pole Interval</label>\\r\\n      <input class=\\\"form-control input-sm\\\" name=\\\"interval\\\" type=\\\"number\\\" [(ngModel)]=\\\"cableSettings.chamberInterval\\\">\\r\\n   </div>\\r\\n</div>\\r\\n<!--<div class=\\\"col-sm-6\\\">\\r\\n   <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"control-label\\\" for=\\\"\\\"></label>\\r\\n   </div>\\r\\n</div>-->\\r\\n\\r\\n<!--<div>\\r\\n   <div class=\\\"row\\\" style=\\\"padding: 5px;font-size: smaller;\\\">\\r\\n      <span style=\\\"font-size: 12px;color: #3c8dbc;font-weight: 700;\\\">Loop Management</span>\\r\\n      <hr style=\\\"margin-top: 2px;\\\">\\r\\n   </div>\\r\\n   <div class=\\\"col-sm-6\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n         <label for=\\\"cableLoop\\\" class=\\\"control-label\\\">Cable loop (Meters)</label>\\r\\n         <input class=\\\"form-control\\\" name=\\\"cableLoop\\\" [(ngModel)]=\\\"cableSettings.cableLoop\\\" type=\\\"number\\\">\\r\\n      </div>\\r\\n   </div>\\r\\n   <div class=\\\"col-sm-6\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n         <label for=\\\"forEvery\\\" class=\\\"control-label\\\">For Every (Meters)</label>\\r\\n         <input class=\\\"form-control\\\" name=\\\"forEvery\\\" [(ngModel)]=\\\"cableSettings.loopInterval\\\" type=\\\"number\\\">\\r\\n      </div>\\r\\n   </div>\\r\\n   <div class=\\\"col-sm-6\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n         <label for=\\\"loopAtClosure\\\" class=\\\"control-label\\\">Loop at Closure (Meters)</label>\\r\\n         <input class=\\\"form-control\\\" name=\\\"loopAtClosure\\\" [(ngModel)]=\\\"cableSettings.loopAtClosure\\\" type=\\\"number\\\">\\r\\n      </div>\\r\\n   </div>\\r\\n   <div class=\\\"col-sm-6\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n         <label for=\\\"loopAtClosure\\\" class=\\\"control-label\\\">Connect %</label>\\r\\n         <input class=\\\"form-control\\\" name=\\\"loopAtClosure\\\" [(ngModel)]=\\\"cableSettings.connectionPercent\\\" type=\\\"number\\\">\\r\\n      </div>\\r\\n   </div>\\r\\n</div>-->\\r\\n\"","export default \"<div class=\\\"form-group col-md-12\\\">\\r\\n   <label for=\\\"equipment\\\" class=\\\"control-label\\\">Select Civilwork</label>\\r\\n   <div class=\\\"input-group input-group-sm\\\">\\r\\n      <mat-select name=\\\"civilwork\\\" [(ngModel)]=\\\"selectedCivilwork\\\">\\r\\n         <mat-option>Select Civilwork</mat-option>\\r\\n         <ng-container *ngIf=\\\"civilworksMaster && civilworksMaster.length > 0\\\">\\r\\n            <mat-option *ngFor=\\\"let civilwork of civilworksMaster\\\" [value]=\\\"civilwork\\\">\\r\\n               {{civilwork.name}}\\r\\n            </mat-option>\\r\\n         </ng-container>\\r\\n      </mat-select>\\r\\n      <span class=\\\"input-group-btn\\\"><button class=\\\"btn btn-info btn-flat\\\" type=\\\"button\\\" (click)=\\\"addCivilwork()\\\"><i class=\\\"fas fa-plus\\\"></i></button></span>\\r\\n   </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"form-group col-md-12\\\">\\r\\n   <table class=\\\"table table-bordered table-striped\\\">\\r\\n      <thead>\\r\\n         <tr>\\r\\n            <th>Name</th>\\r\\n            <th style=\\\"width:40px\\\"></th>\\r\\n         </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n         <ng-container *ngIf='civilworkSettings.civilworks && civilworkSettings.civilworks.length > 0'>\\r\\n            <tr *ngFor='let civilwork of civilworkSettings.civilworks;let rowIndex = index;'>\\r\\n               <td>{{civilwork.name}}</td>\\r\\n               <td>\\r\\n                  <a>\\r\\n                     <i class=\\\"fas fa-trash-alt\\\" style=\\\"font-size: 15px; color: Red; cursor:pointer\\\" (click)=\\\"removeCivilwork(rowIndex)\\\" title=\\\"Remove\\\"></i>\\r\\n                  </a>\\r\\n               </td>\\r\\n            </tr>\\r\\n         </ng-container>\\r\\n         <tr *ngIf='civilworkSettings.civilworks == null || civilworkSettings.civilworks.length == 0'>\\r\\n            <td colspan=\\\"2\\\" style=\\\"text-align: center;\\\">\\r\\n               {{statusMessage}}\\r\\n            </td>\\r\\n         </tr>\\r\\n      </tbody>\\r\\n   </table>\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"col-md-12\\\">\\r\\n   <div class=\\\"input-group input-group-sm\\\" style=\\\"padding-bottom:20px\\\">\\r\\n      <div class=\\\"input-group-btn\\\">\\r\\n         <button type=\\\"button\\\" class=\\\"btn btn-warning dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" aria-expanded=\\\"false\\\" style=\\\"width:100px\\\">\\r\\n            {{selectedField.label}}\\r\\n            <span class=\\\"fa fa-caret-down\\\"></span>\\r\\n         </button>\\r\\n         <ul class=\\\"dropdown-menu\\\">\\r\\n            <ng-container *ngIf='searchFields && searchFields.length > 0'>\\r\\n               <li *ngFor='let searchField of searchFields'>\\r\\n                  <a [routerLink]=\\\"\\\" (click)=setSearchField(searchField)>{{searchField.label}}</a>\\r\\n               </li>\\r\\n            </ng-container>\\r\\n         </ul>\\r\\n      </div>\\r\\n      <input [type]=selectedField.dataType class=\\\"form-control\\\" name=\\\"dateSearch\\\" [(ngModel)]=\\\"searchText\\\" autocomplete=\\\"off\\\">\\r\\n      <span class=\\\"input-group-btn\\\">\\r\\n         <button type=\\\"button\\\" class=\\\"btn btn-info btn-flat\\\" (click)=\\\"currentPage = 1; search()\\\"><i class=\\\"fas fa-search\\\"></i></button>\\r\\n      </span>\\r\\n   </div>\\r\\n   <div>\\r\\n      <div class=\\\"pull-left\\\">\\r\\n         <span style=\\\"padding-right: 10px;font-size: small;\\\">Pages</span>\\r\\n         <div class=\\\"btn-group\\\" style=\\\"padding-right: 10px;\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-default dropdown-toggle btn-sm\\\" data-toggle=\\\"dropdown\\\" aria-expanded=\\\"false\\\">\\r\\n               <span style=\\\"padding-right: 5px;\\\"> {{pageSize}} </span>\\r\\n               <span class=\\\"caret\\\"></span>\\r\\n            </button>\\r\\n            <ul class=\\\"dropdown-menu\\\">\\r\\n               <li><a [routerLink]=\\\"\\\" (click)=\\\"pageSize = 10; getFormData()\\\">10</a></li>\\r\\n               <li><a [routerLink]=\\\"\\\" (click)=\\\"pageSize = 20; getFormData()\\\">20</a></li>\\r\\n               <li><a [routerLink]=\\\"\\\" (click)=\\\"pageSize = 50; getFormData()\\\">50</a></li>\\r\\n               <li><a [routerLink]=\\\"\\\" (click)=\\\"pageSize = 100; getFormData()\\\">100</a></li>\\r\\n            </ul>\\r\\n         </div>\\r\\n      </div>\\r\\n      <div class=\\\"pull-right\\\">\\r\\n         <span style=\\\"padding-right: 10px;font-size: small;\\\">Showing page {{currentPage}} of {{totalPages}}</span>\\r\\n         <div class=\\\"btn-group\\\" style=\\\"padding-bottom:5px\\\">\\r\\n            <button class=\\\"btn btn-default btn-sm\\\" type=\\\"button\\\" (click)=\\\"setPage(currentPage - 1)\\\" [ngClass]=\\\"{disabled:currentPage === 1}\\\"><i class=\\\"fa fa-chevron-left fa-fw\\\"></i></button>\\r\\n            <button class=\\\"btn btn-default btn-sm\\\" type=\\\"button\\\" (click)=\\\"setPage(currentPage + 1)\\\" [ngClass]=\\\"{disabled:currentPage === totalPages}\\\"><i class=\\\"fa fa-chevron-right fa-fw\\\"></i></button>\\r\\n         </div>\\r\\n      </div>\\r\\n   </div>\\r\\n   <table class=\\\"table table-bordered table-striped\\\">\\r\\n      <thead>\\r\\n         <tr (click)=\\\"onColumnClick($event.target)\\\">\\r\\n            <th style=\\\"width: 45px;\\\"></th>\\r\\n            <th data-column=\\\"Name\\\" class=\\\"table-sorter\\\">Name</th>\\r\\n            <th data-column=\\\"UpdatedBy\\\" class=\\\"table-sorter\\\" style=\\\"width: 150px;\\\">Updated By</th>\\r\\n            <th data-column=\\\"UpdatedDate\\\" class=\\\"table-sorter\\\" style=\\\"width: 125px;\\\">Updated On</th>\\r\\n         </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n         <ng-container *ngIf='clusters && clusters.length > 0'>\\r\\n            <ng-container *ngFor='let cluster of clusters; let clusterIndex = index;'>\\r\\n               <tr>\\r\\n                  <td style=\\\"vertical-align: middle;\\\">\\r\\n                     <mat-radio-group [(ngModel)]=\\\"design.clusterId\\\">\\r\\n                        <mat-radio-button [value]=\\\"cluster.id\\\"></mat-radio-button>\\r\\n                     </mat-radio-group>\\r\\n                  </td>\\r\\n                  <td>{{cluster.name}}</td>\\r\\n                  <td>{{cluster.updatedBy}}</td>\\r\\n                  <td>{{cluster.updatedDate | date:'dd/MM/yyyy'}}</td>\\r\\n               </tr>\\r\\n            </ng-container>\\r\\n         </ng-container>\\r\\n         <tr *ngIf='clusters == null || clusters.length == 0'>\\r\\n            <td colspan=\\\"4\\\" style=\\\"text-align: center;\\\">\\r\\n               {{statusMessage}}\\r\\n            </td>\\r\\n         </tr>\\r\\n      </tbody>\\r\\n   </table>\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"col-md-12\\\">\\r\\n   <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"category\\\" class=\\\"control-label\\\">Entity </label>\\r\\n      <mat-select name=\\\"entityType\\\" [(ngModel)]=\\\"entityType\\\">\\r\\n         <mat-option>Select Entity Type</mat-option>\\r\\n         <mat-option value=\\\"All\\\">All Entities</mat-option>\\r\\n         <mat-option value=\\\"Cable\\\">Cables</mat-option>\\r\\n         <mat-option value=\\\"Chamber\\\">Chambers</mat-option>\\r\\n         <mat-option value=\\\"Duct\\\">Ducts</mat-option>\\r\\n         <mat-option value=\\\"ODF\\\">ODFs</mat-option>\\r\\n         <mat-option value=\\\"Pole\\\">Poles</mat-option>\\r\\n         <mat-option value=\\\"SpliceClosure\\\">Splice Closures</mat-option>\\r\\n         <mat-option value=\\\"Splitter\\\">Splitters</mat-option>\\r\\n         <mat-option value=\\\"Accessory\\\">Accessories</mat-option>\\r\\n         <mat-option value=\\\"Civilwork\\\">Civilworks</mat-option>\\r\\n      </mat-select>\\r\\n   </div>\\r\\n   <div class=\\\"form-group\\\">\\r\\n      <table class=\\\"table table-bordered table-striped\\\">\\r\\n         <thead>\\r\\n            <tr>\\r\\n               <th style=\\\"width: 30px;\\\"></th>\\r\\n               <th>Supplier</th>\\r\\n               <th style=\\\"width:150px;\\\">Material Cost</th>\\r\\n               <th style=\\\"width:150px\\\">Service Cost</th>\\r\\n            </tr>\\r\\n         </thead>\\r\\n         <tbody>\\r\\n            <ng-container *ngIf=\\\"(entityType == 'All' || entityType == 'Cable') && cables && cables.length > 0\\\">\\r\\n               <ng-container *ngFor='let cable of cables; let rowIndex = index;'>\\r\\n                  <tr>\\r\\n                     <td colspan=\\\"4\\\" style=\\\"background-color: #f4f4f4\\\">{{cable.name}}</td>\\r\\n                  </tr>\\r\\n                  <ng-container *ngFor='let supplier of cable.suppliers; let sIndex = index;'>\\r\\n                     <tr *ngIf=\\\"checkPriceValidity(supplier.validFrom, supplier.validTo)\\\">\\r\\n                        <td style=\\\"text-align: center; vertical-align: middle;\\\">\\r\\n                           <mat-radio-group [name]=\\\"cable.name\\\" [(ngModel)]=\\\"supplier.isPrefered\\\">\\r\\n                              <mat-radio-button [value]=true></mat-radio-button>\\r\\n                           </mat-radio-group>\\r\\n                        </td>\\r\\n                        <td style=\\\"vertical-align: middle;\\\">{{supplier.name}}</td>\\r\\n                        <td><input type=\\\"number\\\" class=\\\"form-control input-sm\\\" autocomplete=\\\"off\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"supplier.price\\\"></td>\\r\\n                        <td><input type=\\\"number\\\" class=\\\"form-control input-sm\\\" autocomplete=\\\"off\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"supplier.serviceCost\\\"></td>\\r\\n                     </tr>\\r\\n                  </ng-container>\\r\\n               </ng-container>\\r\\n            </ng-container>\\r\\n\\r\\n            <ng-container *ngIf=\\\"(entityType == 'All' || entityType == 'Chamber') && chambers && chambers.length > 0\\\">\\r\\n               <ng-container *ngFor='let chamber of chambers; let rowIndex = index;'>\\r\\n                  <tr>\\r\\n                     <td colspan=\\\"4\\\" style=\\\"background-color: #f4f4f4\\\">{{chamber.name}}</td>\\r\\n                  </tr>\\r\\n                  <ng-container *ngFor='let supplier of chamber.suppliers; let sIndex = index;'>\\r\\n                     <tr *ngIf=\\\"checkPriceValidity(supplier.validFrom, supplier.validTo)\\\">\\r\\n                        <td style=\\\"text-align: center; vertical-align: middle;\\\">\\r\\n                           <mat-radio-group [name]=\\\"chamber.name\\\" [(ngModel)]=\\\"supplier.isPrefered\\\">\\r\\n                              <mat-radio-button [value]=true></mat-radio-button>\\r\\n                           </mat-radio-group>\\r\\n                        </td>\\r\\n                        <td style=\\\"vertical-align: middle;\\\">{{supplier.name}}</td>\\r\\n                        <td><input type=\\\"number\\\" class=\\\"form-control input-sm\\\" autocomplete=\\\"off\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"supplier.price\\\"></td>\\r\\n                        <td><input type=\\\"number\\\" class=\\\"form-control input-sm\\\" autocomplete=\\\"off\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"supplier.serviceCost\\\"></td>\\r\\n                     </tr>\\r\\n                  </ng-container>\\r\\n               </ng-container>\\r\\n            </ng-container>\\r\\n\\r\\n            <ng-container *ngIf=\\\"(entityType == 'All' || entityType == 'Duct') && ducts && ducts.length > 0\\\">\\r\\n               <ng-container *ngFor='let duct of ducts; let rowIndex = index;'>\\r\\n                  <tr>\\r\\n                     <td colspan=\\\"4\\\" style=\\\"background-color: #f4f4f4\\\">{{duct.name}}</td>\\r\\n                  </tr>\\r\\n                  <ng-container *ngFor='let supplier of duct.suppliers; let sIndex = index;'>\\r\\n                     <tr *ngIf=\\\"checkPriceValidity(supplier.validFrom, supplier.validTo)\\\">\\r\\n                        <td style=\\\"text-align: center; vertical-align: middle;\\\">\\r\\n                           <mat-radio-group [name]=\\\"duct.name\\\" [(ngModel)]=\\\"supplier.isPrefered\\\">\\r\\n                              <mat-radio-button [value]=true></mat-radio-button>\\r\\n                           </mat-radio-group>\\r\\n                        </td>\\r\\n                        <td style=\\\"vertical-align: middle;\\\">{{supplier.name}}</td>\\r\\n                        <td><input type=\\\"number\\\" class=\\\"form-control input-sm\\\" autocomplete=\\\"off\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"supplier.price\\\"></td>\\r\\n                        <td><input type=\\\"number\\\" class=\\\"form-control input-sm\\\" autocomplete=\\\"off\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"supplier.serviceCost\\\"></td>\\r\\n                     </tr>\\r\\n                  </ng-container>\\r\\n               </ng-container>\\r\\n            </ng-container>\\r\\n\\r\\n            <ng-container *ngIf=\\\"(entityType == 'All' || entityType == 'ODF') && odfs && odfs.length > 0\\\">\\r\\n               <ng-container *ngFor='let odf of odfs; let rowIndex = index;'>\\r\\n                  <tr>\\r\\n                     <td colspan=\\\"4\\\" style=\\\"background-color: #f4f4f4\\\">{{odf.name}}</td>\\r\\n                  </tr>\\r\\n                  <ng-container *ngFor='let supplier of odf.suppliers; let sIndex = index;'>\\r\\n                     <tr *ngIf=\\\"checkPriceValidity(supplier.validFrom, supplier.validTo)\\\">\\r\\n                        <td style=\\\"text-align: center; vertical-align: middle;\\\">\\r\\n                           <mat-radio-group [name]=\\\"odf.name\\\" [(ngModel)]=\\\"supplier.isPrefered\\\">\\r\\n                              <mat-radio-button [value]=true></mat-radio-button>\\r\\n                           </mat-radio-group>\\r\\n                        </td>\\r\\n                        <td style=\\\"vertical-align: middle;\\\">{{supplier.name}}</td>\\r\\n                        <td><input type=\\\"number\\\" class=\\\"form-control input-sm\\\" autocomplete=\\\"off\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"supplier.price\\\"></td>\\r\\n                        <td><input type=\\\"number\\\" class=\\\"form-control input-sm\\\" autocomplete=\\\"off\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"supplier.serviceCost\\\"></td>\\r\\n                     </tr>\\r\\n                  </ng-container>\\r\\n               </ng-container>\\r\\n            </ng-container>\\r\\n\\r\\n            <ng-container *ngIf=\\\"(entityType == 'All' || entityType == 'Pole') && poles && poles.length > 0\\\">\\r\\n               <ng-container *ngFor='let pole of poles; let rowIndex = index;'>\\r\\n                  <tr>\\r\\n                     <td colspan=\\\"4\\\" style=\\\"background-color: #f4f4f4\\\">{{pole.name}}</td>\\r\\n                  </tr>\\r\\n                  <ng-container *ngFor='let supplier of pole.suppliers; let sIndex = index;'>\\r\\n                     <tr *ngIf=\\\"checkPriceValidity(supplier.validFrom, supplier.validTo)\\\">\\r\\n                        <td style=\\\"text-align: center; vertical-align: middle;\\\">\\r\\n                           <mat-radio-group [name]=\\\"pole.name\\\" [(ngModel)]=\\\"supplier.isPrefered\\\">\\r\\n                              <mat-radio-button [value]=true></mat-radio-button>\\r\\n                           </mat-radio-group>\\r\\n                        </td>\\r\\n                        <td style=\\\"vertical-align: middle;\\\">{{supplier.name}}</td>\\r\\n                        <td><input type=\\\"number\\\" class=\\\"form-control input-sm\\\" autocomplete=\\\"off\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"supplier.price\\\"></td>\\r\\n                        <td><input type=\\\"number\\\" class=\\\"form-control input-sm\\\" autocomplete=\\\"off\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"supplier.serviceCost\\\"></td>\\r\\n                     </tr>\\r\\n                  </ng-container>\\r\\n               </ng-container>\\r\\n            </ng-container>\\r\\n\\r\\n            <ng-container *ngIf=\\\"(entityType == 'All' || entityType == 'Splitter') && splitters && splitters.length > 0\\\">\\r\\n               <ng-container *ngFor='let splitter of splitters; let rowIndex = index;'>\\r\\n                  <tr>\\r\\n                     <td colspan=\\\"4\\\" style=\\\"background-color: #f4f4f4\\\">{{splitter.name}}</td>\\r\\n                  </tr>\\r\\n                  <ng-container *ngFor='let supplier of splitter.suppliers; let sIndex = index;'>\\r\\n                     <tr *ngIf=\\\"checkPriceValidity(supplier.validFrom, supplier.validTo)\\\">\\r\\n                        <td style=\\\"text-align: center; vertical-align: middle;\\\">\\r\\n                           <mat-radio-group [name]=\\\"splitter.name\\\" [(ngModel)]=\\\"supplier.isPrefered\\\">\\r\\n                              <mat-radio-button [value]=true></mat-radio-button>\\r\\n                           </mat-radio-group>\\r\\n                        </td>\\r\\n                        <td style=\\\"vertical-align: middle;\\\">{{supplier.name}}</td>\\r\\n                        <td><input type=\\\"number\\\" class=\\\"form-control input-sm\\\" autocomplete=\\\"off\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"supplier.price\\\"></td>\\r\\n                        <td><input type=\\\"number\\\" class=\\\"form-control input-sm\\\" autocomplete=\\\"off\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"supplier.serviceCost\\\"></td>\\r\\n                     </tr>\\r\\n                  </ng-container>\\r\\n               </ng-container>\\r\\n            </ng-container>\\r\\n\\r\\n            <ng-container *ngIf=\\\"(entityType == 'All' || entityType == 'SpliceClosure') && spliceClosures && spliceClosures.length > 0\\\">\\r\\n               <ng-container *ngFor='let spliceClosure of spliceClosures; let rowIndex = index;'>\\r\\n                  <tr>\\r\\n                     <td colspan=\\\"4\\\" style=\\\"background-color: #f4f4f4\\\">{{spliceClosure.name}}</td>\\r\\n                  </tr>\\r\\n                  <ng-container *ngFor='let supplier of spliceClosure.suppliers; let sIndex = index;'>\\r\\n                     <tr *ngIf=\\\"checkPriceValidity(supplier.validFrom, supplier.validTo)\\\">\\r\\n                        <td style=\\\"text-align: center; vertical-align: middle;\\\">\\r\\n                           <mat-radio-group [name]=\\\"spliceClosure.name\\\" [(ngModel)]=\\\"supplier.isPrefered\\\">\\r\\n                              <mat-radio-button [value]=true></mat-radio-button>\\r\\n                           </mat-radio-group>\\r\\n                        </td>\\r\\n                        <td style=\\\"vertical-align: middle;\\\">{{supplier.name}}</td>\\r\\n                        <td><input type=\\\"number\\\" class=\\\"form-control input-sm\\\" autocomplete=\\\"off\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"supplier.price\\\"></td>\\r\\n                        <td><input type=\\\"number\\\" class=\\\"form-control input-sm\\\" autocomplete=\\\"off\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"supplier.serviceCost\\\"></td>\\r\\n                     </tr>\\r\\n                  </ng-container>\\r\\n               </ng-container>\\r\\n            </ng-container>\\r\\n\\r\\n            <ng-container *ngIf=\\\"(entityType == 'All' || entityType == 'Accessory') && accessories && accessories.length > 0\\\">\\r\\n               <ng-container *ngFor='let accessory of accessories; let rowIndex = index;'>\\r\\n                  <tr>\\r\\n                     <td colspan=\\\"4\\\" style=\\\"background-color: #f4f4f4\\\">{{accessory.name}}</td>\\r\\n                  </tr>\\r\\n                  <ng-container *ngFor='let supplier of accessory.suppliers; let sIndex = index;'>\\r\\n                     <tr *ngIf=\\\"checkPriceValidity(supplier.validFrom, supplier.validTo)\\\">\\r\\n                        <td style=\\\"text-align: center; vertical-align: middle;\\\">\\r\\n                           <mat-radio-group [name]=\\\"accessory.name\\\" [(ngModel)]=\\\"supplier.isPrefered\\\">\\r\\n                              <mat-radio-button [value]=true></mat-radio-button>\\r\\n                           </mat-radio-group>\\r\\n                        </td>\\r\\n                        <td style=\\\"vertical-align: middle;\\\">{{supplier.name}}</td>\\r\\n                        <td><input type=\\\"number\\\" class=\\\"form-control input-sm\\\" autocomplete=\\\"off\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"supplier.price\\\"></td>\\r\\n                        <td><input type=\\\"number\\\" class=\\\"form-control input-sm\\\" autocomplete=\\\"off\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"supplier.serviceCost\\\"></td>\\r\\n                     </tr>\\r\\n                  </ng-container>\\r\\n               </ng-container>\\r\\n            </ng-container>\\r\\n\\r\\n            <ng-container *ngIf=\\\"(entityType == 'All' || entityType == 'Civilwork') && civilworks && civilworks.length > 0\\\">\\r\\n               <ng-container *ngFor='let civilwork of civilworks; let rowIndex = index;'>\\r\\n                  <tr>\\r\\n                     <td colspan=\\\"4\\\" style=\\\"background-color: #f4f4f4\\\">{{civilwork.name}}</td>\\r\\n                  </tr>\\r\\n                  <ng-container *ngFor='let supplier of civilwork.suppliers; let sIndex = index;'>\\r\\n                     <tr *ngIf=\\\"checkPriceValidity(supplier.validFrom, supplier.validTo)\\\">\\r\\n                        <td style=\\\"text-align: center; vertical-align: middle;\\\">\\r\\n                           <mat-radio-group [name]=\\\"civilwork.name\\\" [(ngModel)]=\\\"supplier.isPrefered\\\">\\r\\n                              <mat-radio-button [value]=true></mat-radio-button>\\r\\n                           </mat-radio-group>\\r\\n                        </td>\\r\\n                        <td style=\\\"vertical-align: middle;\\\">{{supplier.name}}</td>\\r\\n                        <td><input type=\\\"number\\\" class=\\\"form-control input-sm\\\" autocomplete=\\\"off\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"supplier.price\\\"></td>\\r\\n                        <td><input type=\\\"number\\\" class=\\\"form-control input-sm\\\" autocomplete=\\\"off\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"supplier.serviceCost\\\"></td>\\r\\n                     </tr>\\r\\n                  </ng-container>\\r\\n               </ng-container>\\r\\n            </ng-container>\\r\\n         </tbody>\\r\\n      </table>\\r\\n   </div>\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"col-md-12\\\">\\r\\n   <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"category\\\" class=\\\"control-label\\\">Category </label>\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"category\\\" [(ngModel)]=\\\"documentCategory\\\">\\r\\n   </div>\\r\\n   <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"uploadFile\\\">Upload file</label>\\r\\n      <div class=\\\"input-group\\\">\\r\\n         <input type=\\\"text\\\" class=\\\"form-control\\\" readonly id=\\\"uploadFile\\\" placeholder=\\\"Choose file\\\">\\r\\n         <span class=\\\"input-group-btn\\\">\\r\\n            <span class=\\\"btn btn-primary btn-file\\\">\\r\\n               Browse&hellip; <input type=\\\"file\\\" multiple #fileInput (click)=\\\"fileInput.value = null\\\" value=\\\"\\\" (change)=\\\"fileChangeEvent($event)\\\">\\r\\n            </span>\\r\\n         </span>\\r\\n      </div>\\r\\n   </div>\\r\\n   <div class=\\\"form-group\\\">\\r\\n      <table class=\\\"table table-bordered table-striped\\\">\\r\\n         <thead>\\r\\n            <tr>\\r\\n               <th>Category</th>\\r\\n               <th>File Name</th>\\r\\n               <th style=\\\"width:120px\\\">File Size</th>\\r\\n               <th style=\\\"width:70px\\\" class='text-center'></th>\\r\\n            </tr>\\r\\n         </thead>\\r\\n         <tbody>\\r\\n            <ng-container *ngIf='design.documents && design.documents.length > 0'>\\r\\n               <tr *ngFor='let document of design.documents;let rowIndex = index;'>\\r\\n                  <td>{{document.category}}</td>\\r\\n                  <td>{{document.fileName}}</td>\\r\\n                  <td style=\\\"text-align: right;\\\">{{helper.formatBytes(document.fileSize, 2)}}</td>\\r\\n                  <td>\\r\\n                     <a href=\\\"Designs/GetDocument?designId={{design.id}}&documentId={{document.id}}\\\" download *ngIf=\\\"document.id != null\\\">\\r\\n                        <i class='fa fa-download' style='font-size: 15px; cursor:pointer' title='Download File'></i>\\r\\n                     </a>&nbsp;\\r\\n                     <a (click)=\\\"removeDocument(rowIndex, document)\\\" style=\\\"cursor:pointer\\\">\\r\\n                        <i class=\\\"fas fa-trash-alt\\\" style=\\\"font-size: 15px; color: Red;\\\" title=\\\"Delete\\\"></i>\\r\\n                     </a>\\r\\n                  </td>\\r\\n               </tr>\\r\\n            </ng-container>\\r\\n            <tr *ngIf='design.documents == null || design.documents.length == 0'>\\r\\n               <td colspan=\\\"4\\\" style=\\\"text-align: center;\\\">\\r\\n                  There are no documents attached to design.\\r\\n               </td>\\r\\n            </tr>\\r\\n         </tbody>\\r\\n      </table>\\r\\n   </div>\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"form-group col-md-12\\\">\\r\\n   <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"equipment\\\" class=\\\"control-label\\\">Select Duct</label>\\r\\n      <div class=\\\"input-group input-group-sm\\\">\\r\\n         <mat-select name=\\\"duct\\\" [(ngModel)]=\\\"selectedDuct\\\">\\r\\n            <mat-option>Select Duct</mat-option>\\r\\n            <ng-container *ngIf=\\\"ductsMaster && ductsMaster.length > 0\\\">\\r\\n               <mat-option *ngFor=\\\"let duct of ductsMaster\\\" [value]=\\\"duct\\\">\\r\\n                  {{duct.name}}\\r\\n               </mat-option>\\r\\n            </ng-container>\\r\\n         </mat-select>\\r\\n         <span class=\\\"input-group-btn\\\"><button class=\\\"btn btn-info btn-flat\\\" type=\\\"button\\\" (click)=\\\"addDuct()\\\"><i class=\\\"fas fa-plus\\\"></i></button></span>\\r\\n      </div>\\r\\n   </div>\\r\\n</div>\\r\\n<div class=\\\"form-group col-md-12\\\">\\r\\n   <table class=\\\"table table-bordered table-striped\\\">\\r\\n      <thead>\\r\\n         <tr>\\r\\n            <th>Name</th>\\r\\n            <th style=\\\"width:40px\\\"></th>\\r\\n         </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n         <ng-container *ngIf='ductSettings.ducts && ductSettings.ducts.length > 0'>\\r\\n            <tr *ngFor='let duct of ductSettings.ducts;let rowIndex = index;'>\\r\\n               <td>{{duct.name}}</td>\\r\\n               <td>\\r\\n                  <a>\\r\\n                     <i class=\\\"fas fa-trash-alt\\\" style=\\\"font-size: 15px; color: Red; cursor:pointer\\\" (click)=\\\"removeDuct(rowIndex)\\\" title=\\\"Remove\\\"></i>\\r\\n                  </a>\\r\\n               </td>\\r\\n            </tr>\\r\\n         </ng-container>\\r\\n         <tr *ngIf='ductSettings.ducts == null || ductSettings.ducts.length == 0'>\\r\\n            <td colspan=\\\"2\\\" style=\\\"text-align: center;\\\">\\r\\n               {{statusMessage}}\\r\\n            </td>\\r\\n         </tr>\\r\\n      </tbody>\\r\\n   </table>\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"col-sm-6\\\">\\r\\n   <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"entityName\\\" class=\\\"control-label\\\">Entity Name</label>\\r\\n      <mat-select name=\\\"entityType\\\" [(ngModel)]=\\\"entitySettings.entityName\\\" (ngModelChange)=\\\"onEntityTypeChange($event)\\\">\\r\\n         <mat-option>Select Entity Type</mat-option>\\r\\n         <mat-option value=\\\"Chamber\\\">Chamber</mat-option>\\r\\n         <mat-option value=\\\"ODF\\\">ODF</mat-option>\\r\\n         <mat-option value=\\\"Pole\\\">Pole</mat-option>\\r\\n         <mat-option value=\\\"SpliceClosure\\\">Splice Closure</mat-option>\\r\\n         <mat-option value=\\\"Splitter\\\">Splitter</mat-option>\\r\\n         <mat-option value=\\\"Homepass\\\">Homepass</mat-option>\\r\\n      </mat-select>\\r\\n   </div>\\r\\n</div>\\r\\n<div class=\\\"col-sm-6\\\">\\r\\n   <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"control-label\\\" for=\\\"nodeOptions\\\">Node Options <span style=\\\"color:red;\\\">*</span></label>\\r\\n      <mat-select name=\\\"nodeOptions\\\" [(ngModel)]=\\\"entitySettings.dataSource\\\" [disabled]=\\\"entitySettings.entityName=='Homepass'?'disabled': null\\\">\\r\\n         <mat-option>Select Option</mat-option>\\r\\n         <mat-option value=\\\"import\\\">Import</mat-option>\\r\\n         <mat-option value=\\\"existing\\\">Use from existing design</mat-option>\\r\\n         <mat-option value=\\\"automatic\\\">Place Automatically</mat-option>\\r\\n      </mat-select>\\r\\n   </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"form-group col-sm-12\\\" *ngIf=\\\"entitySettings.dataSource == 'import'\\\">\\r\\n   <label for=\\\"equipment\\\" class=\\\"control-label\\\">Select Entities File</label>\\r\\n   <div class=\\\"input-group\\\">\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" readonly id=\\\"uploadFile\\\" placeholder=\\\"Choose file\\\">\\r\\n      <span class=\\\"input-group-btn\\\">\\r\\n         <span class=\\\"btn btn-primary btn-file\\\">\\r\\n            Browse&hellip; <input type=\\\"file\\\" #fileInput (click)=\\\"fileInput.value = null\\\" value=\\\"\\\" (change)=\\\"fileChangeEvent($event)\\\">\\r\\n         </span>\\r\\n      </span>\\r\\n   </div>\\r\\n</div>\\r\\n\\r\\n<ng-container *ngIf=\\\"entitySettings.dataSource == 'existing'\\\">\\r\\n   <div class=\\\"col-sm-6\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n         <label for=\\\"design\\\" class=\\\"control-label\\\">Select Design</label>\\r\\n         <mat-select name=\\\"design\\\" [(ngModel)]=\\\"entitySettings.existingDesignId\\\" (ngModelChange)=\\\"onDesignChange($event)\\\">\\r\\n            <mat-option>Select Design</mat-option>\\r\\n            <mat-option *ngFor=\\\"let item of allDesigns\\\" [value]=\\\"item.id\\\">(ver {{item.version}}) {{item.name}}</mat-option>\\r\\n         </mat-select>\\r\\n      </div>\\r\\n   </div>\\r\\n   <div class=\\\"col-sm-6\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n         <label for=\\\"designEntities\\\" class=\\\"control-label\\\">Select {{entitySettings.entityName}}</label>\\r\\n         <mat-select name=\\\"designEntities\\\" (ngModelChange)=\\\"onDesignEntityChange($event)\\\">\\r\\n            <mat-option>Select {{entitySettings.entityName}}</mat-option>\\r\\n            <ng-container *ngIf=\\\"designEntities && designEntities.length > 0\\\">\\r\\n               <mat-option *ngFor=\\\"let designEntity of designEntities\\\" [value]=\\\"designEntity\\\">\\r\\n                  {{designEntity.name}}\\r\\n               </mat-option>\\r\\n            </ng-container>\\r\\n         </mat-select>\\r\\n      </div>\\r\\n   </div>\\r\\n</ng-container>\\r\\n\\r\\n<div class=\\\"form-group col-md-12\\\" *ngIf=\\\"entitySettings.dataSource == 'automatic' && entitySettings.entityName != 'Homepass'\\\">\\r\\n   <label for=\\\"masterEntities\\\" class=\\\"control-label\\\">Select {{entitySettings.entityName}}</label>\\r\\n   <div class=\\\"input-group input-group-sm\\\">\\r\\n      <mat-select name=\\\"masterEntities\\\" [(ngModel)]=\\\"selectedEntity\\\">\\r\\n         <mat-option>Select {{entitySettings.entityName}}</mat-option>\\r\\n         <ng-container *ngIf=\\\"masterEntities && masterEntities.length > 0\\\">\\r\\n            <mat-option *ngFor=\\\"let selectedEntity of masterEntities\\\" [value]=\\\"selectedEntity\\\">\\r\\n               {{selectedEntity.name}}\\r\\n            </mat-option>\\r\\n         </ng-container>\\r\\n      </mat-select>\\r\\n      <span class=\\\"input-group-btn\\\"><button class=\\\"btn btn-info btn-flat\\\" type=\\\"button\\\" (click)=\\\"addEntity()\\\"><i class=\\\"fas fa-plus\\\"></i></button></span>\\r\\n   </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"col-sm-12\\\" *ngIf=\\\"entitySettings.entityName != 'Homepass'\\\">\\r\\n   <div class=\\\"form-group\\\">\\r\\n      <div style=\\\"overflow-y:auto; max-height:250px\\\">\\r\\n         <table class=\\\"table table-bordered table-striped\\\">\\r\\n            <thead>\\r\\n               <tr>\\r\\n                  <th>Name</th>\\r\\n                  <th style=\\\"width:40px\\\"></th>\\r\\n               </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n               <ng-container *ngIf='entities && entities.length > 0'>\\r\\n                  <tr *ngFor='let entity of entities;let rowIndex = index;'>\\r\\n                     <td>{{entity.name}}</td>\\r\\n                     <td>\\r\\n                        <a>\\r\\n                           <i class=\\\"fas fa-trash-alt\\\" style=\\\"font-size: 15px; color: Red; cursor:pointer\\\" (click)=\\\"removeEntity(rowIndex)\\\" title=\\\"Remove\\\"></i>\\r\\n                        </a>\\r\\n                     </td>\\r\\n                  </tr>\\r\\n               </ng-container>\\r\\n               <tr *ngIf='entities == null || entities.length == 0'>\\r\\n                  <td colspan=\\\"2\\\" style=\\\"text-align: center;\\\">\\r\\n                     Entities not added.\\r\\n                  </td>\\r\\n               </tr>\\r\\n            </tbody>\\r\\n         </table>\\r\\n      </div>\\r\\n\\r\\n   </div>\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"col-sm-12\\\">\\r\\n   <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"control-label\\\" for=\\\"nodeOptions\\\">Node Options <span style=\\\"color:red;\\\">*</span></label>\\r\\n      <mat-select name=\\\"nodeOptions\\\" [(ngModel)]=\\\"fdpSettings.dataSource\\\">\\r\\n         <mat-option>Select Option</mat-option>\\r\\n         <mat-option value=\\\"import\\\">Import</mat-option>\\r\\n         <mat-option value=\\\"existing\\\">Use from existing design</mat-option>\\r\\n      </mat-select>\\r\\n   </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"form-group col-sm-12\\\" *ngIf=\\\"fdpSettings.dataSource == 'import'\\\">\\r\\n   <label for=\\\"equipment\\\" class=\\\"control-label\\\">Select FDP File</label>\\r\\n   <div class=\\\"input-group\\\">\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" readonly id=\\\"uploadFile\\\" placeholder=\\\"Choose file\\\">\\r\\n      <span class=\\\"input-group-btn\\\">\\r\\n         <span class=\\\"btn btn-primary btn-file\\\">\\r\\n            Browse&hellip; <input type=\\\"file\\\" #fileInput (click)=\\\"fileInput.value = null\\\" value=\\\"\\\" (change)=\\\"fileChangeEvent($event)\\\">\\r\\n         </span>\\r\\n      </span>\\r\\n   </div>\\r\\n</div>\\r\\n\\r\\n<ng-container *ngIf=\\\"fdpSettings.dataSource == 'existing'\\\">\\r\\n   <div class=\\\"form-group col-md-12\\\">\\r\\n      <label for=\\\"design\\\" class=\\\"control-label\\\">Select Design</label>\\r\\n      <mat-select name=\\\"design\\\" [(ngModel)]=\\\"fdpSettings.existingDesignId\\\" (ngModelChange)=\\\"onDesignChange($event)\\\">\\r\\n         <mat-option>Select Design</mat-option>\\r\\n         <mat-option *ngFor=\\\"let item of allDesigns\\\" [value]=\\\"item.id\\\">(ver {{item.version}}) {{item.name}}</mat-option>\\r\\n      </mat-select>\\r\\n   </div>\\r\\n</ng-container>\\r\\n\\r\\n<div class=\\\"form-group col-md-12\\\">\\r\\n   <label for=\\\"designFDPs\\\" class=\\\"control-label\\\">Select FDPs</label>\\r\\n   <div class=\\\"input-group input-group-sm\\\">\\r\\n      <mat-select name=\\\"designFDPs\\\" [(ngModel)]=\\\"selectedFDP\\\">\\r\\n         <mat-option>Select FDP</mat-option>\\r\\n         <ng-container *ngIf=\\\"fdpSettings.fdps && fdpSettings.fdps.length > 0\\\">\\r\\n            <mat-option *ngFor=\\\"let selectedFDP of fdpSettings.fdps\\\" [value]=\\\"selectedFDP\\\">\\r\\n               {{selectedFDP.name}}\\r\\n            </mat-option>\\r\\n         </ng-container>\\r\\n      </mat-select>\\r\\n      <span class=\\\"input-group-btn\\\"><button class=\\\"btn btn-info btn-flat\\\" type=\\\"button\\\" (click)=\\\"add()\\\"><i class=\\\"fas fa-plus\\\"></i></button></span>\\r\\n   </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"col-sm-12\\\">\\r\\n   <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"control-label\\\">Pre Aggregates</label>\\r\\n      <div style=\\\"overflow:auto; max-height:250px;\\\">\\r\\n         <table class=\\\"table table-bordered table-striped\\\">\\r\\n            <thead>\\r\\n               <tr>\\r\\n                  <th>Name</th>\\r\\n                  <th style=\\\"width:40px\\\"></th>\\r\\n               </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n               <ng-container *ngIf='fdpSettings.fdps && fdpSettings.fdps.length > 0'>\\r\\n                  <tr *ngFor='let fdp of fdpSettings.fdps;let rowIndex = index;'>\\r\\n                     <td>{{fdp.name}}</td>\\r\\n                     <td>\\r\\n                        <a>\\r\\n                           <i class=\\\"fas fa-trash-alt\\\" style=\\\"font-size: 15px; color: Red; cursor:pointer\\\" (click)=\\\"remove(rowIndex)\\\" title=\\\"Remove\\\"></i>\\r\\n                        </a>\\r\\n                     </td>\\r\\n                  </tr>\\r\\n               </ng-container>\\r\\n               <tr *ngIf='fdpSettings.fdps == null || fdpSettings.fdps.length == 0'>\\r\\n                  <td colspan=\\\"2\\\" style=\\\"text-align: center;\\\">\\r\\n                     FDPs not added.\\r\\n                  </td>\\r\\n               </tr>\\r\\n            </tbody>\\r\\n         </table>\\r\\n      </div>\\r\\n\\r\\n   </div>\\r\\n</div>\\r\\n\"","export default \"<div>\\r\\n   <div class=\\\"col-sm-12\\\">\\r\\n      <div class=\\\"pull-right\\\">\\r\\n         <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"version\\\" class=\\\"control-label\\\" style=\\\"float:left; padding: 5px 5px;\\\">Ver.</label>\\r\\n            <mat-select name=\\\"version\\\" [(ngModel)]=\\\"selectedVersion\\\" (ngModelChange)=\\\"versionChange($event)\\\" style=\\\"width:75px\\\">\\r\\n               <mat-option>Version</mat-option>\\r\\n               <mat-option *ngFor=\\\"let design of designs\\\" [value]=\\\"design.version\\\">\\r\\n                  {{design.version}}\\r\\n               </mat-option>\\r\\n            </mat-select>\\r\\n         </div>\\r\\n      </div>\\r\\n   </div>\\r\\n   <div class=\\\"col-sm-6\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n         <label for=\\\"name\\\" class=\\\"control-label\\\">Name <span style=\\\"color:red;\\\">*</span></label>\\r\\n         <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"name\\\" required [(ngModel)]=\\\"design.name\\\">\\r\\n      </div>\\r\\n   </div>\\r\\n   <div class=\\\"col-sm-6\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n         <label for=\\\"code\\\" class=\\\"control-label\\\">Code </label>\\r\\n         <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"code\\\" [(ngModel)]=\\\"design.code\\\">\\r\\n      </div>\\r\\n   </div>\\r\\n   <div class=\\\"col-sm-6\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n         <label for=\\\"designType\\\" class=\\\"control-label\\\">Design Type</label>\\r\\n         <mat-select name=\\\"designType\\\" [(ngModel)]=\\\"design.designType\\\" (ngModelChange)=\\\"clearNetworkSettings()\\\">\\r\\n            <mat-option>Select Design Type</mat-option>\\r\\n            <mat-option value='FTTx'>FTTx</mat-option>\\r\\n           <!-- <mat-option value='Backbone'>Backbone</mat-option>-->\\r\\n         </mat-select>\\r\\n      </div>\\r\\n   </div>\\r\\n   <div class=\\\"col-sm-6\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n         <label for=\\\"assignedTo\\\" class=\\\"control-label\\\">Assigned To</label>\\r\\n         <mat-select name=\\\"assignedTo\\\" [(ngModel)]=\\\"design.assignedTo\\\">\\r\\n            <mat-option>Select user</mat-option>\\r\\n            <mat-option *ngFor=\\\"let user of users\\\" [value]=\\\"user.id\\\">\\r\\n               {{user.firstName}} {{user.lastName}}\\r\\n            </mat-option>\\r\\n         </mat-select>\\r\\n      </div>\\r\\n   </div>\\r\\n   <div class=\\\"col-sm-12\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n         <label for=\\\"description\\\" class=\\\"control-label\\\">Description </label>\\r\\n         <textarea class=\\\"form-control\\\" rows=\\\"2\\\" name=\\\"description\\\" [(ngModel)]=\\\"design.description\\\"></textarea>\\r\\n      </div>\\r\\n   </div>\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"box-tools\\\" style=\\\"background-color: #ddd;padding: 5px;\\\">\\r\\n   <button data-toggle=\\\"collapse\\\" data-target=\\\"#layers\\\" class=\\\"btn btn-social-icon btn-xs\\\" style=\\\"color:#605ca8\\\" type=\\\"submit\\\">\\r\\n      <i class=\\\"fas fa-layer-group\\\"></i>\\r\\n   </button>\\r\\n   <span *ngIf=\\\"selectedLayers.length >0\\\" style=\\\"color: #605ca8;padding-top: 3px;\\\"><b>+</b></span>\\r\\n   <div class=\\\"pull-right\\\">\\r\\n      <i class=\\\"fas fa-sync-alt\\\" style=\\\"font-size: 15px; color: #605ca8; cursor: pointer; padding: 5px;\\\" (click)=\\\"refreshBlueprint()\\\"></i>\\r\\n   </div>\\r\\n   <ul class=\\\"nav navbar-nav toolbar-Controls pull-right\\\">\\r\\n      <li>\\r\\n         <a href=\\\"#\\\" class=\\\"dropdown-toggle btn btn-social-icon btn-xs pull-right\\\" data-toggle=\\\"dropdown\\\" title=\\\"Network Element Library\\\">\\r\\n            <span style=\\\"color: #605ca8;padding-top: 3px;\\\"><b>+</b></span>\\r\\n         </a>\\r\\n\\r\\n         <div id=\\\"newNetwork\\\" class=\\\"dropdown-menu\\\" style=\\\"\\\">\\r\\n            <ul class=\\\"nav navbar-nav toolbar-Controls pull-right entityMenu\\\" style=\\\"padding: 5px;width: 333px;\\\">\\r\\n               <li>\\r\\n                  <a title=\\\"Chamber\\\" style=\\\"padding-top: 8px;border: 1px solid #ddd;padding: 3px; height: auto;\\\"><img src=\\\"\\\\images\\\\map-entities\\\\chamber.png\\\" name=\\\"Chamber\\\" class=\\\"iconImageStyle\\\" style=\\\"cursor:move;height:20px\\\" /></a>\\r\\n               </li>\\r\\n               <li>\\r\\n                  <a title=\\\"Pole\\\" style=\\\"padding-top: 8px;border: 1px solid #ddd; padding: 3px; height: auto;\\\"><img src=\\\"\\\\images\\\\map-entities\\\\pole.png\\\" name=\\\"Pole\\\" class=\\\"iconImageStyle\\\" style=\\\"cursor: move; height: 20px\\\" /></a>\\r\\n               </li>\\r\\n               <li>\\r\\n                  <a title=\\\"Pop\\\" style=\\\"padding-top: 8px;border: 1px solid #ddd;padding: 3px; height: auto;\\\"><img src=\\\"\\\\images\\\\map-entities\\\\pop.png\\\" name=\\\"Pop\\\" class=\\\"iconImageStyle\\\" style=\\\"cursor:move;height:20px\\\" /></a>\\r\\n               </li>\\r\\n               <li>\\r\\n                  <a title=\\\"Underground cable\\\" style=\\\"padding-top: 8px;border: 1px solid #ddd; padding: 3px; height: auto;\\\"><img src=\\\"\\\\images\\\\map-entities\\\\Cable.png\\\" name=\\\"UndergroundCable\\\" class=\\\"iconImageStyle\\\" style=\\\"cursor:move;height:20px\\\" /></a>\\r\\n               </li>\\r\\n               <li>\\r\\n                  <a title=\\\"Overhead cable\\\" style=\\\"padding-top: 8px;border: 1px solid #ddd;padding: 3px; height: auto;\\\"><img src=\\\"\\\\images\\\\map-entities\\\\OverheadCable.png\\\" name=\\\"Overhead Cable\\\" class=\\\"iconImageStyle\\\" style=\\\"cursor:move;height:20px\\\" /></a>\\r\\n               </li>\\r\\n               <li>\\r\\n                  <a title=\\\"Duct\\\" style=\\\"padding-top: 8px;border: 1px solid #ddd;padding: 3px; height: auto;\\\"><img src=\\\"\\\\images\\\\map-entities\\\\duct.png\\\" name=\\\"Duct\\\" class=\\\"iconImageStyle\\\" style=\\\"cursor:move;height:20px\\\" /></a>\\r\\n               </li>\\r\\n               <li>\\r\\n                  <a title=\\\"Micro Duct\\\" style=\\\"padding-top: 8px;border: 1px solid #ddd;padding: 3px; height: auto;\\\"><img src=\\\"\\\\images\\\\map-entities\\\\microduc.png\\\" name=\\\"Micro Duct\\\" class=\\\"iconImageStyle\\\" style=\\\"cursor:move;height:20px\\\" /></a>\\r\\n               </li>\\r\\n               <li>\\r\\n                  <a title=\\\"FAT\\\" style=\\\"padding-top: 8px;border: 1px solid #ddd;padding: 3px; height: auto;\\\"><img src=\\\"\\\\images\\\\map-entities\\\\FAT.png\\\" name=\\\"FAT\\\" class=\\\"iconImageStyle\\\" style=\\\"cursor:move;height:20px\\\" /></a>\\r\\n               </li>\\r\\n               <li>\\r\\n                  <a title=\\\"FDT\\\" style=\\\"padding-top: 8px;border: 1px solid #ddd;padding: 3px; height: auto;\\\"><img src=\\\"\\\\images\\\\map-entities\\\\FDT.png\\\" name=\\\"FDT\\\" class=\\\"iconImageStyle\\\" style=\\\"cursor:move;height:20px\\\" /></a>\\r\\n               </li>\\r\\n            </ul>\\r\\n         </div>\\r\\n      </li>\\r\\n      <li>\\r\\n         <a title=\\\"\\\" style=\\\"height: 0px;\\\"><img src=\\\"images/file-ext/kml.svg\\\" (click)=\\\"ExportTOPdf()\\\" style=\\\"width: 16px;margin-top: -15px;margin-left: 0px;\\\"></a>\\r\\n      </li>\\r\\n   </ul>\\r\\n</div>\\r\\n<div id=\\\"layers\\\" class=\\\"layers collapse\\\">\\r\\n   <div style=\\\"height: 84.5vh;\\\">\\r\\n      <div class=\\\"box-header with-border\\\">\\r\\n         <h3 class=\\\"box-title\\\">Layers</h3>\\r\\n         <div class=\\\"pull-right\\\">\\r\\n            <i class=\\\"fas fa-sync-alt\\\" style=\\\"font-size: 15px; color: #605ca8; cursor: pointer;\\\" (click)=\\\"refreshLayers()\\\"></i>\\r\\n         </div>\\r\\n      </div>\\r\\n      <div class=\\\"box-body\\\">\\r\\n         <table class=\\\"table table-bordered table-striped\\\">\\r\\n            <thead>\\r\\n               <tr>\\r\\n                  <th style=\\\"width:40px;text-align: center;\\\">\\r\\n                     <mat-checkbox (change)=\\\"$event ? masterToggle() : null\\\"\\r\\n                                   [checked]=\\\"selectedLayers?.length > 0 && isAllSelected()\\\"\\r\\n                                   [indeterminate]=\\\"selectedLayers?.length > 0 && !isAllSelected()\\\">\\r\\n                     </mat-checkbox>\\r\\n                  </th>\\r\\n                  <th>All</th>\\r\\n               </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n               <tr *ngFor='let layer of layers'>\\r\\n                  <td style=\\\"text-align: center;\\\">\\r\\n                     <mat-checkbox (click)=\\\"$event.stopPropagation()\\\"\\r\\n                                   (change)=\\\"$event ? toggleSelection(layer) : null\\\"\\r\\n                                   [checked]=\\\"selectedLayers?.includes(layer.id)\\\">\\r\\n                     </mat-checkbox>\\r\\n                  </td>\\r\\n                  <td>{{layer.id}}</td>\\r\\n               </tr>\\r\\n            </tbody>\\r\\n         </table>\\r\\n      </div>\\r\\n   </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n<div>\\r\\n   <div id=\\\"designMap\\\" style=\\\"height: 85vh;\\\"></div>\\r\\n   <div *ngIf=\\\"selectedEntity\\\" class=\\\"box pull-right properties\\\" style=\\\"border-radius: 0px;height: 85vh;overflow-y: auto; top:89px\\\">\\r\\n      <div class=\\\"box-header with-border\\\">\\r\\n         <h3 class=\\\"box-title\\\">Properties</h3>\\r\\n         <div class=\\\"box-tools pull-right\\\">\\r\\n            <p>\\r\\n               <span *ngIf=\\\"selectedEntity?.entityType == 'Chamber'\\\">\\r\\n                  <button title=\\\"Splitter\\\" style=\\\"padding-top: 8px;border: 1px solid #ddd; padding: 3px;height: auto;\\\" type=\\\"submit\\\" (click)=\\\"PlotEntity('Splitter')\\\">\\r\\n                     <img src=\\\"\\\\images\\\\map-entities\\\\splitter.png\\\" name=\\\"Splitter\\\" class=\\\"iconImageStyle\\\" style=\\\"height: 20px\\\" />\\r\\n                  </button>\\r\\n                  <button title=\\\"Splice Closure\\\" style=\\\"padding-top: 8px;border: 1px solid #ddd; padding: 3px; height: auto;\\\" type=\\\"submit\\\" (click)=\\\"PlotEntity('Splice Closure')\\\">\\r\\n                     <img src=\\\"\\\\images\\\\map-entities\\\\spliceclosure.png\\\" name=\\\"SpliceClosure\\\" class=\\\"iconImageStyle\\\" style=\\\"height: 20px\\\" />\\r\\n                  </button>\\r\\n               </span>\\r\\n               <span *ngIf=\\\"selectedEntity?.entityType == 'PoP'\\\">\\r\\n                  <a title=\\\"Odf\\\" style=\\\"padding-top: 8px;border: 1px solid #ddd;padding: 3px; height: auto;\\\" (click)=\\\"PlotEntity('odf')\\\"><img src=\\\"\\\\images\\\\map-entities\\\\odf.png\\\" name=\\\"Odf\\\" class=\\\"iconImageStyle\\\" style=\\\"height:20px\\\" /></a>\\r\\n               </span>\\r\\n               <button class=\\\"btn btn-social-icon btn-xs btn-default\\\" (click)=\\\"selectedEntity = null\\\">\\r\\n                  <i class=\\\"fas fa-times\\\"></i>\\r\\n               </button>\\r\\n               <button class=\\\"btn btn-social-icon btn-xs btn-default\\\" style=\\\"margin-left: 5px;\\\" type=\\\"submit\\\" data-toggle=\\\"modal\\\" data-target=\\\"#deleteEntity\\\">\\r\\n                  <i class=\\\"fas fa-trash-alt\\\" style=\\\"color: Red;\\\"></i>\\r\\n               </button>\\r\\n            </p>\\r\\n                 \\r\\n         </div>\\r\\n      </div>\\r\\n      <div class=\\\"box-body\\\">\\r\\n\\r\\n         <div *ngIf=\\\"selectedEntity?.entityType == 'Cable'\\\">\\r\\n            <div class=\\\"panel-group\\\" id=\\\"cableAccordion\\\">\\r\\n               <div class=\\\"panel panel-default\\\">\\r\\n                  <div class=\\\"panel-heading\\\">\\r\\n                     <h4 class=\\\"panel-title\\\">\\r\\n                        <a data-toggle=\\\"collapse\\\" data-parent=\\\"#cableAccordion\\\" href=\\\"#cbl_info\\\">General Information</a>\\r\\n                     </h4>\\r\\n                  </div>\\r\\n                  <div id=\\\"cbl_info\\\" class=\\\"panel-collapse collapse in\\\">\\r\\n                     <div class=\\\"panel-body\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"name\\\" class=\\\"control-label\\\">Name <span style=\\\"color:red;\\\">*</span></label>\\r\\n                           <input type=\\\"text\\\" name=\\\"name\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"selectedEntity.name\\\" />\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"code\\\" class=\\\"control-label\\\">Code <span style=\\\"color:red;\\\">*</span></label>\\r\\n                           <input type=\\\"text\\\" name=\\\"code\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"selectedEntity.code\\\" readonly />\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"coordinates\\\" class=\\\"control-label\\\">Coordinates(Lng,Lat) </label>\\r\\n                           <textarea type=\\\"text\\\" rows=\\\"3\\\" class=\\\"form-control input-sm\\\" name=\\\"coordinates\\\" readonly value=\\\"{{selectedEntity.geometry.coordinates}}\\\"></textarea>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                  </div>\\r\\n               </div>\\r\\n               <div class=\\\"panel panel-default\\\">\\r\\n                  <div class=\\\"panel-heading\\\">\\r\\n                     <h4 class=\\\"panel-title\\\">\\r\\n                        <a data-toggle=\\\"collapse\\\" data-parent=\\\"#cableAccordion\\\" href=\\\"#cbl_make\\\">Make</a>\\r\\n                     </h4>\\r\\n                  </div>\\r\\n                  <div id=\\\"cbl_make\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                     <div class=\\\"panel-body\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"type\\\" class=\\\"control-label\\\">Type</label>\\r\\n                           <input type=\\\"text\\\" name=\\\"type\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"selectedEntity.type\\\" />\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"brand\\\" class=\\\"control-label\\\">Brand</label>\\r\\n                           <input type=\\\"text\\\" name=\\\"brand\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"selectedEntity.brand\\\" />\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"model\\\" class=\\\"control-label\\\">Model</label>\\r\\n                           <input type=\\\"text\\\" name=\\\"model\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"selectedEntity.model\\\" />\\r\\n                        </div>\\r\\n                     </div>\\r\\n                  </div>\\r\\n               </div>\\r\\n               <div class=\\\"panel panel-default\\\">\\r\\n                  <div class=\\\"panel-heading\\\">\\r\\n                     <h4 class=\\\"panel-title\\\">\\r\\n                        <a data-toggle=\\\"collapse\\\" data-parent=\\\"#cableAccordion\\\" href=\\\"#cblInfo\\\">Cable Information</a>\\r\\n                     </h4>\\r\\n                  </div>\\r\\n                  <div id=\\\"cblInfo\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                     <div class=\\\"panel-body\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"aLocation\\\" class=\\\"control-label\\\">A Location</label>\\r\\n                           <input type=\\\"text\\\" name=\\\"aLocation\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"selectedEntity.aLocation\\\" />\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"bLocation\\\" class=\\\"control-label\\\">B Location</label>\\r\\n                           <input type=\\\"text\\\" name=\\\"bLocation\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"selectedEntity.aLocation\\\" />\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"measuredLength\\\" class=\\\"control-label\\\">Measured Length</label>\\r\\n                           <input type=\\\"text\\\" name=\\\"measuredLength\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"selectedEntity.measuredLength\\\" />\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"calculatedLength\\\" class=\\\"control-label\\\">Calculated Length</label>\\r\\n                           <input type=\\\"text\\\" name=\\\"calculatedLength\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"selectedEntity.calculatedLength\\\" />\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"noOfTubes\\\" class=\\\"control-label\\\">No Of Tubes</label>\\r\\n                           <input type=\\\"text\\\" name=\\\"noOfTubes\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"selectedEntity.noOfTubes\\\" />\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"corePerTube\\\" class=\\\"control-label\\\">Core Per Tube</label>\\r\\n                           <input type=\\\"text\\\" name=\\\"corePerTube\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"selectedEntity.corePerTube\\\" />\\r\\n                        </div>\\r\\n                     </div>\\r\\n                  </div>\\r\\n               </div>\\r\\n            </div>\\r\\n         </div>\\r\\n\\r\\n         <div *ngIf=\\\"selectedEntity?.entityType == 'Chamber'\\\">\\r\\n            <div class=\\\"panel-group\\\" id=\\\"chamberAccordion\\\">\\r\\n               <div class=\\\"panel panel-default\\\">\\r\\n                  <div class=\\\"panel-heading\\\">\\r\\n                     <h4 class=\\\"panel-title\\\">\\r\\n                        <a data-toggle=\\\"collapse\\\" data-parent=\\\"#chamberAccordion\\\" href=\\\"#cbr_info\\\">General Information</a>\\r\\n                     </h4>\\r\\n                  </div>\\r\\n                  <div id=\\\"cbr_info\\\" class=\\\"panel-collapse collapse in\\\">\\r\\n                     <div class=\\\"panel-body\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"name\\\" class=\\\"control-label\\\">Name <span style=\\\"color:red;\\\">*</span></label>\\r\\n                           <input type=\\\"text\\\" name=\\\"name\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"selectedEntity.name\\\" />\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"code\\\" class=\\\"control-label\\\">Code <span style=\\\"color:red;\\\">*</span></label>\\r\\n                           <input type=\\\"text\\\" name=\\\"code\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"selectedEntity.code\\\" readonly />\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"coordinates\\\" class=\\\"control-label\\\">Coordinates(Lng,Lat) </label>\\r\\n                           <input type=\\\"text\\\" class=\\\"form-control input-sm\\\" name=\\\"coordinates\\\" readonly value=\\\"{{selectedEntity.geometry.coordinates[0]}}, {{selectedEntity.geometry.coordinates[1]}}\\\">\\r\\n                        </div>\\r\\n                     </div>\\r\\n                  </div>\\r\\n               </div>\\r\\n               <div class=\\\"panel panel-default\\\">\\r\\n                  <div class=\\\"panel-heading\\\">\\r\\n                     <h4 class=\\\"panel-title\\\">\\r\\n                        <a data-toggle=\\\"collapse\\\" data-parent=\\\"#chamberAccordion\\\" href=\\\"#cbr_make\\\">Make</a>\\r\\n                     </h4>\\r\\n                  </div>\\r\\n                  <div id=\\\"cbr_make\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                     <div class=\\\"panel-body\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"type\\\" class=\\\"control-label\\\">Type</label>\\r\\n                           <input type=\\\"text\\\" name=\\\"type\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"selectedEntity.type\\\" />\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"brand\\\" class=\\\"control-label\\\">Brand</label>\\r\\n                           <input type=\\\"text\\\" name=\\\"brand\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"selectedEntity.brand\\\" />\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"model\\\" class=\\\"control-label\\\">Model</label>\\r\\n                           <input type=\\\"text\\\" name=\\\"model\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"selectedEntity.model\\\" />\\r\\n                        </div>\\r\\n                     </div>\\r\\n                  </div>\\r\\n               </div>\\r\\n               <div class=\\\"panel panel-default\\\">\\r\\n                  <div class=\\\"panel-heading\\\">\\r\\n                     <h4 class=\\\"panel-title\\\">\\r\\n                        <a data-toggle=\\\"collapse\\\" data-parent=\\\"#chamberAccordion\\\" href=\\\"#chamberInfo\\\">Chamber Information</a>\\r\\n                     </h4>\\r\\n                  </div>\\r\\n                  <div id=\\\"chamberInfo\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                     <div class=\\\"panel-body\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"category\\\" class=\\\"control-label\\\">Category</label>\\r\\n                           <input type=\\\"text\\\" name=\\\"category\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"selectedEntity.chamberCategory\\\" />\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"closureType\\\" class=\\\"control-label\\\">Closure Type</label>\\r\\n                           <input type=\\\"text\\\" name=\\\"closureType\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"selectedEntity.chamberClosureType\\\" />\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"spliceTrayCount\\\" class=\\\"control-label\\\">Splice Tray Count</label>\\r\\n                           <input type=\\\"text\\\" name=\\\"spliceTrayCount\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"selectedEntity.spliceTrayCount\\\" />\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"isBuried\\\" class=\\\"control-label\\\" style=\\\"width:100%\\\">&nbsp;</label>\\r\\n                           <mat-checkbox name=\\\"isBuried\\\" [(ngModel)]=\\\"selectedEntity.isBuried\\\" [checked]=\\\"selectedEntity.isBuried\\\">Is Buried</mat-checkbox>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                  </div>\\r\\n               </div>\\r\\n               <div class=\\\"panel panel-default\\\">\\r\\n                  <div class=\\\"panel-heading\\\">\\r\\n                     <h4 class=\\\"panel-title\\\">\\r\\n                        <a data-toggle=\\\"collapse\\\" data-parent=\\\"#chamberAccordion\\\" href=\\\"#chamberLoopInfo\\\">Loop Information</a>\\r\\n                     </h4>\\r\\n                  </div>\\r\\n                  <div id=\\\"chamberLoopInfo\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                     <div class=\\\"panel-body\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"category\\\" class=\\\"control-label\\\">Loop Length</label>\\r\\n                           <input type=\\\"text\\\" name=\\\"category\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"selectedEntity.loopLength\\\" />\\r\\n                        </div>\\r\\n\\r\\n                     </div>\\r\\n                  </div>\\r\\n               </div>\\r\\n            </div>\\r\\n         </div>\\r\\n         <div *ngIf=\\\"selectedEntity?.entityType == 'Pole'\\\">\\r\\n            <div class=\\\"panel-group\\\" id=\\\"poleAccordion\\\">\\r\\n               <div class=\\\"panel panel-default\\\">\\r\\n                  <div class=\\\"panel-heading\\\">\\r\\n                     <h4 class=\\\"panel-title\\\">\\r\\n                        <a data-toggle=\\\"collapse\\\" data-parent=\\\"#poleAccordion\\\" href=\\\"#pole_info\\\">General Information</a>\\r\\n                     </h4>\\r\\n                  </div>\\r\\n                  <div id=\\\"pole_info\\\" class=\\\"panel-collapse collapse in\\\">\\r\\n                     <div class=\\\"panel-body\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"name\\\" class=\\\"control-label\\\">Name <span style=\\\"color:red;\\\">*</span></label>\\r\\n                           <input type=\\\"text\\\" name=\\\"name\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"selectedEntity.name\\\" />\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"code\\\" class=\\\"control-label\\\">Code <span style=\\\"color:red;\\\">*</span></label>\\r\\n                           <input type=\\\"text\\\" name=\\\"code\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"selectedEntity.code\\\" readonly />\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"coordinates\\\" class=\\\"control-label\\\">Coordinates(Lng,Lat) </label>\\r\\n                           <input type=\\\"text\\\" class=\\\"form-control input-sm\\\" name=\\\"coordinates\\\" readonly value=\\\"{{selectedEntity.geometry.coordinates[0]}}, {{selectedEntity.geometry.coordinates[1]}}\\\">\\r\\n                        </div>\\r\\n                     </div>\\r\\n                  </div>\\r\\n               </div>\\r\\n               <div class=\\\"panel panel-default\\\">\\r\\n                  <div class=\\\"panel-heading\\\">\\r\\n                     <h4 class=\\\"panel-title\\\">\\r\\n                        <a data-toggle=\\\"collapse\\\" data-parent=\\\"#poleAccordion\\\" href=\\\"#pole_make\\\">Make</a>\\r\\n                     </h4>\\r\\n                  </div>\\r\\n                  <div id=\\\"pole_make\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                     <div class=\\\"panel-body\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"type\\\" class=\\\"control-label\\\">Type</label>\\r\\n                           <input type=\\\"text\\\" name=\\\"type\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"selectedEntity.type\\\" />\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"brand\\\" class=\\\"control-label\\\">Brand</label>\\r\\n                           <input type=\\\"text\\\" name=\\\"brand\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"selectedEntity.brand\\\" />\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"model\\\" class=\\\"control-label\\\">Model</label>\\r\\n                           <input type=\\\"text\\\" name=\\\"model\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"selectedEntity.model\\\" />\\r\\n                        </div>\\r\\n                     </div>\\r\\n                  </div>\\r\\n               </div>\\r\\n               <div class=\\\"panel panel-default\\\">\\r\\n                  <div class=\\\"panel-heading\\\">\\r\\n                     <h4 class=\\\"panel-title\\\">\\r\\n                        <a data-toggle=\\\"collapse\\\" data-parent=\\\"#poleAccordion\\\" href=\\\"#poleInfo\\\">Pole Information</a>\\r\\n                     </h4>\\r\\n                  </div>\\r\\n                  <div id=\\\"poleInfo\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                     <div class=\\\"panel-body\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"height\\\" class=\\\"control-label\\\">Height</label>\\r\\n                           <input type=\\\"number\\\" name=\\\"height\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"selectedEntity.poleHeight\\\" />\\r\\n                        </div>\\r\\n                     </div>\\r\\n                  </div>\\r\\n               </div>\\r\\n               <div class=\\\"panel panel-default\\\">\\r\\n                  <div class=\\\"panel-heading\\\">\\r\\n                     <h4 class=\\\"panel-title\\\">\\r\\n                        <a data-toggle=\\\"collapse\\\" data-parent=\\\"#chamberAccordion\\\" href=\\\"#poleLoopInfo\\\">Loop Information</a>\\r\\n                     </h4>\\r\\n                  </div>\\r\\n                  <div id=\\\"poleLoopInfo\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                     <div class=\\\"panel-body\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"category\\\" class=\\\"control-label\\\">Loop Length</label>\\r\\n                           <input type=\\\"text\\\" name=\\\"category\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"selectedEntity.loopLength\\\" />\\r\\n                        </div>\\r\\n                     </div>\\r\\n                  </div>\\r\\n               </div>\\r\\n            </div>\\r\\n         </div>\\r\\n         <div *ngIf=\\\"selectedEntity?.entityType == 'Splitter'\\\">\\r\\n            <div class=\\\"panel-group\\\" id=\\\"splitterAccordion\\\">\\r\\n               <div class=\\\"panel panel-default\\\">\\r\\n                  <div class=\\\"panel-heading\\\">\\r\\n                     <h4 class=\\\"panel-title\\\">\\r\\n                        <a data-toggle=\\\"collapse\\\" data-parent=\\\"#splitterAccordion\\\" href=\\\"#spt_info\\\">General Information</a>\\r\\n                     </h4>\\r\\n                  </div>\\r\\n                  <div id=\\\"spt_info\\\" class=\\\"panel-collapse collapse in\\\">\\r\\n                     <div class=\\\"panel-body\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"name\\\" class=\\\"control-label\\\">Name <span style=\\\"color:red;\\\">*</span></label>\\r\\n                           <input type=\\\"text\\\" name=\\\"name\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"selectedEntity.name\\\" />\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"code\\\" class=\\\"control-label\\\">Code <span style=\\\"color:red;\\\">*</span></label>\\r\\n                           <input type=\\\"text\\\" name=\\\"code\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"selectedEntity.code\\\" readonly />\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"coordinates\\\" class=\\\"control-label\\\">Coordinates(Lng,Lat) </label>\\r\\n                           <input type=\\\"text\\\" class=\\\"form-control input-sm\\\" name=\\\"coordinates\\\" readonly value=\\\"{{selectedEntity.geometry.coordinates[0]}}, {{selectedEntity.geometry.coordinates[1]}}\\\">\\r\\n                        </div>\\r\\n                     </div>\\r\\n                  </div>\\r\\n               </div>\\r\\n               <div class=\\\"panel panel-default\\\">\\r\\n                  <div class=\\\"panel-heading\\\">\\r\\n                     <h4 class=\\\"panel-title\\\">\\r\\n                        <a data-toggle=\\\"collapse\\\" data-parent=\\\"#splitterAccordion\\\" href=\\\"#spt_make\\\">Make</a>\\r\\n                     </h4>\\r\\n                  </div>\\r\\n                  <div id=\\\"spt_make\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                     <div class=\\\"panel-body\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"type\\\" class=\\\"control-label\\\">Type</label>\\r\\n                           <input type=\\\"text\\\" name=\\\"type\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"selectedEntity.type\\\" />\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"brand\\\" class=\\\"control-label\\\">Brand</label>\\r\\n                           <input type=\\\"text\\\" name=\\\"brand\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"selectedEntity.brand\\\" />\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"model\\\" class=\\\"control-label\\\">Model</label>\\r\\n                           <input type=\\\"text\\\" name=\\\"model\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"selectedEntity.model\\\" />\\r\\n                        </div>\\r\\n                     </div>\\r\\n                  </div>\\r\\n               </div>\\r\\n               <div class=\\\"panel panel-default\\\">\\r\\n                  <div class=\\\"panel-heading\\\">\\r\\n                     <h4 class=\\\"panel-title\\\">\\r\\n                        <a data-toggle=\\\"collapse\\\" data-parent=\\\"#splitterAccordion\\\" href=\\\"#sptInfo\\\">Splitter Information</a>\\r\\n                     </h4>\\r\\n                  </div>\\r\\n                  <div id=\\\"sptInfo\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                     <div class=\\\"panel-body\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"splitterRatio\\\" class=\\\"control-label\\\">Splitter Ratio</label>\\r\\n                           <input type=\\\"text\\\" name=\\\"splitterRatio\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"selectedEntity.splitterRatio\\\" />\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"lossValue\\\" class=\\\"control-label\\\">Loss Value</label>\\r\\n                           <input type=\\\"number\\\" name=\\\"lossValue\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"selectedEntity.lossValue\\\" />\\r\\n                        </div>\\r\\n                     </div>\\r\\n                  </div>\\r\\n               </div>\\r\\n               <div class=\\\"panel panel-default\\\">\\r\\n                  <div class=\\\"panel-heading\\\">\\r\\n                     <h4 class=\\\"panel-title\\\">\\r\\n                        <a data-toggle=\\\"collapse\\\" data-parent=\\\"#splitterAccordion\\\" href=\\\"#sptInfo1\\\">Splitter Information</a>\\r\\n                     </h4>\\r\\n                  </div>\\r\\n                  <div id=\\\"sptInfo1\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                     <div class=\\\"panel-body\\\" style=\\\"height:200px; overflow:scroll;\\\">\\r\\n                        <table class=\\\"table table-bordered table-striped\\\">\\r\\n                           <thead>\\r\\n                              <tr>\\r\\n                                 <th>A-End</th>\\r\\n                                 <th style=\\\"width: 202px;\\\">B-End</th>\\r\\n                              </tr>\\r\\n                           </thead>\\r\\n                           <tbody>\\r\\n                              <ng-container *ngIf='this.filterResult && this.filterResult.length > 0'>\\r\\n                                 <tr *ngFor='let type of this.filterResult; let rowIndex = index;'>\\r\\n                                    <td (mouseover)=\\\"onspliterHover(entityType)\\\" (mouseleave)=\\\"onLeave()\\\">{{entityType}}</td>\\r\\n                                    <td (mouseover)=\\\"onHover(this.filterResult[rowIndex].coordinates)\\\" (mouseleave)=\\\"onLeave()\\\">\\r\\n                                       <ul style=\\\"list-style-type: none;\\\"><li>{{type.levelName}}<span>{{rowIndex}}</span></li></ul>\\r\\n                                    </td>\\r\\n                                 </tr>\\r\\n\\r\\n                              </ng-container>\\r\\n                           </tbody>\\r\\n                        </table>\\r\\n                     </div>\\r\\n                  </div>\\r\\n               </div>\\r\\n            </div>\\r\\n         </div>\\r\\n         <div *ngIf=\\\"selectedEntity?.entityType == 'Homepass'\\\">\\r\\n            <div class=\\\"panel-group\\\" id=\\\"homepassAccordion\\\">\\r\\n               <div class=\\\"panel panel-default\\\">\\r\\n                  <div class=\\\"panel-heading\\\">\\r\\n                     <h4 class=\\\"panel-title\\\">\\r\\n                        <a data-toggle=\\\"collapse\\\" data-parent=\\\"#homepassAccordion\\\" href=\\\"#hp_info\\\">General Information</a>\\r\\n                     </h4>\\r\\n                  </div>\\r\\n                  <div id=\\\"hp_info\\\" class=\\\"panel-collapse collapse in\\\">\\r\\n                     <div class=\\\"panel-body\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"name\\\" class=\\\"control-label\\\">Name <span style=\\\"color:red;\\\">*</span></label>\\r\\n                           <input type=\\\"text\\\" class=\\\"form-control input-sm\\\" name=\\\"name\\\" [(ngModel)]=\\\"selectedEntity.name\\\">\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"code\\\" class=\\\"control-label\\\">Code <span style=\\\"color:red;\\\">*</span></label>\\r\\n                           <input type=\\\"text\\\" class=\\\"form-control input-sm\\\" name=\\\"code\\\" [(ngModel)]=\\\"selectedEntity.code\\\" readonly>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"coordinates\\\" class=\\\"control-label\\\">Coordinates(Lng,Lat) </label>\\r\\n                           <input type=\\\"text\\\" class=\\\"form-control input-sm\\\" name=\\\"coordinates\\\" value=\\\"{{selectedEntity.geometry.coordinates[0]}}, {{selectedEntity.geometry.coordinates[1]}}\\\">\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\" *ngIf=\\\"selectedEntity.area\\\">\\r\\n                           <label for=\\\"area\\\" class=\\\"control-label\\\">Coordinates (Polygon) </label>\\r\\n                           <textarea type=\\\"text\\\" class=\\\"form-control input-sm\\\" name=\\\"area\\\" rows=\\\"5\\\" readonly value=\\\"{{stringify(selectedEntity.area.coordinates)}}\\\"></textarea>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"type\\\" class=\\\"control-label\\\">Type </label>\\r\\n                           <input type=\\\"text\\\" class=\\\"form-control input-sm\\\" name=\\\"description\\\" [(ngModel)]=\\\"selectedEntity.type\\\">\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"description\\\" class=\\\"control-label\\\">Description </label>\\r\\n                           <input type=\\\"text\\\" class=\\\"form-control input-sm\\\" name=\\\"description\\\" [(ngModel)]=\\\"selectedEntity.description\\\">\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"connections\\\" class=\\\"control-label\\\">Connections </label>\\r\\n                           <input type=\\\"number\\\" class=\\\"form-control input-sm\\\" name=\\\"connections\\\" [(ngModel)]=\\\"selectedEntity.connections\\\">\\r\\n                        </div>\\r\\n                     </div>\\r\\n                  </div>\\r\\n               </div>\\r\\n               <div class=\\\"panel panel-default\\\">\\r\\n                  <div class=\\\"panel-heading\\\">\\r\\n                     <h4 class=\\\"panel-title\\\">\\r\\n                        <a data-toggle=\\\"collapse\\\" data-parent=\\\"#splitterAccordion\\\" href=\\\"#spt_make\\\">Make</a>\\r\\n                     </h4>\\r\\n                  </div>\\r\\n                  <div id=\\\"spt_make\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                     <div class=\\\"panel-body\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"type\\\" class=\\\"control-label\\\">Type</label>\\r\\n                           <input type=\\\"text\\\" name=\\\"type\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"selectedEntity.type\\\" />\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"brand\\\" class=\\\"control-label\\\">Brand</label>\\r\\n                           <input type=\\\"text\\\" name=\\\"brand\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"selectedEntity.brand\\\" />\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"model\\\" class=\\\"control-label\\\">Model</label>\\r\\n                           <input type=\\\"text\\\" name=\\\"model\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"selectedEntity.model\\\" />\\r\\n                        </div>\\r\\n                     </div>\\r\\n                  </div>\\r\\n               </div>\\r\\n               <div class=\\\"panel panel-default\\\">\\r\\n                  <div class=\\\"panel-heading\\\">\\r\\n                     <h4 class=\\\"panel-title\\\">\\r\\n                        <a data-toggle=\\\"collapse\\\" data-parent=\\\"#splitterAccordion\\\" href=\\\"#sptInfo\\\">Splitter Information</a>\\r\\n                     </h4>\\r\\n                  </div>\\r\\n                  <div id=\\\"sptInfo\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                     <div class=\\\"panel-body\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"splitterRatio\\\" class=\\\"control-label\\\">Splitter Ratio</label>\\r\\n                           <input type=\\\"text\\\" name=\\\"splitterRatio\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"selectedEntity.splitterRatio\\\" />\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"lossValue\\\" class=\\\"control-label\\\">Loss Value</label>\\r\\n                           <input type=\\\"text\\\" name=\\\"lossValue\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"selectedEntity.lossValue\\\" />\\r\\n                        </div>\\r\\n                     </div>\\r\\n                  </div>\\r\\n               </div>\\r\\n            </div>\\r\\n         </div>\\r\\n\\r\\n         <div *ngIf=\\\"selectedEntity?.entityType == 'SpliceClosure'\\\">\\r\\n            <div class=\\\"panel-group\\\" id=\\\"spliceclosureAccordion\\\">\\r\\n               <div class=\\\"panel panel-default\\\">\\r\\n                  <div class=\\\"panel-heading\\\">\\r\\n                     <h4 class=\\\"panel-title\\\">\\r\\n                        <a data-toggle=\\\"collapse\\\" data-parent=\\\"#spliceclosureAccordion\\\" href=\\\"#spc_info\\\">General Information</a>\\r\\n                     </h4>\\r\\n                  </div>\\r\\n                  <div id=\\\"spc_info\\\" class=\\\"panel-collapse collapse in\\\">\\r\\n                     <div class=\\\"panel-body\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"name\\\" class=\\\"control-label\\\">Name <span style=\\\"color:red;\\\">*</span></label>\\r\\n                           <input type=\\\"text\\\" name=\\\"name\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"selectedEntity.name\\\" />\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"code\\\" class=\\\"control-label\\\">Code <span style=\\\"color:red;\\\">*</span></label>\\r\\n                           <input type=\\\"text\\\" name=\\\"code\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"selectedEntity.code\\\" readonly />\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"coordinates\\\" class=\\\"control-label\\\">Coordinates(Lng,Lat) </label>\\r\\n                           <input type=\\\"text\\\" class=\\\"form-control input-sm\\\" name=\\\"coordinates\\\" readonly value=\\\"{{selectedEntity.geometry.coordinates[0]}}, {{selectedEntity.geometry.coordinates[1]}}\\\">\\r\\n                        </div>\\r\\n                     </div>\\r\\n                  </div>\\r\\n               </div>\\r\\n               <div class=\\\"panel panel-default\\\">\\r\\n                  <div class=\\\"panel-heading\\\">\\r\\n                     <h4 class=\\\"panel-title\\\">\\r\\n                        <a data-toggle=\\\"collapse\\\" data-parent=\\\"#spliceclosureAccordion\\\" href=\\\"#spc_make\\\">Make</a>\\r\\n                     </h4>\\r\\n                  </div>\\r\\n                  <div id=\\\"spc_make\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                     <div class=\\\"panel-body\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"type\\\" class=\\\"control-label\\\">Type</label>\\r\\n                           <input type=\\\"text\\\" name=\\\"type\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"selectedEntity.type\\\" />\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"brand\\\" class=\\\"control-label\\\">Brand</label>\\r\\n                           <input type=\\\"text\\\" name=\\\"brand\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"selectedEntity.brand\\\" />\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"model\\\" class=\\\"control-label\\\">Model</label>\\r\\n                           <input type=\\\"text\\\" name=\\\"model\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"selectedEntity.model\\\" />\\r\\n                        </div>\\r\\n                     </div>\\r\\n                  </div>\\r\\n               </div>\\r\\n               <div class=\\\"panel panel-default\\\">\\r\\n                  <div class=\\\"panel-heading\\\">\\r\\n                     <h4 class=\\\"panel-title\\\">\\r\\n                        <a data-toggle=\\\"collapse\\\" data-parent=\\\"#spliceclosureAccordion\\\" href=\\\"#spcInfo\\\">SpliceClosure Information</a>\\r\\n                     </h4>\\r\\n                  </div>\\r\\n                  <div id=\\\"spcInfo\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                     <div class=\\\"panel-body\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"splitterRatio\\\" class=\\\"control-label\\\">Port No</label>\\r\\n                           <input type=\\\"number\\\" name=\\\"splitterRatio\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"selectedEntity.noOfPorts\\\" />\\r\\n                        </div>\\r\\n                        <!--<div class=\\\"form-group\\\">\\r\\n                     <div class=\\\"panel-body\\\">\\r\\n                        <div class=\\\"col-sm-11\\\">\\r\\n                           <mat-slider name=\\\"zoomLevel\\\" thumbLabel step=\\\"1\\\" min=\\\"0\\\" max=\\\"21\\\" style=\\\"width:100%\\\" [(ngModel)]=\\\"selectedEntity.zoomLevel\\\"></mat-slider>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-sm-1\\\" style=\\\"padding-top: 7px;\\\">\\r\\n                           <input type=\\\"number\\\" min=\\\"0\\\" max=\\\"21\\\" class=\\\"form-control input-sm\\\" name=\\\"zoom\\\" [(ngModel)]=\\\"selectedEntity.zoomLevel\\\">\\r\\n                        </div>\\r\\n                     </div>\\r\\n                  </div>-->\\r\\n                     </div>\\r\\n                  </div>\\r\\n               </div>\\r\\n            </div>\\r\\n         </div>\\r\\n         <div *ngIf=\\\"selectedEntity?.entityType  == 'PoP'\\\">\\r\\n            <div class=\\\"panel-group\\\" id=\\\"PopAccordion\\\">\\r\\n               <div class=\\\"panel panel-default\\\">\\r\\n                  <div class=\\\"panel-heading\\\">\\r\\n                     <h4 class=\\\"panel-title\\\">\\r\\n                        <a data-toggle=\\\"collapse\\\" data-parent=\\\"#PopAccordion\\\" href=\\\"#pop_info\\\">General Information</a>\\r\\n                     </h4>\\r\\n                  </div>\\r\\n                  <div id=\\\"pop_info\\\" class=\\\"panel-collapse collapse in\\\">\\r\\n                     <div class=\\\"panel-body\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"name\\\" class=\\\"control-label\\\">Name <span style=\\\"color:red;\\\">*</span></label>\\r\\n                           <input type=\\\"text\\\" name=\\\"name\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"selectedEntity.name\\\" />\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"code\\\" class=\\\"control-label\\\">Code <span style=\\\"color:red;\\\">*</span></label>\\r\\n                           <input type=\\\"text\\\" name=\\\"code\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"selectedEntity.code\\\" readonly />\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"coordinates\\\" class=\\\"control-label\\\">Coordinates(Lng,Lat) </label>\\r\\n                           <input type=\\\"text\\\" class=\\\"form-control input-sm\\\" name=\\\"coordinates\\\" readonly value=\\\"{{selectedEntity.geometry.coordinates[0]}}, {{selectedEntity.geometry.coordinates[1]}}\\\">\\r\\n                        </div>\\r\\n                     </div>\\r\\n                  </div>\\r\\n               </div>\\r\\n               <div class=\\\"panel panel-default\\\">\\r\\n                  <div class=\\\"panel-heading\\\">\\r\\n                     <h4 class=\\\"panel-title\\\">\\r\\n                        <a data-toggle=\\\"collapse\\\" data-parent=\\\"#spliceclosureAccordion\\\" href=\\\"#pop_make\\\">Make</a>\\r\\n                     </h4>\\r\\n                  </div>\\r\\n                  <div id=\\\"pop_make\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                     <div class=\\\"panel-body\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"type\\\" class=\\\"control-label\\\">Pop Type</label>\\r\\n                           <input type=\\\"text\\\" name=\\\"type\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"selectedEntity.type\\\" />\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"brand\\\" class=\\\"control-label\\\">Pop Brand</label>\\r\\n                           <input type=\\\"text\\\" name=\\\"brand\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"selectedEntity.brand\\\" />\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"model\\\" class=\\\"control-label\\\">Pop Model</label>\\r\\n                           <input type=\\\"text\\\" name=\\\"model\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"selectedEntity.model\\\" />\\r\\n                        </div>\\r\\n                     </div>\\r\\n                  </div>\\r\\n               </div>\\r\\n               <!--<div class=\\\"panel panel-default\\\">\\r\\n            <div class=\\\"panel-heading\\\">\\r\\n               <h4 class=\\\"panel-title\\\">\\r\\n                  <a data-toggle=\\\"collapse\\\" data-parent=\\\"#spliceclosureAccordion\\\" href=\\\"#popInfo\\\">Pop Information</a>\\r\\n               </h4>\\r\\n            </div>\\r\\n            <div id=\\\"popInfo\\\" class=\\\"panel-collapse collapse\\\">\\r\\n               <div class=\\\"panel-body\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                     <label for=\\\"splitterRatio\\\" class=\\\"control-label\\\">Port No</label>\\r\\n                     <input type=\\\"number\\\" name=\\\"splitterRatio\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"selectedEntity.noOfPorts\\\" />\\r\\n                  </div>\\r\\n                  <div class=\\\"form-group\\\">\\r\\n            </div>\\r\\n               </div>\\r\\n            </div>\\r\\n         </div>-->\\r\\n            </div>\\r\\n         </div>\\r\\n         <div *ngIf=\\\"selectedEntity?.entityType == 'Duct'\\\">\\r\\n            <div class=\\\"panel-group\\\" id=\\\"DuctAccordion\\\">\\r\\n               <div class=\\\"panel panel-default\\\">\\r\\n                  <div class=\\\"panel-heading\\\">\\r\\n                     <h4 class=\\\"panel-title\\\">\\r\\n                        <a data-toggle=\\\"collapse\\\" data-parent=\\\"#DuctAccordion\\\" href=\\\"#duct_info\\\">General Information</a>\\r\\n                     </h4>\\r\\n                  </div>\\r\\n                  <div id=\\\"DuctAccordion\\\" class=\\\"panel-collapse collapse in\\\">\\r\\n                     <div class=\\\"panel-body\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"name\\\" class=\\\"control-label\\\">Name <span style=\\\"color:red;\\\">*</span></label>\\r\\n                           <input type=\\\"text\\\" name=\\\"name\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"selectedEntity.name\\\" />\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"code\\\" class=\\\"control-label\\\">Code <span style=\\\"color:red;\\\">*</span></label>\\r\\n                           <input type=\\\"text\\\" name=\\\"code\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"selectedEntity.code\\\" readonly />\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"coordinates\\\" class=\\\"control-label\\\">Coordinates(Lng,Lat) </label>\\r\\n                           <textarea type=\\\"text\\\" rows=\\\"3\\\" class=\\\"form-control input-sm\\\" name=\\\"coordinates\\\" readonly value=\\\"{{selectedEntity.geometry.coordinates}}\\\"></textarea>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                  </div>\\r\\n               </div>\\r\\n               <div class=\\\"panel panel-default\\\">\\r\\n                  <div class=\\\"panel-heading\\\">\\r\\n                     <h4 class=\\\"panel-title\\\">\\r\\n                        <a data-toggle=\\\"collapse\\\" data-parent=\\\"#cableAccordion\\\" href=\\\"#duct_make\\\">Make</a>\\r\\n                     </h4>\\r\\n                  </div>\\r\\n                  <div id=\\\"duct_make\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                     <div class=\\\"panel-body\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"type\\\" class=\\\"control-label\\\">Type</label>\\r\\n                           <input type=\\\"text\\\" name=\\\"type\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"selectedEntity.type\\\" />\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"brand\\\" class=\\\"control-label\\\">Brand</label>\\r\\n                           <input type=\\\"text\\\" name=\\\"brand\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"selectedEntity.brand\\\" />\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"model\\\" class=\\\"control-label\\\">Model</label>\\r\\n                           <input type=\\\"text\\\" name=\\\"model\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"selectedEntity.model\\\" />\\r\\n                        </div>\\r\\n                     </div>\\r\\n                  </div>\\r\\n               </div>\\r\\n               <div class=\\\"panel panel-default\\\">\\r\\n                  <div class=\\\"panel-heading\\\">\\r\\n                     <h4 class=\\\"panel-title\\\">\\r\\n                        <a data-toggle=\\\"collapse\\\" data-parent=\\\"#cableAccordion\\\" href=\\\"#ductInfo\\\">Duct Information</a>\\r\\n                     </h4>\\r\\n                  </div>\\r\\n                  <div id=\\\"ductInfo\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                     <div class=\\\"panel-body\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"aLocation\\\" class=\\\"control-label\\\">A Location</label>\\r\\n                           <input type=\\\"text\\\" name=\\\"aLocation\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"selectedEntity.aLocation\\\" />\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"bLocation\\\" class=\\\"control-label\\\">B Location</label>\\r\\n                           <input type=\\\"text\\\" name=\\\"bLocation\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"selectedEntity.aLocation\\\" />\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"measuredLength\\\" class=\\\"control-label\\\">Measured Length</label>\\r\\n                           <input type=\\\"text\\\" name=\\\"measuredLength\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"selectedEntity.measuredLength\\\" />\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"calculatedLength\\\" class=\\\"control-label\\\">Calculated Length</label>\\r\\n                           <input type=\\\"text\\\" name=\\\"calculatedLength\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"selectedEntity.calculatedLength\\\" />\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"noOfTubes\\\" class=\\\"control-label\\\">No Of Tubes</label>\\r\\n                           <input type=\\\"text\\\" name=\\\"noOfTubes\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"selectedEntity.noOfTubes\\\" />\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"corePerTube\\\" class=\\\"control-label\\\">Core Per Tube</label>\\r\\n                           <input type=\\\"text\\\" name=\\\"corePerTube\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"selectedEntity.corePerTube\\\" />\\r\\n                        </div>\\r\\n                     </div>\\r\\n                  </div>\\r\\n               </div>\\r\\n            </div>\\r\\n         </div>\\r\\n         <div *ngIf=\\\"selectedEntity?.entityType == 'MicroDuct'\\\">\\r\\n            <div class=\\\"panel-group\\\" id=\\\"DuctAccordion\\\">\\r\\n               <div class=\\\"panel panel-default\\\">\\r\\n                  <div class=\\\"panel-heading\\\">\\r\\n                     <h4 class=\\\"panel-title\\\">\\r\\n                        <a data-toggle=\\\"collapse\\\" data-parent=\\\"#MicroDuctAccordion\\\" href=\\\"#microduct_info\\\">General Information</a>\\r\\n                     </h4>\\r\\n                  </div>\\r\\n                  <div id=\\\"MicroDuctAccordion\\\" class=\\\"panel-collapse collapse in\\\">\\r\\n                     <div class=\\\"panel-body\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"name\\\" class=\\\"control-label\\\">Name <span style=\\\"color:red;\\\">*</span></label>\\r\\n                           <input type=\\\"text\\\" name=\\\"name\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"selectedEntity.name\\\" />\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"code\\\" class=\\\"control-label\\\">Code <span style=\\\"color:red;\\\">*</span></label>\\r\\n                           <input type=\\\"text\\\" name=\\\"code\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"selectedEntity.code\\\" readonly />\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"coordinates\\\" class=\\\"control-label\\\">Coordinates(Lng,Lat) </label>\\r\\n                           <textarea type=\\\"text\\\" rows=\\\"3\\\" class=\\\"form-control input-sm\\\" name=\\\"coordinates\\\" readonly value=\\\"{{selectedEntity.geometry.coordinates}}\\\"></textarea>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                  </div>\\r\\n               </div>\\r\\n               <div class=\\\"panel panel-default\\\">\\r\\n                  <div class=\\\"panel-heading\\\">\\r\\n                     <h4 class=\\\"panel-title\\\">\\r\\n                        <a data-toggle=\\\"collapse\\\" data-parent=\\\"#cableAccordion\\\" href=\\\"#microduct_make\\\">Make</a>\\r\\n                     </h4>\\r\\n                  </div>\\r\\n                  <div id=\\\"microduct_make\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                     <div class=\\\"panel-body\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"type\\\" class=\\\"control-label\\\">Type</label>\\r\\n                           <input type=\\\"text\\\" name=\\\"type\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"selectedEntity.type\\\" />\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"brand\\\" class=\\\"control-label\\\">Brand</label>\\r\\n                           <input type=\\\"text\\\" name=\\\"brand\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"selectedEntity.brand\\\" />\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"model\\\" class=\\\"control-label\\\">Model</label>\\r\\n                           <input type=\\\"text\\\" name=\\\"model\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"selectedEntity.model\\\" />\\r\\n                        </div>\\r\\n                     </div>\\r\\n                  </div>\\r\\n               </div>\\r\\n               <div class=\\\"panel panel-default\\\">\\r\\n                  <div class=\\\"panel-heading\\\">\\r\\n                     <h4 class=\\\"panel-title\\\">\\r\\n                        <a data-toggle=\\\"collapse\\\" data-parent=\\\"#cableAccordion\\\" href=\\\"#microductInfo\\\">Micro Duct Information</a>\\r\\n                     </h4>\\r\\n                  </div>\\r\\n                  <div id=\\\"microductInfo\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                     <div class=\\\"panel-body\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"aLocation\\\" class=\\\"control-label\\\">A Location</label>\\r\\n                           <input type=\\\"text\\\" name=\\\"aLocation\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"selectedEntity.aLocation\\\" />\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"bLocation\\\" class=\\\"control-label\\\">B Location</label>\\r\\n                           <input type=\\\"text\\\" name=\\\"bLocation\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"selectedEntity.aLocation\\\" />\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"measuredLength\\\" class=\\\"control-label\\\">Measured Length</label>\\r\\n                           <input type=\\\"text\\\" name=\\\"measuredLength\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"selectedEntity.measuredLength\\\" />\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"calculatedLength\\\" class=\\\"control-label\\\">Calculated Length</label>\\r\\n                           <input type=\\\"text\\\" name=\\\"calculatedLength\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"selectedEntity.calculatedLength\\\" />\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"noOfTubes\\\" class=\\\"control-label\\\">No Of Tubes</label>\\r\\n                           <input type=\\\"text\\\" name=\\\"noOfTubes\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"selectedEntity.noOfTubes\\\" />\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"corePerTube\\\" class=\\\"control-label\\\">Core Per Tube</label>\\r\\n                           <input type=\\\"text\\\" name=\\\"corePerTube\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"selectedEntity.corePerTube\\\" />\\r\\n                        </div>\\r\\n                     </div>\\r\\n                  </div>\\r\\n               </div>\\r\\n            </div>\\r\\n         </div>\\r\\n         <div *ngIf=\\\"selectedEntity?.entityType == 'ODF'\\\">\\r\\n            <div class=\\\"panel-group\\\" id=\\\"ODFAccordion\\\">\\r\\n               <div class=\\\"panel panel-default\\\">\\r\\n                  <div class=\\\"panel-heading\\\">\\r\\n                     <h4 class=\\\"panel-title\\\">\\r\\n                        <a data-toggle=\\\"collapse\\\" data-parent=\\\"#ODFAccordion\\\" href=\\\"#odf_info\\\">General Information</a>\\r\\n                     </h4>\\r\\n                  </div>\\r\\n                  <div id=\\\"odf_info\\\" class=\\\"panel-collapse collapse in\\\">\\r\\n                     <div class=\\\"panel-body\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"name\\\" class=\\\"control-label\\\">Name <span style=\\\"color:red;\\\">*</span></label>\\r\\n                           <input type=\\\"text\\\" name=\\\"name\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"selectedEntity.name\\\" />\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"code\\\" class=\\\"control-label\\\">Code <span style=\\\"color:red;\\\">*</span></label>\\r\\n                           <input type=\\\"text\\\" name=\\\"code\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"selectedEntity.code\\\" readonly />\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"coordinates\\\" class=\\\"control-label\\\">Coordinates(Lng,Lat) </label>\\r\\n                           <input type=\\\"text\\\" class=\\\"form-control input-sm\\\" name=\\\"coordinates\\\" readonly value=\\\"{{selectedEntity.geometry.coordinates[0]}}, {{selectedEntity.geometry.coordinates[1]}}\\\">\\r\\n                        </div>\\r\\n                     </div>\\r\\n                  </div>\\r\\n               </div>\\r\\n               <div class=\\\"panel panel-default\\\">\\r\\n                  <div class=\\\"panel-heading\\\">\\r\\n                     <h4 class=\\\"panel-title\\\">\\r\\n                        <a data-toggle=\\\"collapse\\\" data-parent=\\\"#ODFAccordion\\\" href=\\\"#odf_make\\\">Make</a>\\r\\n                     </h4>\\r\\n                  </div>\\r\\n                  <div id=\\\"odf_make\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                     <div class=\\\"panel-body\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"type\\\" class=\\\"control-label\\\">Type</label>\\r\\n                           <input type=\\\"text\\\" name=\\\"type\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"selectedEntity.type\\\" />\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"brand\\\" class=\\\"control-label\\\">Brand</label>\\r\\n                           <input type=\\\"text\\\" name=\\\"brand\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"selectedEntity.brand\\\" />\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"model\\\" class=\\\"control-label\\\">Model</label>\\r\\n                           <input type=\\\"text\\\" name=\\\"model\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"selectedEntity.model\\\" />\\r\\n                        </div>\\r\\n                     </div>\\r\\n                  </div>\\r\\n               </div>\\r\\n               <div class=\\\"panel panel-default\\\">\\r\\n                  <div class=\\\"panel-heading\\\">\\r\\n                     <h4 class=\\\"panel-title\\\">\\r\\n                        <a data-toggle=\\\"collapse\\\" data-parent=\\\"#ODFAccordion\\\" href=\\\"#odfInfo\\\">ODF Information</a>\\r\\n                     </h4>\\r\\n                  </div>\\r\\n                  <div id=\\\"odfInfo\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                     <div class=\\\"panel-body\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"category\\\" class=\\\"control-label\\\">Category</label>\\r\\n                           <input type=\\\"text\\\" name=\\\"category\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"selectedEntity.chamberCategory\\\" />\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"closureType\\\" class=\\\"control-label\\\">Closure Type</label>\\r\\n                           <input type=\\\"text\\\" name=\\\"closureType\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"selectedEntity.chamberClosureType\\\" />\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"spliceTrayCount\\\" class=\\\"control-label\\\">Splice Tray Count</label>\\r\\n                           <input type=\\\"text\\\" name=\\\"spliceTrayCount\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"selectedEntity.spliceTrayCount\\\" />\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"isBuried\\\" class=\\\"control-label\\\" style=\\\"width:100%\\\">&nbsp;</label>\\r\\n                           <mat-checkbox name=\\\"isBuried\\\" [(ngModel)]=\\\"selectedEntity.isBuried\\\" [checked]=\\\"selectedEntity.isBuried\\\">Is Buried</mat-checkbox>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                  </div>\\r\\n               </div>\\r\\n            </div>\\r\\n         </div>\\r\\n         <div *ngIf=\\\"selectedEntity?.entityType == 'FAT'\\\">\\r\\n            <div class=\\\"panel-group\\\" id=\\\"FATAccordion\\\">\\r\\n               <div class=\\\"panel panel-default\\\">\\r\\n                  <div class=\\\"panel-heading\\\">\\r\\n                     <h4 class=\\\"panel-title\\\">\\r\\n                        <a data-toggle=\\\"collapse\\\" data-parent=\\\"#FATAccordion\\\" href=\\\"#fat_info\\\">General Information</a>\\r\\n                     </h4>\\r\\n                  </div>\\r\\n                  <div id=\\\"fat_info\\\" class=\\\"panel-collapse collapse in\\\">\\r\\n                     <div class=\\\"panel-body\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"name\\\" class=\\\"control-label\\\">Name <span style=\\\"color:red;\\\">*</span></label>\\r\\n                           <input type=\\\"text\\\" name=\\\"name\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"selectedEntity.name\\\" />\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"code\\\" class=\\\"control-label\\\">Code <span style=\\\"color:red;\\\">*</span></label>\\r\\n                           <input type=\\\"text\\\" name=\\\"code\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"selectedEntity.code\\\" readonly />\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"coordinates\\\" class=\\\"control-label\\\">Coordinates(Lng,Lat) </label>\\r\\n                           <input type=\\\"text\\\" class=\\\"form-control input-sm\\\" name=\\\"coordinates\\\" readonly value=\\\"{{selectedEntity.geometry.coordinates[0]}}, {{selectedEntity.geometry.coordinates[1]}}\\\">\\r\\n                        </div>\\r\\n                     </div>\\r\\n                  </div>\\r\\n               </div>\\r\\n               <div class=\\\"panel panel-default\\\">\\r\\n                  <div class=\\\"panel-heading\\\">\\r\\n                     <h4 class=\\\"panel-title\\\">\\r\\n                        <a data-toggle=\\\"collapse\\\" data-parent=\\\"#FATAccordion\\\" href=\\\"#fat_make\\\">Make</a>\\r\\n                     </h4>\\r\\n                  </div>\\r\\n                  <div id=\\\"fat_make\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                     <div class=\\\"panel-body\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"type\\\" class=\\\"control-label\\\">Type</label>\\r\\n                           <input type=\\\"text\\\" name=\\\"type\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"selectedEntity.type\\\" />\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"brand\\\" class=\\\"control-label\\\">Brand</label>\\r\\n                           <input type=\\\"text\\\" name=\\\"brand\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"selectedEntity.brand\\\" />\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"model\\\" class=\\\"control-label\\\">Model</label>\\r\\n                           <input type=\\\"text\\\" name=\\\"model\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"selectedEntity.model\\\" />\\r\\n                        </div>\\r\\n                     </div>\\r\\n                  </div>\\r\\n               </div>\\r\\n               <div class=\\\"panel panel-default\\\">\\r\\n                  <div class=\\\"panel-heading\\\">\\r\\n                     <h4 class=\\\"panel-title\\\">\\r\\n                        <a data-toggle=\\\"collapse\\\" data-parent=\\\"#FATAccordion\\\" href=\\\"#fatInfo\\\">FAT Information</a>\\r\\n                     </h4>\\r\\n                  </div>\\r\\n                  <div id=\\\"fatInfo\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                     <div class=\\\"panel-body\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"category\\\" class=\\\"control-label\\\">Category</label>\\r\\n                           <input type=\\\"text\\\" name=\\\"category\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"selectedEntity.chamberCategory\\\" />\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"closureType\\\" class=\\\"control-label\\\">Closure Type</label>\\r\\n                           <input type=\\\"text\\\" name=\\\"closureType\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"selectedEntity.chamberClosureType\\\" />\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"spliceTrayCount\\\" class=\\\"control-label\\\">Splice Tray Count</label>\\r\\n                           <input type=\\\"text\\\" name=\\\"spliceTrayCount\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"selectedEntity.spliceTrayCount\\\" />\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"isBuried\\\" class=\\\"control-label\\\" style=\\\"width:100%\\\">&nbsp;</label>\\r\\n                           <mat-checkbox name=\\\"isBuried\\\" [(ngModel)]=\\\"selectedEntity.isBuried\\\" [checked]=\\\"selectedEntity.isBuried\\\">Is Buried</mat-checkbox>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                  </div>\\r\\n               </div>\\r\\n            </div>\\r\\n         </div>\\r\\n         <div *ngIf=\\\"selectedEntity?.entityType == 'FDT'\\\">\\r\\n            <div class=\\\"panel-group\\\" id=\\\"FDTAccordion\\\">\\r\\n               <div class=\\\"panel panel-default\\\">\\r\\n                  <div class=\\\"panel-heading\\\">\\r\\n                     <h4 class=\\\"panel-title\\\">\\r\\n                        <a data-toggle=\\\"collapse\\\" data-parent=\\\"#FDTAccordion\\\" href=\\\"#fdt_info\\\">General Information</a>\\r\\n                     </h4>\\r\\n                  </div>\\r\\n                  <div id=\\\"fdt_info\\\" class=\\\"panel-collapse collapse in\\\">\\r\\n                     <div class=\\\"panel-body\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"name\\\" class=\\\"control-label\\\">Name <span style=\\\"color:red;\\\">*</span></label>\\r\\n                           <input type=\\\"text\\\" name=\\\"name\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"selectedEntity.name\\\" />\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"code\\\" class=\\\"control-label\\\">Code <span style=\\\"color:red;\\\">*</span></label>\\r\\n                           <input type=\\\"text\\\" name=\\\"code\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"selectedEntity.code\\\" readonly />\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"coordinates\\\" class=\\\"control-label\\\">Coordinates(Lng,Lat) </label>\\r\\n                           <input type=\\\"text\\\" class=\\\"form-control input-sm\\\" name=\\\"coordinates\\\" readonly value=\\\"{{selectedEntity.geometry.coordinates[0]}}, {{selectedEntity.geometry.coordinates[1]}}\\\">\\r\\n                        </div>\\r\\n                     </div>\\r\\n                  </div>\\r\\n               </div>\\r\\n               <div class=\\\"panel panel-default\\\">\\r\\n                  <div class=\\\"panel-heading\\\">\\r\\n                     <h4 class=\\\"panel-title\\\">\\r\\n                        <a data-toggle=\\\"collapse\\\" data-parent=\\\"#FDTAccordion\\\" href=\\\"#fdt_make\\\">Make</a>\\r\\n                     </h4>\\r\\n                  </div>\\r\\n                  <div id=\\\"fdt_make\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                     <div class=\\\"panel-body\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"type\\\" class=\\\"control-label\\\">Type</label>\\r\\n                           <input type=\\\"text\\\" name=\\\"type\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"selectedEntity.type\\\" />\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"brand\\\" class=\\\"control-label\\\">Brand</label>\\r\\n                           <input type=\\\"text\\\" name=\\\"brand\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"selectedEntity.brand\\\" />\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"model\\\" class=\\\"control-label\\\">Model</label>\\r\\n                           <input type=\\\"text\\\" name=\\\"model\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"selectedEntity.model\\\" />\\r\\n                        </div>\\r\\n                     </div>\\r\\n                  </div>\\r\\n               </div>\\r\\n               <div class=\\\"panel panel-default\\\">\\r\\n                  <div class=\\\"panel-heading\\\">\\r\\n                     <h4 class=\\\"panel-title\\\">\\r\\n                        <a data-toggle=\\\"collapse\\\" data-parent=\\\"#FDTAccordion\\\" href=\\\"#fdtInfo\\\">FAT Information</a>\\r\\n                     </h4>\\r\\n                  </div>\\r\\n                  <div id=\\\"fdtInfo\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                     <div class=\\\"panel-body\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"category\\\" class=\\\"control-label\\\">Category</label>\\r\\n                           <input type=\\\"text\\\" name=\\\"category\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"selectedEntity.chamberCategory\\\" />\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"closureType\\\" class=\\\"control-label\\\">Closure Type</label>\\r\\n                           <input type=\\\"text\\\" name=\\\"closureType\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"selectedEntity.chamberClosureType\\\" />\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"spliceTrayCount\\\" class=\\\"control-label\\\">Splice Tray Count</label>\\r\\n                           <input type=\\\"text\\\" name=\\\"spliceTrayCount\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"selectedEntity.spliceTrayCount\\\" />\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"isBuried\\\" class=\\\"control-label\\\" style=\\\"width:100%\\\">&nbsp;</label>\\r\\n                           <mat-checkbox name=\\\"isBuried\\\" [(ngModel)]=\\\"selectedEntity.isBuried\\\" [checked]=\\\"selectedEntity.isBuried\\\">Is Buried</mat-checkbox>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                  </div>\\r\\n               </div>\\r\\n            </div>\\r\\n         </div>\\r\\n\\r\\n      </div>\\r\\n   </div>\\r\\n</div>\\r\\n\\r\\n<div id=\\\"deleteEntity\\\" class=\\\"modal fade\\\" role=\\\"dialog\\\" *ngIf=\\\"selectedEntity\\\">\\r\\n   <div class=\\\"modal-dialog\\\">\\r\\n      <div class=\\\"modal-content\\\" style=\\\"border-radius:3px\\\">\\r\\n         <div class=\\\"modal-header\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\r\\n            <h4 class=\\\"modal-title\\\">Delete {{selectedEntity.entityType}}</h4>\\r\\n         </div>\\r\\n         <div class=\\\"modal-body\\\">\\r\\n            <p>Do you want to delete {{selectedEntity.entityType}} - {{selectedEntity.name}}?</p>\\r\\n\\r\\n            <!--<p>Do you want to delete {{selectedEntity.entityType}} - {{selectedEntity.name}}?</p>\\r\\n            <table class=\\\"table table-bordered\\\">\\r\\n               <thead>\\r\\n                  <tr>\\r\\n                     <th style=\\\"width: 200px;\\\">Field</th>\\r\\n                     <th>Value</th>\\r\\n                  </tr>\\r\\n               </thead>\\r\\n               <tbody>\\r\\n                  <ng-container *ngIf='searchFields && searchFields.length > 0'>\\r\\n                     <tr *ngFor='let searchField of searchFields'>\\r\\n                        <td>{{searchField.label}}</td>\\r\\n                        <td><input [type]=searchField.dataType class=\\\"form-control input-sm\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"searchField.value\\\"></td>\\r\\n                     </tr>\\r\\n                  </ng-container>\\r\\n                  <tr *ngIf='searchFields == null || searchFields.length == 0'>\\r\\n                     <td colspan=\\\"2\\\" style=\\\"text-align: center;\\\">\\r\\n                        No search fields defined\\r\\n                     </td>\\r\\n                  </tr>\\r\\n               </tbody>\\r\\n            </table>-->\\r\\n         </div>\\r\\n         <div class=\\\"modal-footer\\\">\\r\\n            <button class=\\\"btn btn-info\\\" data-dismiss=\\\"modal\\\" type=\\\"button\\\" (click)=\\\"deleteEntity()\\\">Yes</button>\\r\\n            <button class=\\\"btn btn-default pull-left\\\" data-dismiss=\\\"modal\\\" type=\\\"button\\\">No</button>\\r\\n         </div>\\r\\n      </div>\\r\\n   </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"modal fade\\\" id=\\\"exampleModalCenter\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalCenterTitle\\\" aria-hidden=\\\"true\\\" style=\\\"padding-top:15%\\\" data-keyboard=\\\"false\\\" data-backdrop=\\\"static\\\">\\r\\n   <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\r\\n      <div class=\\\"modal-content\\\">\\r\\n         <div class=\\\"modal-header\\\">\\r\\n            <!--<h5 class=\\\"modal-title\\\" id=\\\"exampleModalLongTitle\\\">Modal title</h5>-->\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\r\\n               <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n            </button>\\r\\n         </div>\\r\\n         <div class=\\\"modal-body\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n               <div class=\\\"form-group\\\">\\r\\n                  <select class=\\\"form-control\\\" id=\\\"designEntity\\\">\\r\\n                     <option [value]=\\\"0\\\">Please select</option>\\r\\n                     <option *ngFor=\\\"let designEntity of masterEntities\\\" [value]=\\\"designEntity.id\\\">{{designEntity.name}}</option>\\r\\n                  </select>\\r\\n               </div>\\r\\n            </div>\\r\\n         </div>\\r\\n         <div class=\\\"modal-footer\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\" (click)=\\\"ClearEntities()\\\">Close</button>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"PlotPostEntities()\\\">Ok</button>\\r\\n         </div>\\r\\n      </div>\\r\\n   </div>\\r\\n</div>\\r\\n\"","export default \"<div>\\r\\n   <div class=\\\"col-md-4\\\">\\r\\n      <div class=\\\"panel panel-default\\\">\\r\\n         <div class=\\\"panel-heading\\\">\\r\\n            <h4 class=\\\"panel-title\\\">Hierarchy Settings</h4>\\r\\n         </div>\\r\\n         <div class=\\\"panel-collapse collapse in\\\">\\r\\n            <div class=\\\"panel-body\\\">\\r\\n               <div class=\\\"col-sm-12\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                     <label for=\\\"hierarchyName\\\" class=\\\"control-label\\\">Hierarchy Name <span style=\\\"color:red;\\\">*</span></label>\\r\\n                     <div class=\\\"input-group input-group-sm\\\">\\r\\n                        <input type=\\\"text\\\" name=\\\"hierarchyName\\\" [(ngModel)]=\\\"hierarchyName\\\" class=\\\"form-control\\\">\\r\\n                        <span class=\\\"input-group-btn\\\">\\r\\n                           <button type=\\\"button\\\" class=\\\"btn btn-info btn-flat\\\" (click)=\\\"addHierarchy()\\\"><i class=\\\"fas fa-plus\\\"></i></button>\\r\\n                        </span>\\r\\n                     </div>\\r\\n                  </div>\\r\\n                  <ng-container *ngIf='design.networkSettings && design.networkSettings.length > 0'>\\r\\n                     <ng-container *ngFor='let networkSetting of design.networkSettings; let rowIndex = index;'>\\r\\n                        <div class=\\\"box box-solid hierarchy\\\" [class.hactive]=\\\"selectedSetting == networkSetting\\\" (click)=\\\"selectedSetting = networkSetting\\\" style=\\\"cursor: pointer;\\\">\\r\\n                           <div class=\\\"box-header\\\">\\r\\n                              <div class=\\\"pull-right box-tools\\\" style=\\\"top: 0px;right: 0px;\\\">\\r\\n                                 <button type=\\\"button\\\" class=\\\"btn btn-sm pull-right\\\" style=\\\"padding: 5px;background: transparent;\\\" (click)=\\\"deleteHierarchy(rowIndex)\\\">\\r\\n                                    <i class=\\\"fas fa-trash-alt\\\" style=\\\"color:red\\\"></i>\\r\\n                                 </button>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                           <div class=\\\"box-body\\\">\\r\\n                              <p>{{rowIndex + 1}}. {{networkSetting.name}}</p>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </ng-container>\\r\\n                  </ng-container>\\r\\n               </div>\\r\\n            </div>\\r\\n         </div>\\r\\n      </div>\\r\\n   </div>\\r\\n   <div class=\\\"col-md-8\\\">\\r\\n      <div class=\\\"panel panel-default\\\">\\r\\n         <div class=\\\"panel-heading\\\">\\r\\n            <h4 class=\\\"panel-title\\\">{{selectedSetting?.name || 'Settings'}}</h4>\\r\\n         </div>\\r\\n         <div class=\\\"panel-collapse collapse in\\\">\\r\\n            <div class=\\\"panel-body\\\" style=\\\"padding: 7px;\\\" *ngIf=\\\"design.designType == 'FTTx'\\\">\\r\\n               <ul class=\\\"nav nav-tabs form-menu\\\" style=\\\"padding-bottom: 2px;border-bottom: 1px solid #ddd;\\\">\\r\\n                  <li class=\\\"active\\\"><a href=\\\"#tab_startNode\\\" data-toggle=\\\"tab\\\">Start Node</a></li>\\r\\n                  <li><a href=\\\"#tab_destinationNode\\\" data-toggle=\\\"tab\\\">Destination Node</a></li>\\r\\n                  <li><a href=\\\"#tab_cabling\\\" data-toggle=\\\"tab\\\">Cabling</a></li>\\r\\n               </ul>\\r\\n               <div class=\\\"tab-content\\\">\\r\\n                  <div id=\\\"tab_startNode\\\" class=\\\"tab-pane active\\\" style=\\\"padding: 10px;\\\">\\r\\n                     <div class=\\\"panel-group\\\" id=\\\"sn_accordion\\\">\\r\\n                        <div class=\\\"panel panel-default\\\">\\r\\n                           <div style=\\\"padding:5px\\\">\\r\\n                              <span>\\r\\n                                 <a data-toggle=\\\"collapse\\\" data-parent=\\\"#sn_accordion\\\" href=\\\"#sn_entitySettings\\\">Entity Settings</a>\\r\\n                              </span>\\r\\n                           </div>\\r\\n                           <div id=\\\"sn_entitySettings\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                              <div class=\\\"panel-body\\\">\\r\\n                                 <dzn-entities [entitySettings]=\\\"selectedSetting.startNode.entitySettings\\\" [allDesigns]=\\\"allDesigns\\\"></dzn-entities>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"panel panel-default\\\">\\r\\n                           <div style=\\\"padding:5px\\\">\\r\\n                              <span>\\r\\n                                 <a data-toggle=\\\"collapse\\\" data-parent=\\\"#sn_accordion\\\" href=\\\"#sn_accessories\\\">Accessories</a>\\r\\n                              </span>\\r\\n                           </div>\\r\\n                           <div id=\\\"sn_accessories\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                              <div class=\\\"panel-body\\\">\\r\\n                                 <dzn-accessories [accessorySettings]=\\\"selectedSetting.startNode.accessorySettings\\\" [parentEntityType]=\\\"selectedSetting.startNode.entitySettings.entityName\\\" [allDesigns]=\\\"allDesigns\\\"></dzn-accessories>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"panel panel-default\\\">\\r\\n                           <div style=\\\"padding:5px\\\">\\r\\n                              <span>\\r\\n                                 <a data-toggle=\\\"collapse\\\" data-parent=\\\"#sn_accordion\\\" href=\\\"#sn_civilWorks\\\">Civil works</a>\\r\\n                              </span>\\r\\n                           </div>\\r\\n                           <div id=\\\"sn_civilWorks\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                              <div class=\\\"panel-body\\\">\\r\\n                                 <dzn-civilworks [civilworkSettings]=\\\"selectedSetting.startNode.civilworkSettings\\\" [parentEntityType]=\\\"selectedSetting.startNode.entitySettings.entityName\\\"></dzn-civilworks>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"panel panel-default\\\">\\r\\n                           <div style=\\\"padding:5px\\\">\\r\\n                              <span>\\r\\n                                 <a data-toggle=\\\"collapse\\\" data-parent=\\\"#sn_accordion\\\" href=\\\"#sn_fiber\\\">Fiber</a>\\r\\n                              </span>\\r\\n                           </div>\\r\\n                           <div id=\\\"sn_fiber\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                              <div class=\\\"panel-body\\\">\\r\\n                                 <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"control-label\\\" for=\\\"fiberDrop\\\">Fiber Drop</label>\\r\\n                                    <input class=\\\"form-control\\\" name=\\\"fiberDrop\\\" [(ngModel)]=\\\"selectedSetting.startNode.fiberDrop\\\" type=\\\"number\\\">\\r\\n                                 </div>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"panel panel-default\\\">\\r\\n                           <div style=\\\"padding:5px\\\">\\r\\n                              <span>\\r\\n                                 <a data-toggle=\\\"collapse\\\" data-parent=\\\"#sn_accordion\\\" href=\\\"#sn_ductSettings\\\">Duct Settings</a>\\r\\n                              </span>\\r\\n                           </div>\\r\\n                           <div id=\\\"sn_ductSettings\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                              <div class=\\\"panel-body\\\">\\r\\n                                 <dzn-duct [ductSettings]=\\\"selectedSetting.startNode.ductSettings\\\"></dzn-duct>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div id=\\\"tab_destinationNode\\\" class=\\\"tab-pane\\\" style=\\\"padding: 10px;\\\">\\r\\n                     <div class=\\\"panel-group\\\" id=\\\"dn_accordion\\\">\\r\\n                        <div class=\\\"panel panel-default\\\">\\r\\n                           <div style=\\\"padding:5px\\\">\\r\\n                              <span>\\r\\n                                 <a data-toggle=\\\"collapse\\\" data-parent=\\\"#dn_accordion\\\" href=\\\"#dn_entitySettings\\\">Entity Settings</a>\\r\\n                              </span>\\r\\n                           </div>\\r\\n                           <div id=\\\"dn_entitySettings\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                              <div class=\\\"panel-body\\\">\\r\\n                                 <dzn-entities [entitySettings]=\\\"selectedSetting.destinationNode.entitySettings\\\" [allDesigns]=\\\"allDesigns\\\"></dzn-entities>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"panel panel-default\\\">\\r\\n                           <div style=\\\"padding:5px\\\">\\r\\n                              <span>\\r\\n                                 <a data-toggle=\\\"collapse\\\" data-parent=\\\"#dn_accordion\\\" href=\\\"#dn_accessories\\\">Accessories</a>\\r\\n                              </span>\\r\\n                           </div>\\r\\n                           <div id=\\\"dn_accessories\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                              <div class=\\\"panel-body\\\">\\r\\n                                 <dzn-accessories [accessorySettings]=\\\"selectedSetting.destinationNode.accessorySettings\\\" [parentEntityType]=\\\"selectedSetting.destinationNode.entitySettings.entityName\\\" [allDesigns]=\\\"allDesigns\\\"></dzn-accessories>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"panel panel-default\\\">\\r\\n                           <div style=\\\"padding:5px\\\">\\r\\n                              <span>\\r\\n                                 <a data-toggle=\\\"collapse\\\" data-parent=\\\"#dn_accordion\\\" href=\\\"#dn_civilWorks\\\">Civil works</a>\\r\\n                              </span>\\r\\n                           </div>\\r\\n                           <div id=\\\"dn_civilWorks\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                              <div class=\\\"panel-body\\\">\\r\\n                                 <dzn-civilworks [civilworkSettings]=\\\"selectedSetting.destinationNode.civilworkSettings\\\" [parentEntityType]=\\\"selectedSetting.destinationNode.entitySettings.entityName\\\"></dzn-civilworks>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"panel panel-default\\\">\\r\\n                           <div style=\\\"padding:5px\\\">\\r\\n                              <span>\\r\\n                                 <a data-toggle=\\\"collapse\\\" data-parent=\\\"#dn_accordion\\\" href=\\\"#dn_fiber\\\">Fiber</a>\\r\\n                              </span>\\r\\n                           </div>\\r\\n                           <div id=\\\"dn_fiber\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                              <div class=\\\"panel-body\\\">\\r\\n                                 <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"control-label\\\" for=\\\"dn_fiberDrop\\\">Fiber Drop</label>\\r\\n                                    <input class=\\\"form-control\\\" name=\\\"dn_fiberDrop\\\" [(ngModel)]=\\\"selectedSetting.destinationNode.fiberDrop\\\" type=\\\"number\\\">\\r\\n                                 </div>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"panel panel-default\\\">\\r\\n                           <div style=\\\"padding:5px\\\">\\r\\n                              <span>\\r\\n                                 <a data-toggle=\\\"collapse\\\" data-parent=\\\"#dn_accordion\\\" href=\\\"#dn_ductSettings\\\">Duct Settings</a>\\r\\n                              </span>\\r\\n                           </div>\\r\\n                           <div id=\\\"dn_ductSettings\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                              <div class=\\\"panel-body\\\">\\r\\n                                 <dzn-duct [ductSettings]=\\\"selectedSetting.destinationNode.ductSettings\\\"></dzn-duct>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div id=\\\"tab_cabling\\\" class=\\\"tab-pane\\\" style=\\\"padding: 10px;\\\">\\r\\n                     <div class=\\\"panel-group\\\" id=\\\"cbl_accordion\\\">\\r\\n                        <div class=\\\"panel panel-default\\\">\\r\\n                           <div style=\\\"padding:5px\\\">\\r\\n                              <span>\\r\\n                                 <a data-toggle=\\\"collapse\\\" data-parent=\\\"#cbl_accordion\\\" href=\\\"#cbl_cableSettings\\\">Cable Settings</a>\\r\\n                              </span>\\r\\n                           </div>\\r\\n                           <div id=\\\"cbl_cableSettings\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                              <div class=\\\"panel-body\\\">\\r\\n                                 <dzn-cable [cableSettings]=\\\"selectedSetting.cabling.cableSettings\\\"></dzn-cable>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"panel panel-default\\\">\\r\\n                           <div style=\\\"padding:5px\\\">\\r\\n                              <span>\\r\\n                                 <a data-toggle=\\\"collapse\\\" data-parent=\\\"#cbl_accordion\\\" href=\\\"#cbl_loopSettings\\\">Loop Management</a>\\r\\n                              </span>\\r\\n                           </div>\\r\\n                           <div id=\\\"cbl_loopSettings\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                              <div class=\\\"panel-body\\\">\\r\\n                                 <div class=\\\"col-sm-6\\\">\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                       <label for=\\\"cableLoop\\\" class=\\\"control-label\\\">Cable loop (Meters)</label>\\r\\n                                       <input class=\\\"form-control\\\" name=\\\"cableLoop\\\" [(ngModel)]=\\\"selectedSetting.cabling.cableSettings.cableLoop\\\" type=\\\"number\\\">\\r\\n                                    </div>\\r\\n                                 </div>\\r\\n                                 <div class=\\\"col-sm-6\\\">\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                       <label for=\\\"forEvery\\\" class=\\\"control-label\\\">For Every (Meters)</label>\\r\\n                                       <input class=\\\"form-control\\\" name=\\\"forEvery\\\" [(ngModel)]=\\\"selectedSetting.cabling.cableSettings.loopInterval\\\" type=\\\"number\\\">\\r\\n                                    </div>\\r\\n                                 </div>\\r\\n                                 <div class=\\\"col-sm-6\\\">\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                       <label for=\\\"loopAtClosure\\\" class=\\\"control-label\\\">Loop at Closure (Meters)</label>\\r\\n                                       <input class=\\\"form-control\\\" name=\\\"loopAtClosure\\\" [(ngModel)]=\\\"selectedSetting.cabling.cableSettings.loopAtClosure\\\" type=\\\"number\\\">\\r\\n                                    </div>\\r\\n                                 </div>\\r\\n                                 <div class=\\\"col-sm-6\\\">\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                       <label for=\\\"loopAtClosure\\\" class=\\\"control-label\\\">Connect %</label>\\r\\n                                       <input class=\\\"form-control\\\" name=\\\"loopAtClosure\\\" [(ngModel)]=\\\"selectedSetting.cabling.cableSettings.connectionPercent\\\" type=\\\"number\\\">\\r\\n                                    </div>\\r\\n                                 </div>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"panel panel-default\\\">\\r\\n                           <div style=\\\"padding:5px\\\">\\r\\n                              <span>\\r\\n                                 <a data-toggle=\\\"collapse\\\" data-parent=\\\"#cbl_accordion\\\" href=\\\"#cbl_spliceClosuresSettings\\\">Splice Closures</a>\\r\\n                              </span>\\r\\n                           </div>\\r\\n                           <div id=\\\"cbl_spliceClosuresSettings\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                              <div class=\\\"panel-body\\\">\\r\\n                                 <dzn-spliceClosure [spliceClosureSettings]=\\\"selectedSetting.cabling.spliceClosureSettings\\\"></dzn-spliceClosure>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"panel panel-default\\\">\\r\\n                           <div style=\\\"padding:5px\\\">\\r\\n                              <span>\\r\\n                                 <a data-toggle=\\\"collapse\\\" data-parent=\\\"#cbl_accordion\\\" href=\\\"#cbl_accessories\\\">Accessories</a>\\r\\n                              </span>\\r\\n                           </div>\\r\\n                           <div id=\\\"cbl_accessories\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                              <div class=\\\"panel-body\\\">\\r\\n                                 <dzn-accessories [accessorySettings]=\\\"selectedSetting.cabling.accessorySettings\\\" parentEntityType=\\\"Cable\\\" [allDesigns]=\\\"allDesigns\\\"></dzn-accessories>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"panel panel-default\\\">\\r\\n                           <div style=\\\"padding:5px\\\">\\r\\n                              <span>\\r\\n                                 <a data-toggle=\\\"collapse\\\" data-parent=\\\"#cbl_accordion\\\" href=\\\"#cbl_duct\\\">Duct</a>\\r\\n                              </span>\\r\\n                           </div>\\r\\n                           <div id=\\\"cbl_duct\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                              <div class=\\\"panel-body\\\">\\r\\n                                 <dzn-duct [ductSettings]=\\\"selectedSetting.cabling.ductSettings\\\"></dzn-duct>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                  </div>\\r\\n               </div>\\r\\n            </div>\\r\\n            <div class=\\\"panel-body\\\" style=\\\"padding: 7px;\\\" *ngIf=\\\"design.designType == 'Backbone'\\\">\\r\\n               <ul class=\\\"nav nav-tabs form-menu\\\" style=\\\"padding-bottom: 2px;border-bottom: 1px solid #ddd;\\\">\\r\\n                  <li class=\\\"active\\\"><a href=\\\"#tab_fdp\\\" data-toggle=\\\"tab\\\">FDP Node</a></li>\\r\\n                  <li><a href=\\\"#tab_bb_cabling\\\" data-toggle=\\\"tab\\\">Cabling</a></li>\\r\\n               </ul>\\r\\n               <div class=\\\"tab-content\\\">\\r\\n                  <div id=\\\"tab_fdp\\\" class=\\\"tab-pane active\\\" style=\\\"padding: 10px;\\\">\\r\\n                     <div class=\\\"panel-group\\\" id=\\\"fdp_accordion\\\">\\r\\n                        <div class=\\\"panel panel-default\\\">\\r\\n                           <div style=\\\"padding:5px\\\">\\r\\n                              <span>\\r\\n                                 <a data-toggle=\\\"collapse\\\" data-parent=\\\"#fdp_accordion\\\" href=\\\"#fdp_nodeSettings\\\">FDP Nodes</a>\\r\\n                              </span>\\r\\n                           </div>\\r\\n                           <div id=\\\"fdp_nodeSettings\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                              <div class=\\\"panel-body\\\">\\r\\n                                 <dzn-fdp [fdpSettings]=\\\"selectedSetting.fdpNode.fdpSettings\\\" [allDesigns]=\\\"allDesigns\\\"></dzn-fdp>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"panel panel-default\\\">\\r\\n                           <div style=\\\"padding:5px\\\">\\r\\n                              <span>\\r\\n                                 <a data-toggle=\\\"collapse\\\" data-parent=\\\"#fdp_accordion\\\" href=\\\"#fdp_accessories\\\">Accessories</a>\\r\\n                              </span>\\r\\n                           </div>\\r\\n                           <div id=\\\"fdp_accessories\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                              <div class=\\\"panel-body\\\">\\r\\n                                 <dzn-accessories [accessorySettings]=\\\"selectedSetting.fdpNode.accessorySettings\\\" [parentEntityType]=\\\"selectedSetting.fdpNode.entitySettings.entityName\\\" [allDesigns]=\\\"allDesigns\\\"></dzn-accessories>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"panel panel-default\\\">\\r\\n                           <div style=\\\"padding:5px\\\">\\r\\n                              <span>\\r\\n                                 <a data-toggle=\\\"collapse\\\" data-parent=\\\"#fdp_accordion\\\" href=\\\"#fdp_civilWorks\\\">Civil works</a>\\r\\n                              </span>\\r\\n                           </div>\\r\\n                           <div id=\\\"fdp_civilWorks\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                              <div class=\\\"panel-body\\\">\\r\\n                                 <dzn-civilworks [civilworkSettings]=\\\"selectedSetting.fdpNode.civilworkSettings\\\" [parentEntityType]=\\\"selectedSetting.fdpNode.entitySettings.entityName\\\"></dzn-civilworks>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"panel panel-default\\\">\\r\\n                           <div style=\\\"padding:5px\\\">\\r\\n                              <span>\\r\\n                                 <a data-toggle=\\\"collapse\\\" data-parent=\\\"#fdp_accordion\\\" href=\\\"#fdp_fiber\\\">Fiber</a>\\r\\n                              </span>\\r\\n                           </div>\\r\\n                           <div id=\\\"fdp_fiber\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                              <div class=\\\"panel-body\\\">\\r\\n                                 <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"control-label\\\" for=\\\"fdpFiberDrop\\\">Fiber Drop</label>\\r\\n                                    <input class=\\\"form-control\\\" name=\\\"fdpFiberDrop\\\" [(ngModel)]=\\\"selectedSetting.fdpNode.fiberDrop\\\" type=\\\"number\\\">\\r\\n                                 </div>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"panel panel-default\\\">\\r\\n                           <div style=\\\"padding:5px\\\">\\r\\n                              <span>\\r\\n                                 <a data-toggle=\\\"collapse\\\" data-parent=\\\"#fdp_accordion\\\" href=\\\"#fdp_ductSettings\\\">Duct Settings</a>\\r\\n                              </span>\\r\\n                           </div>\\r\\n                           <div id=\\\"fdp_ductSettings\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                              <div class=\\\"panel-body\\\">\\r\\n                                 <dzn-duct [ductSettings]=\\\"selectedSetting.fdpNode.ductSettings\\\"></dzn-duct>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                  </div>\\r\\n                  <div id=\\\"tab_bb_cabling\\\" class=\\\"tab-pane\\\" style=\\\"padding: 10px;\\\">\\r\\n                     <div class=\\\"panel-group\\\" id=\\\"cbl_accordion\\\">\\r\\n                        <div class=\\\"panel panel-default\\\">\\r\\n                           <div style=\\\"padding:5px\\\">\\r\\n                              <span>\\r\\n                                 <a data-toggle=\\\"collapse\\\" data-parent=\\\"#cbl_accordion\\\" href=\\\"#cbl_cableSettings\\\">Cable Settings</a>\\r\\n                              </span>\\r\\n                           </div>\\r\\n                           <div id=\\\"cbl_cableSettings\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                              <div class=\\\"panel-body\\\">\\r\\n                                 <dzn-cable [cableSettings]=\\\"selectedSetting.cabling.cableSettings\\\"></dzn-cable>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"panel panel-default\\\">\\r\\n                           <div style=\\\"padding:5px\\\">\\r\\n                              <span>\\r\\n                                 <a data-toggle=\\\"collapse\\\" data-parent=\\\"#cbl_accordion\\\" href=\\\"#cbl_loopSettings\\\">Loop Management</a>\\r\\n                              </span>\\r\\n                           </div>\\r\\n                           <div id=\\\"cbl_loopSettings\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                              <div class=\\\"panel-body\\\">\\r\\n                                 <div class=\\\"col-sm-6\\\">\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                       <label for=\\\"cableLoop\\\" class=\\\"control-label\\\">Cable loop (Meters)</label>\\r\\n                                       <input class=\\\"form-control\\\" name=\\\"cableLoop\\\" [(ngModel)]=\\\"selectedSetting.cabling.cableSettings.cableLoop\\\" type=\\\"number\\\">\\r\\n                                    </div>\\r\\n                                 </div>\\r\\n                                 <div class=\\\"col-sm-6\\\">\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                       <label for=\\\"forEvery\\\" class=\\\"control-label\\\">For Every (Meters)</label>\\r\\n                                       <input class=\\\"form-control\\\" name=\\\"forEvery\\\" [(ngModel)]=\\\"selectedSetting.cabling.cableSettings.loopInterval\\\" type=\\\"number\\\">\\r\\n                                    </div>\\r\\n                                 </div>\\r\\n                                 <div class=\\\"col-sm-6\\\">\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                       <label for=\\\"loopAtClosure\\\" class=\\\"control-label\\\">Loop at Closure (Meters)</label>\\r\\n                                       <input class=\\\"form-control\\\" name=\\\"loopAtClosure\\\" [(ngModel)]=\\\"selectedSetting.cabling.cableSettings.loopAtClosure\\\" type=\\\"number\\\">\\r\\n                                    </div>\\r\\n                                 </div>\\r\\n                                 <div class=\\\"col-sm-6\\\">\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                       <label for=\\\"loopAtClosure\\\" class=\\\"control-label\\\">Connect %</label>\\r\\n                                       <input class=\\\"form-control\\\" name=\\\"loopAtClosure\\\" [(ngModel)]=\\\"selectedSetting.cabling.cableSettings.connectionPercent\\\" type=\\\"number\\\">\\r\\n                                    </div>\\r\\n                                 </div>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"panel panel-default\\\">\\r\\n                           <div style=\\\"padding:5px\\\">\\r\\n                              <span>\\r\\n                                 <a data-toggle=\\\"collapse\\\" data-parent=\\\"#cbl_accordion\\\" href=\\\"#cbl_spliceClosuresSettings\\\">Splice Closures</a>\\r\\n                              </span>\\r\\n                           </div>\\r\\n                           <div id=\\\"cbl_spliceClosuresSettings\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                              <div class=\\\"panel-body\\\">\\r\\n                                 <dzn-spliceClosure [spliceClosureSettings]=\\\"selectedSetting.cabling.spliceClosureSettings\\\"></dzn-spliceClosure>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"panel panel-default\\\">\\r\\n                           <div style=\\\"padding:5px\\\">\\r\\n                              <span>\\r\\n                                 <a data-toggle=\\\"collapse\\\" data-parent=\\\"#cbl_accordion\\\" href=\\\"#cbl_accessories\\\">Accessories</a>\\r\\n                              </span>\\r\\n                           </div>\\r\\n                           <div id=\\\"cbl_accessories\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                              <div class=\\\"panel-body\\\">\\r\\n                                 <dzn-accessories [accessorySettings]=\\\"selectedSetting.cabling.accessorySettings\\\" parentEntityType=\\\"Cable\\\" [allDesigns]=\\\"allDesigns\\\"></dzn-accessories>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"panel panel-default\\\">\\r\\n                           <div style=\\\"padding:5px\\\">\\r\\n                              <span>\\r\\n                                 <a data-toggle=\\\"collapse\\\" data-parent=\\\"#cbl_accordion\\\" href=\\\"#cbl_duct\\\">Duct</a>\\r\\n                              </span>\\r\\n                           </div>\\r\\n                           <div id=\\\"cbl_duct\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                              <div class=\\\"panel-body\\\">\\r\\n                                 <dzn-duct [ductSettings]=\\\"selectedSetting.cabling.ductSettings\\\"></dzn-duct>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                  </div>\\r\\n               </div>\\r\\n            </div>\\r\\n         </div>\\r\\n      </div>\\r\\n   </div>\\r\\n</div>\\r\\n\"","export default \"<!--<div class=\\\"col-sm-12\\\">\\r\\n   <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"equipment\\\" class=\\\"control-label\\\">SpliceClosure Option</label>\\r\\n      <mat-select name=\\\"spliceClosureOption\\\" [(ngModel)]=\\\"spliceClosureSettings.dataSource\\\" (ngModelChange)=\\\"getExistingSpliceClosures()\\\">\\r\\n         <mat-option>SpliceClosure Option</mat-option>\\r\\n         <mat-option value=\\\"import\\\">Import SpliceClosure</mat-option>\\r\\n         <mat-option value=\\\"existing\\\">Use from existing</mat-option>\\r\\n         <mat-option value=\\\"automatic\\\">Place Automatically</mat-option>\\r\\n      </mat-select>\\r\\n   </div>\\r\\n</div>-->\\r\\n<div class=\\\"col-sm-12\\\">\\r\\n   <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"equipment\\\" class=\\\"control-label\\\">Select SpliceClosure</label>\\r\\n      <div class=\\\"input-group input-group-sm\\\">\\r\\n         <mat-select name=\\\"spliceClosure\\\" [(ngModel)]=\\\"selectedSpliceClosure\\\">\\r\\n            <mat-option>Select SpliceClosure</mat-option>\\r\\n            <mat-option *ngFor=\\\"let spliceClosure of spliceClosuresMaster\\\" [value]=\\\"spliceClosure\\\">\\r\\n               {{spliceClosure.name}}\\r\\n            </mat-option>\\r\\n         </mat-select>\\r\\n         <span class=\\\"input-group-btn\\\"><button class=\\\"btn btn-info btn-flat\\\" type=\\\"button\\\" (click)=\\\"addSpliceClosure()\\\"><i class=\\\"fas fa-plus\\\"></i></button></span>\\r\\n      </div>\\r\\n   </div>\\r\\n</div>\\r\\n<div class=\\\"col-sm-12\\\">\\r\\n   <div class=\\\"form-group\\\">\\r\\n      <table class=\\\"table table-bordered table-striped\\\">\\r\\n         <thead>\\r\\n            <tr>\\r\\n               <th>Name</th>\\r\\n               <th style=\\\"width:40px\\\"></th>\\r\\n            </tr>\\r\\n         </thead>\\r\\n         <tbody>\\r\\n            <ng-container *ngIf='spliceClosureSettings.spliceClosures && spliceClosureSettings.spliceClosures.length > 0'>\\r\\n               <tr *ngFor='let spliceClosure of spliceClosureSettings.spliceClosures;let rowIndex = index;'>\\r\\n                  <td>{{spliceClosure.name}}</td>\\r\\n                  <td>\\r\\n                     <a>\\r\\n                        <i class=\\\"fas fa-trash-alt\\\" style=\\\"font-size: 15px; color: Red; cursor:pointer\\\" (click)=\\\"removeSpliceClosure(rowIndex)\\\" title=\\\"Remove\\\"></i>\\r\\n                     </a>\\r\\n                  </td>\\r\\n               </tr>\\r\\n            </ng-container>\\r\\n            <tr *ngIf='spliceClosureSettings.spliceClosures == null || spliceClosureSettings.spliceClosures.length == 0'>\\r\\n               <td colspan=\\\"2\\\" style=\\\"text-align: center;\\\">\\r\\n                  {{statusMessage}}\\r\\n               </td>\\r\\n            </tr>\\r\\n         </tbody>\\r\\n      </table>\\r\\n   </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"col-sm-12\\\">\\r\\n   <div class=\\\"form-group\\\">\\r\\n      <mat-checkbox name=\\\"scJoin\\\" [checked]=\\\"spliceClosureSettings.straightJoin\\\" [(ngModel)]=\\\"spliceClosureSettings.straightJoin\\\">Straight Joints as per cable drum length </mat-checkbox>\\r\\n   </div>\\r\\n   <div class=\\\"form-group\\\" *ngIf=\\\"spliceClosureSettings.straightJoin\\\">\\r\\n      <label for=\\\"drumLength\\\" class=\\\"control-label\\\">Drum Length</label>\\r\\n      <input class=\\\"form-control\\\" name=\\\"drumLength\\\" type=\\\"number\\\" [(ngModel)]=\\\"spliceClosureSettings.drumLength\\\">\\r\\n   </div>\\r\\n   <div class=\\\"form-group\\\" *ngIf=\\\"spliceClosureSettings.straightJoin\\\">\\r\\n      <mat-checkbox name=\\\"intersectionJoints\\\" [checked]=\\\"spliceClosureSettings.intersectionJoints\\\" [(ngModel)]=\\\"spliceClosureSettings.intersectionJoints\\\">Intersection Joints</mat-checkbox>\\r\\n   </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n   <!--<div class=\\\"form-group\\\" *ngIf=\\\"spliceClosureOption == 'import'\\\">\\r\\n      <label for=\\\"equipment\\\" class=\\\"control-label\\\">Select SpliceClosure Shape File</label>\\r\\n      <div class=\\\"input-group\\\">\\r\\n         <input type=\\\"text\\\" class=\\\"form-control\\\" readonly id=\\\"uploadFile\\\" placeholder=\\\"Choose file\\\">\\r\\n         <span class=\\\"input-group-btn\\\">\\r\\n            <span class=\\\"btn btn-primary btn-file\\\">\\r\\n               Browse&hellip; <input type=\\\"file\\\" multiple (change)=\\\"fileChangeEvent($event)\\\">\\r\\n            </span>\\r\\n         </span>\\r\\n      </div>\\r\\n   </div>\\r\\n   <div *ngIf=\\\"spliceClosureOption == 'existing'\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n         <label for=\\\"design\\\" class=\\\"control-label\\\">Select Design</label>\\r\\n         <mat-select name=\\\"design\\\" [(ngModel)]=\\\"selectedDesign\\\">\\r\\n            <mat-option>Select Design</mat-option>\\r\\n            <mat-option *ngFor=\\\"let item of allDesigns\\\" [value]=\\\"item.id\\\">(ver {{item.version}}) {{item.name}}</mat-option>\\r\\n         </mat-select>\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n         <label for=\\\"equipment\\\" class=\\\"control-label\\\">Select SpliceClosure</label>\\r\\n         <div class=\\\"input-group input-group-sm\\\">\\r\\n            <mat-select name=\\\"spliceClosure\\\" [(ngModel)]=\\\"selectedSpliceClosure\\\">\\r\\n               <mat-option>Select SpliceClosure</mat-option>\\r\\n               <mat-option *ngFor=\\\"let spliceClosure of spliceClosuresMaster\\\" [value]=\\\"spliceClosure\\\">\\r\\n                  {{spliceClosure.name}}\\r\\n               </mat-option>\\r\\n            </mat-select>\\r\\n            <span class=\\\"input-group-btn\\\"><button class=\\\"btn btn-info btn-flat\\\" type=\\\"button\\\" (click)=\\\"addSpliceClosure()\\\"><i class=\\\"fas fa-plus\\\"></i></button></span>\\r\\n         </div>\\r\\n      </div>\\r\\n   </div>-->\\r\\n\"","export default \"<section class=\\\"content-header\\\">\\r\\n   <h1>Manage Designs <small> {{title}} </small></h1>\\r\\n   <ol class=\\\"breadcrumb\\\">\\r\\n      <li><a [routerLink]=\\\"['/home']\\\"><i class=\\\"fa fa-home\\\"></i> Home</a></li>\\r\\n      <li><a [routerLink]=\\\"['/designs']\\\"> Designs</a></li>\\r\\n   </ol>\\r\\n</section>\\r\\n\\r\\n<section class=\\\"content\\\">\\r\\n   <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-xs-12\\\">\\r\\n         <div class=\\\"box\\\">\\r\\n            <div class=\\\"box-header with-border ui-sortable-handle\\\">\\r\\n               <ul class=\\\"nav nav-tabs form-menu\\\">\\r\\n                  <li class=\\\"active\\\"><a href=\\\"#tab_designInfo\\\" data-toggle=\\\"tab\\\"> <span style=\\\"font-size:1.2em\\\">Design Info</span></a></li>\\r\\n                  <li><a href=\\\"#tab_documents\\\" data-toggle=\\\"tab\\\"> <span style=\\\"font-size:1.2em\\\">Documents</span></a></li>\\r\\n                  <!--<li *ngIf=\\\"design.designType == 'FTTx'\\\"><a href=\\\"#tab_clusters\\\" data-toggle=\\\"tab\\\"> <span style=\\\"font-size:1.2em\\\">Clusters</span></a></li>-->\\r\\n                  <li><a href=\\\"#tab_clusters\\\" data-toggle=\\\"tab\\\"> <span style=\\\"font-size:1.2em\\\">Clusters</span></a></li>\\r\\n                  <li><a href=\\\"#tab_bookingIds\\\" data-toggle=\\\"tab\\\"> <span style=\\\"font-size:1.2em\\\">Booking Ids</span></a></li>\\r\\n                  <li><a href=\\\"#tab_networkSettings\\\" data-toggle=\\\"tab\\\"> <span style=\\\"font-size:1.2em\\\">Settings</span></a></li>\\r\\n                  <li><a href=\\\"#tab_costing\\\" data-toggle=\\\"tab\\\"><span style=\\\"font-size:1.2em\\\">Costing</span></a></li>\\r\\n                  <li><a href=\\\"#tab_map\\\" data-toggle=\\\"tab\\\"><span style=\\\"font-size:1.2em\\\">Map</span></a></li>\\r\\n                  <li><a href=\\\"#tab_boq\\\" data-toggle=\\\"tab\\\"><span style=\\\"font-size:1.2em\\\">BOM</span></a></li>\\r\\n                  <li><a href=\\\"#tab_log\\\" data-toggle=\\\"tab\\\"><span style=\\\"font-size:1.2em\\\">Logs</span></a></li>\\r\\n               </ul>\\r\\n               <div class=\\\"box-tools pull-right\\\">\\r\\n                  <button class=\\\"btn btn-social-icon btn-xs btn-danger\\\" (click)=\\\"goBack()\\\">\\r\\n                     <i class=\\\"fas fa-times\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                  </button>\\r\\n                  <button class=\\\"btn btn-social-icon btn-xs btn-success\\\" type=\\\"submit\\\" style=\\\"margin-left: 5px;\\\" (click)=\\\"save()\\\" [disabled]=\\\"form.invalid\\\">\\r\\n                     <i class=\\\"far fa-save\\\"></i>\\r\\n                  </button>\\r\\n               </div>\\r\\n            </div>\\r\\n            <div class=\\\"box-body\\\">\\r\\n               <form name=\\\"form\\\" action=\\\"javascript:{}\\\" #form=\\\"ngForm\\\" autocomplete=\\\"off\\\" novalidate>\\r\\n                  <div class=\\\"tab-content\\\">\\r\\n                     <div id=\\\"tab_designInfo\\\" class=\\\"tab-pane active\\\">\\r\\n                        <dzn-info [design]=\\\"design\\\" [designs]=\\\"designs\\\" (onVersionChange)=\\\"onVersionChange($event)\\\"></dzn-info>\\r\\n                     </div>\\r\\n                     <div id=\\\"tab_documents\\\" class=\\\"tab-pane\\\">\\r\\n                        <dzn-documents [design]=\\\"design\\\"></dzn-documents>\\r\\n                     </div>\\r\\n                     <div id=\\\"tab_clusters\\\" class=\\\"tab-pane\\\">\\r\\n                        <dzn-clusters [design]=\\\"design\\\"></dzn-clusters>\\r\\n                     </div>\\r\\n                     <div id=\\\"tab_bookingIds\\\" class=\\\"tab-pane\\\">\\r\\n                        <dzn-bookingIds [design]=\\\"design\\\"></dzn-bookingIds>\\r\\n                     </div>\\r\\n                     <div id=\\\"tab_networkSettings\\\" class=\\\"tab-pane\\\">\\r\\n                        <dzn-networkSettings [design]=\\\"design\\\" [allDesigns]=\\\"allDesigns\\\"></dzn-networkSettings>\\r\\n                     </div>\\r\\n                     <div id=\\\"tab_costing\\\" class=\\\"tab-pane\\\">\\r\\n                        <dzn-costing [networkSettings]=\\\"design.networkSettings\\\"></dzn-costing>\\r\\n                     </div>\\r\\n                     <div id=\\\"tab_map\\\" class=\\\"tab-pane\\\">\\r\\n                        <dzn-map [design]=\\\"design\\\"></dzn-map>\\r\\n                     </div>\\r\\n                     <div id=\\\"tab_boq\\\" class=\\\"tab-pane\\\">\\r\\n                        <dzn-bom [boq]=\\\"design\\\"></dzn-bom>\\r\\n                     </div>\\r\\n                     <div id=\\\"tab_log\\\" class=\\\"tab-pane\\\">\\r\\n                        <div class=\\\"col-md-12 form-group\\\">\\r\\n                           <textarea class=\\\"form-control\\\" rows=\\\"15\\\" name=\\\"processLog\\\" [ngModel]=\\\"design.log\\\" readonly></textarea>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                  </div>\\r\\n               </form>\\r\\n            </div>\\r\\n            <div class=\\\"box-footer\\\">\\r\\n               <button type=\\\"submit\\\" class=\\\"btn btn-default pull-left\\\" (click)=\\\"saveNewVersion()\\\">Save as New Version</button>\\r\\n               <div class=\\\"pull-right\\\">\\r\\n                  <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"generateDesign()\\\" style=\\\"margin-right: 10px;\\\">Generate Design</button>\\r\\n                  <button type=\\\"submit\\\" class=\\\"btn btn-danger\\\" (click)=\\\"goBack()\\\">Close</button>\\r\\n                  <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" style=\\\"margin-left:10px\\\" (click)=\\\"save()\\\" [disabled]=\\\"form.invalid\\\">Save</button>\\r\\n               </div>\\r\\n            </div>\\r\\n         </div>\\r\\n      </div>\\r\\n   </div>\\r\\n</section>\\r\\n\"","export default \"<section class=\\\"content-header\\\">\\r\\n   <h1>Manage Designs</h1>\\r\\n   <ol class=\\\"breadcrumb\\\">\\r\\n      <li><a [routerLink]=\\\"['/home']\\\"><i class=\\\"fas fa-home\\\"></i> Home</a></li>\\r\\n   </ol>\\r\\n</section>\\r\\n\\r\\n<section class=\\\"content\\\">\\r\\n   <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-xs-12\\\">\\r\\n         <div class=\\\"box\\\">\\r\\n            <div class=\\\"box-header with-border\\\">\\r\\n               <h3 class=\\\"box-title\\\">Design List</h3>\\r\\n               <div class=\\\"box-tools pull-right\\\" data-toggle=\\\"tooltip\\\" title=\\\"\\\" data-original-title=\\\"Status\\\">\\r\\n                  <button [routerLink]=\\\"['details']\\\" class=\\\"btn btn-block btn-xs btn-primary\\\"> New Design</button>\\r\\n               </div>\\r\\n            </div>\\r\\n            <div class=\\\"box-body\\\">\\r\\n               <dt-search [searchFields]=\\\"searchFields\\\" (onSearch)=\\\"search($event)\\\"></dt-search>\\r\\n               <dt-pagination [totalPages]=\\\"totalPages\\\" (onPageSizeChange)=\\\"onPageSizeChange($event)\\\" (onPageChange)=\\\"onPageChange($event)\\\"></dt-pagination>\\r\\n\\r\\n               <table class=\\\"table table-bordered table-striped\\\">\\r\\n                  <thead>\\r\\n                     <tr (click)=\\\"onColumnClick($event.target)\\\">\\r\\n                        <th data-column=\\\"Name\\\" class=\\\"table-sorter\\\">Name</th>\\r\\n                        <th data-column=\\\"DesignType\\\" class=\\\"table-sorter\\\" style=\\\"max-width:200px\\\">Design Type</th>\\r\\n                        <th data-column=\\\"Version\\\" class=\\\"table-sorter\\\" style=\\\"max-width:100px\\\">Version</th>\\r\\n                        <th data-column=\\\"UpdatedBy\\\" class=\\\"table-sorter\\\" style=\\\"width: 150px;\\\">Updated By</th>\\r\\n                        <th data-column=\\\"UpdatedDate\\\" class=\\\"table-sorter\\\" style=\\\"width: 125px;\\\">Updated On</th>\\r\\n                        <th style=\\\"width:80px\\\"></th>\\r\\n                     </tr>\\r\\n                  </thead>\\r\\n                  <tbody>\\r\\n                     <ng-container *ngIf='designs && designs.length > 0'>\\r\\n                        <tr *ngFor='let design of designs'>\\r\\n                           <td>{{design.name}}</td>\\r\\n                           <td>{{design.designType}}</td>\\r\\n                           <td>{{design.version}}</td>\\r\\n                           <td>{{design.updatedBy}}</td>\\r\\n                           <td>{{design.updatedDate | date:'dd/MM/yyyy'}}</td>\\r\\n                           <td class=\\\"text-center\\\">\\r\\n                              <!--<a>\\r\\n                                 <i class=\\\"fa fa-code\\\" (click)=\\\"exportKML(design)\\\" title=\\\"Export\\\" style=\\\"font-size: 14px; cursor:pointer\\\"></i>\\r\\n                              </a>&nbsp;-->\\r\\n                              <a>\\r\\n                                 <i class=\\\"fa fa-edit\\\" [routerLink]=\\\"['details', design.referenceId]\\\" title=\\\"Edit\\\" style=\\\"font-size: 14px; cursor:pointer\\\"></i>\\r\\n                              </a>&nbsp;\\r\\n                              <a>\\r\\n                                 <i class=\\\"fa fa-trash\\\" (click)=\\\"delete(design)\\\" title=\\\"Remove\\\" style=\\\"font-size: 14px; cursor:pointer; color:red\\\"></i>\\r\\n                              </a>\\r\\n                           </td>\\r\\n                        </tr>\\r\\n                     </ng-container>\\r\\n                     <tr *ngIf='designs == null || designs.length == 0'>\\r\\n                        <td colspan=\\\"6\\\" style=\\\"text-align: center;\\\">\\r\\n                           {{statusMessage}}\\r\\n                        </td>\\r\\n                     </tr>\\r\\n                  </tbody>\\r\\n               </table>\\r\\n            </div>\\r\\n         </div>\\r\\n      </div>\\r\\n   </div>\\r\\n</section>\\r\\n\"","export default \"<section class=\\\"content-header\\\">\\r\\n   <h1>Manage Homepasses <small> {{title}} </small></h1>\\r\\n   <ol class=\\\"breadcrumb\\\">\\r\\n      <li><a [routerLink]=\\\"['/home']\\\"><i class=\\\"fa fa-home\\\"></i> Home</a></li>\\r\\n      <li><a [routerLink]=\\\"['/homepasses']\\\"> Homepasses</a></li>\\r\\n   </ol>\\r\\n</section>\\r\\n\\r\\n<section class=\\\"content\\\">\\r\\n   <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-xs-12\\\">\\r\\n         <div class=\\\"box\\\">\\r\\n            <div class=\\\"box-header with-border ui-sortable-handle\\\">\\r\\n               <ul class=\\\"nav nav-tabs form-menu\\\">\\r\\n                  <li [class]=\\\"isNew == true?'active': ''\\\" *ngIf=\\\"isNew == true\\\"><a href=\\\"#tab_import\\\" data-toggle=\\\"tab\\\"> <span style=\\\"font-size:1.2em\\\">Import</span></a></li>\\r\\n                  <li [class]=\\\"isNew == false?'active': ''\\\"><a href=\\\"#tab_map\\\" data-toggle=\\\"tab\\\"><span style=\\\"font-size:1.2em\\\">{{tabTitle}}</span></a></li>\\r\\n               </ul>\\r\\n               <div class=\\\"box-tools pull-right\\\">\\r\\n                  <button class=\\\"btn btn-social-icon btn-xs btn-danger\\\" (click)=\\\"goBack()\\\">\\r\\n                     <i class=\\\"fas fa-times\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                  </button>\\r\\n                  <button class=\\\"btn btn-social-icon btn-xs btn-success\\\" type=\\\"submit\\\" style=\\\"margin-left: 5px;\\\" (click)=\\\"save()\\\" [disabled]=\\\"form.invalid\\\">\\r\\n                     <i class=\\\"far fa-save\\\"></i>\\r\\n                  </button>\\r\\n               </div>\\r\\n            </div>\\r\\n            <div class=\\\"box-body\\\">\\r\\n               <form name=\\\"form\\\" action=\\\"javascript:{}\\\" #form=\\\"ngForm\\\" autocomplete=\\\"off\\\" novalidate>\\r\\n                  <div class=\\\"tab-content\\\">\\r\\n                     <div id=\\\"tab_import\\\" [class]=\\\"isNew == true?'tab-pane active': 'tab-pane'\\\">\\r\\n                        <div class=\\\"col-md-12\\\">\\r\\n                           <div class=\\\"form-group\\\">\\r\\n                              <label for=\\\"uploadFile\\\">Upload file</label>\\r\\n                              <div class=\\\"input-group\\\">\\r\\n                                 <input type=\\\"text\\\" class=\\\"form-control\\\" readonly id=\\\"uploadFile\\\" placeholder=\\\"Choose file\\\">\\r\\n                                 <span class=\\\"input-group-btn\\\">\\r\\n                                    <span class=\\\"btn btn-primary btn-file\\\">\\r\\n                                       Browse&hellip; <input type=\\\"file\\\" accept=\\\".csv, .kml, .zip\\\" #fileInput (click)=\\\"fileInput.value = null\\\" value=\\\"\\\" (change)=\\\"fileChangeEvent($event)\\\">\\r\\n                                    </span>\\r\\n                                 </span>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                           <div class=\\\"form-group\\\">\\r\\n                              <label *ngIf=\\\"homepasses && homepasses.length > 0\\\">Total Homepasses: {{homepasses.length}}</label>\\r\\n                              <table class=\\\"table table-bordered table-striped\\\">\\r\\n                                 <thead>\\r\\n                                    <tr>\\r\\n                                       <th style=\\\"width:150px\\\">Code</th>\\r\\n                                       <th>Name</th>\\r\\n                                       <th style=\\\"width:150px\\\">Type</th>\\r\\n                                       <th style=\\\"width:200px\\\">Lng/Lat</th>\\r\\n                                       <th style=\\\"width:115px\\\"># Connections</th>\\r\\n                                       <th style=\\\"width:50px\\\" class='text-center'></th>\\r\\n                                    </tr>\\r\\n                                 </thead>\\r\\n                                 <tbody>\\r\\n                                    <ng-container *ngIf='homepasses && homepasses.length > 0'>\\r\\n                                       <tr *ngFor='let homepass of homepasses;let rowIndex = index;'>\\r\\n                                          <td>{{homepass.code}}</td>\\r\\n                                          <td>{{homepass.name}}</td>\\r\\n                                          <td>{{homepass.type}}</td>\\r\\n                                          <td>{{homepass.geometry.coordinates[0]}} , {{homepass.geometry.coordinates[1]}}</td>\\r\\n                                          <td>{{homepass.connections}}</td>\\r\\n                                          <td style=\\\"text-align:center\\\">\\r\\n                                             <a (click)=\\\"removeUploadedHomepass(rowIndex)\\\" style=\\\"cursor:pointer\\\"><i class=\\\"fas fa-trash-alt\\\" style=\\\"font-size: 15px; color: Red;\\\" title=\\\"Delete\\\"></i></a>\\r\\n                                          </td>\\r\\n                                       </tr>\\r\\n                                    </ng-container>\\r\\n                                    <tr *ngIf='homepasses == null || homepasses.length == 0'>\\r\\n                                       <td colspan=\\\"6\\\" style=\\\"text-align: center;\\\">\\r\\n                                          Upload homepasses.\\r\\n                                       </td>\\r\\n                                    </tr>\\r\\n                                 </tbody>\\r\\n                              </table>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                     <div id=\\\"tab_map\\\" [class]=\\\"isNew == false?'tab-pane active': 'tab-pane'\\\">\\r\\n                        <div class=\\\"panel panel-default\\\">\\r\\n                           <div style=\\\"position: relative;\\\">\\r\\n                              <div id=\\\"homepassMap\\\" style=\\\"min-height: 481px;\\\"></div>\\r\\n                              <div class=\\\"box pull-right properties\\\" *ngIf=\\\"homepass != null\\\">\\r\\n                                 <div class=\\\"box-header with-border\\\">\\r\\n                                    <h3 class=\\\"box-title\\\">Properties</h3>\\r\\n                                    <div class=\\\"box-tools pull-right\\\">\\r\\n                                       <button class=\\\"btn btn-social-icon btn-xs btn-default\\\" (click)=\\\"homepass = null\\\">\\r\\n                                          <i class=\\\"fas fa-times\\\"></i>\\r\\n                                       </button>\\r\\n                                       <button class=\\\"btn btn-social-icon btn-xs btn-default\\\" style=\\\"margin-left: 5px;\\\" type=\\\"submit\\\" (click)=\\\"deleteHomepass()\\\">\\r\\n                                          <i class=\\\"fas fa-trash-alt\\\" style=\\\"color: Red;\\\"></i>\\r\\n                                       </button>\\r\\n                                    </div>\\r\\n                                 </div>\\r\\n                                 <div class=\\\"box-body\\\" style=\\\"height: 440px;overflow-y: auto;\\\">\\r\\n\\r\\n                                    <div class=\\\"panel-group\\\" [id]=\\\"homepass.name\\\">\\r\\n                                       <div class=\\\"panel panel-borderless\\\">\\r\\n                                          <div class=\\\"panel-heading\\\">\\r\\n                                             <h4 class=\\\"panel-title\\\">\\r\\n                                                <a class=\\\"accordion-toggle\\\" data-toggle=\\\"collapse\\\" [attr.data-parent]=\\\"'#'+homepass.name\\\" href=\\\"#info\\\">General Information</a>\\r\\n                                             </h4>\\r\\n                                          </div>\\r\\n                                          <div id=\\\"info\\\" class=\\\"panel-collapse collapse in\\\">\\r\\n                                             <div class=\\\"panel-body\\\">\\r\\n                                                <div class=\\\"form-group\\\">\\r\\n                                                   <label for=\\\"name\\\" class=\\\"control-label\\\">Name <span style=\\\"color:red;\\\">*</span></label>\\r\\n                                                   <input type=\\\"text\\\" class=\\\"form-control input-sm\\\" name=\\\"name\\\" [(ngModel)]=\\\"homepass.name\\\">\\r\\n                                                </div>\\r\\n                                                <div class=\\\"form-group\\\">\\r\\n                                                   <label for=\\\"code\\\" class=\\\"control-label\\\">Code <span style=\\\"color:red;\\\">*</span></label>\\r\\n                                                   <input type=\\\"text\\\" class=\\\"form-control input-sm\\\" name=\\\"code\\\" [(ngModel)]=\\\"homepass.code\\\">\\r\\n                                                </div>\\r\\n                                                <div class=\\\"form-group\\\">\\r\\n                                                   <label for=\\\"coordinates\\\" class=\\\"control-label\\\">Coordinates(Lng,Lat) </label>\\r\\n                                                   <input type=\\\"text\\\" class=\\\"form-control input-sm\\\" name=\\\"coordinates\\\" value=\\\"{{homepass.geometry.coordinates[0]}}, {{homepass.geometry.coordinates[1]}}\\\">\\r\\n                                                </div>\\r\\n                                                <div class=\\\"form-group\\\" *ngIf=\\\"homepass.area\\\">\\r\\n                                                   <label for=\\\"area\\\" class=\\\"control-label\\\">Coordinates (Polygon) </label>\\r\\n                                                   <textarea type=\\\"text\\\" class=\\\"form-control input-sm\\\" name=\\\"area\\\" rows=\\\"5\\\" readonly value=\\\"{{stringify(homepass.area.coordinates)}}\\\"></textarea>\\r\\n                                                </div>\\r\\n                                                <div class=\\\"form-group\\\">\\r\\n                                                   <label for=\\\"type\\\" class=\\\"control-label\\\">Type </label>\\r\\n                                                   <input type=\\\"text\\\" class=\\\"form-control input-sm\\\" name=\\\"description\\\" [(ngModel)]=\\\"homepass.type\\\">\\r\\n                                                </div>\\r\\n                                                <div class=\\\"form-group\\\">\\r\\n                                                   <label for=\\\"description\\\" class=\\\"control-label\\\">Description </label>\\r\\n                                                   <input type=\\\"text\\\" class=\\\"form-control input-sm\\\" name=\\\"description\\\" [(ngModel)]=\\\"homepass.description\\\">\\r\\n                                                </div>\\r\\n                                                <div class=\\\"form-group\\\">\\r\\n                                                   <label for=\\\"connections\\\" class=\\\"control-label\\\">Connections </label>\\r\\n                                                   <input type=\\\"number\\\" class=\\\"form-control input-sm\\\" name=\\\"connections\\\" [(ngModel)]=\\\"homepass.connections\\\">\\r\\n                                                </div>\\r\\n                                             </div>\\r\\n                                          </div>\\r\\n                                       </div>\\r\\n                                       <div style=\\\"padding-top:10px\\\">\\r\\n                                          <cf-group [customFields]=\\\"homepass.customFields\\\" [accordionId]=\\\"homepass.name\\\"></cf-group>\\r\\n                                       </div>\\r\\n                                       <!--<ng-container *ngIf='homepass.customFields && homepass.customFields.length > 0'>\\r\\n                                          <ng-container *ngFor='let groups of homepass.customFieldGroups;let rowIndex = index;'>\\r\\n                                             <ng-container *ngFor='let item of groups'>\\r\\n                                                <div class=\\\"panel panel-default\\\">\\r\\n                                                   <div class=\\\"panel-heading\\\">\\r\\n                                                      <h4 class=\\\"panel-title\\\">\\r\\n                                                         <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" [href]=\\\"'#cf_'+rowIndex\\\">{{item.category}}</a>\\r\\n                                                      </h4>\\r\\n                                                   </div>\\r\\n                                                   <div [id]=\\\"'cf_'+rowIndex\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                                                      <div class=\\\"panel-body\\\">\\r\\n                                                         <div class=\\\"form-group\\\">\\r\\n                                                            <label for=\\\"category\\\" class=\\\"control-label\\\">{{item.label}}</label>\\r\\n                                                         </div>\\r\\n                                                      </div>\\r\\n                                                   </div>\\r\\n                                                </div>\\r\\n                                             </ng-container>\\r\\n\\r\\n                                          </ng-container>\\r\\n                                       </ng-container>-->\\r\\n                                    </div>\\r\\n                                 </div>\\r\\n                              </div>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                  </div>\\r\\n               </form>\\r\\n            </div>\\r\\n            <div class=\\\"box-footer\\\">\\r\\n               <div class=\\\"pull-right\\\">\\r\\n                  <button type=\\\"submit\\\" class=\\\"btn btn-danger\\\" (click)=\\\"goBack()\\\">Close</button>\\r\\n                  <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" style=\\\"margin-left:10px\\\" (click)=\\\"save()\\\" [disabled]=\\\"form.invalid\\\">Save</button>\\r\\n               </div>\\r\\n            </div>\\r\\n         </div>\\r\\n      </div>\\r\\n   </div>\\r\\n</section>\\r\\n\"","export default \"<section class=\\\"content-header\\\">\\r\\n   <h1>Manage Homepasses</h1>\\r\\n   <ol class=\\\"breadcrumb\\\">\\r\\n      <li><a [routerLink]=\\\"['/home']\\\"><i class=\\\"fas fa-home\\\"></i> Home</a></li>\\r\\n   </ol>\\r\\n</section>\\r\\n\\r\\n<section class=\\\"content\\\">\\r\\n   <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-xs-12\\\">\\r\\n         <div class=\\\"box\\\">\\r\\n            <div class=\\\"box-header with-border\\\">\\r\\n               <h3 class=\\\"box-title\\\">Homepass List</h3>\\r\\n               <div class=\\\"box-tools pull-right\\\" title=\\\"\\\" *ngIf=\\\"permissions.add\\\">\\r\\n                  <button [routerLink]=\\\"['details']\\\" class=\\\"btn btn-block btn-xs btn-primary\\\"> New Homepass</button>\\r\\n               </div>\\r\\n            </div>\\r\\n            <div class=\\\"box-body\\\">\\r\\n               <dt-search [searchFields]=\\\"searchFields\\\" (onSearch)=\\\"search($event)\\\"></dt-search>\\r\\n               <dt-pagination [totalPages]=\\\"totalPages\\\" (onPageSizeChange)=\\\"onPageSizeChange($event)\\\" (onPageChange)=\\\"onPageChange($event)\\\"></dt-pagination>\\r\\n\\r\\n               <table class=\\\"table table-bordered table-striped\\\">\\r\\n                  <thead>\\r\\n                     <tr (click)=\\\"onColumnClick($event.target)\\\">\\r\\n                        <th data-column=\\\"Name\\\" class=\\\"table-sorter\\\" style=\\\"width: 200px;\\\">Name</th>\\r\\n                        <th data-column=\\\"Description\\\" class=\\\"table-sorter\\\" style=\\\"max-width:300px\\\">Description</th>\\r\\n                        <th data-column=\\\"Type\\\" class=\\\"table-sorter\\\" style=\\\"width: 100px;\\\">Type</th>\\r\\n                        <th data-column=\\\"UpdatedBy\\\" class=\\\"table-sorter\\\" style=\\\"width: 150px;\\\">Updated By</th>\\r\\n                        <th data-column=\\\"UpdatedDate\\\" class=\\\"table-sorter\\\" style=\\\"width: 125px;\\\">Updated On</th>\\r\\n                        <th style=\\\"width:60px\\\"></th>\\r\\n                     </tr>\\r\\n                  </thead>\\r\\n                  <tbody>\\r\\n                     <ng-container *ngIf='homepasses && homepasses.length > 0'>\\r\\n                        <tr *ngFor='let homepass of homepasses'>\\r\\n                           <td>{{homepass.name}}</td>\\r\\n                           <td class=\\\"text-overflow-ellipsis\\\">{{homepass.description}}</td>\\r\\n                           <td>{{homepass.type}}</td>\\r\\n                           <td>{{homepass.updatedBy}}</td>\\r\\n                           <td>{{homepass.updatedDate | date:'dd/MM/yyyy'}}</td>\\r\\n                           <td>\\r\\n                              <a *ngIf=\\\"permissions.edit\\\">\\r\\n                                 <i class=\\\"fa fa-edit\\\" [routerLink]=\\\"['details', homepass.id]\\\" title=\\\"Edit\\\" style=\\\"font-size: 14px; cursor:pointer\\\"></i>\\r\\n                              </a>&nbsp;\\r\\n                              <a *ngIf=\\\"permissions.delete\\\">\\r\\n                                 <i class=\\\"fa fa-trash\\\" (click)=\\\"delete(homepass)\\\" title=\\\"Remove\\\" style=\\\"font-size: 14px; cursor:pointer; color:red\\\"></i>\\r\\n                              </a>\\r\\n                           </td>\\r\\n                        </tr>\\r\\n                     </ng-container>\\r\\n                     <tr *ngIf='homepasses == null || homepasses.length == 0'>\\r\\n                        <td colspan=\\\"5\\\" style=\\\"text-align: center;\\\">\\r\\n                           {{statusMessage}}\\r\\n                        </td>\\r\\n                     </tr>\\r\\n                  </tbody>\\r\\n               </table>\\r\\n            </div>\\r\\n         </div>\\r\\n      </div>\\r\\n   </div>\\r\\n</section>\\r\\n\"","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient, HttpParams } from \"@angular/common/http\";\r\n\r\nimport { Accessory } from '../models/accessory';\r\nimport { PaginationRequest, SortOrder } from '../../common/models/paginationRequest';\r\nimport { PaginationResponse } from '../../common/models/paginationResponse';\r\nimport { ServiceResponse } from '../../common/models/serviceResponse';\r\n\r\n@Injectable()\r\nexport class AccessoryService {\r\n\r\n    getAccessoriesApi = 'Accessories/GetAccessories/';\r\n    getAccessoryApi = 'Accessories/GetAccessory/';\r\n    saveAccessoryApi = 'Accessories/SaveAccessory/';\r\n    deleteAccessoryApi = 'Accessories/DeleteAccessory/';\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    getAccessories(paginationRequest?: PaginationRequest): Observable<PaginationResponse> {\r\n\r\n        if (paginationRequest == null)\r\n            paginationRequest = {\r\n                page: null,\r\n                pageSize: null,\r\n                filter: null,\r\n                order: {\r\n                    orderByProperty: \"UpdatedDate\",\r\n                    sortOrder: SortOrder.descending\r\n                }\r\n            };\r\n\r\n        return this.http.post<PaginationResponse>(this.getAccessoriesApi, paginationRequest);\r\n    }\r\n\r\n    getAccessory(accessoryId): Observable<ServiceResponse> {\r\n\r\n        const params = new HttpParams()\r\n            .set('accessoryId', accessoryId);\r\n\r\n        return this.http.get<ServiceResponse>(this.getAccessoryApi, { params });\r\n    }\r\n\r\n    saveAccessory(accessory: Accessory): Observable<ServiceResponse> {\r\n\r\n        return this.http.post<ServiceResponse>(this.saveAccessoryApi, accessory);\r\n    }\r\n\r\n    deleteAccessory(accessoryId: string): Observable<ServiceResponse> {\r\n\r\n        const params = new HttpParams()\r\n            .set('accessoryId', accessoryId);\r\n\r\n        return this.http.delete<ServiceResponse>(this.deleteAccessoryApi, { params });\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { LoginUser } from './common/models/loginUser';\r\nimport { AuthService } from './common/auth/auth.service';\r\nimport { Helper } from './common/helper';\r\n\r\nconst STORE_KEY = 'NERP_RND_LastAction';\r\nconst MINUTES_UNITL_AUTO_LOGOUT = 60 // in mins\r\nconst CHECK_INTERVAL = 15000 // in ms\r\n\r\n@Component({\r\n    selector: 'app-root',\r\n    templateUrl: './app.component.html'\r\n})\r\nexport class AppComponent implements OnInit {\r\n\r\n    loginUser: LoginUser;\r\n\r\n    constructor(\r\n        private authService: AuthService,\r\n        private helperService: Helper) {\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n        this.loginUser = new LoginUser();\r\n\r\n        this.getFormData();\r\n\r\n        this.initListener();\r\n        this.initInterval();\r\n    }\r\n\r\n    getFormData() {\r\n\r\n        this.loginUser = new LoginUser();\r\n\r\n        this.authService.getLoginUserProfile().subscribe(\r\n            res => {\r\n                if (res.data && res.status.toLowerCase() == \"ok\") {\r\n                    this.loginUser = res.data;\r\n                    this.authService.loginUser = this.loginUser;\r\n                }\r\n                else {\r\n                    this.helperService.showAlertMessage(res.message, \"error\");\r\n                    this.onLogout();\r\n                }\r\n            },\r\n            err => {\r\n                this.helperService.showAlertMessage(err.message, 'error');\r\n                this.onLogout();\r\n            },\r\n        );\r\n    }\r\n\r\n    initListener() {\r\n        document.body.addEventListener('click', () => this.reset());\r\n        document.body.addEventListener('mouseover', () => this.reset());\r\n        document.body.addEventListener('mouseout', () => this.reset());\r\n        document.body.addEventListener('keydown', () => this.reset());\r\n        document.body.addEventListener('keyup', () => this.reset());\r\n        document.body.addEventListener('keypress', () => this.reset());\r\n    }\r\n\r\n    reset() {\r\n        this.setLastAction(Date.now());\r\n    }\r\n\r\n    public getLastAction() {\r\n        return parseInt(localStorage.getItem(STORE_KEY));\r\n    }\r\n\r\n    public setLastAction(lastAction: number) {\r\n        localStorage.setItem(STORE_KEY, lastAction.toString());\r\n    }\r\n\r\n    initInterval() {\r\n        setInterval(() => {\r\n            this.check();\r\n        }, CHECK_INTERVAL);\r\n    }\r\n\r\n    check() {\r\n        const now = Date.now();\r\n        const timeleft = this.getLastAction() + MINUTES_UNITL_AUTO_LOGOUT * 60 * 1000;\r\n        const diff = timeleft - now;\r\n        const isTimeout = diff < 0;\r\n\r\n        if (isTimeout) {\r\n            localStorage.clear();\r\n            this.onLogout();\r\n        }\r\n    }\r\n\r\n    onLogout() {\r\n        localStorage.removeItem('NERP-token');\r\n        //this.router.navigate(['/login']);\r\n        window.location.href = '/Auth/Logout';\r\n    }\r\n\r\n    //getPermission(featureCode: string, accessType: string): boolean {\r\n    //    return this.authService.getPermission(featureCode, accessType);\r\n    //}\r\n\r\n    getFeatureAccess(featureCode: string): boolean {\r\n        return this.authService.getFeatureAccess(featureCode);\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n   providedIn: 'root'\r\n})\r\nexport class AppConfig {\r\n   constructor() { }\r\n\r\n   baseUrl: string = \"\";\r\n\r\n   urls = {\r\n      \"Design\": {\r\n         getDesignsApi: \"Designs/GetDesigns/\",\r\n         getDesignApi: \"Designs/GetDesign/\",\r\n         saveDesignApi: \"Designs/SaveDesign/\",\r\n         deleteDesignApi: \"Designs/DeleteDesign/\",\r\n         deleteDocumentApi: \"Designs/DeleteDocument/\",\r\n         exportDesignApi: \"Designs/ExportDesign/\"\r\n      },\r\n      \"Routeware\": {\r\n         SortPoints: \"http://183.82.114.169:4000/api/Routeware/SortPoints\", //183.82.114.169:4000 ,\r\n         GenerateMST: \"http://183.82.114.169:4000/api/Routeware/GenerateMST\",\r\n         GenerateMSTRecursive: \"http://183.82.114.169:4000/api/Routeware/GenerateMSTRecursive\",\r\n      },\r\n\r\n   };\r\n\r\n   settings = {\r\n      \"Region\": 'Indonesia\\\\Jakarta',\r\n      \"MapCenter\": [-6.14063, 106.734856]\r\n   };\r\n}\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport 'hammerjs';\r\nimport { Routing } from './app.routing';\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { Dashboard } from './dashboard/views/dashboard';\r\nimport { HomepassModule } from './homepasses/homepass.module';\r\nimport { ClusterModule } from './clusters/cluster.module';\r\nimport { DesignModule } from './designs/design.module';\r\nimport { AuthService } from './common/auth/auth.service';\r\nimport { Helper } from './common/helper';\r\nimport { CacheInterceptor } from './common/interceptors/cacheInterceptor';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent,\r\n        Dashboard\r\n    ],\r\n    imports: [\r\n        BrowserModule,\r\n        BrowserAnimationsModule,\r\n        HttpClientModule,\r\n        Routing,\r\n        FormsModule,\r\n        HomepassModule,\r\n        ClusterModule,\r\n        DesignModule,\r\n    ],\r\n\r\n    providers: [\r\n        AuthService,\r\n        Helper,\r\n        { provide: HTTP_INTERCEPTORS, useClass: CacheInterceptor, multi: true }\r\n    ],\r\n\r\n    bootstrap: [AppComponent]\r\n\r\n})\r\nexport class AppModule { }\r\n","import { Routes, RouterModule } from '@angular/router';\r\nimport { Dashboard } from './dashboard/views/dashboard';\r\n\r\nconst appRoutes: Routes = [\r\n    { path: '', redirectTo: 'home', pathMatch: 'full' },\r\n    { path: 'home', component: Dashboard },\r\n    {\r\n        path: 'homepasses',\r\n        loadChildren: () => import('./homepasses/homepass.module').then(m => m.HomepassModule)\r\n    },\r\n    {\r\n        path: 'clusters',\r\n        loadChildren: () => import('./clusters/cluster.module').then(m => m.ClusterModule)\r\n    },\r\n    {\r\n        path: 'designs',\r\n        loadChildren: () => import('./designs/design.module').then(m => m.DesignModule)\r\n    }\r\n];\r\n\r\nexport const Routing = RouterModule.forRoot(appRoutes);\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient, HttpParams } from \"@angular/common/http\";\r\n\r\nimport { Civilwork } from '../models/civilwork';\r\nimport { PaginationRequest, SortOrder } from '../../common/models/paginationRequest';\r\nimport { PaginationResponse } from '../../common/models/paginationResponse';\r\nimport { ServiceResponse } from '../../common/models/serviceResponse';\r\n\r\n@Injectable()\r\nexport class CivilworkService {\r\n\r\n    getCivilworksApi = 'Civilworks/GetCivilworks/';\r\n    getCivilworkApi = 'Civilworks/GetCivilwork/';\r\n    saveCivilworkApi = 'Civilworks/SaveCivilwork/';\r\n    deleteCivilworkApi = 'Civilworks/DeleteCivilwork/';\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    getCivilworks(paginationRequest?: PaginationRequest): Observable<PaginationResponse> {\r\n\r\n        if (paginationRequest == null)\r\n            paginationRequest = {\r\n                page: null,\r\n                pageSize: null,\r\n                filter: null,\r\n                order: {\r\n                    orderByProperty: \"name\",\r\n                    sortOrder: SortOrder.descending\r\n                }\r\n            };\r\n\r\n        return this.http.post<PaginationResponse>(this.getCivilworksApi, paginationRequest);\r\n    }\r\n\r\n    getCivilwork(civilworkId): Observable<ServiceResponse> {\r\n\r\n        const params = new HttpParams()\r\n            .set('civilworkId', civilworkId);\r\n\r\n        return this.http.get<ServiceResponse>(this.getCivilworkApi, { params });\r\n    }\r\n\r\n    saveCivilwork(civilwork: Civilwork): Observable<ServiceResponse> {\r\n\r\n        return this.http.post<ServiceResponse>(this.saveCivilworkApi, civilwork);\r\n    }\r\n\r\n    deleteCivilwork(civilworkId: string): Observable<ServiceResponse> {\r\n\r\n        const params = new HttpParams()\r\n            .set('civilworkId', civilworkId);\r\n\r\n        return this.http.delete<ServiceResponse>(this.deleteCivilworkApi, { params });\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n//import { CheckboxModule } from 'primeng/checkbox';\r\n\r\n//import { TreeModule } from 'primeng/tree';\r\n//import { TreeTableModule } from 'primeng/treetable';\r\nimport { MatCheckboxModule } from '@angular/material';\r\n\r\nimport { ClusterList } from './views/cluster-list';\r\nimport { ClusterDetails } from './views/cluster-details';\r\nimport { ClusterService } from './services/cluster.service';\r\nimport { ClusterRouting } from './cluster.routes';\r\nimport { SharedModule } from '../shared.module';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        MatCheckboxModule,\r\n        //TreeTableModule,\r\n        ClusterRouting,\r\n        SharedModule\r\n    ],\r\n    declarations: [\r\n        ClusterList,\r\n        ClusterDetails\r\n    ],\r\n    providers: [\r\n        ClusterService\r\n    ]\r\n})\r\nexport class ClusterModule { }\r\n","import { ModuleWithProviders } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { ClusterList } from './views/cluster-list';\r\nimport { ClusterDetails } from './views/cluster-details';\r\n\r\nexport const clusterRoutes: Routes = [\r\n   {\r\n      path: 'clusters',\r\n      children: [\r\n         { path: '', component: ClusterList },\r\n         { path: 'details', component: ClusterDetails },\r\n         { path: 'details/:id', component: ClusterDetails },\r\n      ]\r\n   },\r\n];\r\n\r\nexport const ClusterRouting: ModuleWithProviders = RouterModule.forChild(clusterRoutes);\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient, HttpParams } from \"@angular/common/http\";\r\n\r\nimport { PaginationRequest, SortOrder } from '../../common/models/paginationRequest';\r\nimport { PaginationResponse } from '../../common/models/paginationResponse';\r\nimport { ServiceResponse } from '../../common/models/serviceResponse';\r\nimport { Cluster } from '../models/cluster';\r\n\r\n@Injectable()\r\nexport class ClusterService {\r\n\r\n    getClustersApi = 'Clusters/GetClusters/';\r\n    getClusterApi = 'Clusters/GetCluster/';\r\n    saveClusterApi = 'Clusters/SaveCluster/';\r\n    saveClustersApi = 'Clusters/SaveClusters/';\r\n    deleteClusterApi = 'Clusters/DeleteCluster/';\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    getClusters(paginationRequest?: PaginationRequest): Observable<PaginationResponse> {\r\n\r\n        if (paginationRequest == null)\r\n            paginationRequest = {\r\n                page: null,\r\n                pageSize: null,\r\n                filter: null,\r\n                order: {\r\n                    orderByProperty: \"UpdatedDate\",\r\n                    sortOrder: SortOrder.descending\r\n                }\r\n            };\r\n\r\n        return this.http.post<PaginationResponse>(this.getClustersApi, paginationRequest);\r\n    }\r\n\r\n    getCluster(clusterId): Observable<ServiceResponse> {\r\n\r\n        const params = new HttpParams()\r\n            .set('clusterId', clusterId);\r\n\r\n        return this.http.get<ServiceResponse>(this.getClusterApi, { params });\r\n    }\r\n\r\n    saveCluster(cluster: Cluster): Observable<ServiceResponse> {\r\n\r\n        return this.http.post<ServiceResponse>(this.saveClusterApi, cluster);\r\n    }\r\n\r\n    saveClusters(clusters: Cluster[]): Observable<ServiceResponse> {\r\n\r\n        return this.http.post<ServiceResponse>(this.saveClustersApi, clusters);\r\n    }\r\n\r\n    deleteCluster(clusterId: string): Observable<ServiceResponse> {\r\n\r\n        const params = new HttpParams()\r\n            .set('clusterId', clusterId);\r\n\r\n        return this.http.delete<ServiceResponse>(this.deleteClusterApi, { params });\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Location } from '@angular/common';\r\nimport { ClusterService } from '../services/cluster.service';\r\nimport { HomepassService } from '../../homepasses/services/homepass.service';\r\nimport { Helper } from '../../common/helper';\r\nimport { GMapsHelper } from '../../common/geo/googleMapsHelper';\r\nimport { AppConfig } from '../../app.config';\r\nimport { Cluster } from '../models/cluster';\r\nimport { Point, Polygon } from '../../common/geo/geometry';\r\nimport { Homepass } from '../../homepasses/models/homepass';\r\nimport { ServiceResponse } from '../../common/models/serviceResponse';\r\n\r\ndeclare var $: any;\r\ndeclare var shp: any;\r\ndeclare var toGeoJSON: any;\r\n\r\n@Component({\r\n   templateUrl: './cluster-details.html',\r\n   providers: [ClusterService],\r\n})\r\nexport class ClusterDetails implements OnInit {\r\n\r\n   polyOptions: any;\r\n   map: any;\r\n   drawingManager: any;\r\n\r\n   clusterId: string;\r\n   title: string = \"New Cluster\";\r\n   tabTitle: string = \"Add New\";\r\n   isNew = true;\r\n   cluster: Cluster;\r\n   clusters: Cluster[] = new Array<Cluster>();\r\n\r\n   constructor(\r\n      private location: Location,\r\n      private route: ActivatedRoute,\r\n      private httpClient: HttpClient,\r\n      private appConfig: AppConfig,\r\n      private clusterService: ClusterService,\r\n      private homepassService: HomepassService,\r\n      private helper: Helper) {\r\n\r\n      this.polyOptions = {\r\n         strokeWeight: 0,\r\n         fillOpacity: 0.45,\r\n         editable: false,\r\n         draggable: false\r\n      };\r\n   }\r\n\r\n   ngOnInit() {\r\n\r\n      let location = GMapsHelper.getLatLng(this.appConfig.settings.MapCenter);\r\n      this.map = GMapsHelper.initializeMap('clusterMap', location, 18, 21);\r\n      this.drawingManager = GMapsHelper.drawingManagerTool(this.map, null, ['rectangle', 'polygon'], this.polyOptions);\r\n\r\n      this.route.params.subscribe(\r\n         params => {\r\n            this.clusterId = params['id'];\r\n\r\n            if (this.clusterId == null) {\r\n               this.title = \"New Cluster\";\r\n               this.isNew = true;\r\n            }\r\n            else {\r\n               this.title = \"Edit Cluster\";\r\n               this.tabTitle = \"Edit Cluster\";\r\n               this.isNew = false;\r\n               this.drawingManager.setMap(null);\r\n            }\r\n\r\n            this.getFormData(this.clusterId);\r\n         });\r\n\r\n      GMapsHelper.addListener(this.drawingManager, 'overlaycomplete', async (event) => {\r\n\r\n         this.drawingManager.setDrawingMode(null);\r\n\r\n         event.overlay.setOptions({ draggable: false });\r\n         event.overlay.setOptions({ editable: false });\r\n\r\n         let cluster = {\r\n            name: \"\",\r\n            code: \"\",\r\n            description: \"\",\r\n            geometry: null,\r\n            homepasses: null,\r\n\r\n            marker: event.overlay,\r\n            allHomepasses: null\r\n         };\r\n\r\n         await this.addHomepasses(cluster, event.type);\r\n\r\n         this.clusters.push(cluster);\r\n\r\n      });\r\n   }\r\n\r\n   getFormData(clusterId: string) {\r\n\r\n      this.clusterService.getCluster(clusterId).subscribe(\r\n         async resp => {\r\n            this.cluster = null;\r\n            if (resp.status.toLowerCase() == \"error\") {\r\n               this.helper.showAlertMessage(resp.message, \"error\");\r\n            }\r\n            else {\r\n               if (resp.data != null) {\r\n                  var cluster = resp.data;\r\n\r\n                  var polygon = GMapsHelper.createPolygon(cluster.geometry.coordinates, this.polyOptions);\r\n\r\n                  polygon.setMap(this.map);\r\n\r\n                  cluster.marker = polygon;\r\n\r\n                  await this.addHomepasses(cluster);\r\n\r\n                  this.cluster = cluster;\r\n                  this.clusters.push(this.cluster);\r\n\r\n                  var latlngs = GMapsHelper.getLatLngsFromPolygon(cluster.geometry.coordinates);\r\n                  GMapsHelper.setBounds(latlngs, this.map);\r\n\r\n                  //var center = GeoHelper.polygonCenter(this.cluster.geometry);\r\n                  //this.clusterMap.setCenter({ lng: center[0], lat: center[1] });\r\n               }\r\n            }\r\n\r\n            $(\"#ajax-loading\").hide();\r\n         },\r\n         (err) => {\r\n            $(\"#ajax-loading\").hide();\r\n            this.cluster = null;\r\n            let msg = `Unable to fetch cluster : ${err.message}`;\r\n            this.helper.showAlertMessage(msg, \"error\");\r\n         });\r\n   }\r\n\r\n   async addHomepasses(cluster: Cluster, drawingMode?: string) {\r\n\r\n      let polygonArray: any;\r\n      let radius = null;\r\n      let center = null;\r\n\r\n      if (drawingMode == 'rectangle') {\r\n         polygonArray = GMapsHelper.boundsToPolygon(cluster.marker.getBounds());\r\n      }\r\n      else if (drawingMode == 'polygon') {\r\n         polygonArray = GMapsHelper.pathArrayToPolygon(cluster.marker.getPath().getArray());\r\n      }\r\n      else {\r\n         polygonArray = GMapsHelper.pathArrayToPolygon(cluster.marker.getPath().getArray());\r\n      }\r\n      //else if (drawingMode == 'circle') {\r\n      //    center = [cluster.marker.center.lng(), cluster.marker.center.lat()];\r\n      //    radius = cluster.marker.getRadius();\r\n      //}\r\n\r\n      cluster.geometry = new Polygon(polygonArray);\r\n\r\n      if (drawingMode == 'circle')\r\n         cluster.allHomepasses = await this.getHomepassesWithinRadius(center, radius);\r\n      else\r\n         cluster.allHomepasses = await this.getHomepasses(cluster.geometry);\r\n\r\n      this.addEventListners(cluster, drawingMode);\r\n   }\r\n\r\n   async getHomepassesWithinRadius(center: Point, radius: number) {\r\n\r\n      let homepasses = new Array<Homepass>();\r\n\r\n      var resp = await this.httpClient.post<ServiceResponse>(this.homepassService.getHomepassesWithinRadiusApi, { Center: center, Radius: radius }).toPromise();\r\n\r\n      if (resp.status.toLowerCase() != \"error\") {\r\n         if (resp.data != null && resp.data.length > 0) {\r\n            homepasses = resp.data;\r\n         }\r\n      }\r\n\r\n      return homepasses;\r\n\r\n   }\r\n\r\n   async getHomepasses(polygon: Polygon) {\r\n\r\n      let homepasses = new Array<Homepass>();\r\n\r\n      var resp = await this.httpClient.post<ServiceResponse>(this.homepassService.getHomepassesInPolygonApi, polygon).toPromise();\r\n\r\n      if (resp.status.toLowerCase() != \"error\") {\r\n         if (resp.data != null && resp.data.length > 0) {\r\n            homepasses = resp.data;\r\n         }\r\n      }\r\n\r\n      return homepasses;\r\n\r\n   }\r\n\r\n   addEventListners(cluster: Cluster, drawingMode?: string) {\r\n\r\n      GMapsHelper.addListener(cluster.marker, \"rightclick\", (event) => {\r\n\r\n         if (cluster.marker.draggable == false) {\r\n            cluster.marker.setOptions({ draggable: true, editable: true });\r\n         }\r\n         else {\r\n            cluster.marker.setOptions({ draggable: false, editable: false });\r\n         }\r\n      });\r\n\r\n      //GMapsHelper.addListener(cluster.marker, 'dragend', (event) => {\r\n      //    cluster.marker.data.location.coordinates[0] = event.latLng.lng();\r\n      //    cluster.marker.data.location.coordinates[1] = event.latLng.lat();\r\n      //    this.cluster = cluster;\r\n      //});\r\n\r\n\r\n      //if (drawingMode == 'rectangle') {\r\n      //    GMapsHelper.addListener(cluster.marker.getBounds(), 'set_at', async () => {\r\n      //        let polygonArray = GMapsHelper.boundsToPolygon(cluster.marker.getBounds());\r\n      //        cluster.geometry = new Polygon(polygonArray);\r\n\r\n      //        cluster.allHomepasses = await this.getHomepasses(cluster.geometry);\r\n      //    });\r\n\r\n      //    GMapsHelper.addListener(cluster.marker.getBounds(), 'insert_at', async () => {\r\n      //        let polygonArray = GMapsHelper.boundsToPolygon(cluster.marker.getBounds());\r\n      //        cluster.geometry = new Polygon(polygonArray);\r\n\r\n      //        cluster.allHomepasses = await this.getHomepasses(cluster.geometry);\r\n      //    });\r\n\r\n      //    GMapsHelper.addListener(cluster.marker.getBounds(), 'remove_at', async () => {\r\n      //        let polygonArray = GMapsHelper.boundsToPolygon(cluster.marker.getBounds());\r\n      //        cluster.geometry = new Polygon(polygonArray);\r\n\r\n      //        cluster.allHomepasses = await this.getHomepasses(cluster.geometry);\r\n      //    });\r\n      //}\r\n      //else {\r\n      //    GMapsHelper.addListener(cluster.marker.getPath(), 'set_at', async () => {\r\n      //        let polygonArray = GMapsHelper.pathArrayToPolygon(cluster.marker.getPath().getArray());\r\n      //        cluster.geometry = new Polygon(polygonArray);\r\n\r\n      //        cluster.allHomepasses = await this.getHomepasses(cluster.geometry);\r\n      //    });\r\n\r\n      //    GMapsHelper.addListener(cluster.marker.getPath(), 'insert_at', async () => {\r\n      //        let polygonArray = GMapsHelper.pathArrayToPolygon(cluster.marker.getPath().getArray());\r\n      //        cluster.geometry = new Polygon(polygonArray);\r\n\r\n      //        cluster.allHomepasses = await this.getHomepasses(cluster.geometry);\r\n      //    });\r\n\r\n      //    GMapsHelper.addListener(cluster.marker.getPath(), 'remove_at', async () => {\r\n      //        let polygonArray = GMapsHelper.pathArrayToPolygon(cluster.marker.getPath().getArray());\r\n      //        cluster.geometry = new Polygon(polygonArray);\r\n\r\n      //        cluster.allHomepasses = await this.getHomepasses(cluster.geometry);\r\n      //    });\r\n      //}\r\n\r\n      GMapsHelper.addListener(cluster.marker, 'click', (event) => {\r\n         this.cluster = cluster;\r\n      });\r\n\r\n   }\r\n\r\n   stringify(obj: any): string {\r\n      return JSON.stringify(obj);\r\n   }\r\n\r\n   removeUploadedCluster(index: number) {\r\n      var cluster = this.clusters[index];\r\n\r\n      if (cluster.marker)\r\n         cluster.marker.setMap(null);\r\n\r\n      this.clusters.splice(index, 1);\r\n   }\r\n\r\n   isAllSelected() {\r\n      const numSelected = this.cluster.homepasses ? this.cluster.homepasses.length : 0;\r\n      const numRows = this.cluster.allHomepasses.length;\r\n      return numSelected === numRows;\r\n   }\r\n\r\n   toggleSelection(homepass: Homepass) {\r\n\r\n      var index = -1;\r\n\r\n      if (this.cluster.homepasses)\r\n         index = this.cluster.homepasses.findIndex(x => x == homepass.id);\r\n      else\r\n         this.cluster.homepasses = [];\r\n\r\n      if (index == -1)\r\n         this.cluster.homepasses.push(homepass.id);\r\n      else\r\n         this.cluster.homepasses.splice(index, 1);\r\n   }\r\n\r\n   masterToggle() {\r\n\r\n      if (this.isAllSelected()) {\r\n         this.cluster.homepasses = [];\r\n      }\r\n      else {\r\n         this.cluster.homepasses = [];\r\n         this.cluster.allHomepasses.forEach(x => this.cluster.homepasses.push(x.id));\r\n      }\r\n   }\r\n\r\n   fileChangeEvent(event: any) {\r\n\r\n      var file = event.target.files[0];\r\n\r\n      var reader = new FileReader();\r\n\r\n      var fileExt = file.name.split('.').pop().toLowerCase();\r\n\r\n      reader.onload = (e) => {\r\n\r\n         try {\r\n\r\n            if (fileExt == \"kml\") {\r\n               let kml = reader.result as string;\r\n               let geojson = toGeoJSON.kml((new DOMParser()).parseFromString(kml, 'text/xml'));\r\n               this.populateClusters(geojson.features);\r\n            }\r\n            else if (fileExt == \"zip\") {\r\n               shp(reader.result as ArrayBuffer).then((geojson) => {\r\n                  this.populateClusters(geojson.features);\r\n               });\r\n            }\r\n\r\n         } catch (e) {\r\n            this.helper.showAlertMessage(\"Could not parse the file.\", \"error\");\r\n         }\r\n\r\n      }\r\n\r\n      if (fileExt == \"csv\" || fileExt == \"kml\")\r\n         reader.readAsText(file);\r\n      else if (fileExt == \"zip\")\r\n         reader.readAsArrayBuffer(file);\r\n      else\r\n         this.helper.showAlertMessage(\"Invalid file format\", \"error\");\r\n   }\r\n\r\n   populateClusters(features: any) {\r\n\r\n      this.clusters.length = 0;\r\n\r\n      let clusters = new Array<Cluster>();\r\n\r\n      for (var i = 0; i < features.length; i++) {\r\n         let properties = features[i].properties;\r\n\r\n         let cluster = {\r\n            name: properties.name,\r\n            code: properties.name,\r\n            description: \"\",\r\n            geometry: features[i].geometry,\r\n            homepasses: null,\r\n\r\n            marker: null,\r\n            allHomepasses: null\r\n         };\r\n\r\n         var polygon = GMapsHelper.createPolygon(cluster.geometry.coordinates, this.polyOptions);\r\n\r\n         polygon.setMap(this.map);\r\n\r\n         cluster.marker = polygon;\r\n\r\n         clusters.push(cluster);\r\n\r\n         this.addHomepasses(cluster);\r\n      }\r\n\r\n      this.clusters = clusters;\r\n   }\r\n\r\n   deleteCluster() {\r\n      var index = this.clusters.findIndex(x => x.geometry.coordinates[0] == this.cluster.geometry.coordinates[0] && x.geometry.coordinates[1] == this.cluster.geometry.coordinates[1]);\r\n\r\n      if (this.clusters[index].marker)\r\n         this.clusters[index].marker.setMap(null);\r\n\r\n      this.clusters.splice(index, 1);\r\n\r\n      this.cluster = null;\r\n\r\n      if (this.isNew == false) {\r\n         this.clusterService.deleteCluster(this.cluster.id).subscribe(\r\n            resp => {\r\n               if (resp.status.toLowerCase() == \"error\") {\r\n                  this.helper.showAlertMessage(resp.message, \"error\");\r\n               }\r\n               else {\r\n                  this.helper.showAlertMessage(\"Cluster successfully deleted\", \"success\");\r\n                  this.goBack();\r\n               }\r\n            },\r\n            (err) => {\r\n               this.helper.showAlertMessage(\"Unable to delete cluster information.\", \"error\");\r\n            });\r\n      }\r\n   }\r\n\r\n   save() {\r\n\r\n      var errorMessages = this.validateCluster(this.clusters);\r\n\r\n      if (errorMessages.length == 0) {\r\n\r\n         this.clusters.forEach(x => { x.marker = null; x.allHomepasses = null });\r\n\r\n         this.clusterService.saveClusters(this.clusters).subscribe(\r\n            resp => {\r\n               if (resp.status.toLowerCase() == \"error\") {\r\n                  this.helper.showAlertMessage(resp.message, \"error\");\r\n               }\r\n               else {\r\n                  this.helper.showAlertMessage(\"Cluster information saved\", \"success\");\r\n                  this.goBack();\r\n               }\r\n            },\r\n            (err) => {\r\n               this.helper.showAlertMessage(\"Unable to save cluster information.\", \"error\");\r\n            });\r\n      }\r\n      else {\r\n         var errorMessage = this.helper.getErrorMessagesText(errorMessages);\r\n         this.helper.showAlertMessage(errorMessage, \"error\");\r\n      }\r\n   }\r\n\r\n   validateCluster(clusters: Cluster[]): string[] {\r\n      var errorMessages = [];\r\n\r\n      this.clusters.forEach(cluster => {\r\n\r\n         if (cluster.name == null || cluster.name.trim() == '')\r\n            errorMessages.push(\"Cluster Name cannot be empty\");\r\n\r\n         if (cluster.code == null || cluster.code.trim() == '')\r\n            errorMessages.push(\"Cluster Code cannot be empty\");\r\n      });\r\n\r\n      return errorMessages;\r\n   }\r\n\r\n   goBack(): void {\r\n      this.location.back();\r\n   }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { Cluster } from '../models/cluster';\r\nimport { ClusterService } from '../services/cluster.service';\r\nimport { Helper } from '../../common/helper';\r\nimport { SearchField } from '../../common/models/SearchField';\r\nimport { SearchFilter, SortOrder, ConditionOperator, Filter } from '../../common/models/paginationRequest';\r\n\r\ndeclare var $: any;\r\ndeclare var jBox: any;\r\n\r\n@Component({\r\n    templateUrl: './cluster-list.html'\r\n})\r\nexport class ClusterList implements OnInit {\r\n\r\n    clusters = new Array<Cluster>();\r\n    statusMessage: string = \"\";\r\n    pageSize = 10;\r\n    currentPage = 1;\r\n    totalPages = 1;\r\n    searchFields: SearchField[];\r\n    searchFilter: SearchFilter;\r\n    sortColumn: string;\r\n    sortOrder: SortOrder = SortOrder.descending;\r\n    previousElement: HTMLElement;\r\n\r\n    constructor(\r\n        private clusterService: ClusterService,\r\n        private helper: Helper) {\r\n\r\n        this.searchFields = new Array<SearchField>();\r\n        this.searchFields.push({ field: 'Code', label: 'Code', dataType: \"text\", value: \"\" });\r\n        this.searchFields.push({ field: 'Name', label: 'Name', dataType: \"text\", value: \"\" });\r\n        this.searchFields.push({ field: 'Description', label: 'Description', dataType: \"text\", value: \"\" });\r\n        this.searchFields.push({ field: 'UpdatedBy', label: 'Updated By', dataType: \"text\", value: \"\" });\r\n        this.searchFields.push({ field: 'UpdatedDate', label: 'Updated On', dataType: \"date\", value: \"\" });\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.statusMessage = \"Loading Clusters...\";\r\n        this.pageSize = 10;\r\n        this.currentPage = 1;\r\n        this.sortColumn = null;\r\n        this.sortOrder = SortOrder.noSort;\r\n        this.getFormData();\r\n    }\r\n\r\n    getFormData() {\r\n\r\n        $(\"#ajax-loading\").show();\r\n\r\n        this.totalPages = 1;\r\n\r\n        let paginationRequest = {\r\n            page: this.currentPage,\r\n            pageSize: this.pageSize,\r\n            filter: this.searchFilter,\r\n            order: {\r\n                orderByProperty: this.sortColumn,\r\n                sortOrder: this.sortOrder\r\n            }\r\n        };\r\n\r\n        this.clusterService.getClusters(paginationRequest).subscribe(\r\n            resp => {\r\n                this.clusters = null;\r\n                if (resp.status.toLowerCase() == \"error\") {\r\n                    this.statusMessage = resp.message;\r\n                    this.helper.showAlertMessage(this.statusMessage, \"error\");\r\n                }\r\n                else {\r\n                    if (resp.data != null && resp.data.length > 0) {\r\n                        this.clusters = resp.data;\r\n                        this.totalPages = Math.ceil(resp.recordCount / this.pageSize);\r\n                    }\r\n                    else {\r\n                        this.statusMessage = \"There are no registered clusters.\";\r\n                    }\r\n                }\r\n\r\n                $(\"#ajax-loading\").hide();\r\n            },\r\n            (err) => {\r\n                $(\"#ajax-loading\").hide();\r\n                this.clusters = null;\r\n                let msg = `Unable to fetch clusters : ${err.message}`;\r\n                this.helper.showAlertMessage(msg, \"error\");\r\n                this.statusMessage = \"Error fetching clusters.\";\r\n            });\r\n    }\r\n\r\n    search(searchFilter) {\r\n\r\n        this.searchFilter = searchFilter;\r\n        this.getFormData();\r\n    }\r\n\r\n    onPageSizeChange(pageSize) {\r\n        this.pageSize = pageSize;\r\n        this.getFormData();\r\n    }\r\n\r\n    onPageChange(currentPage) {\r\n        this.currentPage = currentPage;\r\n        this.getFormData();\r\n    }\r\n\r\n    onColumnClick(e: HTMLElement) {\r\n\r\n        if (this.previousElement && e.getAttribute('data-column') != this.previousElement.getAttribute('data-column')) {\r\n            this.previousElement.classList.remove('table-sorter-desc');\r\n            this.previousElement.classList.remove('table-sorter-asc');\r\n        }\r\n\r\n        this.previousElement = e;\r\n\r\n        this.sortColumn = e.getAttribute('data-column');\r\n\r\n        if (e.classList.contains(\"table-sorter-asc\")) {\r\n            e.classList.remove('table-sorter-asc');\r\n            e.classList.add('table-sorter-desc');\r\n            this.sortOrder = SortOrder.descending;\r\n        }\r\n        else if (e.classList.contains(\"table-sorter-desc\")) {\r\n            e.classList.remove('table-sorter-desc');\r\n            this.sortColumn = null;\r\n            this.sortOrder = SortOrder.noSort;\r\n        }\r\n        else {\r\n            e.classList.add('table-sorter-asc');\r\n            this.sortOrder = SortOrder.ascending;\r\n        }\r\n\r\n        this.getFormData();\r\n    }\r\n\r\n    delete(cluster: Cluster) {\r\n        new jBox(\"Confirm\", {\r\n            minWidth: 500,\r\n            minHeight: 70,\r\n            title: \"<b>Delete Cluster</b>\",\r\n            overlay: false,\r\n            content: \"Do you want to delete cluster - \" + cluster.name,\r\n            draggable: \"title\",\r\n            confirmButton: \"Yes\",\r\n            cancelButton: \"No\",\r\n            confirm: () => {\r\n                this.clusterService.deleteCluster(cluster.id).subscribe(\r\n                    resp => {\r\n                        if (resp.status.toLowerCase() == \"error\") {\r\n                            this.helper.showAlertMessage(resp.message, \"error\");\r\n                        }\r\n                        else {\r\n                            if (resp.data != null) {\r\n                                this.helper.showAlertMessage(\"Cluster deleted.\", \"success\");\r\n                                this.getFormData();\r\n                            }\r\n                            else {\r\n                                this.helper.showAlertMessage(\"Error deleting cluster\", \"error\");\r\n                            }\r\n                        }\r\n                    },\r\n                    (err) => {\r\n                        this.helper.showAlertMessage(\"Error deleting cluster\", \"error\");\r\n                    });\r\n            }\r\n        }).open();\r\n    }\r\n\r\n    //getPermission(featureCode: string, accessType: string): boolean {\r\n    //   return this.accountService.getPermission(featureCode, accessType);\r\n    //}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, of, forkJoin } from 'rxjs';\r\nimport { HttpClient, HttpParams } from \"@angular/common/http\";\r\nimport { ServiceResponse } from '../models/serviceResponse';\r\nimport { LoginUser } from '../models/loginUser';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n\r\n    constructor(private http: HttpClient) { }\r\n    loginUser: LoginUser;\r\n\r\n    authenticateUser(loginCredentials: any): Observable<ServiceResponse> {\r\n\r\n        return this.http.post<ServiceResponse>('/Auth/Authenticate', loginCredentials);\r\n    }\r\n\r\n    getLoginUserProfile(): Observable<ServiceResponse> {\r\n\r\n        return this.http.get<ServiceResponse>('/Auth/GetLoginUserProfile');\r\n    }\r\n\r\n    getFeatureAccess(featureCode: string) {\r\n        if (this.loginUser)\r\n            return this.loginUser.features.includes(featureCode);\r\n        else\r\n            return false;\r\n    }\r\n\r\n    getFunctionalityAccess(permissionCode: string) {\r\n\r\n        if (this.loginUser)\r\n            return this.loginUser.permissions.includes(permissionCode);\r\n        else\r\n            return false;\r\n    }\r\n\r\n    //getLoginUser(force: boolean = false): any {\r\n\r\n    //    if (force !== true && this.loginUser)\r\n    //        return of(this.loginUser) as Observable<LoginUser>;\r\n\r\n    //    let usersSvc = this.http.get<ServiceResponse>(\"/Auth/GetLoginUserProfile\");\r\n    //    let rolesSvc = this.http.get<ServiceResponse>(\"Roles/GetRoles\");\r\n\r\n    //    return forkJoin(\r\n    //        usersSvc.pipe(map(resp => { this.loginUser = resp.data; return this.loginUser; })),\r\n    //        rolesSvc.pipe(map(resp => { this.roles = resp.data; })),\r\n    //    );\r\n    //}\r\n}\r\n","export enum DrawingMode {\r\n    CIRCLE,\r\n    MARKER,\r\n    POLYGON,\r\n    POLYLINE,\r\n    RECTANGLE\r\n}\r\n","import { LatLng } from './latLng';\r\nimport { Position, Polygon } from './geometry';\r\nimport * as turf from '@turf/turf';\r\nimport { GeoNode } from './geoNode';\r\nimport { Helper } from '../helper';\r\n\r\nexport class GeoHelper {\r\n    ///**\r\n    // * Get the distance between two coordinates.\r\n    // * @param start Starting coordinates.\r\n    // * @param end Ending coordinates.\r\n    // * @param unit Unit of distance returned, defaults to Km.\r\n    // * @returns The distance between two coordinates.\r\n    // */\r\n    //static distance(start: LatLng, end: LatLng, unit: string = 'km'): number {\r\n\r\n    //    const startValid: Error = this.validateCoordinates(start);\r\n\r\n    //    if (startValid instanceof Error) { throw new Error('Start coordinates: ' + startValid.message); }\r\n    //    const endValid: Error = this.validateCoordinates(end);\r\n    //    if (endValid instanceof Error) { throw new Error('End coordinates: ' + endValid.message); }\r\n\r\n    //    const radius: number = (unit.toLowerCase() === 'miles') ? 3963 : 6371;\r\n    //    const dLat: number = this.toRad(end.lat - start.lat);\r\n    //    const dLon: number = this.toRad(end.lng - start.lng);\r\n    //    const lat1: number = this.toRad(start.lat);\r\n    //    const lat2: number = this.toRad(end.lat);\r\n    //    const a: number = Math.sin(dLat / 2) * Math.sin(dLat / 2) +\r\n    //        Math.sin(dLon / 2) * Math.sin(dLon / 2) * Math.cos(lat1) * Math.cos(lat2);\r\n    //    const c: number = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n\r\n    //    return (radius * c);\r\n    //}\r\n\r\n    //static toRad(degrees: number): number {\r\n    //    return (degrees * Math.PI / 180);\r\n    //}\r\n\r\n    static validateCoordinates(coordinates: LatLng): Error {\r\n        const error: string[] = [];\r\n        if (coordinates.lat > 90) { error.push('Your latitude is greater than 90°'); }\r\n        if (coordinates.lat < -90) { error.push('Your latitude is less than -90°'); }\r\n        if (coordinates.lng > 180) { error.push('Your longitude is greater than 180°'); }\r\n        if (coordinates.lng < -180) { error.push('Your longitude is less than -180°'); }\r\n        if (error.length !== 0) { return new Error(error.join(' ')); }\r\n    }\r\n\r\n    static convertToPosition(lngLat: number[]): LatLng {\r\n\r\n        if (lngLat == null) return null;\r\n\r\n        return { lng: lngLat[0], lat: lngLat[1] };\r\n    }\r\n\r\n    static getBrowserLocation(defaultLatLng: LatLng) {\r\n\r\n        var options = { enableHighAccuracy: true, maximumAge: 75000 };\r\n\r\n        if (navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition((position) => {\r\n                return { lat: position.coords.latitude, lng: position.coords.longitude };\r\n            });\r\n        } else {\r\n            return defaultLatLng;\r\n        }\r\n\r\n        return defaultLatLng;\r\n    }\r\n\r\n    //getClusterCentroid(cluster: Cluster): Position {\r\n\r\n    //    if (0 === cluster.points.length) {\r\n    //        return cluster.centroid;\r\n    //    }\r\n\r\n    //    const centroid = cluster.points[0].concat();\r\n\r\n    //    for (let i = 1; i < cluster.points.length; i++) {\r\n    //        for (let d = 0; d < centroid.length; d++) {\r\n    //            centroid[d] += cluster.points[i][d];\r\n    //        }\r\n    //    }\r\n    //    for (let d = 0; d < centroid.length; d++) {\r\n    //        centroid[d] /= cluster.points.length;\r\n    //    }\r\n\r\n    //    return centroid;\r\n    //}\r\n\r\n    //static getCentroid(points: Position[]): Position {\r\n\r\n    //    const centroid = points[0].concat();\r\n\r\n    //    for (let i = 1; i < points.length; i++) {\r\n    //        for (let d = 0; d < centroid.length; d++) {\r\n    //            centroid[d] += points[i][d];\r\n    //        }\r\n    //    }\r\n    //    for (let d = 0; d < centroid.length; d++) {\r\n    //        centroid[d] /= points.length;\r\n    //    }\r\n\r\n    //    return centroid;\r\n    //}\r\n\r\n   /**\r\n   * Get the distance between two coordinates in Kilometers.\r\n   * @param start Starting coordinates.\r\n   * @param end Ending coordinates.\r\n   * @returns The distance between two coordinates.\r\n   */\r\n    static distance(start: Position, end: Position) {\r\n\r\n        let from = turf.point(start);\r\n        let to = turf.point(end);\r\n\r\n        return turf.distance(from, to, { units: \"kilometers\" });\r\n\r\n    }\r\n\r\n    static getLength(points: Position[]) {\r\n\r\n        var line = turf.lineString(points);\r\n\r\n        var length = turf.length(line, { units: 'kilometers' });\r\n\r\n        return length;\r\n\r\n    }\r\n\r\n    static polygonCenter(polygon: Polygon): Position {\r\n\r\n        var turfPolygon = turf.polygon(polygon.coordinates);\r\n\r\n        var centroid = turf.centroid(turfPolygon);\r\n\r\n        return centroid.geometry.coordinates;\r\n\r\n    }\r\n\r\n    static center(geoNodes: GeoNode[]): Position {\r\n\r\n        var featureCollection = GeoHelper.getFeatureCollection(geoNodes);\r\n\r\n        var center = turf.center(featureCollection);\r\n\r\n        return center.geometry.coordinates;\r\n\r\n    }\r\n\r\n    static clustersKmeans(geoNodes: GeoNode[], numberOfClusters, level: number, levelName: string): GeoNode[] {\r\n\r\n        var featureCollection = GeoHelper.getFeatureCollection(geoNodes);\r\n\r\n        var clustered = turf.clustersKmeans(featureCollection, { numberOfClusters: numberOfClusters });\r\n\r\n        var tempClusters = new Array<GeoNode>();\r\n\r\n        turf.clusterEach(clustered, 'cluster', (cluster, clusterValue, currentIndex) => {\r\n\r\n            let points = [];\r\n            let center = null;\r\n            let connections = 0;\r\n\r\n            cluster.features.forEach(x => {\r\n                center = x.properties.centroid;\r\n                connections += x.properties.connections;\r\n\r\n                points.push({ id: x.properties.id, level: x.properties.level, coordinates: x.geometry.coordinates, connections: x.properties.connections, children: x.properties.children });\r\n            });\r\n\r\n            tempClusters.push({ id: Helper.generateObjectId(), level:level, levelName: levelName, coordinates: center, connections: connections, children: points });\r\n        })\r\n\r\n        return tempClusters;\r\n    }\r\n\r\n    static getPointAtDistance(points: Position[], distance): Position {\r\n\r\n        var line = turf.lineString(points);\r\n\r\n        var along = turf.along(line, distance, { units: \"kilometers\" });\r\n\r\n        return along.geometry.coordinates;\r\n\r\n    }\r\n\r\n    static getPointsAtDistance(points: Position[], distance): Position[] {\r\n\r\n        let intervalPoints = new Array<Position>();\r\n\r\n        var line = turf.lineString(points);\r\n\r\n        var chunk = turf.lineChunk(line, distance, { units: \"kilometers\" });\r\n\r\n        //Add first point\r\n        intervalPoints.push(chunk.features[0].geometry.coordinates[0]);\r\n\r\n        //Add last points\r\n        chunk.features.forEach(x => {\r\n            let lIndex = x.geometry.coordinates.length -1;\r\n            intervalPoints.push(x.geometry.coordinates[lIndex])\r\n        });\r\n\r\n        return intervalPoints;\r\n   }\r\n\r\n   static lineChunk(points: Position[], distance): Position[][] {\r\n\r\n      let intervalPoints = new Array<Position[]>();\r\n\r\n      var line = turf.lineString(points);\r\n\r\n      var chunk = turf.lineChunk(line, distance, { units: \"kilometers\" });\r\n\r\n      //Add last points\r\n      chunk.features.forEach(x => {\r\n         intervalPoints.push(x.geometry.coordinates);\r\n      });\r\n\r\n      return intervalPoints;\r\n   }\r\n\r\n\r\n    static cleanLineCoordinates(points: Position[]): Position[] {\r\n\r\n        var line = turf.lineString(points);\r\n\r\n        return turf.cleanCoords(line).geometry.coordinates;\r\n    }\r\n\r\n    static cleanMultiPointCoordinates(points: Position[]): Position[] {\r\n\r\n        var multiPoint = turf.multiPoint(points);\r\n\r\n        return turf.cleanCoords(multiPoint).geometry.coordinates;\r\n    }\r\n\r\n    static pointToLineDistance(point: Position, line: Position[]): number {\r\n\r\n        var distance = turf.pointToLineDistance(point, line, { units: 'kilometers' });\r\n\r\n        return distance;\r\n    }\r\n\r\n    static nearestPointOnLine(point: Position, line: Position[]): Position {\r\n\r\n        var lineStr = turf.lineString(line);\r\n\r\n        var nearestPoint = turf.nearestPointOnLine(lineStr, point, { units: 'kilometers' });\r\n\r\n        return nearestPoint.geometry.coordinates;\r\n    }\r\n\r\n    static nearestPoint(point: Position, geoNodes: GeoNode[]): GeoNode {\r\n\r\n        var featureCollection = GeoHelper.getFeatureCollection(geoNodes);\r\n \r\n        var nearestPoint = turf.nearestPoint(point, featureCollection);\r\n\r\n        return geoNodes.find(x => x.id == nearestPoint.properties.id);\r\n    }\r\n\r\n   static nearestPoint2(point: Position, points: Position[]): Position {\r\n\r\n      var features = new Array<turf.Feature>();\r\n      points.forEach(x => { features.push(turf.point(x))});\r\n\r\n      var featureCollection = turf.featureCollection(features);\r\n\r\n      var nearestPoint = turf.nearestPoint(point, featureCollection);\r\n\r\n      return nearestPoint.geometry.coordinates;\r\n   }\r\n\r\n    private static getFeatureCollection(geoNodes: GeoNode[]) {\r\n\r\n        var features = new Array<turf.Feature>();\r\n\r\n        geoNodes.forEach(x => { features.push(turf.point(x.coordinates, { 'id': x.id, 'level': x.level, 'connections': x.connections, 'children': x.children })) });\r\n\r\n        return turf.featureCollection(features);\r\n\r\n    }\r\n\r\n}\r\n","import { Position, Point } from './geometry';\r\nimport { Cable } from '../../entities/models/cable';\r\nimport { Helper } from '../helper';\r\n//import { Accessory } from '../../designs/models/design';\r\nimport { Civilwork } from '../../civilworks/models/civilwork';\r\nimport { Chamber } from '../../entities/models/chamber';\r\nimport { Pole } from '../../entities/models/pole';\r\nimport { Splitter } from '../../entities/models/splitter';\r\nimport { SpliceClosure } from '../../entities/models/spliceClosure';\r\nimport { Duct } from '../../entities/models/duct';\r\nimport { ODF } from '../../entities/models/odf';\r\nimport { Accessory } from '../../accessories/models/accessory';\r\nimport { Homepass } from '../../homepasses/models/homepass';\r\nimport { PoP } from '../../entities/models/pop';\r\nimport { MicroDuct } from '../../entities/models/MicroDuct';\r\nimport { FAT } from '../../entities/models/fat';\r\nimport { FDT } from '../../entities/models/Solution2.zip';\r\n\r\nexport class GeoNode {\r\n    id?: string;\r\n    levelName?: string;\r\n    level: number;\r\n    coordinates?: Position;\r\n    connections?: number;\r\n    children?: GeoNode[];\r\n    segments?: Segment[];\r\n\r\n    constructor(id?:string, coordinates?: Position) {\r\n\r\n        //if (id == null || id == \"\")\r\n        //    id = Helper.generateObjectId();\r\n\r\n        this.coordinates = coordinates;\r\n    }\r\n}\r\n\r\nexport class Segment {\r\n    id: string;\r\n    start: string;\r\n    end: string;\r\n    coordinates: Array<Position>;\r\n    accessories?: Accessory[];\r\n    civilworks?: Civilwork[];\r\n    cable?: Cable;\r\n    chambers?: Chamber[];\r\n    ducts?: Duct;\r\n    odfs?: ODF[];\r\n    poles?: Pole[];\r\n    splitters?: Splitter[];\r\n   spliceClosures?: SpliceClosure[];\r\n    homepasses?: Homepass[];\r\n    microduct?: MicroDuct;\r\n    pops?: PoP[];\r\n    fats?: FAT[];\r\n    fdts?: FDT[]\r\n}\r\n","export type Position = number[];\r\n\r\nexport class Point {\r\n    type: string = \"Point\";\r\n    coordinates: Position\r\n\r\n    constructor(coordinates?: Position) {\r\n        this.coordinates = coordinates;\r\n    }\r\n}\r\n\r\nexport class MultiPoint {\r\n    type: string = \"MultiPoint\";\r\n    coordinates: Array<Position>;\r\n\r\n    constructor(coordinates?: Array<Position>) {\r\n        this.coordinates = coordinates;\r\n    }\r\n}\r\n\r\nexport class LineString {\r\n    type:string = \"LineString\";\r\n    coordinates: Array<Position>;\r\n\r\n    constructor(coordinates?: Array<Position>) {\r\n        this.coordinates = coordinates;\r\n    }\r\n}\r\n\r\nexport class MultiLineString {\r\n    type: string = \"MultiLineString\";\r\n    coordinates: Array<Array<Position>>;\r\n}\r\n\r\nexport class Polygon {\r\n    type: string = \"Polygon\";\r\n    coordinates: Array<Array<Position>>;\r\n\r\n    constructor(coordinates?: Array<Array<Position>>) {\r\n        this.coordinates = coordinates;\r\n    }\r\n}\r\n\r\nexport class MultiPolygon {\r\n    type: string = \"MultiPolygon\";\r\n    coordinates: Array<Array<Array<Position>>>;\r\n\r\n    constructor(coordinates?: Array<Array<Array<Position>>>) {\r\n        this.coordinates = coordinates;\r\n    }\r\n}\r\n\r\n//export enum GeoJsonObjectType {\r\n//    Feature = 0,\r\n//    FeatureCollection = 1,\r\n//    GeometryCollection = 2,\r\n//    LineString = 3,\r\n//    MultiLineString = 4,\r\n//    MultiPoint = 5,\r\n//    MultiPolygon = 6,\r\n//    Point = 7,\r\n//    Polygon = 8\r\n//}\r\n","import { DrawingMode } from './drawingMode';\r\nimport { GeoHelper } from './geoHelper';\r\nimport { Position } from './geometry';\r\n\r\ndeclare var google: any;\r\n\r\nexport class GMapsHelper {\r\n\r\n    static initializeMap(mapElementId, mapCenter, zoom, maxZoom) {\r\n\r\n        if (mapCenter === null || mapCenter === \"\")\r\n            mapCenter = GeoHelper.getBrowserLocation({ lat: 18.5245649, lng: 73.7228783 });\r\n\r\n        var mapOptions = {\r\n            zoom: zoom,\r\n            maxZoom: maxZoom,\r\n            center: mapCenter,\r\n            fullscreenControl: false,\r\n            zoomControl: true,\r\n            zoomControlOptions: {\r\n                position: google.maps.ControlPosition.LEFT_BOTTOM\r\n            },\r\n            controlSize: 30,\r\n            mapTypeControl: false,\r\n            scaleControl: true,\r\n            streetViewControl: false,\r\n            rotateControl: true,\r\n            //mapTypeControlOptions: {\r\n            //    style: google.maps.MapTypeControlStyle.HORIZONTAL_BAR,\r\n            //    position: google.maps.ControlPosition.LEFT_BOTTOM\r\n            //},\r\n            styles: [\r\n                {\r\n                    \"featureType\": \"water\",\r\n                    \"stylers\": [\r\n                        { \"saturation\": 43 },\r\n                        { \"lightness\": -11 },\r\n                        { \"hue\": \"#0088ff\" }\r\n                    ]\r\n                },\r\n                {\r\n                    \"featureType\": \"road\",\r\n                    \"elementType\": \"geometry.fill\",\r\n                    \"stylers\": [\r\n                        { \"hue\": \"#ff0000\" },\r\n                        { \"saturation\": -100 },\r\n                        { \"lightness\": 99 }\r\n                    ]\r\n                },\r\n                {\r\n                    \"featureType\": \"road\",\r\n                    \"elementType\": \"geometry.stroke\",\r\n                    \"stylers\": [\r\n                        { \"color\": \"#808080\" },\r\n                        { \"lightness\": 54 }\r\n                    ]\r\n                },\r\n                {\r\n                    \"featureType\": \"landscape.man_made\",\r\n                    \"elementType\": \"geometry.fill\",\r\n                    \"stylers\": [\r\n                        { \"color\": \"#ece2d9\" }\r\n                    ]\r\n                },\r\n                {\r\n                    \"featureType\": \"poi.park\",\r\n                    \"elementType\": \"geometry.fill\",\r\n                    \"stylers\": [\r\n                        { \"color\": \"#ccdca1\" }\r\n                    ]\r\n                },\r\n                {\r\n                    \"featureType\": \"road\",\r\n                    \"elementType\": \"labels.text.fill\",\r\n                    \"stylers\": [\r\n                        { \"color\": \"#767676\" }\r\n                    ]\r\n                },\r\n                {\r\n                    \"featureType\": \"road\",\r\n                    \"elementType\": \"labels.text.stroke\",\r\n                    \"stylers\": [\r\n                        { \"color\": \"#ffffff\" }\r\n                    ]\r\n                },\r\n                {\r\n                    \"featureType\": \"poi\",\r\n                    \"stylers\": [\r\n                        { \"visibility\": \"off\" }\r\n                    ]\r\n                },\r\n                {\r\n                    \"featureType\": \"landscape.natural\",\r\n                    \"elementType\": \"geometry.fill\",\r\n                    \"stylers\": [\r\n                        { \"visibility\": \"on\" },\r\n                        { \"color\": \"#b8cb93\" }\r\n                    ]\r\n                },\r\n                {\r\n                    \"featureType\": \"poi.park\",\r\n                    \"stylers\": [\r\n                        { \"visibility\": \"on\" }\r\n                    ]\r\n                },\r\n                {\r\n                    \"featureType\": \"poi.sports_complex\",\r\n                    \"stylers\": [\r\n                        { \"visibility\": \"on\" }\r\n                    ]\r\n                },\r\n                {\r\n                    \"featureType\": \"poi.medical\",\r\n                    \"stylers\": [\r\n                        { \"visibility\": \"on\" }\r\n                    ]\r\n                },\r\n                {\r\n                    \"featureType\": \"poi.business\",\r\n                    \"stylers\": [\r\n                        { \"visibility\": \"simplified\" }\r\n                    ]\r\n                }]\r\n        };\r\n\r\n        // Get all html elements for map\r\n       var mapElement = document.getElementById(mapElementId);\r\n\r\n\r\n        // Create the Google Map using elements\r\n       return new google.maps.Map(mapElement, mapOptions);\r\n\r\n    }\r\n\r\n    static drawingManagerTool(map, strDrawingMode, drawingControlModes, drawingOption) {\r\n\r\n        var drawingManager = new google.maps.drawing.DrawingManager();\r\n\r\n        var drawingMode = GMapsHelper.getDrawingMode(strDrawingMode);\r\n\r\n        drawingManager.setOptions({\r\n            drawingMode: drawingMode,\r\n            drawingControl: true,\r\n            drawingControlOptions: {\r\n                position: google.maps.ControlPosition.TOP_LEFT,\r\n                drawingModes: drawingControlModes\r\n            },\r\n            options: drawingOption\r\n        });\r\n\r\n        drawingManager.setMap(map);\r\n\r\n        return drawingManager;\r\n    }\r\n\r\n    static addListener(entity, clickType, callback) {\r\n        google.maps.event.addListener(entity, clickType, function (event) {\r\n            if (typeof callback === \"function\")\r\n                callback(event);\r\n        });\r\n    }\r\n\r\n    static getDrawingMode(drawingMode: DrawingMode) {\r\n\r\n        switch (drawingMode) {\r\n            case DrawingMode.POLYGON:\r\n                return google.maps.drawing.OverlayType.POLYGON;\r\n            case DrawingMode.CIRCLE:\r\n                return google.maps.drawing.OverlayType.CIRCLE;\r\n            case DrawingMode.POLYLINE:\r\n                return google.maps.drawing.OverlayType.POLYLINE;\r\n            case DrawingMode.RECTANGLE:\r\n                return google.maps.drawing.OverlayType.RECTANGLE;\r\n            case DrawingMode.MARKER:\r\n                return google.maps.drawing.OverlayType.MARKER;\r\n            default:\r\n        }\r\n    }\r\n\r\n    static createPolygon(coordinates: Array<Array<Position>>, polyOptions: any) {\r\n\r\n        let tempCoordinates = GMapsHelper.getLatLngsFromPolygon(coordinates);\r\n\r\n        return new google.maps.Polygon({\r\n            paths: tempCoordinates,\r\n            strokeWeight: polyOptions.strokeWeight,\r\n            fillOpacity: polyOptions.fillOpacity,\r\n            editable: polyOptions.editable,\r\n            draggable: polyOptions.draggable\r\n        });\r\n    }\r\n\r\n    static getLatLngsFromPolygon(coordinates: Array<Array<Position>>) {\r\n\r\n        var tempCoordinates = [];\r\n\r\n        coordinates[0].forEach(x => { tempCoordinates.push({ lng: x[0], lat: x[1] }) });\r\n\r\n        tempCoordinates.splice(tempCoordinates.length - 1, 1);\r\n\r\n        return tempCoordinates;\r\n    }\r\n\r\n    static setBounds(latlngs: any, map: any) {\r\n\r\n        var bounds = new google.maps.LatLngBounds();\r\n        for (var i = 0; i < latlngs.length; i++) {\r\n            bounds.extend(latlngs[i]);\r\n        }\r\n\r\n        map.fitBounds(bounds);\r\n    }\r\n\r\n    static getLatLng(latlng: number[]) {\r\n        return new google.maps.LatLng(latlng[0], latlng[1]);\r\n    }\r\n\r\n    static boundsToPolygon(bounds: any): Array<Array<Position>> {\r\n\r\n        let northEastLatLngs = [];\r\n        let southWestLatLngs = [];\r\n        let northWestLatLngs = [];\r\n        let southEastLatLngs = [];\r\n\r\n        northEastLatLngs[0] = bounds.getNorthEast().lng();\r\n        northEastLatLngs[1] = bounds.getNorthEast().lat();\r\n\r\n        northWestLatLngs[0] = bounds.getSouthWest().lng();\r\n        northWestLatLngs[1] = bounds.getNorthEast().lat();\r\n\r\n        southWestLatLngs[0] = bounds.getSouthWest().lng();\r\n        southWestLatLngs[1] = bounds.getSouthWest().lat();\r\n\r\n        southEastLatLngs[0] = bounds.getNorthEast().lng();\r\n        southEastLatLngs[1] = bounds.getSouthWest().lat();\r\n\r\n        var tempCoordinates = [];\r\n        tempCoordinates.push(northEastLatLngs);\r\n        tempCoordinates.push(northWestLatLngs);\r\n        tempCoordinates.push(southWestLatLngs);\r\n        tempCoordinates.push(southEastLatLngs);\r\n        tempCoordinates.push(northEastLatLngs);\r\n\r\n        return [tempCoordinates];\r\n\r\n    }\r\n\r\n    static pathArrayToPolygon(pathArray: any): Array<Array<Position>>  {\r\n\r\n        var tempCoordinates = [];\r\n\r\n        pathArray.forEach(x => { tempCoordinates.push([x.lng(), x.lat()]); });\r\n\r\n        tempCoordinates.push([pathArray[0].lng(), pathArray[0].lat()]);\r\n\r\n        return [tempCoordinates];\r\n    }\r\n\r\n    static getPointsAtDistance(points: Position[], distance: number) {\r\n\r\n        let path = [];\r\n\r\n        points.forEach(x => { path.push({ lng: x[0], lat: x[1] }) });\r\n\r\n        return new google.maps.Polyline({\r\n            path: path\r\n        }).GetPointsAtDistance(distance);\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { SearchField } from './models/SearchField';\r\nimport { SearchFilter, Filter, Operator, ConditionOperator } from './models/paginationRequest';\r\n\r\ndeclare var toastr: any;\r\n\r\n@Injectable()\r\nexport class Helper {\r\n\r\n    constructor() { }\r\n\r\n    showAlertMessage(message: string, alertType: string) {\r\n\r\n        if (alertType == \"error\") {\r\n            toastr.options = {\r\n                \"closeButton\": true,\r\n                \"timeOut\": 3000,\r\n                \"preventDuplicates\": true,\r\n                \"extendedTimeOut\": 1000,\r\n                \"positionClass\": \"toast-top-center\",\r\n            }\r\n            toastr.error(message, \"Error\").attr('style', 'width: 400px !important');\r\n        }\r\n        else if (alertType == \"success\") {\r\n            toastr.options = {\r\n                \"closeButton\": false,\r\n                \"timeOut\": 3000,\r\n                \"extendedTimeOut\": 1000,\r\n                \"positionClass\": \"toast-top-center\",\r\n            }\r\n            toastr.success(message).attr('style', 'width: 400px !important');\r\n        }\r\n        else if (alertType == \"info\") {\r\n            toastr.options = {\r\n                \"closeButton\": false,\r\n                \"timeOut\": 5000,\r\n                \"extendedTimeOut\": 1000,\r\n                \"positionClass\": \"toast-top-center\",\r\n            }\r\n            toastr.info(message).attr('style', 'width: 400px !important');\r\n        }\r\n    }\r\n\r\n    formatBytes(bytes: number, decimals: number) {\r\n        if (bytes == 0) return '0 Bytes';\r\n        var k = 1024,\r\n            dm = decimals || 2,\r\n            sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'],\r\n            i = Math.floor(Math.log(bytes) / Math.log(k));\r\n\r\n        return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\r\n    }\r\n\r\n    popupCenter(url, title, w, h) {\r\n        // Fixes dual-screen position Most browsers Firefox\r\n        var dualScreenLeft = window.screenLeft;\r\n        var dualScreenTop = window.screenTop;\r\n\r\n        var width = window.innerWidth ? window.innerWidth : document.documentElement.clientWidth ? document.documentElement.clientWidth : screen.width;\r\n        var height = window.innerHeight ? window.innerHeight : document.documentElement.clientHeight ? document.documentElement.clientHeight : screen.height;\r\n\r\n        var left = ((width / 2) - (w / 2)) + dualScreenLeft;\r\n        var top = ((height / 2) - (h / 2)) + dualScreenTop;\r\n        var newWindow = window.open(url, title, 'scrollbars=yes, width=' + w + ', height=' + h + ', top=' + top + ', left=' + left);\r\n\r\n        // Puts focus on the newWindow\r\n        if (window.focus) {\r\n            newWindow.focus();\r\n        }\r\n    }\r\n\r\n    getErrorMessagesText(errorMessages: string[]) {\r\n\r\n        var li = \"\";\r\n\r\n        for (let message of errorMessages) {\r\n            li += \"<li>\" + message + \"</li>\";\r\n        }\r\n\r\n        return \"<ul>\" + li + \"</li>\";\r\n    }\r\n\r\n    compare(a: number | string | boolean, b: number | string | boolean, isAsc: boolean) {\r\n        return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\r\n    }\r\n\r\n    getLastMonths(count) {\r\n        var monthFull = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\n        var monthShort = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\n\r\n        var months = []\r\n        var d = new Date()\r\n        for (var i = 0; i < count; i++) {\r\n            months.push({ \"name\": monthFull[d.getMonth()], \"value\": monthShort[d.getMonth()] });\r\n            d.setMonth(d.getMonth() - 1)\r\n        }\r\n        return months\r\n    }\r\n\r\n    getLastDay(year: number, month: string) {\r\n\r\n        var monthIndex = this.getMonthIndex(month);\r\n\r\n        return new Date(year, monthIndex + 1, 0).getDate();\r\n    }\r\n\r\n    getMonthIndex(month: string) {\r\n\r\n        var monthShort = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\n\r\n        var monthIndex = monthShort.findIndex(x => x == month);\r\n\r\n        return monthIndex;\r\n    }\r\n\r\n    addDays(date, days) {\r\n        var result = new Date(date);\r\n        result.setDate(result.getDate() + days);\r\n        return result;\r\n    }\r\n\r\n    daysBetween(startDate, endDate) {\r\n\r\n        let millisecondsPerDay = 1000 * 60 * 60 * 24;\r\n        let startDateUTC = Date.UTC(startDate.getFullYear(), startDate.getMonth(), startDate.getDate());\r\n        let endDateUTC = Date.UTC(endDate.getFullYear(), endDate.getMonth(), endDate.getDate());\r\n\r\n        return Math.floor((endDateUTC - startDateUTC) / millisecondsPerDay);\r\n    }\r\n\r\n    static getChunks(items: any, chunkSize: number) {\r\n\r\n        var index = 0;\r\n        var arrayLength = items.length;\r\n        var group = [];\r\n\r\n        for (index = 0; index < arrayLength; index += chunkSize) {\r\n            let chunk = items.slice(index, index + chunkSize);\r\n            group.push(chunk);\r\n        }\r\n\r\n        return group;\r\n    }\r\n\r\n    search(selectedField: SearchField, searchText: string, conditionOperator: ConditionOperator): SearchFilter {\r\n\r\n        let searchFilter = null;\r\n\r\n        if (searchText.trim() != \"\") {\r\n\r\n            searchFilter = new SearchFilter();\r\n            searchFilter.conditionOperator = conditionOperator;\r\n            searchFilter.filters = new Array<Filter>();\r\n\r\n            if (selectedField.dataType == 'date') {\r\n                searchFilter.filters.push({\r\n                    propertyName: selectedField.field,\r\n                    operator: Operator.greaterThanOrEqual,\r\n                    value: new Date(searchText).toISOString(),\r\n                    caseSensitive: false\r\n                });\r\n                searchFilter.filters.push({\r\n                    propertyName: selectedField.field,\r\n                    operator: Operator.lessThan,\r\n                    value: this.addDays(new Date(searchText), 1).toISOString(),\r\n                    caseSensitive: false\r\n                });\r\n            }\r\n            else {\r\n                searchFilter.filters.push({\r\n                    propertyName: selectedField.field,\r\n                    operator: Operator.contains,\r\n                    value: searchText,\r\n                    caseSensitive: false\r\n                });\r\n            }\r\n        }\r\n\r\n        return searchFilter\r\n    }\r\n\r\n    advancedSearch(searchFields: SearchField[], conditionOperator: ConditionOperator): SearchFilter {\r\n\r\n        let searchFilter = new SearchFilter();\r\n        searchFilter.conditionOperator = conditionOperator;\r\n        searchFilter.filters = new Array<Filter>();\r\n\r\n        for (var i = 0; i < searchFields.length; i++) {\r\n            if (searchFields[i].value) {\r\n\r\n                if (searchFields[i].dataType == 'date') {\r\n                    searchFilter.filters.push({\r\n                        propertyName: searchFields[i].field,\r\n                        operator: Operator.greaterThanOrEqual,\r\n                        value: new Date(searchFields[i].value).toISOString(),\r\n                        caseSensitive: false\r\n                    });\r\n                    searchFilter.filters.push({\r\n                        propertyName: searchFields[i].field,\r\n                        operator: Operator.lessThan,\r\n                        value: this.addDays(new Date(searchFields[i].value), 1).toISOString(),\r\n                        caseSensitive: false\r\n                    });\r\n                }\r\n                else {\r\n                    searchFilter.filters.push({\r\n                        propertyName: searchFields[i].field,\r\n                        operator: Operator.contains,\r\n                        value: searchFields[i].value,\r\n                        caseSensitive: false\r\n                    });\r\n                }\r\n                //let operator = this.searchFields[i].dataType == 'date' ? Operator.equals : Operator.contains\r\n                //this.searchFilter.filters.push({\r\n                //    propertyName: this.searchFields[i].field,\r\n                //    operator: operator,\r\n                //    value: this.searchFields[i].value,\r\n                //    caseSensitive: false\r\n                //});\r\n            }\r\n        }\r\n\r\n        return searchFilter;\r\n    }\r\n\r\n    generateTree(arr, parentId) {\r\n        var out = []\r\n\r\n        for (var i in arr) {\r\n            arr[i].label = arr[i].name;\r\n\r\n            if (arr[i].parentId == parentId) {\r\n                var children = this.generateTree(arr, arr[i].id)\r\n\r\n                if (children.length) {\r\n                    arr[i].children = children\r\n                }\r\n                out.push(arr[i])\r\n            }\r\n        }\r\n\r\n        return out\r\n    }\r\n\r\n    static generateObjectId() {\r\n        var timestamp = (new Date().getTime() / 1000 | 0).toString(16);\r\n        return timestamp + 'xxxxxxxxxxxxxxxx'.replace(/[x]/g, function () {\r\n            return (Math.random() * 16 | 0).toString(16);\r\n        }).toLowerCase();\r\n    }\r\n\r\n    generateTreeTable(arr, parentId, expanded?: boolean) {\r\n        var out = []\r\n\r\n        for (var i in arr) {\r\n            arr[i].label = arr[i].name;\r\n\r\n            arr[i].data = {\r\n                \"name\": arr[i].name\r\n            };\r\n\r\n            arr[i].expanded = expanded;\r\n\r\n            if (arr[i].parentId == parentId) {\r\n                var children = this.generateTree(arr, arr[i].id);\r\n\r\n                if (children.length) {\r\n                    arr[i].children = children;\r\n                }\r\n                out.push(arr[i]);\r\n            }\r\n        }\r\n\r\n        return out\r\n    }\r\n\r\n    findNode(id, currentNode) {\r\n        var stack = [], node, ii;\r\n        stack.push(currentNode);\r\n\r\n        while (stack.length > 0) {\r\n            node = stack.pop();\r\n            if (node.id == id) {\r\n                return node;\r\n            } else if (node.children && node.children.length) {\r\n                for (ii = 0; ii < node.children.length; ii += 1) {\r\n                    stack.push(node.children[ii]);\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    log(logEntity: any, logType: string, message: string) {\r\n\r\n        logEntity.log = logEntity.log + '\\n' + new Date() + \" [\" + logType + \"] \" + message;\r\n    }\r\n\r\n    isDate(value: any) {\r\n        return (null != value) && !isNaN(value) && (\"undefined\" !== typeof value.getDate);\r\n    }\r\n\r\n    static formatDate(value: any) {\r\n\r\n        var dd = value.getDate();\r\n\r\n        var mm = value.getMonth() + 1;\r\n        var yyyy = value.getFullYear();\r\n\r\n        if (dd < 10) {\r\n            dd = '0' + dd;\r\n        }\r\n\r\n        if (mm < 10) {\r\n            mm = '0' + mm;\r\n        }\r\n\r\n        return dd + '/' + mm + '/' + yyyy;\r\n\r\n    }\r\n\r\n    static groupBy(data, columnName) {\r\n\r\n        //var groupedData;\r\n\r\n        //data.reduce(function (result, current) {\r\n        //    var currentVal = current[columnName];\r\n\r\n        //    result[currentVal] = result[currentVal] || [];\r\n        //    result[currentVal].push(current);\r\n        //    groupedData = result;\r\n        //}, {});\r\n\r\n        //return groupedData;\r\n\r\n        let group = data.reduce((r, a) => {\r\n            r[a[columnName]] = [...r[a[columnName]] || [], a];\r\n            return r;\r\n        }, {});\r\n\r\n        let tempGroups = [];\r\n\r\n        for (var i in group) {\r\n            tempGroups.push(group[i]);\r\n        }\r\n\r\n        return tempGroups;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpHeaders } from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class CacheInterceptor implements HttpInterceptor {\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n    const httpRequest = req.clone({\r\n      headers: new HttpHeaders({\r\n        'Cache-Control': 'no-cache',\r\n        'Pragma': 'no-cache',\r\n        'Expires': 'Sat, 01 Jan 2000 00:00:00 GMT'\r\n      })\r\n    });\r\n\r\n    return next.handle(httpRequest);\r\n  }\r\n}","export class DbBaseEntity {\r\n   id?: string;\r\n   createdBy?: string;\r\n   createdDate?: string;\r\n   updatedBy?: string;\r\n   updatedDate?: string;\r\n}\r\n","export class Document {\r\n    id: string;\r\n    category: string;\r\n    fileName: string;\r\n    fileSize: number;\r\n    filePath: string;\r\n\r\n    file: any;\r\n}\r\n","export class LoginUser {\r\n    id: string;\r\n    loginId: string;\r\n    name: string;\r\n    features: string[];\r\n    permissions: string[];\r\n    token: string;\r\n}\r\n","export class PaginationRequest {\r\n    page: number;\r\n    pageSize: number;\r\n    filter: SearchFilter;\r\n    order: Order;\r\n}\r\n\r\nexport class SearchFilter {\r\n    conditionOperator: ConditionOperator;\r\n    filters: Filter[];\r\n}\r\n\r\nexport enum ConditionOperator {\r\n    AND,\r\n    OR\r\n}\r\n\r\nexport class Filter {\r\n    propertyName: string;\r\n    operator: Operator;\r\n    value: any;\r\n    caseSensitive: boolean;\r\n}\r\n\r\nexport enum Operator {\r\n    equals,\r\n    greaterThan,\r\n    lessThan,\r\n    greaterThanOrEqual,\r\n    lessThanOrEqual,\r\n    contains,\r\n    startsWith,\r\n    endsWith,\r\n    notEquals\r\n}\r\n\r\nexport class Order {\r\n    orderByProperty: string;\r\n    sortOrder: SortOrder;\r\n}\r\n\r\nexport enum SortOrder {\r\n    ascending = 1,\r\n    descending = -1,\r\n    noSort = 0\r\n}\r\n","export class Supplier {\r\n    name: string;\r\n    sku: string;\r\n    stockQty?: number;\r\n    price?: number;\r\n    currency?: string;\r\n    validFrom?: string;\r\n    validTo?: string;\r\n    isPrefered?: boolean;\r\n\r\n    serviceCost?: number;\r\n}\r\n","import { Component, Input, EventEmitter, Output } from '@angular/core';\r\nimport { SearchField } from '../../common/models/SearchField';\r\nimport { ConditionOperator, SearchFilter, Filter } from '../../common/models/paginationRequest';\r\nimport { Helper } from '../../common/helper';\r\n\r\n@Component({\r\n    selector: 'cf-group',\r\n    templateUrl: './cf-group.html'\r\n})\r\nexport class CustomFieldsGroup {\r\n\r\n    @Input() public customFields: SearchField[] = new Array<SearchField>();\r\n    @Input() public accordionId: string = \"accordion\";\r\n\r\n    customFieldGroups: any;\r\n\r\n    constructor(private helper: Helper) { }\r\n\r\n    ngOnInit() {\r\n        this.customFieldGroups = this.getCustomFieldGroups();\r\n    }\r\n\r\n    getCustomFieldGroups() {\r\n\r\n        let customFieldGroups = null;\r\n\r\n        if (this.customFields && this.customFields.length > 0) {\r\n\r\n            customFieldGroups = [];\r\n\r\n            let customFields = this.customFields;\r\n\r\n            //let groups = Helper.groupBy(customFields, 'category');\r\n\r\n            //for (var i in groups) {\r\n            //    customFieldGroups.push(groups[i]);\r\n            //}\r\n\r\n            customFieldGroups = Helper.groupBy(customFields, 'category');\r\n        }\r\n\r\n        return customFieldGroups;\r\n    }\r\n\r\n}\r\n","import { Component, EventEmitter, Output, Input } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'dt-pagination',\r\n    templateUrl: './dt-pagination.html'\r\n})\r\nexport class DTPagination {\r\n\r\n    @Input() public totalPages: number = 1;\r\n    @Output() onPageSizeChange: EventEmitter<any> = new EventEmitter();\r\n    @Output() onPageChange: EventEmitter<any> = new EventEmitter();\r\n\r\n    pageSize = 10;\r\n    currentPage = 1;\r\n\r\n    constructor() { }\r\n\r\n    ngOnInit() {\r\n        this.pageSize = 10;\r\n        this.currentPage = 1;\r\n    }\r\n\r\n    pageSizeChange() {\r\n        this.onPageSizeChange.emit(this.pageSize);\r\n    }\r\n\r\n    setPage(page: number) {\r\n\r\n        if (page < 1 || page > this.totalPages) {\r\n            return;\r\n        }\r\n\r\n        this.currentPage = page;\r\n\r\n        this.onPageChange.emit(this.currentPage);\r\n    }\r\n}\r\n","import { Component, Input, EventEmitter, Output } from '@angular/core';\r\nimport { SearchField } from '../../common/models/SearchField';\r\nimport { ConditionOperator, SearchFilter, Filter } from '../../common/models/paginationRequest';\r\nimport { Helper } from '../../common/helper';\r\n\r\n@Component({\r\n    selector: 'dt-search',\r\n    templateUrl: './dt-search.html'\r\n})\r\nexport class DTSearch {\r\n\r\n    @Input() public searchFields: SearchField[] = new Array<SearchField>();\r\n    @Output() onSearch: EventEmitter<any> = new EventEmitter();\r\n\r\n    selectedField: SearchField;\r\n    searchText: string;\r\n    searchFilter: SearchFilter;\r\n    filterPills: Filter[];\r\n    conditionOption: boolean = true;\r\n\r\n    constructor(private helper: Helper) { }\r\n\r\n    ngOnInit() {\r\n        this.selectedField = this.searchFields[0];\r\n        this.searchText = \"\";\r\n    }\r\n\r\n    setSearchField(searchField: any) {\r\n        this.selectedField = searchField;\r\n        this.searchText = '';\r\n    }\r\n\r\n    search() {\r\n\r\n        let conditionOption = this.conditionOption ? ConditionOperator.AND : ConditionOperator.OR;\r\n        this.searchFilter = this.helper.search(this.selectedField, this.searchText, conditionOption)\r\n        this.searchFields.forEach(x => x.value = '');\r\n\r\n        this.searchText = '';\r\n        this.populateFilterPills();\r\n\r\n        this.onSearch.emit(this.searchFilter);\r\n    }\r\n\r\n    populateFilterPills() {\r\n\r\n        let filters = new Array<Filter>();\r\n\r\n        this.searchFilter.filters.forEach(x => {\r\n\r\n            var index = filters.findIndex(y => y.propertyName == x.propertyName);\r\n\r\n            let newValue = x.value;\r\n\r\n            if (newValue.includes('T00:00:00.000Z')) {\r\n                newValue = Helper.formatDate(new Date(newValue));\r\n            }\r\n\r\n            if (index < 0) {\r\n                filters.push({\r\n                    operator: x.operator,\r\n                    propertyName: x.propertyName,\r\n                    caseSensitive: false,\r\n                    value: newValue\r\n                });\r\n            }\r\n        });\r\n\r\n        this.filterPills = filters;\r\n    }\r\n\r\n    removeFilter(index: any) {\r\n        if (index >= 0) {\r\n            let filter = this.searchFilter.filters[index];\r\n            this.searchFilter.filters = this.searchFilter.filters.filter(x => x.propertyName != filter.propertyName);\r\n\r\n            this.populateFilterPills();\r\n\r\n            this.onSearch.emit(this.searchFilter);\r\n        }\r\n    }\r\n\r\n    advancedSearch() {\r\n\r\n        let conditionOption = this.conditionOption ? ConditionOperator.AND : ConditionOperator.OR;\r\n        this.searchFilter = this.helper.advancedSearch(this.searchFields, conditionOption)\r\n        this.searchText = \"\";\r\n\r\n        this.onSearch.emit(this.searchFilter);\r\n        this.populateFilterPills();\r\n    }\r\n\r\n    clearSearch() {\r\n        this.searchFilter = this.helper.search(this.selectedField, this.searchText, ConditionOperator.AND)\r\n        this.searchFields.forEach(x => x.value = '');\r\n\r\n        this.onSearch.emit(this.searchFilter);\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient, HttpParams } from \"@angular/common/http\";\r\n\r\n@Injectable()\r\nexport class DashboardService {\r\n\r\n   constructor(private http: HttpClient) { }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { forkJoin } from 'rxjs';\r\n\r\nimport { DashboardService } from '../services/dashboard.service';\r\n\r\ndeclare var $: any;\r\ndeclare var echarts: any;\r\n\r\n@Component({\r\n   templateUrl: './dashboard.html',\r\n   providers: [DashboardService],\r\n})\r\nexport class Dashboard implements OnInit {\r\n\r\n   constructor(\r\n      private dashboardService: DashboardService) { }\r\n\r\n   ngOnInit() {\r\n      //this.getFormData();\r\n   }\r\n\r\n   getFormData() {\r\n\r\n      //$(\"#ajax-loading\").show();\r\n\r\n      //let taskSummarySvc = this.reportsService.getTaskSummary();\r\n      //let realTimeSummarySvc = this.reportsService.getRealTimeSummary();\r\n\r\n      //forkJoin([taskSummarySvc, realTimeSummarySvc]).subscribe(\r\n      //   async results => {\r\n      //      var roles=[]\r\n      //      if (results[0] && results[0].data) {\r\n      //         this.taskSummary = results[0].data;\r\n      //      }\r\n\r\n      //      if (results[1] && results[1].data) {\r\n      //         //this.eDeliverySummary = results[1].data;\r\n      //         //this.showRealTimeSummaryChart();\r\n      //      }\r\n\r\n      //      //await new Promise(resolve => {\r\n      //      //   setTimeout(() => {\r\n      //      //      roles = this.accountService.roles;\r\n      //      //      resolve();\r\n      //      //   }, 100);\r\n      //      //});\r\n\r\n          \r\n      //      var loginUser = this.accountService.loginUser;\r\n\r\n      //      this.userRole = roles.find(x => x.id.toLowerCase() == loginUser.role.toLowerCase());\r\n\r\n      //      $(\"#ajax-loading\").hide();\r\n\r\n      //   },\r\n      //   error => {\r\n      //      $(\"#ajax-loading\").hide();\r\n      //   });\r\n   }\r\n\r\n}\r\n","import { Component, OnChanges, Input, SimpleChanges } from '@angular/core';\r\nimport { Design, AccessorySettings } from '../models/design';\r\nimport { AccessoryService } from '../../accessories/services/accessory.service';\r\nimport { ConditionOperator, Operator, SortOrder } from '../../common/models/paginationRequest';\r\nimport { Accessory } from '../../accessories/models/accessory';\r\n\r\n@Component({\r\n    selector: 'dzn-accessories',\r\n    templateUrl: './dzn-accessories.html'\r\n})\r\nexport class DesignAccessories implements OnChanges {\r\n\r\n    @Input() accessorySettings: AccessorySettings = new AccessorySettings();\r\n    @Input() parentEntityType: string;\r\n    @Input() allDesigns: Design[] = new Array<Design>();\r\n\r\n    accessoriesMaster: Accessory[] = new Array<Accessory>();\r\n    statusMessage: string;\r\n    selectedAccessory: Accessory;\r\n    //designAccessories: any;\r\n\r\n    constructor(private accessoryService: AccessoryService) { }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n\r\n        if (this.parentEntityType)\r\n            this.getMasterAccessories(this.parentEntityType);\r\n    }\r\n\r\n    getMasterAccessories(parentEntityType: string) {\r\n\r\n        //this.accessorySettings.existingAccessories = null;\r\n\r\n        var paginationRequest = {\r\n            page: null,\r\n            pageSize: null,\r\n            filter: {\r\n                conditionOperator: ConditionOperator.AND,\r\n                filters: [{\r\n                    propertyName: \"ParentEntityType\",\r\n                    operator: Operator.equals,\r\n                    value: parentEntityType.toLowerCase(),\r\n                    caseSensitive: false\r\n                }]\r\n            },\r\n            order: {\r\n                orderByProperty: \"UpdatedDate\",\r\n                sortOrder: SortOrder.descending\r\n            }\r\n        };\r\n\r\n        this.accessoryService.getAccessories(paginationRequest).subscribe(\r\n            resp => {\r\n                this.accessoriesMaster = null;\r\n                if (resp.status.toLowerCase() == \"error\") {\r\n                    this.statusMessage = resp.message;\r\n                }\r\n                else {\r\n                    if (resp.data != null && resp.data.length > 0) {\r\n                        this.accessoriesMaster = resp.data;\r\n\r\n                    }\r\n                    else {\r\n                        this.statusMessage = \"There are no registered accessories.\";\r\n                    }\r\n                }\r\n            },\r\n            (err) => {\r\n                this.accessoriesMaster = null;\r\n                this.statusMessage = \"Error fetching accessories.\";\r\n            });\r\n    }\r\n\r\n    //fileChangeEvent(event: any) {\r\n    //    var files = event.target.files;\r\n\r\n    //    //this.populateDummyData();\r\n    //}\r\n\r\n    addAccessory() {\r\n        if (this.accessorySettings.accessories == null)\r\n            this.accessorySettings.accessories = new Array<Accessory>();\r\n\r\n        var index = this.accessorySettings.accessories.findIndex(x => x.id == this.selectedAccessory.id);\r\n\r\n        if (index == -1)\r\n            this.accessorySettings.accessories.push(this.selectedAccessory);\r\n    }\r\n\r\n    //getName(id: string) {\r\n\r\n    //    let accessory = this.accessoriesMaster.find(x => x.id == id);\r\n\r\n    //    if (accessory)\r\n    //        return accessory.name;\r\n    //    else\r\n    //        return '';\r\n    //}\r\n\r\n    removeAccessory(index: number) {\r\n        this.accessorySettings.accessories.splice(index, 1);\r\n    }\r\n\r\n    //onDesignChange(id: any) {\r\n\r\n    //    var selDesign = this.allDesigns.find(x => x.id == id);\r\n\r\n    //    this.accessorySettings.existingAccessories = [];\r\n    //    this.designAccessories = [];\r\n\r\n    //    selDesign.networkSettings.forEach(x => {\r\n    //        this.designAccessories.push(x.startNode.accessorySettings.accessories);\r\n    //        this.designAccessories.push(x.destinationNode.accessorySettings.accessories);\r\n    //        this.designAccessories.push(x.cabling.accessorySettings.accessories);\r\n    //    });\r\n        \r\n    //}\r\n\r\n    //onAccessoryChange(event: any) {\r\n    //    this.accessorySettings.existingAccessories = [];\r\n    //    this.accessorySettings.existingAccessories.push(event);\r\n    //}\r\n}\r\n","import { Component, Input, OnChanges, SimpleChanges, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { Costing } from '../models/design';\r\nimport { Helper } from '../../common/helper';\r\nimport { DesignService } from '../services/design.service';\r\nimport { Design } from '../models/design';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport * as XLSX from 'xlsx';\r\nimport * as $ from 'jquery';\r\n\r\n@Component({\r\n    selector: 'dzn-bom',\r\n    templateUrl: './dzn-bom.html'\r\n})\r\nexport class DesignBOM implements OnInit, OnChanges {\r\n    //@Input() public boq: Costing[] = new Array<Costing>();\r\n    @Input() public boq: Design = new Design();\r\n\r\n    cableGroups = new Array<Costing>();\r\n    chamberGroups = new Array<Costing>();\r\n    ductGroups = new Array<Array<Costing>>();\r\n    odfGroups = new Array<Array<Costing>>();\r\n    poleGroups = new Array<Array<Costing>>();\r\n    splitterGroups = new Array<Array<Costing>>();\r\n    spliceClosureGroups = new Array<Array<Costing>>();\r\n    accessoryGroups = new Array<Array<Costing>>();\r\n    civilworkGroups = new Array<Array<Costing>>();\r\n\r\n    cableSummary = new Costing();\r\n    chamberSummary = new Costing();\r\n    ductSummary = new Costing();\r\n    odfSummary = new Costing();\r\n    poleSummary = new Costing();\r\n    splitterSummary = new Costing();\r\n    spliceClosureSummary = new Costing();\r\n    accessorySummary = new Costing();\r\n    civilworkSummary = new Costing();\r\n\r\n    totalMaterialCost: number;\r\n    totalServiceCost: number;\r\n    totalCost: number;\r\n    excel = [];\r\n\r\n    statusMessage: string = \"\";\r\n\r\n    constructor(private route: ActivatedRoute, private designService: DesignService, private helper: Helper) {\r\n\r\n    }\r\n\r\n    @ViewChild('TABLE', { static: false }) TABLE: ElementRef;\r\n    @ViewChild('TABLE1', { static: false }) TABLE1: ElementRef;\r\n    title = 'Excel';\r\n\r\n    ExportTOExcel() {\r\n        var ref_this = $(\"ul#myNavTabs1 li.active\").text()\r\n        //if (ref_this == \"Summary\") {\r\n        const ws: XLSX.WorkSheet = XLSX.utils.table_to_sheet(this.TABLE.nativeElement);\r\n        const wb: XLSX.WorkBook = XLSX.utils.book_new();\r\n        const ws1: XLSX.WorkSheet = XLSX.utils.table_to_sheet(this.TABLE1.nativeElement);\r\n        XLSX.utils.book_append_sheet(wb, ws, 'Sheet1');\r\n        XLSX.utils.book_append_sheet(wb, ws1, 'Sheet2');\r\n        XLSX.writeFile(wb, 'Summary.xlsx');\r\n        //} else {\r\n        //    const ws: XLSX.WorkSheet = XLSX.utils.table_to_sheet(this.TABLE1.nativeElement);\r\n        //    const wb: XLSX.WorkBook = XLSX.utils.book_new();\r\n        //    XLSX.utils.book_append_sheet(wb, ws, 'Sheet2');\r\n        //    XLSX.writeFile(wb, 'Details.xlsx');\r\n        //}\r\n    }\r\n    ExportTOKml() {\r\n        this.designService.exportDesign(this.boq.id).subscribe(\r\n            resp => {\r\n                //this.designs = null;\r\n\r\n                if (resp.status.toLowerCase() == \"error\") {\r\n                    this.statusMessage = resp.message;\r\n                    this.helper.showAlertMessage(this.statusMessage, \"error\");\r\n                }\r\n                else {\r\n                    if (resp.data != null) {\r\n                        if (resp.data != \"\") {\r\n\r\n                            window.location.href = \"/Designs/Download?fileName=\" + resp.data;\r\n                        }\r\n\r\n                    }\r\n                    else {\r\n                        this.statusMessage = \"There are no registered designs.\";\r\n                    }\r\n\r\n                    // this.getFormData();\r\n                }\r\n\r\n                $(\"#ajax-loading\").hide();\r\n            },\r\n            (err) => {\r\n                $(\"#ajax-loading\").hide();\r\n                //this.designs = null;\r\n                let msg = `Unable to export designs : ${err.message}`;\r\n                this.helper.showAlertMessage(msg, \"error\");\r\n                this.statusMessage = \"Error export designs.\";\r\n            });\r\n    }\r\n    ngOnInit() {\r\n        this.generateBOQ();\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        this.generateBOQ();\r\n    }\r\n\r\n    reset() {\r\n        this.cableSummary = new Costing();\r\n        this.chamberSummary = new Costing();\r\n        this.ductSummary = new Costing();\r\n        this.odfSummary = new Costing();\r\n        this.poleSummary = new Costing();\r\n        this.splitterSummary = new Costing();\r\n        this.spliceClosureSummary = new Costing();\r\n        this.accessorySummary = new Costing();\r\n        this.civilworkSummary = new Costing();\r\n        this.totalMaterialCost = 0;\r\n        this.totalServiceCost = 0;\r\n        this.totalCost = 0;\r\n    }\r\n\r\n    stringify(obj: any) {\r\n        return JSON.stringify(obj);\r\n    }\r\n\r\n    generateBOQ() {\r\n\r\n        this.reset();\r\n\r\n        if (this.boq.boq == null) return;\r\n\r\n        let cables = this.boq.boq.filter(x => x.entityType == \"Cable\");\r\n        this.cableGroups = Helper.groupBy(cables, 'level');\r\n\r\n        cables.forEach(x => {\r\n            this.cableSummary.materialCost += (x.materialCost * x.quantity);\r\n\r\n            if (x.serviceCost)\r\n                this.cableSummary.serviceCost += (x.serviceCost * x.quantity);\r\n\r\n            this.cableSummary.quantity += (x.quantity * 1000);\r\n            this.cableSummary.units = x.units;\r\n        });\r\n\r\n        let chambers = this.boq.boq.filter(x => x.entityType == \"Chamber\");\r\n        this.chamberGroups = Helper.groupBy(chambers, 'level');\r\n\r\n        chambers.forEach(x => {\r\n            this.chamberSummary.materialCost += (x.materialCost * x.quantity);\r\n            if (x.serviceCost)\r\n                this.chamberSummary.serviceCost += (x.serviceCost * x.quantity);\r\n            this.chamberSummary.quantity += x.quantity;\r\n            this.chamberSummary.units = x.units;\r\n        });\r\n\r\n        let ducts = this.boq.boq.filter(x => x.entityType == \"Duct\");\r\n        this.ductGroups = Helper.groupBy(ducts, 'level');\r\n\r\n        ducts.forEach(x => {\r\n            this.ductSummary.materialCost += (x.materialCost * x.quantity);\r\n            if (x.serviceCost)\r\n                this.ductSummary.serviceCost += (x.serviceCost * x.quantity);\r\n            this.ductSummary.quantity += x.quantity;\r\n            this.ductSummary.units = x.units;\r\n        });\r\n\r\n        let odfs = this.boq.boq.filter(x => x.entityType == \"ODF\");\r\n        this.odfGroups = Helper.groupBy(odfs, 'level');\r\n\r\n        odfs.forEach(x => {\r\n            this.odfSummary.materialCost += (x.materialCost * x.quantity);\r\n            if (x.serviceCost)\r\n                this.odfSummary.serviceCost += (x.serviceCost * x.quantity);\r\n            this.odfSummary.quantity += x.quantity;\r\n            this.odfSummary.units = x.units;\r\n        });\r\n\r\n        let poles = this.boq.boq.filter(x => x.entityType == \"Pole\");\r\n        this.poleGroups = Helper.groupBy(poles, 'level');\r\n        poles.forEach(x => {\r\n            this.poleSummary.materialCost += (x.materialCost * x.quantity);\r\n            if (x.serviceCost)\r\n                this.poleSummary.serviceCost += (x.serviceCost * x.quantity);\r\n            this.poleSummary.quantity += x.quantity;\r\n            this.poleSummary.units = x.units;\r\n        });\r\n\r\n        let splitters = this.boq.boq.filter(x => x.entityType == \"Splitter\");\r\n        this.splitterGroups = Helper.groupBy(splitters, 'level');\r\n        splitters.forEach(x => {\r\n            this.splitterSummary.materialCost += (x.materialCost * x.quantity);\r\n            if (x.serviceCost)\r\n                this.splitterSummary.serviceCost += (x.serviceCost * x.quantity);\r\n            this.splitterSummary.quantity += x.quantity;\r\n            this.splitterSummary.units = x.units;\r\n        });\r\n\r\n        let spliceClosures = this.boq.boq.filter(x => x.entityType == \"SpliceClosure\");\r\n        this.spliceClosureGroups = Helper.groupBy(spliceClosures, 'level');\r\n        spliceClosures.forEach(x => {\r\n            this.spliceClosureSummary.materialCost += (x.materialCost * x.quantity);\r\n            if (x.serviceCost)\r\n                this.spliceClosureSummary.serviceCost += (x.serviceCost * x.quantity);\r\n            this.spliceClosureSummary.quantity += x.quantity;\r\n            this.spliceClosureSummary.units = x.units;\r\n        });\r\n\r\n        let accessories = this.boq.boq.filter(x => x.entityType == \"Accessory\");\r\n        this.accessoryGroups = Helper.groupBy(accessories, 'level');\r\n        accessories.forEach(x => {\r\n            this.accessorySummary.materialCost += (x.materialCost * x.quantity);\r\n            if (x.serviceCost)\r\n                this.accessorySummary.serviceCost += (x.serviceCost * x.quantity);\r\n            this.accessorySummary.quantity += x.quantity;\r\n            this.accessorySummary.units = x.units;\r\n        });\r\n\r\n        let civilworks = this.boq.boq.filter(x => x.entityType == \"Civilwork\");\r\n        this.civilworkGroups = Helper.groupBy(civilworks, 'level');\r\n        civilworks.forEach(x => {\r\n            this.civilworkSummary.materialCost += (x.materialCost * x.quantity);\r\n            if (x.serviceCost)\r\n                this.civilworkSummary.serviceCost += (x.serviceCost * x.quantity);\r\n            this.civilworkSummary.quantity += x.quantity;\r\n            this.civilworkSummary.units = x.units;\r\n        });\r\n\r\n        this.totalMaterialCost = this.cableSummary.materialCost +\r\n            this.chamberSummary.materialCost +\r\n            this.ductSummary.materialCost +\r\n            this.odfSummary.materialCost +\r\n            this.poleSummary.materialCost +\r\n            this.splitterSummary.materialCost +\r\n            this.spliceClosureSummary.materialCost +\r\n            this.accessorySummary.materialCost +\r\n            this.civilworkSummary.materialCost;\r\n\r\n        this.totalServiceCost = this.cableSummary.serviceCost +\r\n            this.chamberSummary.serviceCost +\r\n            this.ductSummary.serviceCost +\r\n            this.odfSummary.serviceCost +\r\n            this.poleSummary.serviceCost +\r\n            this.splitterSummary.serviceCost +\r\n            this.spliceClosureSummary.serviceCost +\r\n            this.accessorySummary.serviceCost +\r\n            this.civilworkSummary.serviceCost;\r\n\r\n        this.totalCost = this.totalMaterialCost + this.totalServiceCost;\r\n    }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { Design } from '../models/design';\r\nimport { BookingId } from '../../common/models/bookingId';\r\n\r\n@Component({\r\n    selector: 'dzn-bookingIds',\r\n    templateUrl: './dzn-bookingIds.html'\r\n})\r\nexport class DesignBookingIds implements OnInit{\r\n\r\n    @Input() public design: Design = new Design();\r\n\r\n    bookingIds: BookingId[] = new Array <BookingId>();\r\n\r\n    constructor() { }\r\n\r\n    ngOnInit(): void {\r\n        if (this.design.bookingIds == null || this.design.bookingIds.length == 0) {\r\n\r\n            this.design.bookingIds.push({ entityType: \"Cable\", format: \"Cable_{code}\", sequenceStart: 1, sequenceEnd: null, step: 1 });\r\n            this.design.bookingIds.push({ entityType: \"Chamber\", format: \"Chamber_{code}\", sequenceStart: 1, sequenceEnd: null, step: 1 });\r\n            this.design.bookingIds.push({ entityType: \"Duct\", format: \"Duct_{code}\", sequenceStart: 1, sequenceEnd: null, step: 1 });\r\n            this.design.bookingIds.push({ entityType: \"ODF\", format: \"ODF_{code}\", sequenceStart: 1, sequenceEnd: null, step: 1 });\r\n            this.design.bookingIds.push({ entityType: \"Pole\", format: \"Pole_{code}\", sequenceStart: 1, sequenceEnd: null, step: 1 });\r\n            this.design.bookingIds.push({ entityType: \"SpliceClosure\", format: \"SpliceClosure_{code}\", sequenceStart: 1, sequenceEnd: null, step: 1 });\r\n            this.design.bookingIds.push({ entityType: \"Splitter\", format: \"Splitter_{code}\", sequenceStart: 1, sequenceEnd: null, step: 1 });\r\n        }\r\n    }\r\n\r\n    clearBookingId(index: number) {\r\n        let item = this.design.bookingIds[index];\r\n        item.format = \"\";\r\n        item.sequenceStart = null;\r\n        item.sequenceEnd = null;\r\n        item.step = 1;\r\n    }\r\n\r\n}\r\n","import { Component, Input, OnInit, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { Design, CableSettings } from '../models/design';\r\nimport { Cable } from '../../entities/models/cable';\r\nimport { CableService } from '../../entities/services/cable.service';\r\nimport { ConditionOperator, Operator, SortOrder } from '../../common/models/paginationRequest';\r\nimport { Chamber } from '../../entities/models/chamber';\r\nimport { Pole } from '../../entities/models/pole';\r\nimport { PoleService } from '../../entities/services/pole.service';\r\nimport { ChamberService } from '../../entities/services/chamber.service';\r\n\r\n@Component({\r\n    selector: 'dzn-cable',\r\n    templateUrl: './dzn-cable.html'\r\n})\r\nexport class DesignCable implements OnInit, OnChanges {\r\n\r\n    @Input() public cableSettings: CableSettings = new CableSettings();\r\n    @Input() public allDesigns: Design[] = new Array<Design>();\r\n\r\n    cablesMaster: Cable[] = new Array<Cable>();\r\n    polesMaster: Pole[] = new Array<Pole>();\r\n    chambersMaster: Chamber[] = new Array<Chamber>();\r\n\r\n    statusMessage: string = \"No cable selected\";\r\n    selectedCable: Cable;\r\n\r\n    constructor(private cableService: CableService,\r\n        private poleService: PoleService,\r\n        private chamberService: ChamberService) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.getExistingChambers();\r\n        this.getExistingPoles();\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n\r\n      if (this.cableSettings.cableType)\r\n          this.getCablesMaster(this.cableSettings.cableType);\r\n \r\n    }\r\n\r\n    onCableTypeChange(cableType) {\r\n\r\n        this.cableSettings.cables = null;\r\n\r\n        this.getCablesMaster(cableType);\r\n\r\n        this.cableSettings.pole = new Pole();\r\n        this.cableSettings.chamber = new Chamber();\r\n\r\n        if (cableType == \"underground\")\r\n            this.getExistingChambers();\r\n        else\r\n            this.getExistingPoles();\r\n\r\n    }\r\n\r\n    getCablesMaster(cableType) {\r\n\r\n            var paginationRequest = {\r\n                page: null,\r\n                pageSize: null,\r\n                filter: {\r\n                    conditionOperator: ConditionOperator.AND,\r\n                    filters: [{\r\n                        propertyName: \"isUnderground\",\r\n                        operator: Operator.equals,\r\n                        value: cableType == \"underground\"? true: false,\r\n                        caseSensitive: false\r\n                    }]\r\n                },\r\n                order: {\r\n                    orderByProperty: \"UpdatedDate\",\r\n                    sortOrder: SortOrder.descending\r\n                }\r\n            };\r\n\r\n            this.cableService.getCables(paginationRequest).subscribe(\r\n                resp => {\r\n                    this.cablesMaster = null;\r\n                    if (resp.status.toLowerCase() == \"error\") {\r\n                        this.statusMessage = resp.message;\r\n                    }\r\n                    else {\r\n                        if (resp.data != null && resp.data.length > 0) {\r\n                            this.cablesMaster = resp.data;\r\n                        }\r\n                        else {\r\n                            this.statusMessage = \"There are no registered cables.\";\r\n                        }\r\n                    }\r\n                },\r\n                (err) => {\r\n                    this.cablesMaster = null;\r\n                    this.statusMessage = \"Error fetching cables.\";\r\n                });\r\n    }\r\n\r\n    getExistingPoles() {\r\n\r\n        if (this.polesMaster.length == 0) {\r\n\r\n            this.poleService.getPoles().subscribe(\r\n                resp => {\r\n                    this.polesMaster = null;\r\n                    if (resp.data != null && resp.data.length > 0) {\r\n                        this.polesMaster = resp.data;\r\n                    }\r\n                },\r\n                (err) => {\r\n                    this.polesMaster = new Array<Pole>();\r\n                });\r\n        }\r\n    }\r\n\r\n    getExistingChambers() {\r\n\r\n        if (this.chambersMaster.length == 0) {\r\n\r\n            this.chamberService.getChambers().subscribe(\r\n                resp => {\r\n                    this.chambersMaster = null;\r\n                    if (resp.data != null && resp.data.length > 0) {\r\n                        this.chambersMaster = resp.data;\r\n                    }\r\n                },\r\n                (err) => {\r\n                    this.chambersMaster = new Array<Chamber>();\r\n                });\r\n        }\r\n    }\r\n\r\n    addCable() {\r\n        if (this.selectedCable) {\r\n            if (this.cableSettings.cables == null)\r\n                this.cableSettings.cables = new Array<Cable>();\r\n\r\n            var index = this.cableSettings.cables.findIndex(x => x.id == this.selectedCable.id);\r\n\r\n            if (index == -1) {\r\n                this.cableSettings.cables.push(this.selectedCable);\r\n                this.selectedCable = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    onPoleChange(poleId: string) {\r\n        this.cableSettings.pole = this.polesMaster.find(x => x.id == poleId);\r\n    }\r\n\r\n    onChamberChange(id: string) {\r\n        this.cableSettings.chamber = this.chambersMaster.find(x => x.id == id);\r\n    }\r\n\r\n    removeCable(index: number) {\r\n        this.cableSettings.cables.splice(index, 1);\r\n    }\r\n}\r\n","import { Component, Input, SimpleChanges, OnChanges } from '@angular/core';\r\nimport { CivilworkSettings } from '../models/design';\r\nimport { CivilworkService } from '../../civilworks/services/civilwork.service';\r\nimport { Civilwork } from '../../civilworks/models/civilwork';\r\nimport { ConditionOperator, Operator, SortOrder } from '../../common/models/paginationRequest';\r\n\r\n@Component({\r\n    selector: 'dzn-civilworks',\r\n    templateUrl: './dzn-civilworks.html'\r\n})\r\nexport class DesignCivilwork implements OnChanges {\r\n\r\n    @Input() public civilworkSettings: CivilworkSettings = new CivilworkSettings();\r\n    @Input() parentEntityType: string;\r\n\r\n    civilworksMaster: Civilwork[] = new Array<Civilwork>();\r\n    statusMessage: string;\r\n    selectedCivilwork: Civilwork;\r\n\r\n    constructor(private civilworkService: CivilworkService ) { }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n\r\n        if (this.parentEntityType)\r\n            this.getExistingCivilworks(this.parentEntityType);\r\n    }\r\n\r\n    getExistingCivilworks(parentEntityType: string) {\r\n\r\n        //this.civilworkSettings.civilworks = null;\r\n\r\n        var paginationRequest = {\r\n            page: null,\r\n            pageSize: null,\r\n            filter: {\r\n                conditionOperator: ConditionOperator.AND,\r\n                filters: [{\r\n                    propertyName: \"ParentEntityType\",\r\n                    operator: Operator.equals,\r\n                    value: parentEntityType.toLowerCase(),\r\n                    caseSensitive: false\r\n                }]\r\n            },\r\n            order: {\r\n                orderByProperty: \"UpdatedDate\",\r\n                sortOrder: SortOrder.descending\r\n            }\r\n        };\r\n\r\n        this.civilworkService.getCivilworks(paginationRequest).subscribe(\r\n            resp => {\r\n                this.civilworksMaster = null;\r\n                if (resp.status.toLowerCase() == \"error\") {\r\n                    this.statusMessage = resp.message;\r\n                }\r\n                else {\r\n                    if (resp.data != null && resp.data.length > 0) {\r\n                        this.civilworksMaster = resp.data;\r\n\r\n                    }\r\n                    else {\r\n                        this.statusMessage = \"There are no registered civilworks.\";\r\n                    }\r\n                }\r\n            },\r\n            (err) => {\r\n                this.civilworksMaster = null;\r\n                this.statusMessage = \"Error fetching civilworks.\";\r\n            });\r\n\r\n    }\r\n\r\n    addCivilwork() {\r\n        if (this.selectedCivilwork) {\r\n            if (this.civilworkSettings.civilworks == null)\r\n                this.civilworkSettings.civilworks = new Array<Civilwork>();\r\n\r\n            var index = this.civilworkSettings.civilworks.findIndex(x => x.id == this.selectedCivilwork.id);\r\n\r\n            if (index == -1) {\r\n                this.civilworkSettings.civilworks.push(this.selectedCivilwork);\r\n                this.selectedCivilwork = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    removeCivilwork(index: number) {\r\n        this.civilworkSettings.civilworks.splice(index, 1);\r\n    }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\n\r\nimport { Design } from '../models/design';\r\nimport { Cluster } from '../../clusters/models/cluster';\r\nimport { SearchField } from '../../common/models/SearchField';\r\nimport { SearchFilter, SortOrder, ConditionOperator } from '../../common/models/paginationRequest';\r\nimport { ClusterService } from '../../clusters/services/cluster.service';\r\nimport { Helper } from '../../common/helper';\r\n\r\ndeclare var $: any;\r\n\r\n@Component({\r\n    selector: 'dzn-clusters',\r\n    templateUrl: './dzn-clusters.html'\r\n})\r\nexport class DesignClusters implements OnInit {\r\n\r\n    @Input() public design: Design = new Design();\r\n    clusters = new Array<Cluster>();\r\n    statusMessage: string = \"\";\r\n    pageSize = 10;\r\n    currentPage = 1;\r\n    totalPages = 1;\r\n    searchFields: SearchField[];\r\n    searchFilter: SearchFilter;\r\n    selectedField: SearchField;\r\n    searchText: string;\r\n    sortColumn: string;\r\n    sortOrder: SortOrder = SortOrder.descending;\r\n    previousElement: HTMLElement;\r\n\r\n    constructor(\r\n        private clusterService: ClusterService,\r\n        private helper: Helper) {\r\n\r\n        this.searchFields = new Array<SearchField>();\r\n        this.searchFields.push({ field: 'Name', label: 'Name', dataType: \"text\", value: \"\" });\r\n        this.searchFields.push({ field: 'UpdatedBy', label: 'Updated By', dataType: \"text\", value: \"\" });\r\n        this.searchFields.push({ field: 'UpdatedDate', label: 'Updated On', dataType: \"date\", value: \"\" });\r\n\r\n        this.selectedField = this.searchFields[0];\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.statusMessage = \"Loading clusters...\";\r\n        this.pageSize = 10;\r\n        this.currentPage = 1;\r\n        this.sortColumn = null;\r\n        this.sortOrder = SortOrder.noSort;\r\n        this.searchText = \"\";\r\n        this.getFormData();\r\n    }\r\n\r\n    getFormData() {\r\n\r\n        $(\"#ajax-loading\").show();\r\n\r\n        this.totalPages = 1;\r\n\r\n        let paginationRequest = {\r\n            page: this.currentPage,\r\n            pageSize: this.pageSize,\r\n            filter: this.searchFilter,\r\n            order: {\r\n                orderByProperty: this.sortColumn,\r\n                sortOrder: this.sortOrder\r\n            }\r\n        };\r\n\r\n        this.clusterService.getClusters(paginationRequest).subscribe(\r\n            resp => {\r\n                this.clusters = null;\r\n\r\n                if (resp.status.toLowerCase() == \"error\") {\r\n                    this.statusMessage = resp.message;\r\n                    this.helper.showAlertMessage(this.statusMessage, \"error\");\r\n                }\r\n                else {\r\n                    if (resp.data != null && resp.data.length > 0) {\r\n                        this.clusters = resp.data;\r\n                        this.totalPages = Math.ceil(resp.recordCount / this.pageSize);\r\n                    }\r\n                    else {\r\n                        this.statusMessage = \"There are no clusters.\";\r\n                    }\r\n                }\r\n\r\n                $(\"#ajax-loading\").hide();\r\n            },\r\n            (err) => {\r\n                $(\"#ajax-loading\").hide();\r\n                this.clusters = null;\r\n                let msg = `Unable to fetch clusters : ${err.message}`;\r\n                this.helper.showAlertMessage(msg, \"error\");\r\n                this.statusMessage = \"Error fetching clusters.\";\r\n            });\r\n    }\r\n\r\n    setSearchField(searchField: any) {\r\n        this.selectedField = searchField;\r\n        this.searchText = '';\r\n    }\r\n\r\n    search() {\r\n\r\n        this.searchFilter = this.helper.search(this.selectedField, this.searchText, ConditionOperator.AND)\r\n        this.searchFields.forEach(x => x.value = '');\r\n\r\n        this.getFormData();\r\n    }\r\n\r\n    clearSearch() {\r\n        this.searchFilter = this.helper.search(this.selectedField, this.searchText, ConditionOperator.AND)\r\n        this.searchFields.forEach(x => x.value = '');\r\n    }\r\n\r\n    setPage(page: number) {\r\n\r\n        if (page < 1 || page > this.totalPages) {\r\n            return;\r\n        }\r\n\r\n        this.currentPage = page;\r\n\r\n        this.getFormData();\r\n    }\r\n\r\n    onColumnClick(e: HTMLElement) {\r\n\r\n        if (this.previousElement && e.getAttribute('data-column') != this.previousElement.getAttribute('data-column')) {\r\n            this.previousElement.classList.remove('table-sorter-desc');\r\n            this.previousElement.classList.remove('table-sorter-asc');\r\n        }\r\n\r\n        this.previousElement = e;\r\n\r\n        this.sortColumn = e.getAttribute('data-column');\r\n\r\n        if (e.classList.contains(\"table-sorter-asc\")) {\r\n            e.classList.remove('table-sorter-asc');\r\n            e.classList.add('table-sorter-desc');\r\n            this.sortOrder = SortOrder.descending;\r\n        }\r\n        else if (e.classList.contains(\"table-sorter-desc\")) {\r\n            e.classList.remove('table-sorter-desc');\r\n            this.sortColumn = null;\r\n            this.sortOrder = SortOrder.noSort;\r\n        }\r\n        else {\r\n            e.classList.add('table-sorter-asc');\r\n            this.sortOrder = SortOrder.ascending;\r\n        }\r\n\r\n\r\n        this.getFormData();\r\n    }\r\n}\r\n","import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { NetworkSetting } from '../models/design';\r\nimport { Cable } from '../../entities/models/cable';\r\nimport { Chamber } from '../../entities/models/chamber';\r\nimport { GeoNode } from '../../common/geo/geoNode';\r\nimport { Pole } from '../../entities/models/pole';\r\nimport { Accessory } from '../../accessories/models/accessory';\r\nimport { Duct } from '../../entities/models/duct';\r\nimport { SpliceClosure } from '../../entities/models/spliceClosure';\r\nimport { Civilwork } from '../../civilworks/models/civilwork';\r\nimport { ODF } from '../../entities/models/odf';\r\nimport { Splitter } from '../../entities/models/splitter';\r\n//import { CustomField, ControlType, DataType } from '../../../common/customField';\r\n\r\n@Component({\r\n    selector: 'dzn-costing',\r\n    templateUrl: './dzn-costing.html'\r\n})\r\nexport class DesignCosting implements OnChanges {\r\n\r\n    @Input() public networkSettings: NetworkSetting[] = new Array<NetworkSetting>();\r\n\r\n    entityType: string = \"Cable\";\r\n\r\n    cables: Cable[] = new Array<Cable>();\r\n    chambers: Chamber[] = new Array<Chamber>();\r\n    ducts: Duct[] = new Array<Duct>();\r\n    odfs: ODF[] = new Array<ODF>();\r\n    poles: Pole[] = new Array<Pole>();\r\n    splitters: Splitter[] = new Array<Splitter>();\r\n    spliceClosures: SpliceClosure[] = new Array<SpliceClosure>();\r\n\r\n    accessories: Accessory[] = new Array<Accessory>();\r\n    civilworks: Civilwork[] = new Array<Civilwork>();\r\n\r\n    constructor() { }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n\r\n        if (this.networkSettings == null) return;\r\n\r\n        this.networkSettings.forEach(level => {\r\n\r\n            this.cables = new Array<Cable>();\r\n            this.chambers = new Array<Chamber>();\r\n            this.ducts = new Array<Duct>();\r\n            this.odfs = new Array<ODF>();\r\n            this.poles = new Array<Pole>();\r\n            this.splitters = new Array<Splitter>();\r\n            this.spliceClosures = new Array<SpliceClosure>();\r\n\r\n            this.accessories = new Array<Accessory>();\r\n            this.civilworks = new Array<Civilwork>();\r\n\r\n            //start node\r\n            if (level.startNode) {\r\n                if (level.startNode.accessorySettings.accessories != null) {\r\n                    level.startNode.accessorySettings.accessories.forEach(accessory => {\r\n\r\n                        let index = this.accessories.findIndex(c => c.name == accessory.name);\r\n\r\n                        if (index == -1)\r\n                            this.accessories.push(accessory);\r\n                    });\r\n                }\r\n\r\n                if (level.startNode.civilworkSettings.civilworks != null) {\r\n                    level.startNode.civilworkSettings.civilworks.forEach(civilwork => {\r\n\r\n                        let index = this.civilworks.findIndex(c => c.name == civilwork.name);\r\n\r\n                        if (index == -1)\r\n                            this.civilworks.push(civilwork);\r\n                    });\r\n                }\r\n\r\n                if (level.startNode.entitySettings.dataSource == \"automatic\") {\r\n                    if (level.startNode.entitySettings.splitters != null && level.startNode.entitySettings.splitters.length > 0) {\r\n                        let index = this.splitters.findIndex(s => s.name == level.startNode.entitySettings.splitters[0].name);\r\n\r\n                        if (index == -1)\r\n                            this.splitters.push(level.startNode.entitySettings.splitters[0]);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (level.destinationNode) {\r\n                //destination node\r\n                if (level.destinationNode.accessorySettings.accessories != null) {\r\n                    level.destinationNode.accessorySettings.accessories.forEach(accessory => {\r\n\r\n                        let index = this.accessories.findIndex(c => c.name == accessory.name);\r\n\r\n                        if (index == -1)\r\n                            this.accessories.push(accessory);\r\n                    });\r\n                }\r\n\r\n                if (level.destinationNode.civilworkSettings.civilworks != null) {\r\n                    level.destinationNode.civilworkSettings.civilworks.forEach(civilwork => {\r\n\r\n                        let index = this.civilworks.findIndex(c => c.name == civilwork.name);\r\n\r\n                        if (index == -1)\r\n                            this.civilworks.push(civilwork);\r\n                    });\r\n                }\r\n\r\n                if (level.destinationNode.entitySettings.dataSource == \"automatic\") {\r\n                    if (level.destinationNode.entitySettings.splitters != null && level.destinationNode.entitySettings.splitters.length > 0) {\r\n                        let index = this.splitters.findIndex(s => s.name == level.destinationNode.entitySettings.splitters[0].name);\r\n\r\n                        if (index == -1)\r\n                            this.splitters.push(level.destinationNode.entitySettings.splitters[0]);\r\n                    }\r\n                }\r\n\r\n                //if (level.destinationNode.entitySettings.splitter != null) {\r\n                //    let index = this.splitters.findIndex(s => s.name == level.destinationNode.entitySettings.splitter.name);\r\n\r\n                //    if (index == -1)\r\n                //        this.splitters.push(level.destinationNode.entitySettings.splitter);\r\n                //}\r\n\r\n            }\r\n\r\n            if (level.fdpNode) {\r\n                //FDP node\r\n                if (level.fdpNode.accessorySettings.accessories != null) {\r\n                    level.fdpNode.accessorySettings.accessories.forEach(accessory => {\r\n\r\n                        let index = this.accessories.findIndex(c => c.name == accessory.name);\r\n\r\n                        if (index == -1)\r\n                            this.accessories.push(accessory);\r\n                    });\r\n                }\r\n\r\n                if (level.fdpNode.civilworkSettings.civilworks != null) {\r\n                    level.fdpNode.civilworkSettings.civilworks.forEach(civilwork => {\r\n\r\n                        let index = this.civilworks.findIndex(c => c.name == civilwork.name);\r\n\r\n                        if (index == -1)\r\n                            this.civilworks.push(civilwork);\r\n                    });\r\n                }\r\n\r\n                //if (level.destinationNode.entitySettings.dataSource == \"automatic\") {\r\n                //    if (level.destinationNode.entitySettings.splitters != null && level.destinationNode.entitySettings.splitters.length > 0) {\r\n                //        let index = this.splitters.findIndex(s => s.name == level.destinationNode.entitySettings.splitters[0].name);\r\n\r\n                //        if (index == -1)\r\n                //            this.splitters.push(level.destinationNode.entitySettings.splitters[0]);\r\n                //    }\r\n                //}\r\n            }\r\n\r\n            //Cabling\r\n            if (level.cabling.cableSettings.cables != null) {\r\n                level.cabling.cableSettings.cables.forEach(cable => {\r\n\r\n                    let index = this.cables.findIndex(c => c.name == cable.name);\r\n\r\n                    if (index == -1)\r\n                        this.cables.push(cable);\r\n                });\r\n            }\r\n\r\n            if (level.cabling.cableSettings.chamber.name) {\r\n                let chamber = level.cabling.cableSettings.chamber;\r\n                let index = this.chambers.findIndex(c => c.name == chamber.name);\r\n                if (index == -1)\r\n                    this.chambers.push(chamber);\r\n            }\r\n\r\n            if (level.cabling.cableSettings.pole.name) {\r\n                let pole = level.cabling.cableSettings.pole;\r\n                let index = this.poles.findIndex(c => c.name == pole.name);\r\n                if (index == -1)\r\n                    this.poles.push(pole);\r\n            }\r\n            if (level.cabling.accessorySettings.accessories != null) {\r\n                level.cabling.accessorySettings.accessories.forEach(accessory => {\r\n\r\n                    let index = this.accessories.findIndex(c => c.name == accessory.name);\r\n\r\n                    if (index == -1)\r\n                        this.accessories.push(accessory);\r\n                });\r\n            }\r\n\r\n            if (level.cabling.ductSettings.ducts != null) {\r\n                level.cabling.ductSettings.ducts.forEach(duct => {\r\n\r\n                    let index = this.ducts.findIndex(c => c.name == duct.name);\r\n\r\n                    if (index == -1)\r\n                        this.ducts.push(duct);\r\n                });\r\n            }\r\n\r\n            if (level.cabling.spliceClosureSettings.spliceClosures != null) {\r\n                level.cabling.spliceClosureSettings.spliceClosures.forEach(spliceClosure => {\r\n\r\n                    let index = this.spliceClosures.findIndex(c => c.name == spliceClosure.name);\r\n\r\n                    if (index == -1)\r\n                        this.spliceClosures.push(spliceClosure);\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    checkPriceValidity(validFrom?: string, validTill?: string) {\r\n\r\n        let today = new Date();\r\n        let vf = new Date(validFrom);\r\n        let vt = new Date(validTill);\r\n\r\n        if (vf <= today && vt > today)\r\n            return true;\r\n        else\r\n            return false;\r\n\r\n    }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { Helper } from '../../common/helper';\r\nimport { Document } from '../../common/models/document';\r\nimport { Design } from '../models/design';\r\n\r\n@Component({\r\n    selector: 'dzn-documents',\r\n    templateUrl: './dzn-documents.html'\r\n})\r\nexport class DesignDocuments {\r\n\r\n    @Input() public design: Design = new Design();\r\n    documentCategory: string = \"\";\r\n\r\n    constructor(public helper: Helper) { }\r\n\r\n    fileChangeEvent(event: any) {\r\n        var files = event.target.files;\r\n\r\n        if (this.design.documents == null)\r\n            this.design.documents = new Array<Document>();\r\n\r\n        for (var i = 0; i < files.length; i++) {\r\n\r\n            if (files[i].name.length > 200) {\r\n                this.helper.showAlertMessage(\"Document file name cannot be greater than 200 characters\", \"error\");\r\n            }\r\n            else {\r\n\r\n                var document = new Document();\r\n                document.category = this.documentCategory;\r\n                document.fileName = files[i].name;\r\n                document.fileSize = files[i].size;\r\n                document.file = files[i];\r\n\r\n                this.design.documents.push(document);\r\n            }\r\n        }\r\n    }\r\n\r\n    removeDocument(index: number, document: Document) {\r\n        this.design.documents.splice(index, 1);\r\n\r\n      //if (document.id != null) {\r\n      //   this.designService.deleteDocument(this.design.id, document.id)\r\n      //      .subscribe(() => {\r\n      //         this.helper.showAlertMessage(\"Document deleted\", \"success\");\r\n      //      },\r\n      //         (err) => {\r\n      //            let msg = `Unable to delete document : ${err.message}`;\r\n      //            this.helper.showAlertMessage(msg, \"error\");\r\n      //         });\r\n      //}\r\n    }\r\n\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { DuctSettings } from '../models/design';\r\nimport { Duct } from '../../entities/models/duct';\r\nimport { DuctService } from '../../entities/services/duct.service';\r\n\r\n@Component({\r\n    selector: 'dzn-duct',\r\n    templateUrl: './dzn-duct.html'\r\n})\r\nexport class DesignDuct implements OnInit {\r\n\r\n    @Input() public ductSettings: DuctSettings = new DuctSettings();\r\n\r\n    ductsMaster: Duct[] = new Array<Duct>();\r\n    statusMessage: string =\"No ducts selected\";\r\n    selectedDuct: Duct;\r\n\r\n    constructor(private ductService: DuctService ) {\r\n        this.selectedDuct = null;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.getExistingDucts();\r\n    }\r\n\r\n    getExistingDucts() {\r\n\r\n        this.ductService.getDucts().subscribe(\r\n            resp => {\r\n\r\n                this.ductsMaster = null;\r\n\r\n                if (resp.status.toLowerCase() == \"error\") {\r\n                    this.statusMessage = resp.message;\r\n                }\r\n                else {\r\n                    if (resp.data != null && resp.data.length > 0) {\r\n                        this.ductsMaster = resp.data;\r\n                    }\r\n                    else {\r\n                        this.statusMessage = \"There are no registered ducts.\";\r\n                    }\r\n                }\r\n            },\r\n            (err) => {\r\n                this.ductsMaster = null;\r\n                this.statusMessage = \"Error fetching ducts.\";\r\n            });\r\n    }\r\n\r\n    addDuct() {\r\n        if (this.selectedDuct) {\r\n            if (this.ductSettings.ducts == null)\r\n                this.ductSettings.ducts = new Array<Duct>();\r\n\r\n            var index = this.ductSettings.ducts.findIndex(x => x.id == this.selectedDuct.id);\r\n\r\n            if (index == -1) {\r\n                this.ductSettings.ducts.push(this.selectedDuct);\r\n                this.selectedDuct = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    removeDuct(index: number) {\r\n        this.ductSettings.ducts.splice(index, 1);\r\n    }\r\n\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { Design, EntitySettings } from '../models/design';\r\nimport { SplitterService } from '../../entities/services/splitter.service';\r\nimport { Splitter } from '../../entities/models/splitter';\r\nimport { SpliceClosure } from '../../entities/models/spliceClosure';\r\nimport { SpliceClosureService } from '../../entities/services/spliceClosure.service';\r\nimport { Pole } from '../../entities/models/pole';\r\nimport { ODF } from '../../entities/models/odf';\r\nimport { Chamber } from '../../entities/models/chamber';\r\nimport { PoleService } from '../../entities/services/pole.service';\r\nimport { ODFService } from '../../entities/services/odf.service';\r\nimport { ChamberService } from '../../entities/services/chamber.service';\r\nimport { Helper } from '../../common/helper';\r\nimport { GeoHelper } from '../../common/geo/geoHelper';\r\nimport { Point } from '../../common/geo/geometry';\r\n\r\ndeclare var $: any;\r\ndeclare var shp: any;\r\ndeclare var toGeoJSON: any;\r\n\r\n@Component({\r\n    selector: 'dzn-entities',\r\n    templateUrl: './dzn-entities.html'\r\n})\r\nexport class DesignEntities implements OnInit {\r\n\r\n    @Input() entitySettings: EntitySettings = new EntitySettings();\r\n    @Input() allDesigns: Design[] = new Array<Design>();\r\n\r\n    selectedEntity: any;\r\n    masterEntities: any;\r\n    entities = [];\r\n    designEntities: any;\r\n\r\n    constructor(\r\n        private chamberService: ChamberService,\r\n        private odfService: ODFService,\r\n        private poleService: PoleService,\r\n        private spliceClosureService: SpliceClosureService,\r\n        private splitterService: SplitterService,\r\n        private helper: Helper\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.loadMasterEntities(this.entitySettings.entityName);\r\n        this.initializeEntities();\r\n    }\r\n\r\n    initializeEntities() {\r\n\r\n        switch (this.entitySettings.entityName) {\r\n            case \"Chamber\":\r\n\r\n                if (this.entitySettings.chambers == null)\r\n                    this.entitySettings.chambers = new Array<Chamber>();\r\n\r\n                this.entities = this.entitySettings.chambers;\r\n                break;\r\n            case \"ODF\":\r\n\r\n                if (this.entitySettings.odfs == null)\r\n                    this.entitySettings.odfs = new Array<ODF>();\r\n\r\n                this.entities = this.entitySettings.odfs;\r\n                break;\r\n            case \"Pole\":\r\n\r\n                if (this.entitySettings.poles == null)\r\n                    this.entitySettings.poles = new Array<Pole>();\r\n\r\n                this.entities = this.entitySettings.poles;\r\n                break;\r\n            case \"SpliceClosure\":\r\n\r\n                if (this.entitySettings.spliceClosures == null)\r\n                    this.entitySettings.spliceClosures = new Array<SpliceClosure>();\r\n\r\n                this.entities = this.entitySettings.spliceClosures;\r\n                break;\r\n            case \"Splitter\":\r\n\r\n                if (this.entitySettings.splitters == null)\r\n                    this.entitySettings.splitters = new Array<Splitter>();\r\n\r\n                this.entities = this.entitySettings.splitters;\r\n                break;\r\n        }\r\n    }\r\n\r\n    onEntityTypeChange(entityType: string) {\r\n\r\n        if (this.entitySettings.entityName == 'Homepass') {\r\n            this.entitySettings.dataSource = 'automatic';\r\n        }\r\n        else {\r\n            this.entitySettings.chambers = null;\r\n            this.entitySettings.odfs = null;\r\n            this.entitySettings.poles = null;\r\n            this.entitySettings.spliceClosures = null;\r\n            this.entitySettings.splitters = null;\r\n\r\n            this.initializeEntities();\r\n\r\n            this.loadMasterEntities(entityType);\r\n        }\r\n\r\n    }\r\n\r\n    loadMasterEntities(entityType: string) {\r\n\r\n        let masterSvc = null;\r\n\r\n        switch (entityType) {\r\n            case \"Chamber\":\r\n                masterSvc = this.chamberService.getChambers();\r\n                break;\r\n            case \"ODF\":\r\n                masterSvc = this.odfService.getODFs();\r\n                break;\r\n            case \"Pole\":\r\n                masterSvc = this.poleService.getPoles();\r\n                break;\r\n            case \"SpliceClosure\":\r\n                masterSvc = this.spliceClosureService.getSpliceClosures();\r\n                break;\r\n            case \"Splitter\":\r\n                masterSvc = this.splitterService.getSplitters();\r\n                break;\r\n\r\n            default:\r\n                masterSvc = this.splitterService.getSplitters();\r\n                break;\r\n        }\r\n\r\n        masterSvc.subscribe(\r\n            resp => {\r\n                this.masterEntities = null;\r\n                if (resp.data != null && resp.data.length > 0) {\r\n                    this.masterEntities = resp.data;\r\n                }\r\n            },\r\n            (err) => {\r\n                this.masterEntities = new Array<Chamber>();\r\n            });\r\n    }\r\n\r\n    addEntity() {\r\n\r\n        if (this.entities == null) this.entities = [];\r\n\r\n        if (this.selectedEntity) {\r\n            var index = this.entities.findIndex(x => x.id == this.selectedEntity.id);\r\n\r\n            if (index == -1) {\r\n                this.entities.push(this.selectedEntity);\r\n                this.selectedEntity = null;\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    removeEntity(index: number) {\r\n        this.entities.splice(index, 1);\r\n    }\r\n\r\n    fileChangeEvent(event: any) {\r\n\r\n        this.entitySettings.chambers = null;\r\n        this.entitySettings.odfs = null;\r\n        this.entitySettings.poles = null;\r\n        this.entitySettings.spliceClosures = null;\r\n        this.entitySettings.splitters = null;\r\n\r\n        this.initializeEntities();\r\n\r\n        var file = event.target.files[0];\r\n\r\n        var reader = new FileReader();\r\n\r\n        var fileExt = file.name.split('.').pop().toLowerCase();\r\n\r\n        reader.onload = (e) => {\r\n\r\n            try {\r\n\r\n                if (fileExt == \"kml\") {\r\n                    let kml = reader.result as string;\r\n                    let geojson = toGeoJSON.kml((new DOMParser()).parseFromString(kml, 'text/xml'));\r\n                    this.populateEntities(geojson.features);\r\n                }\r\n                else if (fileExt == \"zip\") {\r\n                    shp(reader.result as ArrayBuffer).then((geojson) => {\r\n                        this.populateEntities(geojson.features);\r\n                    });\r\n                }\r\n                else if (fileExt == \"csv\") {\r\n                    let csv = reader.result as string;\r\n                    this.populateEntitiesCsv(csv);\r\n                }\r\n\r\n            } catch (e) {\r\n                this.helper.showAlertMessage(\"Could not parse the file.\", \"error\");\r\n            }\r\n\r\n        }\r\n\r\n        if (fileExt == \"csv\" || fileExt == \"kml\")\r\n            reader.readAsText(file);\r\n        else if (fileExt == \"zip\")\r\n            reader.readAsArrayBuffer(file);\r\n        else\r\n            this.helper.showAlertMessage(\"Invalid file format\", \"error\");\r\n    }\r\n\r\n    populateEntities(features: any) {\r\n\r\n        this.entities.length = 0;\r\n\r\n        for (var i = 0; i < features.length; i++) {\r\n            let properties = features[i].properties;\r\n\r\n            let latLng = GeoHelper.convertToPosition([features[i].geometry.coordinates[0], features[i].geometry.coordinates[1]]);\r\n            const isValid: Error = GeoHelper.validateCoordinates(latLng);\r\n\r\n            if ((isValid instanceof Error) == false) {\r\n\r\n                let index = this.entities.findIndex(x => x.code == properties.name);\r\n\r\n                if (index == -1) {\r\n                    let entity = {\r\n                        name: properties.name,\r\n                       code: properties.name,\r\n                       geometry: new Point([latLng.lng, latLng.lat]),\r\n\r\n                    };\r\n                   entity[\"splitterRatio\"] = \"1:8\";\r\n                    this.entities.push(entity);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    populateEntitiesCsv(csvData: any) {\r\n\r\n        this.entities.length = 0;\r\n\r\n        var allRows = csvData.split(/\\r?\\n|\\r/);\r\n\r\n        for (var i = 1; i < allRows.length; i++) {\r\n\r\n            if (allRows[i].trim() == \"\") continue;\r\n\r\n            let properties = allRows[i].split(',');\r\n            let lat = parseFloat(properties[3]);\r\n            let lng = parseFloat(properties[4]);\r\n\r\n            let latLng = GeoHelper.convertToPosition([lng, lat]);\r\n\r\n            const isValid: Error = GeoHelper.validateCoordinates(latLng);\r\n\r\n            if ((isValid instanceof Error) == false) {\r\n                let index = this.entities.findIndex(x => x.code == properties.Test);\r\n                if (index == -1) {\r\n                    let entity = {\r\n                        name: properties[1],\r\n                        code: properties[0],\r\n                        geometry: new Point([lng, lat]),\r\n                    };\r\n\r\n                    this.entities.push(entity);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    onDesignChange(designId: string) {\r\n\r\n        let design = this.allDesigns.find(x => x.id == designId);\r\n\r\n    }\r\n\r\n    onDesignEntityChange(designEntity) {\r\n\r\n    }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { Design, FDPSettings } from '../models/design';\r\nimport { FDP } from '../../entities/models/fdp';\r\nimport { Helper } from '../../common/helper';\r\nimport { GeoHelper } from '../../common/geo/geoHelper';\r\nimport { Point } from '../../common/geo/geometry';\r\n\r\ndeclare var $: any;\r\ndeclare var shp: any;\r\ndeclare var toGeoJSON: any;\r\n\r\n@Component({\r\n    selector: 'dzn-fdp',\r\n    templateUrl: './dzn-fdp.html'\r\n})\r\nexport class DesignFPDs {\r\n\r\n    @Input() fdpSettings: FDPSettings = new FDPSettings();\r\n    @Input() allDesigns: Design[] = new Array<Design>();\r\n\r\n    selectedFDP: FDP;\r\n    //existingFDPs: FDP[] = new Array<FDP>();\r\n\r\n    constructor(private helper: Helper) { }\r\n\r\n    add() {\r\n\r\n        if (this.fdpSettings.aggregateFdps == null) this.fdpSettings.aggregateFdps = new Array<FDP>();\r\n\r\n        if (this.selectedFDP) {\r\n            var index = this.fdpSettings.aggregateFdps.findIndex(x => x.code == this.selectedFDP.code);\r\n\r\n            if (index == -1) {\r\n                this.fdpSettings.aggregateFdps.push(this.selectedFDP);\r\n                this.selectedFDP = null;\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    remove(index: number) {\r\n        this.fdpSettings.aggregateFdps.splice(index, 1);\r\n    }\r\n\r\n    fileChangeEvent(event: any) {\r\n\r\n        if (this.fdpSettings.fdps)\r\n            this.fdpSettings.fdps.length = 0;\r\n\r\n        if (this.fdpSettings.aggregateFdps)\r\n            this.fdpSettings.aggregateFdps.length = 0;\r\n\r\n        var file = event.target.files[0];\r\n\r\n        var reader = new FileReader();\r\n\r\n        var fileExt = file.name.split('.').pop().toLowerCase();\r\n\r\n        reader.onload = (e) => {\r\n\r\n            try {\r\n\r\n                if (fileExt == \"kml\") {\r\n                    let kml = reader.result as string;\r\n                    let geojson = toGeoJSON.kml((new DOMParser()).parseFromString(kml, 'text/xml'));\r\n                    this.populateFDPs(geojson.features);\r\n                }\r\n                else if (fileExt == \"zip\") {\r\n                    shp(reader.result as ArrayBuffer).then((geojson) => {\r\n                        this.populateFDPs(geojson.features);\r\n                    });\r\n                }\r\n                else if (fileExt == \"csv\") {\r\n                    let csv = reader.result as string;\r\n                    this.populateFDPsCsv(csv);\r\n                }\r\n\r\n            } catch (e) {\r\n                this.helper.showAlertMessage(\"Could not parse the file.\", \"error\");\r\n            }\r\n\r\n        }\r\n\r\n        if (fileExt == \"csv\" || fileExt == \"kml\")\r\n            reader.readAsText(file);\r\n        else if (fileExt == \"zip\")\r\n            reader.readAsArrayBuffer(file);\r\n        else\r\n            this.helper.showAlertMessage(\"Invalid file format\", \"error\");\r\n    }\r\n\r\n    populateFDPs(features: any) {\r\n\r\n        this.fdpSettings.fdps.length = 0;\r\n\r\n        for (var i = 0; i < features.length; i++) {\r\n            let properties = features[i].properties;\r\n\r\n            let latLng = GeoHelper.convertToPosition([features[i].geometry.coordinates[0], features[i].geometry.coordinates[1]]);\r\n            const isValid: Error = GeoHelper.validateCoordinates(latLng);\r\n\r\n            if ((isValid instanceof Error) == false) {\r\n\r\n                let index = this.fdpSettings.fdps.findIndex(x => x.code == properties.Test);\r\n\r\n                if (index == -1) {\r\n                    let fdp = {\r\n                        name: properties.Test,\r\n                        code: properties.Test,\r\n                        geometry: new Point([latLng.lng, latLng.lat]),\r\n                    };\r\n\r\n                    this.fdpSettings.fdps.push(fdp);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    populateFDPsCsv(csvData: any) {\r\n\r\n        this.fdpSettings.fdps.length = 0;\r\n\r\n        var allRows = csvData.split(/\\r?\\n|\\r/);\r\n\r\n        for (var i = 1; i < allRows.length; i++) {\r\n\r\n            if (allRows[i].trim() == \"\") continue;\r\n\r\n            let properties = allRows[i].split(',');\r\n            let lat = parseFloat(properties[3]);\r\n            let lng = parseFloat(properties[4]);\r\n\r\n            let latLng = GeoHelper.convertToPosition([lng, lat]);\r\n\r\n            const isValid: Error = GeoHelper.validateCoordinates(latLng);\r\n\r\n            if ((isValid instanceof Error) == false) {\r\n                let index = this.fdpSettings.fdps.findIndex(x => x.code == properties.Test);\r\n\r\n                if (index == -1) {\r\n                    let fdp = {\r\n                        name: properties[1],\r\n                        code: properties[0],\r\n                        geometry: new Point([lng, lat]),\r\n                    };\r\n\r\n                    this.fdpSettings.fdps.push(fdp);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    onDesignChange(designId: string) {\r\n\r\n        let design = this.allDesigns.find(x => x.id == designId);\r\n\r\n        if (design.networkSettings && design.networkSettings[0].fdpNode)\r\n            this.fdpSettings.fdps = design.networkSettings[0].fdpNode.fdpSettings.fdps;\r\n    }\r\n}\r\n","import { Component, Input, OnInit, OnChanges, SimpleChanges, Output, EventEmitter } from '@angular/core';\r\nimport { UserService } from '../../users/services/user.service';\r\nimport { Design } from '../models/design';\r\nimport { User } from '../../users/models/user';\r\n\r\n@Component({\r\n    selector: 'dzn-info',\r\n    templateUrl: './dzn-info.html'\r\n})\r\nexport class DesignInfo implements OnInit, OnChanges {\r\n\r\n    @Input() public design: Design = new Design();\r\n    @Input() public designs: Design[] = new Array<Design>();\r\n    @Output() onVersionChange: EventEmitter<any> = new EventEmitter();\r\n\r\n    users: User[] = new Array<User>();\r\n    selectedVersion: number;\r\n\r\n    constructor(private userService: UserService) { }\r\n\r\n    ngOnInit(): void {\r\n        this.getFormData();\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        this.selectedVersion = this.design.version;\r\n    }\r\n\r\n    getFormData() {\r\n\r\n       //this.design.designType = \"FTTx\";\r\n\r\n        this.userService.getUsers().subscribe(\r\n            resp => {\r\n                this.users = null;\r\n\r\n                if (resp.status.toLowerCase() != \"error\" && resp.data != null && resp.data.length > 0) {\r\n                    this.users = resp.data;\r\n                }\r\n            });\r\n    }\r\n\r\n    versionChange(event: any) {\r\n        this.onVersionChange.emit(event);\r\n    }\r\n\r\n    clearNetworkSettings() {\r\n        this.design.networkSettings = [];\r\n    }\r\n}\r\n","import { Component, Input, SimpleChanges, OnInit, OnChanges } from '@angular/core';\r\nimport { Design, EntitySettings } from '../models/design';\r\nimport { AppConfig } from '../../app.config';\r\nimport { BomHelper } from '../services/bom.helper';\r\nimport { GMapsHelper } from '../../common/geo/googleMapsHelper';\r\nimport { GeoHelper } from '../../common/geo/geoHelper';\r\nimport { EntitiesHelper } from '../services/entities.helper';\r\nimport { GeoNode, Segment } from '../../common/geo/geoNode';\r\nimport { MapEntitiesHelper } from '../services/map-entities.helper';\r\nimport { GeoNodeHelper } from '../services/geoNode.helper';\r\nimport { Chamber } from '../../entities/models/chamber';\r\nimport { Position, Point, LineString } from '../../common/geo/geometry';\r\nimport { Helper } from '../../common/helper';\r\nimport { Pole } from '../../entities/models/pole';\r\nimport * as _ from \"lodash\";\r\nimport { Splitter } from '../../entities/models/splitter';\r\nimport { Cable } from '../../entities/models/cable';\r\nimport { SpliceClosure } from 'src/app/entities/models/spliceClosure';\r\nimport { Supplier } from 'src/app/common/models/supplier';\r\n//import { Customer } from '../../entities/models/customer';\r\n//import { Duct } from '../../entities/models/duct';\r\nimport { MicroDuct } from '../../entities/models/MicroDuct';\r\nimport { PoP } from '../../entities/models/pop';\r\nimport { ODF } from '../../entities/models/odf';\r\nimport { Duct } from '../../entities/models/duct';\r\nimport { parse } from 'url';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { DesignEntities } from './dzn-entities';\r\nimport { ChamberService } from '../../entities/services/chamber.service';\r\nimport { ODFService } from '../../entities/services/odf.service';\r\nimport { PoleService } from '../../entities/services/pole.service';\r\nimport { SpliceClosureService } from '../../entities/services/spliceClosure.service';\r\nimport { SplitterService } from '../../entities/services/splitter.service';\r\nimport { fatService } from '../../entities/services/fat.service';\r\nimport { fdtService } from '../../entities/services/fdt.service';\r\nimport html2canvas from 'html2canvas';\r\nimport jspdf from 'jspdf';\r\nimport { FAT } from '../../entities/models/fat';\r\nimport { FDT } from '../../entities/models/Solution2.zip';\r\nimport { DuctService } from '../../entities/services/duct.service';\r\nimport { CableService } from '../../entities/services/cable.service';\r\n\r\ndeclare var $: any;\r\ndeclare var google: any;\r\ndeclare var GMHelper: any;\r\ndeclare var entitiesHelper: any;\r\ndeclare var fromComponent: any;\r\n\r\n@Component({\r\n   selector: 'dzn-map',\r\n   templateUrl: './dzn-map.html'\r\n})\r\nexport class DesignMap implements OnInit, OnChanges {\r\n   @Input() entitySettings: EntitySettings = new EntitySettings();\r\n   @Input() public design: Design = new Design();\r\n   masterEntities: any;\r\n   private entityIcons = [];\r\n   layers = [];\r\n   markerData: any;\r\n   map: any;\r\n   isEntitiesGenerated: boolean = false;\r\n   entitiesHelper: EntitiesHelper;\r\n   mapEntitiesHelper: MapEntitiesHelper;\r\n   selectedEntity: any;\r\n   CurrentselectedEntity: any;\r\n   changedSegments = [];\r\n   chamber: Chamber = new Chamber();\r\n   poles: Pole = new Pole();\r\n   Flag: any;\r\n   DeleteFlag: any;\r\n   designEntity: any;\r\n   entities = [];\r\n   designEntities: any;\r\n   marker: any;\r\n   filterResult: any;\r\n\r\n   Data: any;\r\n   selectedLayers = [\"Cable\", \"Chamber\", \"Pole\", \"Splitter\", \"PoP\", \"Duct\", \"MicroDuct\"];\r\n   //pop: any;\r\n   des: any;\r\n   PoleIncrementalID = 0;\r\n   ChamberIncrementalID = 0;\r\n   CableIncrementalID = 0;\r\n   OdfIncrementalID = 0;\r\n   SplitterIncrementalID = 0;\r\n   PopIncrementalID = 0;\r\n   SpliceClosureIncrementalID = 0;\r\n   entityType: any;\r\n\r\n   getdata: any;\r\n   fatdata: FAT = new FAT();\r\n   fdt: FDT = new FDT();\r\n   FatIncrementalID = 0;\r\n   FdtIncrementalID = 0;\r\n   constructor(\r\n      private appConfig: AppConfig, private helper: Helper,\r\n      private bomHelper: BomHelper, private chamberService: ChamberService,\r\n      private odfService: ODFService,\r\n      private poleService: PoleService,\r\n      private spliceClosureService: SpliceClosureService,\r\n      private splitterService: SplitterService,\r\n      private fatService: fatService,\r\n      private fdtService: fdtService, private ductService: DuctService, private cableService: CableService\r\n   ) {\r\n\r\n      this.entityIcons.push({ entityType: \"Homepass\", icon: { url: \"images/map-entities/homepass.png\" } });\r\n      this.entityIcons.push({ entityType: \"Chamber\", icon: { url: \"images/map-entities/chamber.png\", anchor: new google.maps.Point(10, 10) } });\r\n      this.entityIcons.push({ entityType: \"ODF\", icon: { url: \"images/map-entities/odf.png\" } });\r\n      this.entityIcons.push({ entityType: \"Pole\", icon: { url: \"images/map-entities/pole.png\" } });\r\n      this.entityIcons.push({ entityType: \"PoP\", icon: { url: \"images/map-entities/pop.png\" } });\r\n      this.entityIcons.push({ entityType: \"Splitter\", icon: { url: \"images/map-entities/splitter.png\" } });\r\n      this.entityIcons.push({ entityType: \"SpliceClosure\", icon: { url: \"images/map-entities/spliceclosure.png\" } });\r\n\r\n      this.layers.push({ id: \"Cable\", name: \"Cable\" });\r\n      this.layers.push({ id: \"Duct\", name: \"Duct\" });\r\n      this.layers.push({ id: \"MicroDuct\", name: \"MicroDuct\" });\r\n\r\n      this.layers.push({ id: \"Chamber\", name: \"Chamber\" });\r\n      this.layers.push({ id: \"ODF\", name: \"ODF\" });\r\n      this.layers.push({ id: \"Pole\", name: \"Pole\" });\r\n      this.layers.push({ id: \"PoP\", name: \"PoP\" });\r\n      this.layers.push({ id: \"SpliceClosure\", name: \"Splice Closure\" });\r\n      this.layers.push({ id: \"Splitter\", name: \"Splitter\" });\r\n      this.layers.push({ id: \"Homepass\", name: \"Homepass\" });\r\n\r\n      this.entityIcons.push({ entityType: \"FAT\", icon: { url: \"images/map-entities/FAT.png\" } });\r\n      this.entityIcons.push({ entityType: \"FDT\", icon: { url: \"images/map-entities/FDT.png\" } });\r\n      this.layers.push({ id: \"FAT\", name: \"FAT\" });\r\n      this.layers.push({ id: \"FDT\", name: \"FDT\" });\r\n\r\n      this.isEntitiesGenerated = false;\r\n   }\r\n\r\n   ngOnInit() {\r\n      this.DeleteFlag = null;\r\n\r\n      this.selectedEntity = null;\r\n      this.CurrentselectedEntity = null;\r\n\r\n      this.designEntity = 0;\r\n      let location = GMapsHelper.getLatLng(this.appConfig.settings.MapCenter);\r\n\r\n      if (this.design.bluePrint) {\r\n         location = GeoHelper.convertToPosition(this.design.bluePrint.coordinates);\r\n      }\r\n\r\n      this.map = GMapsHelper.initializeMap('designMap', location, 18, 21);\r\n      this.mapEntitiesHelper = new MapEntitiesHelper(this.map);\r\n      var overlay = GMHelper.createOverlay(this.map);\r\n\r\n      var entityItems = $('.entityMenu img');\r\n\r\n      this.entitiesHelper = new EntitiesHelper(this.design.bookingIds, this.design.generatedCodes);\r\n      let mapEntitiesHelper = new MapEntitiesHelper(this.map);\r\n\r\n\r\n\r\n\r\n      let des = this.des;\r\n    \r\n      for (var i = 0; i < entityItems.length; i++) {\r\n\r\n         $(entityItems[i]).draggable({\r\n\r\n            helper: 'clone', containment: '#designMap',\r\n\r\n            stop: (e) => {\r\n\r\n\r\n               let seg = this.design.bluePrint.children[0].segments;\r\n               this.Data = this.design.bluePrint.children;\r\n\r\n               var dropPoint = new google.maps.Point(e.pageX - 250, e.pageY - 200);\r\n               var entityType = e.target.attributes[1].nodeValue;\r\n\r\n               var latLng = GMHelper.getLatLongFromDragPoint(overlay, dropPoint);\r\n\r\n               if (entityType == \"Chamber\") {\r\n                  this.masterEntities = null;\r\n                  this.getdata = null;\r\n                  let masterSvc = this.chamberService.getChambers();\r\n                  masterSvc.subscribe(\r\n                     resp => {\r\n                        this.masterEntities = null;\r\n                        if (resp.data != null && resp.data.length > 0) {\r\n                           this.masterEntities = resp.data;\r\n                           for (var i = 0; i <= resp.data.length - 1; i++) {\r\n                              for (var j = 0; j <= resp.data[i].suppliers.length - 1; j++) {\r\n                                 if (resp.data[i].suppliers[j].default != undefined && resp.data[i].suppliers[j].default == \"true\") {\r\n                                    this.getdata = resp.data[i].suppliers[j];\r\n                                    break;\r\n                                 } else {\r\n                                    continue;\r\n                                 }\r\n                              }\r\n\r\n                           }\r\n\r\n                           if (seg) {\r\n                              this.CurrentselectedEntity = null;\r\n                              this.chamber = null;\r\n\r\n                              if (seg[0].chambers == null) {\r\n                                 seg[0].chambers = new Array<Chamber>();\r\n                                 this.chamber.entityType = \"Chamber\";\r\n                                 this.chamber.id = Helper.generateObjectId();\r\n                                 this.chamber.code = this.entitiesHelper.generatedCodes('Chamber');\r\n                                 this.chamber.name = this.chamber.code;\r\n\r\n                                 this.chamber.geometry = new Point([latLng.lng(), latLng.lat()]);\r\n\r\n\r\n                                 var marker = mapEntitiesHelper.drawPoint(this.chamber, { url: \"images/map-entities/chamber.png\", anchor: new google.maps.Point(10, 10) }, true, true);\r\n                                 this.CurrentselectedEntity = marker.data;\r\n                                 GMapsHelper.addListener(marker, 'click', (event) => {\r\n\r\n                                    this.selectedEntity = marker.data;\r\n                                 });\r\n\r\n                                 let supplier = new Supplier();\r\n                                 supplier.currency = this.getdata.currency;\r\n                                 supplier.name = this.getdata.name;\r\n                                 supplier.stockQty = this.getdata.stockQty;\r\n                                 supplier.price = this.getdata.price;\r\n                                 supplier.validFrom = this.getdata.validFrom;\r\n                                 supplier.validTo = this.getdata.validTo;\r\n\r\n                                 this.chamber.suppliers = new Array<Supplier>();\r\n                                 this.chamber.suppliers.push(supplier);\r\n                                 seg[0].chambers.push(this.chamber);\r\n                                 this.isEditable(true, marker);\r\n                              }\r\n                              else {\r\n                                 this.CurrentselectedEntity = null;\r\n                                 this.chamber = null;\r\n                                 this.chamber = _.cloneDeep(seg[0].chambers[0]);\r\n                                 if (this.chamber == undefined) {\r\n                                    this.chamber = null;\r\n                                 }\r\n                                 if (this.ChamberIncrementalID == 0) {\r\n                                    for (var i = seg[0].chambers.length - 1; i >= 0; i--) {\r\n                                       if (seg[0].chambers[i].code != undefined || seg[0].chambers[i].code != null) {\r\n                                          var ID2 = seg[0].chambers[i].code;\r\n                                          var ID3 = ID2.toString();\r\n                                          var ID4 = ID3.split('_');\r\n                                          this.ChamberIncrementalID = parseInt(ID4[1]) + 1;\r\n                                          break;\r\n                                       } else {\r\n                                          continue;\r\n                                       }\r\n                                    }\r\n                                 } else {\r\n                                    this.ChamberIncrementalID = this.ChamberIncrementalID + 1;\r\n                                 }\r\n                                 this.chamber.id = Helper.generateObjectId();\r\n                                 this.chamber.code = 'Chamber_' + this.ChamberIncrementalID;\r\n                                 this.chamber.name = 'Chamber_' + this.ChamberIncrementalID;\r\n                                 this.chamber.geometry = new Point([latLng.lng(), latLng.lat()]);\r\n\r\n                                 var marker = mapEntitiesHelper.drawPoint(this.chamber, { url: \"images/map-entities/chamber.png\", anchor: new google.maps.Point(10, 10) }, true, true);\r\n\r\n                                 this.CurrentselectedEntity = marker.data;\r\n                                 GMapsHelper.addListener(marker, 'click', (event) => {\r\n\r\n                                    this.selectedEntity = marker.data;\r\n                                 });\r\n\r\n                                 let getdata = $.grep(this.masterEntities, function (l) {\r\n                                    return l.default == \"true\";\r\n                                 })\r\n                                 let supplier = new Supplier();\r\n                                 supplier.currency = this.getdata.currency;\r\n                                 supplier.name = this.getdata.name;\r\n                                 supplier.stockQty = this.getdata.stockQty;\r\n                                 supplier.price = this.getdata.price;\r\n                                 supplier.validFrom = this.getdata.validFrom;\r\n                                 supplier.validTo = this.getdata.validTo;\r\n                                 this.chamber.suppliers = new Array<Supplier>();\r\n                                 this.chamber.suppliers.push(supplier);\r\n                                 seg[0].chambers.push(this.chamber);\r\n                                 this.isEditable(true, marker);\r\n                              }\r\n                           }\r\n                        }\r\n                     },\r\n                     (err) => {\r\n                        this.masterEntities = new Array<Chamber>();\r\n                     });\r\n\r\n               }\r\n\r\n               if (entityType == \"Pole\") {\r\n                  this.getdata = null;\r\n                  let masterSvc = this.poleService.getPoles();\r\n                  masterSvc.subscribe(\r\n                     resp => {\r\n                        if (resp.data != null && resp.data.length > 0) {\r\n                           for (var i = 0; i <= resp.data.length - 1; i++) {\r\n                              for (var j = 0; j <= resp.data[i].suppliers.length - 1; j++) {\r\n                                 if (resp.data[i].suppliers[j].default != undefined && resp.data[i].suppliers[j].default == \"true\") {\r\n                                    this.getdata = resp.data[i].suppliers[j];\r\n                                    break;\r\n                                 } else {\r\n                                    continue;\r\n                                 }\r\n                              }\r\n\r\n                           }\r\n                           if (seg) {\r\n                              this.poles = null;\r\n                              if (seg[0].poles == null) {\r\n                                 seg[0].poles = new Array<Pole>();\r\n                                 this.poles.entityType = \"Pole\";\r\n                                 this.poles.id = Helper.generateObjectId();\r\n\r\n                                 this.poles.code = this.entitiesHelper.generatedCodes('Pole');;\r\n                                 this.poles.name = this.poles.code;\r\n                                 this.poles.geometry = new Point([latLng.lng(), latLng.lat()]);\r\n\r\n                                 var marker = mapEntitiesHelper.drawPoint(this.poles, { url: \"images/map-entities/pole.png\", anchor: new google.maps.Point(10, 10) }, true, true);\r\n                                 this.CurrentselectedEntity = marker.data;\r\n                                 GMapsHelper.addListener(marker, 'click', (event) => {\r\n                                    this.selectedEntity = marker.data;\r\n                                 });\r\n                                 let supplier = new Supplier();\r\n                                 supplier.currency = this.getdata.currency;\r\n                                 supplier.name = this.getdata.name;\r\n                                 supplier.stockQty = this.getdata.stockQty;\r\n                                 supplier.price = this.getdata.price;\r\n                                 supplier.validFrom = this.getdata.validFrom;\r\n                                 supplier.validTo = this.getdata.validTo;\r\n\r\n                                 this.poles.suppliers = new Array<Supplier>();\r\n                                 this.poles.suppliers.push(supplier);\r\n                                 seg[0].poles.push(this.poles);\r\n                                 this.isEditable(true, marker);\r\n                              }\r\n                              else {\r\n                                 this.CurrentselectedEntity = null;\r\n                                 this.poles = null;\r\n                                 if (this.PoleIncrementalID == 0) {\r\n                                    for (var i = seg[0].poles.length - 1; i >= 0; i--) {\r\n                                       //seg[0].splitters[20].code\r\n                                       if (seg[0].poles[i].code != undefined || seg[0].poles[i].code != null) {\r\n                                          var ID2 = seg[0].poles[i].code;\r\n                                          var ID3 = ID2.toString();\r\n                                          var ID4 = ID3.split('_');\r\n                                          this.PoleIncrementalID = parseInt(ID4[1]) + 1;\r\n                                          //k = true;\r\n                                          break;\r\n                                       } else {\r\n                                          continue;\r\n                                       }\r\n                                    }\r\n                                 } else {\r\n                                    this.PoleIncrementalID = this.PoleIncrementalID + 1;\r\n                                 }\r\n                                 this.poles = _.cloneDeep(seg[0].poles[0]);\r\n                                 this.poles.id = Helper.generateObjectId();\r\n                                 this.poles.code = 'Poles_' + this.PoleIncrementalID;\r\n                                 this.poles.name = 'Poles_' + this.PoleIncrementalID;\r\n                                 //newPole.name = newPole.code;\r\n                                 this.poles.geometry = new Point([latLng.lng(), latLng.lat()]);\r\n\r\n                                 var marker = mapEntitiesHelper.drawPoint(this.poles, { url: \"images/map-entities/pole.png\", anchor: new google.maps.Point(10, 10) }, true, true);\r\n                                 this.CurrentselectedEntity = marker.data;\r\n                                 GMapsHelper.addListener(marker, 'click', (event) => {\r\n\r\n                                    this.selectedEntity = marker.data;\r\n                                 });\r\n                                 let supplier = new Supplier();\r\n                                 supplier.currency = this.getdata.currency;\r\n                                 supplier.name = this.getdata.name;\r\n                                 supplier.stockQty = this.getdata.stockQty;\r\n                                 supplier.price = this.getdata.price;\r\n                                 supplier.validFrom = this.getdata.validFrom;\r\n                                 supplier.validTo = this.getdata.validTo;\r\n\r\n                                 this.poles.suppliers = new Array<Supplier>();\r\n                                 this.poles.suppliers.push(supplier);\r\n                                 seg[0].poles.push(this.poles);\r\n                                 this.isEditable(true, marker);\r\n\r\n                              }\r\n\r\n                           }\r\n                        }\r\n                     },\r\n                     (err) => {\r\n                        this.masterEntities = new Array<Chamber>();\r\n                     });\r\n               }\r\n\r\n               if (entityType == \"UndergroundCable\") {\r\n                  let seg1 = new Segment();// this.design.bluePrint.children[0].segments;\r\n                  this.masterEntities = null;\r\n                  this.getdata = null;\r\n                  let masterSvc = this.cableService.getCables();\r\n                  masterSvc.subscribe(\r\n                     resp => {\r\n                        this.masterEntities = null;\r\n                        if (resp.data != null && resp.data.length > 0) {\r\n                           this.masterEntities = resp.data;\r\n                           for (var i = 0; i <= resp.data.length - 1; i++) {\r\n                              for (var j = 0; j <= resp.data[i].suppliers.length - 1; j++) {\r\n                                 if (resp.data[i].suppliers[j].default != undefined && resp.data[i].suppliers[j].default == \"true\") {\r\n                                    this.getdata = resp.data[i].suppliers[j];\r\n                                    break;\r\n                                 } else {\r\n                                    continue;\r\n                                 }\r\n                              }\r\n\r\n                           }\r\n\r\n                           //var marker = mapEntitiesHelper.drawLine(cable, \"#000000\", 2, false, true);\r\n\r\n                           var parentThis = this;\r\n                           let colour = \"#000000\";\r\n                           let lineWeight = 3;\r\n\r\n\r\n\r\n                           let polyline = new google.maps.Polyline({\r\n                              strokeColor: colour,\r\n                              strokeOpacity: 1.0,\r\n                              strokeWeight: lineWeight,\r\n                              map: this.map\r\n                           });\r\n\r\n                           let path = polyline.getPath();\r\n\r\n                           polyline.setMap(this.map);\r\n\r\n                           GMHelper.clearClickListener(this.map, \"click\");\r\n\r\n                           GMHelper.addListener(this.map, \"click\", function (event) {\r\n                              polyline.setEditable(true);\r\n                              path = polyline.getPath();\r\n                              path.push(event.latLng);\r\n                           });\r\n\r\n                           this.map.setOptions({ draggableCursor: 'crosshair' });\r\n\r\n                           GMHelper.addListener(polyline, \"rightclick\", function (event) {\r\n                              GMHelper.clearClickListener(polyline, \"rightclick\");\r\n\r\n                              GMHelper.clearClickListener(polyline.map, \"click\");\r\n\r\n                              polyline.map.setOptions({ draggableCursor: '' });\r\n\r\n                              polyline.setEditable(false);\r\n                              //if (this.CableIncrementalID == undefined) {\r\n                              let id = 0;\r\n                              if (seg.length != undefined && seg.length > 0) {\r\n\r\n                                 if (id == 0) {\r\n                                    for (var i = seg.length - 1; i >= 0; i--) {\r\n                                       if (seg[i].cable != undefined || seg[i].cable != null) {\r\n                                          var ID2 = seg[i].cable.code;\r\n                                          var ID3 = ID2.toString();\r\n                                          var ID4 = ID3.split('_');\r\n                                          id = parseInt(ID4[1]) + 1;\r\n                                          break;\r\n                                       } else {                                         \r\n                                          continue;\r\n                                       }\r\n                                    }\r\n                                 } else {\r\n                                    id = id + 1;\r\n                                 }\r\n                              }\r\n                              //let seg1 = new Segment();// this.design.bluePrint.children[0].segments;\r\n                              if (id == 0) {\r\n                                 id = 1;\r\n                              }\r\n                              seg1.id = Helper.generateObjectId();\r\n\r\n\r\n\r\n                              let cable = new Cable();\r\n                              cable.entityType = \"Cable\";\r\n                              cable.id = Helper.generateObjectId();\r\n                              cable.code = 'Cable_' + id;\r\n                              cable.name = cable.code;\r\n                              cable.isUnderground = true;\r\n                              seg1.cable = cable;\r\n\r\n                              //this.isEditable(true, marker);\r\n\r\n                              var coords = polyline.getPath().getArray();\r\n\r\n                              let newCoords = new Array<number[]>();\r\n\r\n                              coords.forEach(x => {\r\n                                 newCoords.push([x.lng(), x.lat()]);\r\n                              });\r\n\r\n                              cable.geometry = new LineString();\r\n                              cable.geometry.coordinates = GeoHelper.cleanLineCoordinates(newCoords);\r\n\r\n                              cable.measuredLength = GeoHelper.getLength(cable.geometry.coordinates);\r\n\r\n\r\n\r\n                              let supplier = new Supplier();\r\n                              supplier.currency = parentThis.getdata.currency;\r\n                              supplier.name = parentThis.getdata.name;\r\n                              supplier.stockQty = parentThis.getdata.stockQty;\r\n                              supplier.price = parentThis.getdata.price;\r\n                              supplier.validFrom = parentThis.getdata.validFrom;\r\n                              supplier.validTo = parentThis.getdata.validTo;\r\n\r\n                              cable.suppliers = new Array<Supplier>();\r\n                              cable.suppliers.push(supplier);\r\n\r\n                              seg1.coordinates = cable.geometry.coordinates;\r\n\r\n                              seg1.cable = cable;\r\n\r\n\r\n                              parentThis.design.bluePrint.children[0].segments.push(seg1);\r\n\r\n                              var marker = mapEntitiesHelper.drawLine(cable, \"#000000\", 2, false, true);\r\n                              //this.selectedEntity = polyline.data;\r\n\r\n\r\n                              GMapsHelper.addListener(marker, 'click', (event) => {\r\n                                 parentThis.selectedEntity = marker.data;\r\n                              });\r\n                           });\r\n                        }\r\n                     },\r\n                     (err) => {\r\n                        this.masterEntities = new Array<Chamber>();\r\n                     });\r\n\r\n               }\r\n               if (entityType == \"Overhead Cable\") {\r\n\r\n                  this.masterEntities = null;\r\n                  this.getdata = null;\r\n                  let masterSvc = this.ductService.getDucts();\r\n                  masterSvc.subscribe(\r\n                     resp => {\r\n                        this.masterEntities = null;\r\n                        if (resp.data != null && resp.data.length > 0) {\r\n                           this.masterEntities = resp.data;\r\n                           for (var i = 0; i <= resp.data.length - 1; i++) {\r\n                              for (var j = 0; j <= resp.data[i].suppliers.length - 1; j++) {\r\n                                 if (resp.data[i].suppliers[j].default != undefined && resp.data[i].suppliers[j].default == \"true\") {\r\n                                    this.getdata = resp.data[i].suppliers[j];\r\n                                    break;\r\n                                 } else {\r\n                                    continue;\r\n                                 }\r\n                              }\r\n\r\n                           }\r\n\r\n                           //var marker = mapEntitiesHelper.drawLine(cable, \"#000000\", 2, false, true);\r\n\r\n                           var parentThis = this;\r\n                           let colour = \"#000000\";\r\n                           let lineWeight = 3;\r\n\r\n\r\n\r\n                           let polyline = new google.maps.Polyline({\r\n                              strokeColor: colour,\r\n                              strokeOpacity: 1.0,\r\n                              strokeWeight: lineWeight,\r\n                              map: this.map\r\n                           });\r\n\r\n                           let path = polyline.getPath();\r\n\r\n                           polyline.setMap(this.map);\r\n\r\n                           GMHelper.clearClickListener(this.map, \"click\");\r\n\r\n                           GMHelper.addListener(this.map, \"click\", function (event) {\r\n                              polyline.setEditable(true);\r\n                              path = polyline.getPath();\r\n                              path.push(event.latLng);\r\n                           });\r\n\r\n                           this.map.setOptions({ draggableCursor: 'crosshair' });\r\n\r\n                           GMHelper.addListener(polyline, \"rightclick\", function (event) {\r\n                              GMHelper.clearClickListener(polyline, \"rightclick\");\r\n\r\n                              GMHelper.clearClickListener(polyline.map, \"click\");\r\n\r\n                              polyline.map.setOptions({ draggableCursor: '' });\r\n\r\n                              polyline.setEditable(false);\r\n                              let id = 0;\r\n                              if (seg.length != undefined && seg.length > 0) {\r\n\r\n                                 if (id == 0) {\r\n                                    for (var i = seg.length - 1; i >= 0; i--) {\r\n                                       if (seg[i].cable != undefined || seg[i].cable != null) {\r\n                                          var ID2 = seg[i].cable.code;\r\n                                          var ID3 = ID2.toString();\r\n                                          var ID4 = ID3.split('_');\r\n                                          id = parseInt(ID4[1]) + 1;\r\n                                          break;\r\n                                       } else {\r\n                                          //id = 1;\r\n                                          continue;\r\n                                       }\r\n                                    }\r\n\r\n                                 } else {\r\n                                    id = id + 1;\r\n                                 }\r\n                              }\r\n                              if (id == 0) {\r\n                                 id = 1;\r\n                              }\r\n                              let seg1 = new Segment();// this.design.bluePrint.children[0].segments;\r\n\r\n                              seg1.id = Helper.generateObjectId();\r\n\r\n\r\n\r\n                              let cable = new Cable();\r\n                              cable.entityType = \"Cable\";\r\n                              cable.id = Helper.generateObjectId();\r\n                              var ids = cable.id.toString();\r\n                              cable.name = \"Cable_\" + id;\r\n                              cable.code = \"Cable_\" + id;\r\n                              cable.isUnderground = false;\r\n                              seg1.cable = cable;\r\n\r\n                              //this.isEditable(true, marker);\r\n\r\n                              var coords = polyline.getPath().getArray();\r\n\r\n                              let newCoords = new Array<number[]>();\r\n\r\n                              coords.forEach(x => {\r\n                                 newCoords.push([x.lng(), x.lat()]);\r\n                              });\r\n\r\n                              cable.geometry = new LineString();\r\n                              cable.geometry.coordinates = GeoHelper.cleanLineCoordinates(newCoords);\r\n\r\n                              cable.measuredLength = GeoHelper.getLength(cable.geometry.coordinates);\r\n\r\n\r\n\r\n                              let supplier = new Supplier();\r\n                              supplier.currency = parentThis.getdata.currency;\r\n                              supplier.name = parentThis.getdata.name;\r\n                              supplier.stockQty = parentThis.getdata.stockQty;\r\n                              supplier.price = parentThis.getdata.price;\r\n                              supplier.validFrom = parentThis.getdata.validFrom;\r\n                              supplier.validTo = parentThis.getdata.validTo;\r\n\r\n                              cable.suppliers = new Array<Supplier>();\r\n                              cable.suppliers.push(supplier);\r\n\r\n                              seg1.coordinates = cable.geometry.coordinates;\r\n\r\n                              seg1.cable = cable;\r\n\r\n\r\n                              parentThis.design.bluePrint.children[0].segments.push(seg1);\r\n\r\n                              var marker = mapEntitiesHelper.drawLine(cable, \"#000000\", 2, false, true);\r\n                              //this.selectedEntity = polyline.data;\r\n\r\n\r\n                              GMapsHelper.addListener(marker, 'click', (event) => {\r\n                                 parentThis.selectedEntity = marker.data;\r\n                              });\r\n                           });\r\n                        }\r\n                     },\r\n                     (err) => {\r\n                        this.masterEntities = new Array<Chamber>();\r\n                     });\r\n\r\n               }\r\n               //createEntity(entityType, latLng);\r\n               if (entityType == \"Duct\") {\r\n                  this.masterEntities = null;\r\n                  this.getdata = null;\r\n                  let masterSvc = this.ductService.getDucts();\r\n                  masterSvc.subscribe(\r\n                     resp => {\r\n                        this.masterEntities = null;\r\n                        if (resp.data != null && resp.data.length > 0) {\r\n                           this.masterEntities = resp.data;\r\n                           for (var i = 0; i <= resp.data.length - 1; i++) {\r\n                              for (var j = 0; j <= resp.data[i].suppliers.length - 1; j++) {\r\n                                 if (resp.data[i].suppliers[j].default != undefined && resp.data[i].suppliers[j].default == \"true\") {\r\n                                    this.getdata = resp.data[i].suppliers[j];\r\n                                    break;\r\n                                 } else {\r\n                                    continue;\r\n                                 }\r\n                              }\r\n\r\n                           }\r\n\r\n                           var lineSymbol = {\r\n                              path: 'M 0,-1 0,1',\r\n                              strokeOpacity: 1,\r\n                              scale: 4\r\n                           };\r\n\r\n                           var polyline = new google.maps.Polyline({\r\n                              strokeColor: '#FFA500',\r\n                              strokeOpacity: 0,\r\n                              editable: true,\r\n                              icons: [{\r\n                                 icon: lineSymbol,\r\n                                 offset: '0',\r\n                                 repeat: '20px'\r\n                              }],\r\n\r\n                           });\r\n\r\n\r\n                           var parentThis = this;\r\n                           let path = polyline.getPath();\r\n\r\n                           polyline.setMap(this.map);\r\n\r\n                           GMHelper.clearClickListener(this.map, \"click\");\r\n\r\n                           GMHelper.addListener(this.map, \"click\", function (event) {\r\n                              polyline.setEditable(true);\r\n                              path = polyline.getPath();\r\n                              path.push(event.latLng);\r\n                           });\r\n\r\n                           this.map.setOptions({ draggableCursor: 'crosshair' });\r\n\r\n                           GMHelper.addListener(polyline, \"rightclick\", function (event) {\r\n                              GMHelper.clearClickListener(polyline, \"rightclick\");\r\n\r\n                              GMHelper.clearClickListener(polyline.map, \"click\");\r\n\r\n                              polyline.map.setOptions({ draggableCursor: '' });\r\n\r\n                              polyline.setEditable(false);\r\n\r\n                              let id = 0;\r\n                              if (seg.length != undefined && seg.length > 0) {\r\n\r\n                                 if (id == 0) {\r\n                                    for (var i = seg.length - 1; i >= 0; i--) {\r\n                                       if (seg[i].ducts != undefined || seg[i].ducts != null) {\r\n                                          var ID2 = seg[i].ducts.code;\r\n                                          var ID3 = ID2.toString();\r\n                                          var ID4 = ID3.split('_');\r\n                                          id = parseInt(ID4[1]) + 1;\r\n                                          break;\r\n                                       } else {\r\n                                          id =1;\r\n                                          continue;\r\n                                       }\r\n                                    }\r\n                                 } else {\r\n                                    id = id + 1;\r\n                                 }\r\n                              }\r\n\r\n                              let seg1 = new Segment();// this.design.bluePrint.children[0].segments;\r\n\r\n                              //seg1.id = Helper.generateObjectId();\r\n\r\n\r\n\r\n                              let duct = new Duct();\r\n                              duct.entityType = \"Duct\";\r\n                              duct.id = Helper.generateObjectId();\r\n                              duct.name = \"Duct_\" + id;\r\n                              duct.code = \"Duct_\" + id;\r\n\r\n                              //seg1.ducts = duct;\r\n\r\n                              //this.isEditable(true, marker);\r\n\r\n                              var coords = polyline.getPath().getArray();\r\n\r\n                              let newCoords = new Array<number[]>();\r\n\r\n                              coords.forEach(x => {\r\n                                 newCoords.push([x.lng(), x.lat()]);\r\n                              });\r\n\r\n                              duct.geometry = new LineString();\r\n                              duct.geometry.coordinates = GeoHelper.cleanLineCoordinates(newCoords);\r\n\r\n                              duct.measuredLength = GeoHelper.getLength(duct.geometry.coordinates);\r\n\r\n\r\n\r\n\r\n                              let supplier = new Supplier();\r\n                              supplier.currency = parentThis.getdata.currency;\r\n                              supplier.name = parentThis.getdata.name;\r\n                              supplier.stockQty = parentThis.getdata.stockQty;\r\n                              supplier.price = parentThis.getdata.price;\r\n                              supplier.validFrom = parentThis.getdata.validFrom;\r\n                              supplier.validTo = parentThis.getdata.validTo;\r\n\r\n                              duct.suppliers = new Array<Supplier>();\r\n                              duct.suppliers.push(supplier);\r\n\r\n                              //seg1.coordinates = duct.geometry.coordinates;\r\n\r\n                              seg1.ducts = duct;\r\n\r\n\r\n                              parentThis.design.bluePrint.children[0].segments.push(seg1);\r\n\r\n                              var marker = mapEntitiesHelper.drawDuctLine(duct, \"#000000\", 2, false, true);\r\n                              //this.selectedEntity = polyline.data;\r\n\r\n\r\n                              GMapsHelper.addListener(marker, 'click', (event) => {\r\n                                 parentThis.selectedEntity = marker.data;\r\n                              });\r\n                           });\r\n                        }\r\n                     },\r\n                     (err) => {\r\n                        this.masterEntities = new Array<Chamber>();\r\n                     });\r\n               }\r\n               if (entityType == \"Micro Duct\") {\r\n\r\n                  this.masterEntities = null;\r\n                  this.getdata = null;\r\n                  let masterSvc = this.ductService.getDucts();\r\n                  masterSvc.subscribe(\r\n                     resp => {\r\n                        this.masterEntities = null;\r\n                        if (resp.data != null && resp.data.length > 0) {\r\n                           this.masterEntities = resp.data;\r\n                           for (var i = 0; i <= resp.data.length - 1; i++) {\r\n                              for (var j = 0; j <= resp.data[i].suppliers.length - 1; j++) {\r\n                                 if (resp.data[i].suppliers[j].default != undefined && resp.data[i].suppliers[j].default == \"true\") {\r\n                                    this.getdata = resp.data[i].suppliers[j];\r\n                                    break;\r\n                                 } else {\r\n                                    continue;\r\n                                 }\r\n                              }\r\n\r\n                           }\r\n\r\n\r\n                  var lineSymbol = {\r\n                     path: 'M 0,-1 0,1',\r\n                     strokeOpacity: 1,\r\n                     scale: 4\r\n                  };\r\n\r\n                  var polyline = new google.maps.Polyline({\r\n                     strokeColor: '#000000',\r\n                     strokeOpacity: 0,\r\n                     editable: true,\r\n                     icons: [{\r\n                        icon: lineSymbol,\r\n                        offset: '0',\r\n                        repeat: '20px'\r\n                     }],\r\n\r\n                  });\r\n\r\n\r\n                  var parentThis = this;\r\n                  let path = polyline.getPath();\r\n\r\n                  polyline.setMap(this.map);\r\n\r\n                  GMHelper.clearClickListener(this.map, \"click\");\r\n\r\n                  GMHelper.addListener(this.map, \"click\", function (event) {\r\n                     polyline.setEditable(true);\r\n                     path = polyline.getPath();\r\n                     path.push(event.latLng);\r\n                  });\r\n\r\n                  this.map.setOptions({ draggableCursor: 'crosshair' });\r\n\r\n                  GMHelper.addListener(polyline, \"rightclick\", function (event) {\r\n                     GMHelper.clearClickListener(polyline, \"rightclick\");\r\n\r\n                     GMHelper.clearClickListener(polyline.map, \"click\");\r\n\r\n                     polyline.map.setOptions({ draggableCursor: '' });\r\n\r\n                     polyline.setEditable(false);\r\n                     let id = 0;\r\n                     if (seg.length != undefined && seg.length > 0) {\r\n\r\n                        if (id == 0) {\r\n                           for (var i = seg.length - 1; i >= 0; i--) {\r\n                              if (seg[i].ducts != undefined || seg[i].ducts != null) {\r\n                                 var ID2 = seg[i].ducts.code;\r\n                                 var ID3 = ID2.toString();\r\n                                 var ID4 = ID3.split('_');\r\n                                 id = parseInt(ID4[1]) + 1;\r\n                                 break;\r\n                              } else {\r\n                                 id = 1;\r\n                                 continue;\r\n                              }\r\n                           }\r\n                        } else {\r\n                           id = id + 1;\r\n                        }\r\n                     }\r\n\r\n                     let seg1 = new Segment();// this.design.bluePrint.children[0].segments;\r\n\r\n                     seg1.id = Helper.generateObjectId();\r\n\r\n\r\n\r\n                     let microduct = new MicroDuct();\r\n                     microduct.entityType = \"MicroDuct\";\r\n                     microduct.id = Helper.generateObjectId();\r\n                     var ids = microduct.id.toString();\r\n                     microduct.name = \"MicroDuct_\" + id;\r\n                     microduct.code = \"MicroDuct_\" + id;\r\n\r\n                     seg1.microduct = microduct;\r\n\r\n                     //this.isEditable(true, marker);\r\n\r\n                     var coords = polyline.getPath().getArray();\r\n\r\n                     let newCoords = new Array<number[]>();\r\n\r\n                     coords.forEach(x => {\r\n                        newCoords.push([x.lng(), x.lat()]);\r\n                     });\r\n\r\n                     microduct.geometry = new LineString();\r\n                     microduct.geometry.coordinates = GeoHelper.cleanLineCoordinates(newCoords);\r\n\r\n                     microduct.measuredLength = GeoHelper.getLength(microduct.geometry.coordinates);\r\n\r\n\r\n\r\n                     let supplier = new Supplier();\r\n                     supplier.currency = parentThis.getdata.currency;\r\n                     supplier.name = parentThis.getdata.name;\r\n                     supplier.stockQty = parentThis.getdata.stockQty;\r\n                     supplier.price = parentThis.getdata.price;\r\n                     supplier.validFrom = parentThis.getdata.validFrom;\r\n                     supplier.validTo = parentThis.getdata.validTo;\r\n\r\n                     microduct.suppliers = new Array<Supplier>();\r\n                     microduct.suppliers.push(supplier);\r\n\r\n                     //seg1.coordinates = microduct.geometry.coordinates;\r\n\r\n                     seg1.microduct = microduct;\r\n\r\n\r\n                     parentThis.design.bluePrint.children[0].segments.push(seg1);\r\n\r\n                     var marker = mapEntitiesHelper.drawMicroDuctLine(microduct, \"#000000\", 2, false, true);\r\n                     //this.selectedEntity = polyline.data;\r\n\r\n\r\n                     GMapsHelper.addListener(marker, 'click', (event) => {\r\n                        parentThis.selectedEntity = marker.data;\r\n                     });\r\n                  });\r\n                        }\r\n                     },\r\n                     (err) => {\r\n                        this.masterEntities = new Array<Chamber>();\r\n                     });\r\n               }\r\n\r\n               if (entityType == \"Pop\") {\r\n                  this.masterEntities = null;\r\n                  this.getdata = null;\r\n                  let masterSvc = this.chamberService.getChambers();\r\n                  masterSvc.subscribe(\r\n                     resp => {\r\n                        this.masterEntities = null;\r\n                        if (resp.data != null && resp.data.length > 0) {\r\n                           this.masterEntities = resp.data;\r\n                           for (var i = 0; i <= resp.data.length - 1; i++) {\r\n                              for (var j = 0; j <= resp.data[i].suppliers.length - 1; j++) {\r\n                                 if (resp.data[i].suppliers[j].default != undefined && resp.data[i].suppliers[j].default == \"true\") {\r\n                                    this.getdata = resp.data[i].suppliers[j];\r\n                                    break;\r\n                                 } else {\r\n                                    continue;\r\n                                 }\r\n                              }\r\n\r\n                           }\r\n\r\n                           if (seg) {\r\n                              if (seg[0].pops == null) {\r\n                                 seg[0].pops = new Array<PoP>();\r\n\r\n                                 let pop = new PoP();\r\n                                 pop.entityType = \"PoP\";\r\n                                 pop.id = Helper.generateObjectId();\r\n                                 var Uid = pop.id.toString();\r\n                                 pop.name = 'POP_' + Uid.substring(0, 5);\r\n                                 pop.code = pop.name;\r\n                                 pop.geometry = new Point([latLng.lng(), latLng.lat()]);\r\n\r\n                                 var marker = mapEntitiesHelper.drawPoint(pop, { url: \"images/map-entities/pop.png\", anchor: new google.maps.Point(10, 10) }, true, true);\r\n\r\n                                 let supplier = new Supplier();\r\n                                 supplier.currency = \"dollar\";\r\n                                 supplier.name = \"supplier1\";\r\n                                 supplier.stockQty = 7\r\n                                 supplier.price = 1200;\r\n                                 supplier.validFrom = \"2019-12-18\";\r\n                                 supplier.validTo = \"2019-12-25\";\r\n\r\n                                 pop.suppliers = new Array<Supplier>();\r\n                                 pop.suppliers.push(supplier);\r\n\r\n                                 seg[0].pops.push(pop);\r\n                                 GMapsHelper.addListener(marker, 'click', (event) => {\r\n\r\n                                    this.selectedEntity = marker.data;\r\n                                 });\r\n                                 this.isEditable(true, marker);\r\n                              }\r\n                              else {\r\n                                 var popLength = seg[0].pops.length + 1;\r\n                                 let newpop = _.cloneDeep(seg[0].pops[0]);\r\n\r\n                                 var LastPopIndex = this.Data.length - 1;\r\n                                 var k = false;\r\n\r\n                                 if (this.PopIncrementalID == 0) {\r\n                                    for (var i = seg[0].pops.length - 1; i >= 0; i--) {\r\n                                       //seg[0].splitters[20].code\r\n                                       if (seg[0].pops[i].code != undefined || seg[0].pops[i].code != null) {\r\n                                          var ID2 = seg[0].pops[i].code;\r\n                                          var ID3 = ID2.toString();\r\n                                          var ID4 = ID3.split('_');\r\n                                          this.PopIncrementalID = parseInt(ID4[1]) + 1;\r\n                                          k = true;\r\n                                          break;\r\n                                       } else {\r\n                                          continue;\r\n                                       }\r\n                                    }\r\n                                 } else {\r\n                                    this.PopIncrementalID = this.PopIncrementalID + 1;\r\n                                 }\r\n                                 newpop.id = Helper.generateObjectId();\r\n                                 newpop.code = 'Pop_' + this.PopIncrementalID;\r\n                                 newpop.name = 'Pop_' + this.PopIncrementalID;\r\n                                 newpop.geometry = new Point([latLng.lng(), latLng.lat()]);\r\n\r\n                                 var marker = mapEntitiesHelper.drawPoint(newpop, { url: \"images/map-entities/pop.png\", anchor: new google.maps.Point(10, 10) }, true, true);\r\n\r\n                                 seg[0].pops.push(newpop);\r\n                                 GMapsHelper.addListener(marker, 'click', (event) => {\r\n\r\n                                    this.selectedEntity = marker.data;\r\n                                 });\r\n                                 this.isEditable(true, marker);\r\n                              }\r\n\r\n\r\n                           }\r\n                        }\r\n                     },\r\n                     (err) => {\r\n                        this.masterEntities = new Array<Chamber>();\r\n                     });\r\n               }\r\n\r\n               if (entityType == \"FAT\") {\r\n\r\n\r\n                  this.fatdata = new FAT();\r\n                  this.masterEntities = null;\r\n                  this.getdata = null;\r\n                  let masterSvc = this.fatService.getfats();\r\n                  masterSvc.subscribe(\r\n                     resp => {\r\n                        this.masterEntities = null;\r\n                        if (resp.data != null && resp.data.length > 0) {\r\n                           this.masterEntities = resp.data;\r\n                           for (var i = 0; i <= resp.data.length - 1; i++) {\r\n                              for (var j = 0; j <= resp.data[i].suppliers.length - 1; j++) {\r\n                                 if (resp.data[i].suppliers[j].default != undefined && resp.data[i].suppliers[j].default == \"true\") {\r\n                                    this.getdata = resp.data[i].suppliers[j];\r\n                                    break;\r\n                                 } else {\r\n                                    continue;\r\n                                 }\r\n                              }\r\n\r\n                           }\r\n\r\n                           if (seg) {\r\n                              this.CurrentselectedEntity = null;\r\n\r\n\r\n                              if (seg[0].fats == null) {\r\n                                 seg[0].fats = new Array<FAT>();\r\n\r\n                                 this.fatdata.entityType = \"FAT\";\r\n                                 this.fatdata.id = Helper.generateObjectId();\r\n                                 this.fatdata.code = \"Fat_1\";\r\n                                 this.fatdata.name = \"Fat_1\";\r\n\r\n\r\n                                 this.fatdata.geometry = new Point([latLng.lng(), latLng.lat()]);\r\n\r\n                                 var marker = mapEntitiesHelper.drawPoint(this.fatdata, { url: \"images/map-entities/FAT.png\", anchor: new google.maps.Point(10, 10) }, true, true);\r\n                                 this.CurrentselectedEntity = marker.data;\r\n                                 GMapsHelper.addListener(marker, 'click', (event) => {\r\n\r\n                                    this.selectedEntity = marker.data;\r\n                                 });\r\n                                 let supplier = new Supplier();\r\n                                 supplier.currency = this.getdata.currency;\r\n                                 supplier.name = this.getdata.name;\r\n                                 supplier.stockQty = this.getdata.stockQty;\r\n                                 supplier.price = this.getdata.price;\r\n                                 supplier.validFrom = this.getdata.validFrom;\r\n                                 supplier.validTo = this.getdata.validTo;\r\n                                 this.fatdata.suppliers = new Array<Supplier>();\r\n                                 this.fatdata.suppliers.push(supplier);\r\n\r\n                                 seg[0].fats.push(this.fatdata);\r\n                                 this.isEditable(true, marker);\r\n\r\n                              }\r\n                              else {\r\n                                 this.CurrentselectedEntity = null;\r\n                                 //this.fatdata = null;\r\n                                 this.fatdata = _.cloneDeep(seg[0].fats[0]);\r\n                                 if (this.fatdata == undefined) {\r\n                                    this.fatdata = new FAT();\r\n                                 }\r\n                                 if (this.FatIncrementalID == 0) {\r\n                                    for (var i = seg[0].fats.length - 1; i >= 0; i--) {\r\n                                       if (seg[0].fats[i].code != undefined || seg[0].fats[i].code != null) {\r\n                                          var ID2 = seg[0].fats[i].code;\r\n                                          var ID3 = ID2.toString();\r\n                                          var ID4 = ID3.split('_');\r\n                                          this.FatIncrementalID = parseInt(ID4[1]) + 1;\r\n                                          break;\r\n                                       } else {\r\n                                          continue;\r\n                                       }\r\n\r\n                                    }\r\n                                 } else {\r\n                                    this.FatIncrementalID = this.FatIncrementalID + 1;\r\n                                 }\r\n                                 this.fatdata.id = Helper.generateObjectId();\r\n                                 this.fatdata.code = 'Fat_' + this.FatIncrementalID;\r\n                                 this.fatdata.name = 'Fat_' + this.FatIncrementalID;\r\n                                 this.fatdata.geometry = new Point([latLng.lng(), latLng.lat()]);\r\n\r\n                                 var marker = mapEntitiesHelper.drawPoint(this.fatdata, { url: \"images/map-entities/FAT.png\", anchor: new google.maps.Point(10, 10) }, true, true);\r\n\r\n                                 this.CurrentselectedEntity = marker.data;\r\n                                 GMapsHelper.addListener(marker, 'click', (event) => {\r\n\r\n                                    this.selectedEntity = marker.data;\r\n                                 });\r\n                                 let supplier = new Supplier();\r\n                                 supplier.currency = this.getdata.currency;\r\n                                 supplier.name = this.getdata.name;\r\n                                 supplier.stockQty = this.getdata.stockQty;\r\n                                 supplier.price = this.getdata.price;\r\n                                 supplier.validFrom = this.getdata.validFrom;\r\n                                 supplier.validTo = this.getdata.validTo;\r\n                                 this.fatdata.suppliers = new Array<Supplier>();\r\n                                 this.fatdata.suppliers.push(supplier);\r\n\r\n                                 seg[0].fats.push(this.fatdata);\r\n                                 this.isEditable(true, marker);\r\n\r\n                              }\r\n                           }\r\n                        }\r\n                     },\r\n                     (err) => {\r\n                        this.masterEntities = new Array<Chamber>();\r\n                     });\r\n               }\r\n               if (entityType == \"FDT\") {\r\n                  this.fatdata = new FAT();\r\n                  this.masterEntities = null;\r\n                  this.getdata = null;\r\n                  let masterSvc = this.fdtService.getfdts();\r\n                  masterSvc.subscribe(\r\n                     resp => {\r\n                        this.masterEntities = null;\r\n                        if (resp.data != null && resp.data.length > 0) {\r\n                           this.masterEntities = resp.data;\r\n                           for (var i = 0; i <= resp.data.length - 1; i++) {\r\n                              for (var j = 0; j <= resp.data[i].suppliers.length - 1; j++) {\r\n                                 if (resp.data[i].suppliers[j].default != undefined && resp.data[i].suppliers[j].default == \"true\") {\r\n                                    this.getdata = resp.data[i].suppliers[j];\r\n                                    break;\r\n                                 } else {\r\n                                    continue;\r\n                                 }\r\n                              }\r\n\r\n                           }\r\n                           if (seg) {\r\n                              this.CurrentselectedEntity = null;\r\n\r\n                              if (seg[0].fdts == null) {\r\n                                 seg[0].fdts = new Array<FDT>();\r\n                                 this.fdt.entityType = \"FDT\";\r\n                                 this.fdt.id = Helper.generateObjectId();\r\n                                 this.fdt.code = \"Fdt_1\";\r\n                                 this.fdt.name = \"Fdt_1\";;\r\n\r\n                                 this.fdt.geometry = new Point([latLng.lng(), latLng.lat()]);\r\n\r\n                                 var marker = mapEntitiesHelper.drawPoint(this.fdt, { url: \"images/map-entities/FDT.png\", anchor: new google.maps.Point(10, 10) }, true, true);\r\n                                 this.CurrentselectedEntity = marker.data;\r\n                                 GMapsHelper.addListener(marker, 'click', (event) => {\r\n\r\n                                    this.selectedEntity = marker.data;\r\n                                 });\r\n                                 let supplier = new Supplier();\r\n                                 supplier.currency = this.getdata.currency;\r\n                                 supplier.name = this.getdata.name;\r\n                                 supplier.stockQty = this.getdata.stockQty;\r\n                                 supplier.price = this.getdata.price;\r\n                                 supplier.validFrom = this.getdata.validFrom;\r\n                                 supplier.validTo = this.getdata.validTo;\r\n                                 this.fdt.suppliers = new Array<Supplier>();\r\n                                 this.fdt.suppliers.push(supplier);\r\n\r\n                                 seg[0].fdts.push(this.fdt);\r\n                                 this.isEditable(true, marker);\r\n                              }\r\n                              else {\r\n                                 this.CurrentselectedEntity = null;\r\n\r\n                                 this.fdt = _.cloneDeep(seg[0].fdts[0]);\r\n                                 if (this.fdt == undefined) {\r\n                                    this.fdt = new FDT();\r\n                                 }\r\n                                 if (this.FdtIncrementalID == 0) {\r\n                                    for (var i = seg[0].fdts.length - 1; i >= 0; i--) {\r\n                                       if (seg[0].fdts[i].code != undefined || seg[0].fdts[i].code != null) {\r\n                                          var ID2 = seg[0].fdts[i].code;\r\n                                          var ID3 = ID2.toString();\r\n                                          var ID4 = ID3.split('_');\r\n                                          this.FdtIncrementalID = parseInt(ID4[1]) + 1;\r\n                                          break;\r\n                                       } else {\r\n                                          continue;\r\n                                       }\r\n\r\n                                    }\r\n                                 } else {\r\n                                    this.FdtIncrementalID = this.FdtIncrementalID + 1;\r\n                                 }\r\n                                 this.fdt.id = Helper.generateObjectId();\r\n                                 this.fdt.code = 'Fdt_' + this.FdtIncrementalID;\r\n                                 this.fdt.name = 'Fdt_' + this.FdtIncrementalID;\r\n                                 this.fdt.geometry = new Point([latLng.lng(), latLng.lat()]);\r\n\r\n                                 var marker = mapEntitiesHelper.drawPoint(this.fdt, { url: \"images/map-entities/FDT.png\", anchor: new google.maps.Point(10, 10) }, true, true);\r\n\r\n                                 this.CurrentselectedEntity = marker.data;\r\n                                 GMapsHelper.addListener(marker, 'click', (event) => {\r\n\r\n                                    this.selectedEntity = marker.data;\r\n                                 });\r\n                                 let supplier = new Supplier();\r\n                                 supplier.currency = this.getdata.currency;\r\n                                 supplier.name = this.getdata.name;\r\n                                 supplier.stockQty = this.getdata.stockQty;\r\n                                 supplier.price = this.getdata.price;\r\n                                 supplier.validFrom = this.getdata.validFrom;\r\n                                 supplier.validTo = this.getdata.validTo;\r\n                                 this.fdt.suppliers = new Array<Supplier>();\r\n                                 this.fdt.suppliers.push(supplier);\r\n\r\n                                 seg[0].fdts.push(this.fdt);\r\n                                 this.isEditable(true, marker);\r\n\r\n                                 //this.isEditable(true, marker);\r\n                              }\r\n                           }\r\n                        }\r\n                     },\r\n                     (err) => {\r\n                        this.masterEntities = new Array<Chamber>();\r\n                     });\r\n               }\r\n\r\n\r\n            }\r\n         });\r\n      }\r\n\r\n   }\r\n\r\n   onHover(event) {\r\n      var location = GeoHelper.convertToPosition(event);\r\n      var bounds = new google.maps.LatLngBounds();\r\n      if (this.marker != null) {\r\n         this.marker.setMap(null);\r\n      }\r\n      this.marker = new google.maps.Marker({\r\n         position: location,//this.selectedEntity.geometry.coordinates,//\"106.73491570241063, -6.14075054288391\",\r\n         cursor: 'pointer',\r\n         icon: 'images/dwnArrow.png',\r\n         map: this.map\r\n      });\r\n      this.marker.setAnimation(google.maps.Animation.BOUNCE);\r\n      bounds.extend(location);\r\n      this.map.fitBounds(bounds);\r\n   }\r\n   onspliterHover(event) {\r\n      let data: any;\r\n      let laln: any;\r\n      let id: any;\r\n\r\n      //for (let i = 0; i < this.design.bluePrint.children.length; i++) {\r\n      //    for (let j = 0; j < this.design.bluePrint.children[i].segments.length; j++) {\r\n      //        if (this.design.bluePrint.children[i].segments[j].splitters != undefined) {\r\n      //            data = $.grep(this.design.bluePrint.children[i].segments[j].splitters, function (n) {\r\n      //                if (n.code == event) {\r\n      //                    laln = n.geometry.coordinates;\r\n      //                    return laln;\r\n      //                }\r\n      //            })\r\n      //        }\r\n      //    }\r\n      //}\r\n      for (let i = 0; i < this.design.bluePrint.children.length; i++) {\r\n         for (let j = 0; j < this.design.bluePrint.children[i].children.length; j++) {\r\n            data = $.grep(this.design.bluePrint.children[i].children[j].segments[0].splitters, function (n) {\r\n               return n.geometry.coordinates;\r\n            });\r\n         }\r\n      }\r\n\r\n      for (let i = 0; i < data.length; i++) {\r\n         var location = GeoHelper.convertToPosition(data[i].geometry.coordinates);\r\n         //Check if the Location is in Bounds of the Map\r\n         //this.map.getBounds().contains(location);\r\n         var bounds = new google.maps.LatLngBounds();\r\n         if (this.marker != null) {\r\n            this.marker.setMap(null);\r\n         }\r\n         this.marker = new google.maps.Marker({\r\n            position: location,//this.selectedEntity.geometry.coordinates,//\"106.73491570241063, -6.14075054288391\",\r\n            cursor: 'pointer',\r\n            icon: 'images/dwnArrow.png',\r\n            map: this.map\r\n         });\r\n         this.marker.setAnimation(google.maps.Animation.BOUNCE);\r\n         this.marker.Animation = \"Bounce\";\r\n         bounds.extend(location);\r\n         this.map.fitBounds(bounds);\r\n      }\r\n\r\n\r\n      //for (let i = 0; i < this.design.bluePrint.children.length; i++) {\r\n      //    for (let i = 0; i < this.design.bluePrint.children[i].children.length; i++) {\r\n      //        data = $.grep(this.design.bluePrint.children[i].children, function (n) {\r\n      //            if (n.levelId == id) {\r\n      //                return n;\r\n      //            }\r\n      //        })\r\n      //    }\r\n      //}\r\n\r\n   }\r\n   onLeave() {\r\n      //this.marker.setAnimation(null);\r\n      this.map.setMap(null);\r\n      this.marker.setMap(null);\r\n      // this.map(null);\r\n   }\r\n\r\n   isEditable(value, marker) {\r\n      if (value) {\r\n\r\n         GMapsHelper.addListener(marker, \"rightclick\", (event) => {\r\n\r\n            if (marker.draggable)\r\n               marker.setDraggable(false);\r\n            else\r\n               marker.setDraggable(true);\r\n\r\n         });\r\n\r\n         GMapsHelper.addListener(marker, 'dragend', (event) => {\r\n            var latLng = event.latLng;\r\n            marker.data.geometry.coordinates = [latLng.lng(), latLng.lat()];\r\n\r\n            //let index = this.changedSegments.findIndex(x => (x.levelId == marker.data.levelId && x.segmentId == marker.data.segmentId));\r\n\r\n            //if (index == -1)\r\n            //   this.changedSegments.push({ levelId: marker.data.levelId, segmentId: marker.data.segmentId });\r\n\r\n         });\r\n      }\r\n   }\r\n   ngOnChanges(changes: SimpleChanges) {\r\n\r\n      this.selectedEntity = null;\r\n\r\n      if (this.design.bluePrint && this.design.bluePrint.children && this.design.bluePrint.children.length > 0) {\r\n\r\n         this.entitiesHelper = new EntitiesHelper(this.design.bookingIds, this.design.generatedCodes);\r\n\r\n         this.generateMapEntities(this.design.bluePrint);\r\n\r\n         this.isEntitiesGenerated = true;\r\n\r\n         this.map.setCenter({ lat: this.design.bluePrint.coordinates[1], lng: this.design.bluePrint.coordinates[0] });\r\n      }\r\n      else {\r\n         this.isEntitiesGenerated = false;\r\n      }\r\n\r\n      this.des = this.design.bluePrint;\r\n   }\r\n\r\n   isAllSelected() {\r\n      const numSelected = this.selectedLayers ? this.selectedLayers.length : 0;\r\n      const numRows = this.layers.length;\r\n      return numSelected === numRows;\r\n   }\r\n\r\n   toggleSelection(layer: any) {\r\n\r\n      var index = -1;\r\n\r\n      if (this.selectedLayers)\r\n         index = this.selectedLayers.findIndex(x => x == layer.id);\r\n      else\r\n         this.selectedLayers = [];\r\n\r\n      if (index == -1)\r\n         this.selectedLayers.push(layer.id);\r\n      else\r\n         this.selectedLayers.splice(index, 1);\r\n   }\r\n\r\n   masterToggle() {\r\n\r\n      if (this.isAllSelected()) {\r\n         this.selectedLayers = [];\r\n      }\r\n      else {\r\n         this.selectedLayers = [];\r\n         this.layers.forEach(x => this.selectedLayers.push(x.id));\r\n      }\r\n   }\r\n\r\n   PlotEntity(value) {\r\n      this.DeleteFlag = null;\r\n      this.DeleteFlag = value;\r\n      let ent = this.selectedEntity;\r\n      let seg = this.design.bluePrint.children[0].segments;\r\n      let mapEntitiesHelper = new MapEntitiesHelper(this.map);\r\n      if (seg) {\r\n         if (value == 'Splitter') {\r\n            this.getdata = null;\r\n            let masterSvc = this.splitterService.getSplitters();\r\n            masterSvc.subscribe(\r\n               resp => {\r\n                  this.masterEntities = null;\r\n                  if (resp.data != null && resp.data.length > 0) {\r\n                     this.masterEntities = resp.data;\r\n                     for (var i = 0; i <= resp.data.length - 1; i++) {\r\n                        for (var j = 0; j <= resp.data[i].suppliers.length - 1; j++) {\r\n                           if (resp.data[i].suppliers[j].default != undefined && resp.data[i].suppliers[j].default == \"true\") {\r\n                              this.getdata = resp.data[i].suppliers[j];\r\n                              break;\r\n                           } else {\r\n                              continue;\r\n                           }\r\n                        }\r\n\r\n                     }\r\n\r\n\r\n                     if (seg) {\r\n                        if (seg[0].splitters == null) {\r\n                           seg[0].splitters = new Array<Splitter>();\r\n\r\n                           let splitters = new Splitter();\r\n                           splitters.entityType = \"Splitter\";\r\n                           splitters.id = Helper.generateObjectId();\r\n                           splitters.code = \"Splitter_1\";\r\n                           splitters.name = \"Splitter_1\";\r\n\r\n                           splitters.geometry = new Point([ent.geometry.coordinates[0], ent.geometry.coordinates[1]]);\r\n\r\n                           var marker = mapEntitiesHelper.drawPoint(splitters, { url: \"images/map-entities/spliceclosure.png\", anchor: new google.maps.Point(10, 10) }, true, true);\r\n\r\n                           let supplier = new Supplier();\r\n                           supplier.currency = this.getdata.currency;\r\n                           supplier.name = this.getdata.name;\r\n                           supplier.stockQty = this.getdata.stockQty;\r\n                           supplier.price = this.getdata.price;\r\n                           supplier.validFrom = this.getdata.validFrom;\r\n                           supplier.validTo = this.getdata.validTo;\r\n\r\n\r\n\r\n                           splitters.suppliers = new Array<Supplier>();\r\n                           splitters.suppliers.push(supplier);\r\n\r\n                           seg[0].splitters.push(splitters);\r\n\r\n                           GMapsHelper.addListener(marker, 'click', (event) => {\r\n\r\n                              this.selectedEntity = marker.data;\r\n                           });\r\n                           this.isEditable(true, marker);\r\n                        }\r\n                        else {\r\n\r\n                           let splitters = _.cloneDeep(seg[0].splitters[0]);\r\n                           if (splitters == undefined) {\r\n                              splitters = new Splitter();\r\n                           }\r\n                           var k = false;\r\n                           if (this.SplitterIncrementalID == 0) {\r\n                              for (var i = seg[0].splitters.length - 1; i >= 0; i--) {\r\n                                 //seg[0].splitters[20].code\r\n                                 if (seg[0].splitters[i].code != undefined || seg[0].splitters[i].code != null) {\r\n                                    var ID2 = seg[0].splitters[i].code;\r\n                                    var ID3 = ID2.toString();\r\n                                    var ID4 = ID3.split('_');\r\n                                    this.SplitterIncrementalID = parseInt(ID4[1]) + 1;\r\n                                    k = true;\r\n                                    break;\r\n                                 } else {\r\n                                    continue;\r\n                                 }\r\n\r\n                              }\r\n                           } else {\r\n                              this.SplitterIncrementalID = this.SplitterIncrementalID + 1;\r\n                           }\r\n\r\n                           splitters.id = Helper.generateObjectId();\r\n                           splitters.code = 'Splitter_' + this.SplitterIncrementalID;\r\n                           splitters.name = 'Splitters_' + this.SplitterIncrementalID;\r\n                           //newPole.name = newPole.code;\r\n                           splitters.geometry = new Point([ent.geometry.coordinates[0], ent.geometry.coordinates[1]]);\r\n\r\n                           var marker = mapEntitiesHelper.drawPoint(splitters, { url: \"images/map-entities/splitter.png\", anchor: new google.maps.Point(10, 10) }, true, true);\r\n                           let supplier = new Supplier();\r\n                           supplier.currency = this.getdata.currency;\r\n                           supplier.name = this.getdata.name;\r\n                           supplier.stockQty = this.getdata.stockQty;\r\n                           supplier.price = this.getdata.price;\r\n                           supplier.validFrom = this.getdata.validFrom;\r\n                           supplier.validTo = this.getdata.validTo;\r\n\r\n                           splitters.suppliers = new Array<Supplier>();\r\n                           splitters.suppliers.push(supplier);\r\n                           seg[0].splitters.push(splitters);\r\n                           GMapsHelper.addListener(marker, 'click', (event) => {\r\n\r\n                              this.selectedEntity = marker.data;\r\n                           });\r\n                           this.isEditable(true, marker);\r\n                        }\r\n                     }\r\n                  }\r\n               },\r\n               (err) => {\r\n                  this.masterEntities = new Array<Chamber>();\r\n               });\r\n         }\r\n         if (value == 'Splice Closure') {\r\n            this.getdata = null;\r\n            let masterSvc = this.spliceClosureService.getSpliceClosures();\r\n            masterSvc.subscribe(\r\n               resp => {\r\n                  this.masterEntities = null;\r\n                  if (resp.data != null && resp.data.length > 0) {\r\n                     this.masterEntities = resp.data;\r\n                     for (var i = 0; i <= resp.data.length - 1; i++) {\r\n                        for (var j = 0; j <= resp.data[i].suppliers.length - 1; j++) {\r\n                           if (resp.data[i].suppliers[j].default != undefined && resp.data[i].suppliers[j].default == \"true\") {\r\n                              this.getdata = resp.data[i].suppliers[j];\r\n                              break;\r\n                           } else {\r\n                              continue;\r\n                           }\r\n                        }\r\n\r\n                     }\r\n\r\n                     if (seg) {\r\n                        this.onEntityTypeChange(\"SpliceClosure\");\r\n                        if (seg[0].spliceClosures == null) {\r\n                           seg[0].spliceClosures = new Array<SpliceClosure>();\r\n                           let spliceclosures = new SpliceClosure();\r\n                           spliceclosures.entityType = \"SpliceClosure\";\r\n                           spliceclosures.id = Helper.generateObjectId();\r\n                           spliceclosures.name = \"SpliceClosure_1\"\r\n                           spliceclosures.code = \"SpliceClosure_1\";\r\n                           spliceclosures.parentId = ent.id;\r\n                           spliceclosures.parentEntityType = ent.entityType;\r\n                           spliceclosures.geometry = new Point([ent.geometry.coordinates[0], ent.geometry.coordinates[1]]);\r\n                           var marker = mapEntitiesHelper.drawPoint(spliceclosures, { url: \"images/map-entities/spliceclosure.png\", anchor: new google.maps.Point(10, 10) }, true, true);\r\n                           let supplier = new Supplier();\r\n                           supplier.currency = this.getdata.currency;\r\n                           supplier.name = this.getdata.name;\r\n                           supplier.stockQty = this.getdata.stockQty;\r\n                           supplier.price = this.getdata.price;\r\n                           supplier.validFrom = this.getdata.validFrom;\r\n                           supplier.validTo = this.getdata.validTo;\r\n                           spliceclosures.suppliers = new Array<Supplier>();\r\n                           spliceclosures.suppliers.push(supplier);\r\n\r\n                           seg[0].spliceClosures.push(spliceclosures);\r\n\r\n                           GMapsHelper.addListener(marker, 'click', (event) => {\r\n\r\n                              this.selectedEntity = marker.data;\r\n                           });\r\n                           this.isEditable(true, marker);\r\n                        }\r\n                        else {\r\n\r\n                           let spliceClosure = _.cloneDeep(seg[0].spliceClosures[0]);\r\n                           if (spliceClosure == undefined) {\r\n                              spliceClosure = new SpliceClosure();\r\n                           }\r\n                           var k = false;\r\n                           if (this.SpliceClosureIncrementalID == 0) {\r\n                              for (var i = seg[0].spliceClosures.length - 1; i >= 0; i--) {\r\n                                 //seg[0].splitters[20].code\r\n                                 if (seg[0].spliceClosures[i].code != undefined || seg[0].spliceClosures[i].code != null) {\r\n                                    var ID2 = seg[0].spliceClosures[i].code;\r\n                                    var ID3 = ID2.toString();\r\n                                    var ID4 = ID3.split('_');\r\n                                    this.SpliceClosureIncrementalID = parseInt(ID4[1]) + 1;\r\n                                    k = true;\r\n                                    break;\r\n                                 } else {\r\n                                    continue;\r\n                                 }\r\n\r\n                              }\r\n                           } else {\r\n                              this.SpliceClosureIncrementalID = this.SpliceClosureIncrementalID + 1;\r\n                           }\r\n                           spliceClosure.id = Helper.generateObjectId();\r\n                           spliceClosure.code = 'SpliceClosure_' + this.SpliceClosureIncrementalID;\r\n                           spliceClosure.name = 'SpliceClosure_' + this.SpliceClosureIncrementalID;\r\n\r\n                           spliceClosure.geometry = new Point([ent.geometry.coordinates[0], ent.geometry.coordinates[1]]);\r\n\r\n                           var marker = mapEntitiesHelper.drawPoint(spliceClosure, { url: \"images/map-entities/spliceclosure.png\", anchor: new google.maps.Point(10, 10) }, true, true);\r\n                           let supplier = new Supplier();\r\n                           supplier.currency = this.getdata.currency;\r\n                           supplier.name = this.getdata.name;\r\n                           supplier.stockQty = this.getdata.stockQty;\r\n                           supplier.price = this.getdata.price;\r\n                           supplier.validFrom = this.getdata.validFrom;\r\n                           supplier.validTo = this.getdata.validTo;\r\n                           spliceClosure.suppliers = new Array<Supplier>();\r\n                           spliceClosure.suppliers.push(supplier);\r\n                           seg[0].spliceClosures.push(spliceClosure);\r\n                           GMapsHelper.addListener(marker, 'click', (event) => {\r\n\r\n                              this.selectedEntity = marker.data;\r\n                           });\r\n                           this.isEditable(true, marker);\r\n                        }\r\n\r\n                     }\r\n                  }\r\n               },\r\n               (err) => {\r\n                  this.masterEntities = new Array<SpliceClosure>();\r\n               });\r\n         }\r\n         if (value == 'odf') {\r\n            this.masterEntities = null;\r\n            this.getdata = null;\r\n            let masterSvc = this.odfService.getODFs();\r\n            masterSvc.subscribe(\r\n               resp => {\r\n                  this.masterEntities = null;\r\n                  if (resp.data != null && resp.data.length > 0) {\r\n                     this.masterEntities = resp.data;\r\n                     for (var i = 0; i <= resp.data.length - 1; i++) {\r\n                        for (var j = 0; j <= resp.data[i].suppliers.length - 1; j++) {\r\n                           if (resp.data[i].suppliers[j].default != undefined && resp.data[i].suppliers[j].default == \"true\") {\r\n                              this.getdata = resp.data[i].suppliers[j];\r\n                              break;\r\n                           } else {\r\n                              continue;\r\n                           }\r\n                        }\r\n\r\n                     }\r\n\r\n\r\n                     if (seg) {\r\n                        if (seg[0].odfs == null) {\r\n                           seg[0].odfs = new Array<ODF>();\r\n\r\n                           let odf = new ODF();\r\n                           odf.entityType = \"ODF\";\r\n                           odf.id = Helper.generateObjectId();\r\n                           var Uid = odf.id.toString();\r\n                           odf.code = 'ODF_1';\r\n                           odf.name = odf.code;\r\n                           odf.parentId = ent.id;\r\n                           odf.parentEntityType = ent.entityType;\r\n                           odf.geometry = new Point([ent.geometry.coordinates[0], ent.geometry.coordinates[1]]);\r\n\r\n                           var marker = mapEntitiesHelper.drawPoint(odf, { url: \"images/map-entities/odf.png\", anchor: new google.maps.Point(10, 10) }, true, true);\r\n\r\n\r\n\r\n                           let supplier = new Supplier();\r\n                           supplier.currency = this.getdata.currency;\r\n                           supplier.name = this.getdata.name;\r\n                           supplier.stockQty = this.getdata.stockQty;\r\n                           supplier.price = this.getdata.price;\r\n                           supplier.validFrom = this.getdata.validFrom;\r\n                           supplier.validTo = this.getdata.validTo;\r\n\r\n                           odf.suppliers = new Array<Supplier>();\r\n                           odf.suppliers.push(supplier);\r\n\r\n                           seg[0].odfs.push(odf);\r\n\r\n                           GMapsHelper.addListener(marker, 'click', (event) => {\r\n\r\n                              this.selectedEntity = marker.data;\r\n                           });\r\n                           this.isEditable(true, marker);\r\n                        }\r\n                        else {\r\n\r\n                           let odfss = _.cloneDeep(seg[0].odfs[0]);\r\n                           if (odfss == undefined) {\r\n                              odfss = new ODF();\r\n                           }\r\n\r\n                           var k = false;\r\n                           if (this.OdfIncrementalID == 0) {\r\n                              for (var i = seg[0].odfs.length - 1; i >= 0; i--) {\r\n                                 //seg[0].splitters[20].code\r\n                                 if (seg[0].odfs[i].code != undefined || seg[0].odfs[i].code != null) {\r\n                                    var ID2 = seg[0].odfs[i].code;\r\n                                    var ID3 = ID2.toString();\r\n                                    var ID4 = ID3.split('_');\r\n                                    this.OdfIncrementalID = parseInt(ID4[1]) + 1;\r\n                                    k = true;\r\n                                    break;\r\n                                 } else {\r\n                                    continue;\r\n                                 }\r\n\r\n                              }\r\n                           } else {\r\n                              this.OdfIncrementalID = this.OdfIncrementalID + 1;\r\n                           }\r\n                           odfss.id = Helper.generateObjectId();\r\n                           odfss.code = 'Odf_' + this.OdfIncrementalID;\r\n                           odfss.name = 'Odf_' + this.OdfIncrementalID;\r\n                           odfss.geometry = new Point([ent.geometry.coordinates[0], ent.geometry.coordinates[1]]);\r\n\r\n                           var marker = mapEntitiesHelper.drawPoint(odfss, { url: \"images/map-entities/odf.png\", anchor: new google.maps.Point(10, 10) }, true, true);\r\n                           let supplier = new Supplier();\r\n                           supplier.currency = this.getdata.currency;\r\n                           supplier.name = this.getdata.name;\r\n                           supplier.stockQty = this.getdata.stockQty;\r\n                           supplier.price = this.getdata.price;\r\n                           supplier.validFrom = this.getdata.validFrom;\r\n                           supplier.validTo = this.getdata.validTo;\r\n\r\n                           odfss.suppliers = new Array<Supplier>();\r\n                           odfss.suppliers.push(supplier);\r\n                           seg[0].odfs.push(odfss);\r\n                           GMapsHelper.addListener(marker, 'click', (event) => {\r\n\r\n                              this.selectedEntity = marker.data;\r\n                           });\r\n                           this.isEditable(true, marker);\r\n                        }\r\n\r\n                     }\r\n                  }\r\n               },\r\n               (err) => {\r\n                  this.masterEntities = new Array<ODF>();\r\n               });\r\n         }\r\n      }\r\n   }\r\n   refreshLayers() {\r\n\r\n      if (this.design.bluePrint) {\r\n\r\n         if (this.isEntitiesGenerated == false) {\r\n            this.generateMapEntities(this.design.bluePrint);\r\n            this.isEntitiesGenerated = true;\r\n            this.map.setCenter({ lat: this.design.bluePrint.coordinates[1], lng: this.design.bluePrint.coordinates[0] });\r\n         }\r\n      }\r\n\r\n      this.toggleEntities(this.design.bluePrint);\r\n   }\r\n\r\n   refreshBlueprint() {\r\n\r\n      $(\"#ajax-loading\").show();\r\n\r\n      this.entitiesHelper = new EntitiesHelper(this.design.bookingIds, this.design.generatedCodes);\r\n\r\n      this.changedSegments.forEach(x => {\r\n\r\n         this.refreshSegment(this.design.bluePrint, x.levelId, x.segmentId);\r\n\r\n      });\r\n\r\n\r\n      this.bomHelper.generateBOQ(this.design);\r\n\r\n      $(\"#ajax-loading\").hide();\r\n   }\r\n\r\n   refreshSegment(geoNode: GeoNode, levelId, segmentId) {\r\n\r\n      if (geoNode.segments) {\r\n\r\n         let segment = geoNode.segments.find(x => x.id == segmentId);\r\n\r\n         if (segment) {\r\n\r\n            if (segment.chambers && segment.chambers.length > 0) {\r\n\r\n               segment.coordinates = segment.cable.geometry.coordinates;\r\n\r\n               this.mapEntitiesHelper.removeMapObjects(segment.chambers);\r\n\r\n               segment.chambers = this.entitiesHelper.createChambers(segment.chambers[0], 100, segment, 10, 10);\r\n\r\n               this.plotPointEntities(segment.chambers, \"Chamber\", levelId, segmentId, true, true);\r\n            }\r\n\r\n            if (segment.poles && segment.poles.length > 0) {\r\n\r\n               segment.coordinates = segment.cable.geometry.coordinates;\r\n\r\n               this.mapEntitiesHelper.removeMapObjects(segment.poles);\r\n\r\n               segment.poles = this.entitiesHelper.createPoles(segment.poles[0], 100, segment, 10, 10);\r\n               this.plotPointEntities(segment.poles, \"Pole\", levelId, segmentId, true, true);\r\n            }\r\n\r\n            return false;\r\n         }\r\n      }\r\n\r\n      if (geoNode.children && geoNode.children.length > 0)\r\n         geoNode.children.forEach(g => {\r\n            this.refreshSegment(g, g.id, segmentId);\r\n         });\r\n   }\r\n\r\n   toggleEntities(group: GeoNode) {\r\n\r\n      if (group.children) {\r\n         group.children.forEach(x => {\r\n\r\n            if (x.levelName == \"homepasses\") {\r\n               //this.toggleEntity(x, this.selectedLayers.includes(\"Homepass\"));\r\n               this.setEntitiesVisible(x, this.selectedLayers.includes(\"Homepass\"));\r\n            }\r\n\r\n            //if (x.level == \"Feeder\") {\r\n            //    this.toggleEntity(x, this.selectedLayers.includes(\"Splitter\"));\r\n            //}\r\n         });\r\n      }\r\n\r\n      if (group.segments)\r\n         group.segments.forEach(x => {\r\n\r\n            this.setEntitiesVisible(x.cable, this.selectedLayers.includes(\"Cable\"));\r\n            this.setEntitiesVisible(x.ducts, this.selectedLayers.includes(\"Duct\"));\r\n            this.setEntitiesVisible(x.microduct, this.selectedLayers.includes(\"MicroDuct\"));\r\n\r\n            this.setEntitiesVisible(x.chambers, this.selectedLayers.includes(\"Chamber\"));\r\n\r\n            this.setEntitiesVisible(x.odfs, this.selectedLayers.includes(\"ODF\"));\r\n\r\n            this.setEntitiesVisible(x.poles, this.selectedLayers.includes(\"Pole\"));\r\n\r\n            this.setEntitiesVisible(x.splitters, this.selectedLayers.includes(\"Splitter\"));\r\n\r\n            this.setEntitiesVisible(x.spliceClosures, this.selectedLayers.includes(\"SpliceClosure\"));\r\n            this.setEntitiesVisible(x.pops, this.selectedLayers.includes(\"PoP\"));\r\n\r\n         });\r\n\r\n      if (group.children && group.children.length > 0)\r\n         group.children.forEach(g => {\r\n            this.toggleEntities(g);\r\n         });\r\n\r\n   }\r\n\r\n   setEntitiesVisible(entities, isVisible) {\r\n\r\n      if (entities) {\r\n         if (entities.length > 0) {\r\n            entities.forEach(x => {\r\n               if (x && x['mapObject']) {\r\n                  x['mapObject'].setVisible(isVisible);\r\n               }\r\n            });\r\n         }\r\n         else {\r\n            if (entities['mapObject']) {\r\n               entities['mapObject'].setVisible(isVisible);\r\n            }\r\n         }\r\n      }\r\n   }\r\n\r\n   generateMapEntities(group: GeoNode) {\r\n\r\n      let levelId = group.id;\r\n\r\n      if (group.children)\r\n         group.children.forEach(x => {\r\n\r\n            if (x.levelName == \"homepasses\") {\r\n               //x['entityType'] = \"Homepass\";\r\n               //let entityIcon = this.entityIcons.find(i => i.entityType == 'Homepass');\r\n               //this.drawPoint(x, entityIcon.icon, false);\r\n\r\n               this.plotPointEntities(x, \"Homepass\", levelId, x.id, true, true);\r\n            }\r\n            //else {\r\n            //    x['entityType'] = \"Splitter\";\r\n            //    let entityIcon = this.entityIcons.find(i => i.entityType == 'Splitter');\r\n            //    this.drawPoint(x, entityIcon.icon, true);\r\n            //}\r\n         });\r\n\r\n      if (group.segments)\r\n         group.segments.forEach(x => {\r\n\r\n            this.plotLineEntities(x.cable, \"Cable\", levelId, x.id, true, true);\r\n\r\n            this.plotLineEntities(x.ducts, \"Duct\", levelId, x.id, true, true);\r\n\r\n            this.plotLineEntities(x.microduct, \"MicroDuct\", levelId, x.id, true, true);\r\n\r\n            this.plotPointEntities(x.chambers, \"Chamber\", levelId, x.id, true, true);\r\n\r\n            this.plotPointEntities(x.odfs, \"ODF\", levelId, x.id, true, true);\r\n\r\n            this.plotPointEntities(x.poles, \"Pole\", levelId, x.id, true, true);\r\n\r\n            this.plotPointEntities(x.splitters, \"Splitter\", levelId, x.id, true, true);\r\n\r\n            this.plotPointEntities(x.spliceClosures, \"SpliceClosure\", levelId, x.id, true, true);\r\n\r\n            this.plotPointEntities(x.pops, \"PoP\", levelId, x.id, true, true);\r\n\r\n            this.plotPointEntities(x.fats, \"FAT\", levelId, x.id, true, true);\r\n            this.plotPointEntities(x.fdts, \"FDT\", levelId, x.id, true, true);\r\n\r\n         });\r\n\r\n      if (group.children && group.children.length > 0)\r\n         group.children.forEach(g => {\r\n            this.generateMapEntities(g);\r\n         });\r\n\r\n   }\r\n\r\n   ExportTOPdf() {\r\n      var data = window.document.getElementById('designMap');\r\n      html2canvas(data, { allowTaint: true, useCORS: true }).then(canvas => {\r\n         const contentDataURL = canvas.toDataURL('image/jpeg')\r\n         let pdf = new jspdf('landscape'); // A4 size page of PDF  \r\n         pdf.addImage(contentDataURL, 'JPEG', 10, 10, 280, 150, null, 'FAST');\r\n         pdf.save('MYPdf.pdf'); // Generated PDF\r\n      });\r\n   }\r\n\r\n   plotPointEntities(entities: any, entityType: string, levelId: string, segmentId: string, isEditable: boolean, attachMapObject: boolean) {\r\n\r\n      let entityIcon = this.entityIcons.find(i => i.entityType == entityType);\r\n\r\n      if (entities) {\r\n\r\n         if (entities.length > 0) {\r\n            entities.forEach(x => {\r\n               this.plotPointEntity(x, entityIcon.icon, levelId, segmentId, isEditable, attachMapObject);\r\n            });\r\n         }\r\n         else {\r\n            this.plotPointEntity(entities, entityIcon.icon, levelId, segmentId, isEditable, attachMapObject);\r\n         }\r\n      }\r\n   }\r\n\r\n   plotPointEntity(entity: any, entityIcon: any, levelId: string, segmentId: string, isEditable: boolean, attachMapObject: boolean) {\r\n\r\n      if (entity) {\r\n\r\n         entity[\"levelId\"] = levelId;\r\n         entity[\"segmentId\"] = segmentId;\r\n\r\n         let marker = this.mapEntitiesHelper.drawPoint(entity, entityIcon, isEditable, attachMapObject);\r\n\r\n         GMapsHelper.addListener(marker, 'click', (event) => {\r\n            if (marker.data.levelName == \"homepasses\") {\r\n               let homepass = this.design.homepasses.find(x => x.id == marker.data.id);\r\n               if (homepass) {\r\n                  this.selectedEntity = homepass;\r\n                  this.selectedEntity[\"entityType\"] = \"Homepass\";\r\n               }\r\n            }\r\n            else\r\n               this.selectedEntity = marker.data;\r\n            if (this.selectedEntity.entityType == \"Splitter\") {\r\n               this.entityType = this.selectedEntity.code;\r\n               for (let i = 0; i < this.design.bluePrint.children.length; i++) {\r\n                  for (let j = 0; j < this.design.bluePrint.children[i].segments.length; j++) {\r\n                     for (let k = 0; k < this.design.bluePrint.children[i].segments[j].splitters.length; j++) {\r\n                        if (this.design.bluePrint.children[i].segments[j].splitters[k].code == this.entityType) {\r\n                           this.filterResult = this.design.bluePrint.children[i].children;\r\n                        }\r\n                     }\r\n                  }\r\n               }\r\n            }\r\n\r\n            //if (this.selectedEntity.entityType == \"Splitter\") {\r\n            //    this.entityType = this.selectedEntity.code;\r\n            //    for (let i = 0; i < this.design.bluePrint.children.length; i++) {\r\n            //        if (this.design.bluePrint.children[i].id == this.selectedEntity.levelId) {\r\n            //            this.filterResult = this.design.bluePrint.children[i].children;\r\n            //        }\r\n            //    }\r\n            //}\r\n         });\r\n\r\n         if (isEditable) {\r\n\r\n            GMapsHelper.addListener(marker, \"rightclick\", (event) => {\r\n\r\n               if (marker.draggable)\r\n                  marker.setDraggable(false);\r\n               else\r\n                  marker.setDraggable(true);\r\n\r\n            });\r\n\r\n            GMapsHelper.addListener(marker, 'dragend', (event) => {\r\n               var latLng = event.latLng;\r\n               marker.data.geometry.coordinates = [latLng.lng(), latLng.lat()];\r\n\r\n               //let index = this.changedSegments.findIndex(x => (x.levelId == marker.data.levelId && x.segmentId == marker.data.segmentId));\r\n\r\n               //if (index == -1)\r\n               //   this.changedSegments.push({ levelId: marker.data.levelId, segmentId: marker.data.segmentId });\r\n\r\n            });\r\n         }\r\n      }\r\n   }\r\n\r\n   plotLineEntities(entities: any, entityType: string, levelId: string, segmentId: string, isEditable: boolean, attachMapObject: boolean) {\r\n\r\n      if (entities) {\r\n         if (entities.length > 0) {\r\n            entities.forEach(x => {\r\n               this.plotLineEntity(x, levelId, segmentId, isEditable, attachMapObject);\r\n            });\r\n         }\r\n         else {\r\n            this.plotLineEntity(entities, levelId, segmentId, isEditable, attachMapObject);\r\n         }\r\n      }\r\n   }\r\n\r\n   plotLineEntity(entity: any, levelId: string, segmentId: string, isEditable: boolean, attachMapObject: boolean) {\r\n\r\n      if (entity) {\r\n\r\n         entity[\"levelId\"] = levelId;\r\n         entity[\"segmentId\"] = segmentId;\r\n\r\n         let polyLine = this.mapEntitiesHelper.drawLine(entity, \"#000\", 2, isEditable, attachMapObject);\r\n\r\n         GMapsHelper.addListener(polyLine, 'click', (event) => {\r\n            this.selectedEntity = polyLine.data;\r\n         });\r\n\r\n         if (isEditable) {\r\n\r\n            GMapsHelper.addListener(polyLine, \"rightclick\", (event) => {\r\n\r\n               if (polyLine.editable)\r\n                  polyLine.setEditable(false);\r\n               else\r\n                  polyLine.setEditable(true);\r\n            });\r\n\r\n            GMapsHelper.addListener(polyLine.getPath(), 'set_at', () => {\r\n\r\n               var coords = polyLine.getPath().getArray();\r\n\r\n               let newCoords = new Array<number[]>();\r\n\r\n               coords.forEach(x => {\r\n                  newCoords.push([x.lng(), x.lat()]);\r\n               });\r\n\r\n\r\n               polyLine.data.geometry.coordinates = GeoHelper.cleanLineCoordinates(newCoords);\r\n\r\n               polyLine.data.measuredLength = GeoHelper.getLength(polyLine.data.geometry.coordinates);\r\n\r\n               let index = this.changedSegments.findIndex(x => (x.levelId == polyLine.data.levelId && x.segmentId == polyLine.data.segmentId));\r\n\r\n               if (index == -1)\r\n                  this.changedSegments.push({ levelId: polyLine.data.levelId, segmentId: polyLine.data.segmentId });\r\n\r\n            });\r\n         }\r\n      }\r\n   }\r\n\r\n   deleteEntity() {\r\n      let seg = this.design.bluePrint.children[0].segments;\r\n      let segments = this.design.bluePrint.children;\r\n      if (this.selectedEntity.entityType == 'Chamber') {\r\n         for (var i = seg[0].splitters.length - 1; i >= 0; i--) {\r\n            if (seg[0].splitters[i].parentId == this.selectedEntity.id) {\r\n               this.mapEntitiesHelper.removeMapObjects(seg[0].splitters[i]);\r\n            }\r\n         }\r\n         for (var i = seg[0].spliceClosures.length - 1; i >= 0; i--) {\r\n            if (seg[0].spliceClosures[i].parentId == this.selectedEntity.id) {\r\n               this.mapEntitiesHelper.removeMapObjects(seg[0].spliceClosures[i]);\r\n            }\r\n         }\r\n      }\r\n      if (this.selectedEntity.entityType == 'PoP') {\r\n         for (var i = seg[0].pops.length - 1; i >= 0; i--) {\r\n            if (seg[0].pops[i].parentId == this.selectedEntity.id) {\r\n               this.mapEntitiesHelper.removeMapObjects(seg[0].pops[i]);\r\n            }\r\n         }\r\n      }\r\n      if (this.selectedEntity.entityType == 'Cable') {\r\n         for (var i = 0; i <= segments.length - 1; i++) {\r\n            //let S = this.design.bluePrint.children[i].segments.length;\r\n            for (var j = 0; j <= segments[i].segments.length-1; j++) {\r\n               if (this.design.bluePrint.children[i].segments[j].cable != undefined) {\r\n                  if (this.design.bluePrint.children[i].segments[j].cable.code == this.selectedEntity.code) {\r\n                     //this.design.bluePrint.children[i].segments.findIndex(j);\r\n                     if (this.design.bluePrint.children[i].segments[j].poles != undefined) {\r\n                        var Poles = this.design.bluePrint.children[i].segments[j].poles.length;\r\n                        if (Poles > 0) {\r\n                           for (var k = 0; k <= Poles - 1; k++) {\r\n                              this.mapEntitiesHelper.removeMapObjects(this.design.bluePrint.children[i].segments[j].poles[k]);\r\n                           }\r\n                        }\r\n                     }\r\n                     if (this.design.bluePrint.children[i].segments[j].chambers != undefined) {\r\n                        var Chambers = this.design.bluePrint.children[i].segments[j].chambers.length;\r\n                        if (Chambers > 0) {\r\n                           for (var k = 0; k <= Chambers - 1; k++) {\r\n                              this.mapEntitiesHelper.removeMapObjects(this.design.bluePrint.children[i].segments[j].chambers[k]);\r\n                           }\r\n                        }\r\n                     }\r\n                     if (this.design.bluePrint.children[i].segments[j].homepasses != undefined) {\r\n                        var HomePasses = this.design.bluePrint.children[i].segments[j].homepasses.length;\r\n                        if (HomePasses > 0) {\r\n                           for (var k = 0; k <= HomePasses - 1; k++) {\r\n                              this.mapEntitiesHelper.removeMapObjects(this.design.bluePrint.children[i].segments[j].homepasses[k]);\r\n                           }\r\n                        }\r\n                     }\r\n                     if (this.design.bluePrint.children[i].segments[j].odfs != undefined) {\r\n                        var ODFS = this.design.bluePrint.children[i].segments[j].odfs.length;\r\n                        if (ODFS > 0) {\r\n                           for (var k = 0; k <= ODFS - 1; k++) {\r\n                              this.mapEntitiesHelper.removeMapObjects(this.design.bluePrint.children[i].segments[j].odfs[k]);\r\n                           }\r\n                        }\r\n                     }\r\n                     if (this.design.bluePrint.children[i].segments[j].pops != undefined) {\r\n                        var POPS = this.design.bluePrint.children[i].segments[j].pops.length;\r\n                        if (POPS > 0) {\r\n                           for (var k = 0; k <= POPS - 1; k++) {\r\n                              this.mapEntitiesHelper.removeMapObjects(this.design.bluePrint.children[i].segments[j].pops[k]);\r\n                           }\r\n                        }\r\n                     }\r\n                     if (this.design.bluePrint.children[i].segments[j].spliceClosures != undefined) {\r\n                        var SpliceClosures = this.design.bluePrint.children[i].segments[j].spliceClosures.length;\r\n                        if (SpliceClosures > 0) {\r\n                           for (var k = 0; k <= SpliceClosures - 1; k++) {\r\n                              this.mapEntitiesHelper.removeMapObjects(this.design.bluePrint.children[i].segments[j].spliceClosures[k]);\r\n                           }\r\n                        }\r\n                     }\r\n                     if (this.design.bluePrint.children[i].segments[j].splitters != undefined) {\r\n                        var Splitters = this.design.bluePrint.children[i].segments[j].splitters.length;\r\n                        if (Splitters > 0) {\r\n                           for (var k = 0; k <= Splitters - 1; k++) {\r\n                              this.mapEntitiesHelper.removeMapObjects(this.design.bluePrint.children[i].segments[j].splitters[k]);\r\n                           }\r\n                        }\r\n                     }\r\n                     //this.design.bluePrint.children.splice(i, 1);\r\n                     this.design.bluePrint.children[i].segments.splice(j, 1);\r\n                     this.mapEntitiesHelper.removeMapObjects(this.selectedEntity);\r\n                     return false;\r\n                  }\r\n               }\r\n\r\n            }\r\n         }\r\n      }\r\n      \r\n      this.mapEntitiesHelper.removeMapObjects(this.selectedEntity);\r\n      if (this.selectedEntity.entityType == \"MicroDuct\" || this.selectedEntity.entityType == \"Duct\") {        \r\n         GeoNodeHelper.deleteLineSegmentEntity(this.design.bluePrint, this.selectedEntity.id, this.selectedEntity.entityType);\r\n      } else {\r\n         GeoNodeHelper.deleteSegmentEntity(this.design.bluePrint, this.selectedEntity.id, this.selectedEntity.entityType);\r\n      }\r\n      \r\n      this.selectedEntity = null;\r\n\r\n      this.refreshBlueprint();\r\n   }\r\n\r\n   stringify(object: any) {\r\n      return JSON.stringify(object);\r\n   }\r\n   onEntityTypeChange(entityType: string) {\r\n\r\n      if (this.entitySettings.entityName == 'Homepass') {\r\n         this.entitySettings.dataSource = 'automatic';\r\n      }\r\n      else {\r\n         this.entitySettings.chambers = null;\r\n         this.entitySettings.odfs = null;\r\n         this.entitySettings.poles = null;\r\n         this.entitySettings.spliceClosures = null;\r\n         this.entitySettings.splitters = null;\r\n\r\n         this.initializeEntities();\r\n\r\n         this.loadMasterEntities(entityType);\r\n      }\r\n\r\n   }\r\n   initializeEntities() {\r\n\r\n      switch (this.entitySettings.entityName) {\r\n         case \"Chamber\":\r\n\r\n            if (this.entitySettings.chambers == null)\r\n               this.entitySettings.chambers = new Array<Chamber>();\r\n\r\n            this.entities = this.entitySettings.chambers;\r\n            break;\r\n         case \"ODF\":\r\n\r\n            if (this.entitySettings.odfs == null)\r\n               this.entitySettings.odfs = new Array<ODF>();\r\n\r\n            this.entities = this.entitySettings.odfs;\r\n            break;\r\n         case \"Pole\":\r\n\r\n            if (this.entitySettings.poles == null)\r\n               this.entitySettings.poles = new Array<Pole>();\r\n\r\n            this.entities = this.entitySettings.poles;\r\n            break;\r\n         case \"SpliceClosure\":\r\n\r\n            if (this.entitySettings.spliceClosures == null)\r\n               this.entitySettings.spliceClosures = new Array<SpliceClosure>();\r\n\r\n            this.entities = this.entitySettings.spliceClosures;\r\n            break;\r\n         case \"Splitter\":\r\n\r\n            if (this.entitySettings.splitters == null)\r\n               this.entitySettings.splitters = new Array<Splitter>();\r\n\r\n            this.entities = this.entitySettings.splitters;\r\n            break;\r\n         case \"Pop\":\r\n\r\n            if (this.entitySettings.pops == null)\r\n               this.entitySettings.pops = new Array<PoP>();\r\n\r\n            this.entities = this.entitySettings.pops;\r\n            break;\r\n      }\r\n   }\r\n   loadMasterEntities(entityType: string) {\r\n\r\n      let masterSvc = null;\r\n\r\n      switch (entityType) {\r\n         case \"Chamber\":\r\n            masterSvc = this.chamberService.getChambers();\r\n            break;\r\n         case \"ODF\":\r\n            masterSvc = this.odfService.getODFs();\r\n            break;\r\n         case \"Pole\":\r\n            masterSvc = this.poleService.getPoles();\r\n            break;\r\n         case \"SpliceClosure\":\r\n            masterSvc = this.spliceClosureService.getSpliceClosures();\r\n            break;\r\n         case \"Splitter\":\r\n            masterSvc = this.splitterService.getSplitters();\r\n            break;\r\n         case \"Pop\":\r\n            masterSvc = this.splitterService.getSplitters();\r\n            break;\r\n         default:\r\n            masterSvc = this.splitterService.getSplitters();\r\n            break;\r\n      }\r\n      this.Flag = entityType;\r\n      masterSvc.subscribe(\r\n         resp => {\r\n            this.masterEntities = null;\r\n            if (resp.data != null && resp.data.length > 0) {\r\n               this.masterEntities = resp.data;\r\n            }\r\n         },\r\n         (err) => {\r\n            this.masterEntities = new Array<Chamber>();\r\n         });\r\n   }\r\n   PlotPostEntities() {\r\n      let ent = this.selectedEntity;\r\n      let SelectedValue = null;\r\n      SelectedValue = $('#designEntity').val();\r\n      if (SelectedValue != 0) {\r\n         let getdata = $.grep(this.masterEntities, function (l) {\r\n            return l.id == SelectedValue;\r\n         })\r\n         let ent = this.selectedEntity;\r\n         let seg = this.design.bluePrint.children[0].segments;\r\n         let mapEntitiesHelper = new MapEntitiesHelper(this.map);\r\n         if (seg) {\r\n            if (this.Flag == 'Splitter') {\r\n               if (seg[0].splitters == null) {\r\n                  seg[0].splitters = new Array<Splitter>();\r\n\r\n                  let splitters = new Splitter();\r\n                  splitters.entityType = \"Splitter\";\r\n                  splitters.id = Helper.generateObjectId();\r\n                  splitters.code = this.entitiesHelper.generatedCodes('Splitter');\r\n                  splitters.name = splitters.code;\r\n                  splitters.parentId = ent.id;\r\n                  splitters.parentEntityType = ent.entityType;\r\n\r\n                  splitters.geometry = new Point([ent.geometry.coordinates[0], ent.geometry.coordinates[1]]);\r\n\r\n                  var marker = mapEntitiesHelper.drawPoint(splitters, { url: \"images/map-entities/spliceclosure.png\", anchor: new google.maps.Point(10, 10) }, true, true);\r\n\r\n                  splitters.suppliers = new Array<Supplier>();\r\n                  splitters.suppliers.push(getdata.suppliers);\r\n\r\n                  seg[0].splitters.push(splitters);\r\n\r\n                  GMapsHelper.addListener(marker, 'click', (event) => {\r\n\r\n                     this.selectedEntity = marker.data;\r\n                  });\r\n                  this.isEditable(true, marker);\r\n               }\r\n               else {\r\n\r\n                  let splitters = _.cloneDeep(seg[0].splitters[0]);\r\n\r\n                  var k = false;\r\n                  if (this.SplitterIncrementalID == 0) {\r\n                     for (var i = seg[0].splitters.length - 1; i >= 0; i--) {\r\n                        //seg[0].splitters[20].code\r\n                        if (seg[0].splitters[i].code != undefined || seg[0].splitters[i].code != null) {\r\n                           var ID2 = seg[0].splitters[i].code;\r\n                           var ID3 = ID2.toString();\r\n                           var ID4 = ID3.split('_');\r\n                           this.SplitterIncrementalID = parseInt(ID4[1]) + 1;\r\n                           k = true;\r\n                           break;\r\n                        } else {\r\n                           continue;\r\n                        }\r\n\r\n                     }\r\n                  } else {\r\n                     this.SplitterIncrementalID = this.SplitterIncrementalID + 1;\r\n                  }\r\n\r\n                  splitters.id = Helper.generateObjectId();\r\n                  splitters.code = 'Splitter_' + this.SplitterIncrementalID;\r\n                  splitters.name = 'Splitters_' + this.SplitterIncrementalID;\r\n\r\n                  splitters.parentId = ent.id;\r\n                  splitters.parentEntityType = ent.entityType;\r\n                  //newPole.name = newPole.code;\r\n                  splitters.geometry = new Point([ent.geometry.coordinates[0], ent.geometry.coordinates[1]]);\r\n\r\n                  var marker = mapEntitiesHelper.drawPoint(splitters, { url: \"images/map-entities/splitter.png\", anchor: new google.maps.Point(10, 10) }, true, true);\r\n\r\n                  seg[0].splitters.push(splitters);\r\n                  splitters.suppliers = new Array<Supplier>();\r\n                  splitters.suppliers.push(getdata.suppliers);\r\n\r\n                  seg[0].splitters.push(splitters);\r\n                  GMapsHelper.addListener(marker, 'click', (event) => {\r\n\r\n                     this.selectedEntity = marker.data;\r\n                  });\r\n                  this.isEditable(true, marker);\r\n               }\r\n            }\r\n            if (this.Flag == 'SpliceClosure') {\r\n               if (seg) {\r\n                  if (seg[0].spliceClosures == null) {\r\n                     seg[0].spliceClosures = new Array<SpliceClosure>();\r\n\r\n                     let spliceclosures = new SpliceClosure();\r\n                     spliceclosures.entityType = \"SpliceClosure\";\r\n                     spliceclosures.id = Helper.generateObjectId();\r\n                     var Uid = spliceclosures.id.toString();\r\n                     spliceclosures.code = this.entitiesHelper.generatedCodes('SpliceClosure');\r\n                     spliceclosures.name = spliceclosures.code;\r\n                     spliceclosures.parentId = ent.id;\r\n                     spliceclosures.parentEntityType = ent.entityType;\r\n                     spliceclosures.geometry = new Point([ent.geometry.coordinates[0], ent.geometry.coordinates[1]]);\r\n\r\n                     var marker = mapEntitiesHelper.drawPoint(spliceclosures, { url: \"images/map-entities/spliceclosure.png\", anchor: new google.maps.Point(10, 10) }, true, true);\r\n\r\n                     spliceclosures.suppliers = new Array<Supplier>();\r\n                     spliceclosures.suppliers.push(getdata.suppliers);\r\n\r\n                     seg[0].spliceClosures.push(spliceclosures);\r\n\r\n                     GMapsHelper.addListener(marker, 'click', (event) => {\r\n\r\n                        this.selectedEntity = marker.data;\r\n                     });\r\n                     this.isEditable(true, marker);\r\n                  }\r\n                  else {\r\n\r\n                     let spliceClosure = _.cloneDeep(seg[0].spliceClosures[0]);\r\n                     var k = false;\r\n                     if (this.SpliceClosureIncrementalID == 0) {\r\n                        for (var i = seg[0].spliceClosures.length - 1; i >= 0; i--) {\r\n                           if (seg[0].spliceClosures[i].code != undefined || seg[0].spliceClosures[i].code != null) {\r\n                              var ID2 = seg[0].spliceClosures[i].code;\r\n                              var ID3 = ID2.toString();\r\n                              var ID4 = ID3.split('_');\r\n                              this.SpliceClosureIncrementalID = parseInt(ID4[1]) + 1;\r\n                              k = true;\r\n                              break;\r\n                           } else {\r\n                              continue;\r\n                           }\r\n\r\n                        }\r\n                     }\r\n                     else {\r\n                        this.SpliceClosureIncrementalID = this.SpliceClosureIncrementalID + 1;\r\n                     }\r\n\r\n\r\n                     spliceClosure.id = Helper.generateObjectId();\r\n                     spliceClosure.code = 'SpliceClosure_' + this.SpliceClosureIncrementalID;\r\n                     spliceClosure.name = 'SpliceClosure_' + this.SpliceClosureIncrementalID;\r\n                     spliceClosure.parentId = ent.id;\r\n                     spliceClosure.parentEntityType = ent.entityType;\r\n                     spliceClosure.geometry = new Point([ent.geometry.coordinates[0], ent.geometry.coordinates[1]]);\r\n\r\n                     var marker = mapEntitiesHelper.drawPoint(spliceClosure, { url: \"images/map-entities/spliceclosure.png\", anchor: new google.maps.Point(10, 10) }, true, true);\r\n                     spliceClosure.suppliers = new Array<Supplier>();\r\n                     spliceClosure.suppliers.push(getdata.suppliers);\r\n\r\n                     //seg[0].spliceClosures.push(spliceClosure);\r\n                     seg[0].spliceClosures.push(spliceClosure);\r\n\r\n\r\n                     GMapsHelper.addListener(marker, 'click', (event) => {\r\n\r\n                        this.selectedEntity = marker.data;\r\n                     });\r\n                     this.isEditable(true, marker);\r\n                  }\r\n\r\n               }\r\n            }\r\n            if (this.Flag == 'odf') {\r\n               if (seg) {\r\n                  if (seg[0].odfs == null) {\r\n                     seg[0].odfs = new Array<ODF>();\r\n\r\n                     let odf = new ODF();\r\n                     odf.entityType = \"ODF\";\r\n                     odf.id = Helper.generateObjectId();\r\n                     var Uid = odf.id.toString();\r\n                     odf.code = this.entitiesHelper.generatedCodes('Odf');\r\n                     odf.name = odf.code;\r\n                     odf.parentId = ent.id;\r\n                     odf.parentEntityType = ent.entityType;\r\n                     odf.geometry = new Point([ent.geometry.coordinates[0], ent.geometry.coordinates[1]]);\r\n\r\n                     var marker = mapEntitiesHelper.drawPoint(odf, { url: \"images/map-entities/odf.png\", anchor: new google.maps.Point(10, 10) }, true, true);\r\n                     odf.suppliers = new Array<Supplier>();\r\n                     odf.suppliers.push(getdata.suppliers);\r\n\r\n                     seg[0].odfs.push(odf);\r\n\r\n                     GMapsHelper.addListener(marker, 'click', (event) => {\r\n\r\n                        this.selectedEntity = marker.data;\r\n                     });\r\n                     this.isEditable(true, marker);\r\n                  }\r\n                  else {\r\n\r\n                     let odfss = _.cloneDeep(seg[0].odfs[0]);\r\n                     var odfssLength = seg[0].odfs.length + 1;\r\n                     var k = false;\r\n                     if (this.OdfIncrementalID == 0) {\r\n                        for (var i = seg[0].odfs.length - 1; i >= 0; i--) {\r\n                           //seg[0].splitters[20].code\r\n                           if (seg[0].odfs[i].code != undefined || seg[0].odfs[i].code != null) {\r\n                              var ID2 = seg[0].odfs[i].code;\r\n                              var ID3 = ID2.toString();\r\n                              var ID4 = ID3.split('_');\r\n                              this.OdfIncrementalID = parseInt(ID4[1]) + 1;\r\n                              break;\r\n                           } else {\r\n                              continue;\r\n                           }\r\n\r\n                        }\r\n                     }\r\n                     else {\r\n                        this.OdfIncrementalID = this.OdfIncrementalID + 1;\r\n                     }\r\n\r\n\r\n\r\n                     odfss.id = Helper.generateObjectId();\r\n                     odfss.code = 'Odf_' + this.OdfIncrementalID;\r\n                     odfss.name = 'Odf_' + this.OdfIncrementalID;\r\n                     odfss.geometry = new Point([ent.geometry.coordinates[0], ent.geometry.coordinates[1]]);\r\n                     odfss.parentId = ent.id;\r\n                     odfss.parentEntityType = ent.entityType;\r\n                     var marker = mapEntitiesHelper.drawPoint(odfss, { url: \"images/map-entities/odf.png\", anchor: new google.maps.Point(10, 10) }, true, true);\r\n                     odfss.suppliers = new Array<Supplier>();\r\n                     odfss.suppliers.push(getdata.suppliers);\r\n                     seg[0].odfs.push(odfss);\r\n                     GMapsHelper.addListener(marker, 'click', (event) => {\r\n\r\n                        this.selectedEntity = marker.data;\r\n                     });\r\n                     this.isEditable(true, marker);\r\n                  }\r\n\r\n               }\r\n            }\r\n            if (this.Flag == 'Chamber') {\r\n\r\n               let supplier = new Supplier();\r\n               supplier.currency = getdata[0].currency;\r\n               supplier.name = getdata[0].name;\r\n               supplier.stockQty = getdata[0].stockQty;\r\n               supplier.price = getdata[0].price;\r\n               supplier.validFrom = getdata[0].validFrom;\r\n               supplier.validTo = getdata[0].validTo;\r\n\r\n               this.chamber.suppliers = new Array<Supplier>();\r\n               //seg[0].chambers = new Array<Chamber>();\r\n               //this.chamber.suppliers = new Array<Supplier>();\r\n               this.chamber.suppliers.push(supplier);\r\n\r\n               seg[0].chambers.push(this.chamber);\r\n\r\n\r\n            }\r\n            if (this.Flag == 'Pole') {\r\n               let supplier = new Supplier();\r\n               supplier.currency = getdata[0].currency;\r\n               supplier.name = getdata[0].name;\r\n               supplier.stockQty = getdata[0].stockQty;\r\n               supplier.price = getdata[0].price;\r\n               supplier.validFrom = getdata[0].validFrom;\r\n               supplier.validTo = getdata[0].validTo;\r\n\r\n               this.poles.suppliers = new Array<Supplier>();\r\n               this.poles.suppliers.push(supplier);\r\n               seg[0].poles.push(this.poles);\r\n            }\r\n            $(\"#exampleModalCenter\").modal(\"hide\");\r\n         }\r\n      }\r\n      else {\r\n         this.helper.showAlertMessage(\"Please select template\", \"error\");\r\n      }\r\n   }\r\n   ClearEntities() {\r\n      if (this.DeleteFlag == null) {\r\n         this.mapEntitiesHelper.removeMapObjects(this.CurrentselectedEntity);\r\n      }\r\n\r\n   }\r\n\r\n}\r\n","import { Component, Input, OnInit, SimpleChanges, OnChanges } from '@angular/core';\r\nimport { Design, NetworkSetting, NodeSettings, Cabling } from '../models/design';\r\nimport { Helper } from '../../common/helper';\r\n\r\n@Component({\r\n    selector: 'dzn-networkSettings',\r\n    templateUrl: './dzn-networkSettings.html'\r\n})\r\nexport class DesignNetworkSettings implements OnInit, OnChanges{\r\n\r\n    hierarchyName: string;\r\n    selectedSetting: NetworkSetting = new NetworkSetting();\r\n\r\n    @Input() public design: Design = new Design();\r\n    @Input() public allDesigns: Design[] = new Array<Design>();\r\n\r\n    constructor(private helper: Helper) { }\r\n\r\n    ngOnInit() {\r\n       this.hierarchyName = \"\";\r\n\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n       if (this.design.networkSettings && this.design.networkSettings.length > 0) {\r\n          this.selectedSetting = this.design.networkSettings[0];\r\n          //this.ngOnInit();\r\n       }\r\n            \r\n    }\r\n\r\n    addHierarchy() {\r\n\r\n        if (this.design.networkSettings == null)\r\n            this.design.networkSettings = [];\r\n\r\n        if (this.hierarchyName == null || this.hierarchyName.trim() == \"\") {\r\n            this.helper.showAlertMessage(\"Please provide hierarchy name.\", \"info\");\r\n            return;\r\n        }\r\n\r\n        var index = this.design.networkSettings.findIndex(x => x.name == this.hierarchyName.trim());\r\n\r\n        if (index >= 0) {\r\n            this.helper.showAlertMessage(\"hierarchy name already exist.\", \"info\");\r\n            return;\r\n        }\r\n\r\n        var networkSetting = {\r\n            id: Helper.generateObjectId(),\r\n            name: this.hierarchyName,\r\n            position: this.design.networkSettings.length,\r\n            startNode: new NodeSettings(),\r\n            destinationNode: new NodeSettings(),\r\n            cabling: new Cabling()\r\n        };\r\n\r\n        if (this.design.designType == \"FTTx\") {\r\n            this.design.networkSettings.push(networkSetting);\r\n        }\r\n        else {\r\n            networkSetting.startNode = null;\r\n            networkSetting.destinationNode = null;\r\n            networkSetting['fdpNode'] = new NodeSettings();\r\n\r\n            if (this.design.networkSettings.length == 0) {\r\n                this.design.networkSettings.push(networkSetting);\r\n            }\r\n        }\r\n\r\n        this.hierarchyName = '';\r\n    }\r\n\r\n    deleteHierarchy(index: number) {\r\n        this.design.networkSettings.splice(index, 1);\r\n    }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { Design, SpliceClosureSettings } from '../models/design';\r\nimport { SpliceClosure } from '../../entities/models/spliceClosure';\r\nimport { SpliceClosureService } from '../../entities/services/spliceClosure.service';\r\n\r\n@Component({\r\n    selector: 'dzn-spliceClosure',\r\n    templateUrl: './dzn-spliceClosure.html'\r\n})\r\nexport class DesignSpliceClosure implements OnInit{\r\n\r\n    @Input() public spliceClosureSettings: SpliceClosureSettings = new SpliceClosureSettings();\r\n    @Input() public allDesigns: Design[] = new Array<Design>();\r\n\r\n    spliceClosuresMaster: SpliceClosure[] = new Array<SpliceClosure>();\r\n    statusMessage: string;\r\n    selectedSpliceClosure: SpliceClosure;\r\n    selectedDesign: Design;\r\n\r\n    constructor(private spliceClosureService: SpliceClosureService,) { }\r\n\r\n    ngOnInit() {\r\n        this.getSpliceClosuresMaster();\r\n    }\r\n\r\n    getSpliceClosuresMaster() {\r\n\r\n        //this.spliceClosureSettings.spliceClosures = null;\r\n\r\n        this.spliceClosureService.getSpliceClosures().subscribe(\r\n            resp => {\r\n                this.spliceClosuresMaster = null;\r\n                if (resp.status.toLowerCase() == \"error\") {\r\n                    this.statusMessage = resp.message;\r\n                }\r\n                else {\r\n                    if (resp.data != null && resp.data.length > 0) {\r\n                        this.spliceClosuresMaster = resp.data;\r\n                    }\r\n                    else {\r\n                        this.statusMessage = \"There are no registered spliceClosures.\";\r\n                    }\r\n                }\r\n            },\r\n            (err) => {\r\n                this.spliceClosuresMaster = null;\r\n                this.statusMessage = \"Error fetching spliceClosures.\";\r\n            });\r\n    }\r\n\r\n    //fileChangeEvent(event: any) {\r\n    //    var files = event.target.files;\r\n\r\n    //    this.populateDummyData();\r\n    //}\r\n\r\n    addSpliceClosure() {\r\n        if (this.spliceClosureSettings.spliceClosures == null)\r\n            this.spliceClosureSettings.spliceClosures = new Array<SpliceClosure>();\r\n\r\n        var index = this.spliceClosureSettings.spliceClosures.findIndex(x => x.id == this.selectedSpliceClosure.id);\r\n\r\n        if (index == -1) {\r\n            this.spliceClosureSettings.spliceClosures.push(this.selectedSpliceClosure);\r\n            this.selectedSpliceClosure = null;\r\n        }\r\n    }\r\n\r\n    removeSpliceClosure(index: number) {\r\n        this.spliceClosureSettings.spliceClosures.splice(index, 1);\r\n    }\r\n\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatSelectModule, MatCheckboxModule, MatRadioModule } from '@angular/material';\r\nimport { SharedModule } from '../shared.module';\r\n\r\nimport { DesignRouting } from './design.routes';\r\nimport { DesignList } from './views/design-list';\r\nimport { DesignDetails } from './views/design-details';\r\nimport { DesignService } from './services/design.service';\r\nimport { UserService } from '../users/services/user.service';\r\nimport { SplitterService } from '../entities/services/splitter.service';\r\n\r\nimport { DesignInfo } from './components/dzn-info';\r\nimport { DesignHelper } from './services/design.helper';\r\nimport { DesignDocuments } from './components/dzn-documents';\r\nimport { DesignClusters } from './components/dzn-clusters';\r\nimport { DesignBookingIds } from './components/dzn-bookingIds';\r\nimport { DesignNetworkSettings } from './components/dzn-networkSettings';\r\nimport { DesignEntities } from './components/dzn-entities';\r\nimport { CableService } from '../entities/services/cable.service';\r\nimport { ChamberService } from '../entities/services/chamber.service';\r\nimport { DuctService } from '../entities/services/duct.service';\r\nimport { ODFService } from '../entities/services/odf.service';\r\nimport { PoleService } from '../entities/services/pole.service';\r\nimport { SpliceClosureService } from '../entities/services/spliceClosure.service';\r\nimport { AccessoryService } from '../accessories/services/accessory.service';\r\nimport { CivilworkService } from '../civilworks/services/civilwork.service';\r\nimport { DesignAccessories } from './components/dzn-accessories';\r\nimport { DesignCivilwork } from './components/dzn-civilworks';\r\nimport { DesignDuct } from './components/dzn-duct';\r\nimport { DesignCable } from './components/dzn-cable';\r\nimport { DesignSpliceClosure } from './components/dzn-spliceClosure';\r\nimport { DesignCosting } from './components/dzn-costing';\r\nimport { DesignMap } from './components/dzn-map';\r\nimport { DesignBOM } from './components/dzn-bom';\r\nimport { DesignFPDs } from './components/dzn-fdp';\r\nimport { BomHelper } from './services/bom.helper';\r\nimport { FTTxHelper } from './services/fttx.helper';\r\nimport { BackboneHelper } from './services/backbone.helper';\r\nimport { fdtService } from '../entities/services/fdt.service';\r\nimport { fatService } from '../entities/services/fat.service';\r\nimport { PopService } from '../entities/services/pop.service';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        MatCheckboxModule,\r\n        MatRadioModule,\r\n        MatSelectModule,\r\n        SharedModule,\r\n        DesignRouting\r\n    ],\r\n    declarations: [\r\n        DesignList,\r\n        DesignDetails,\r\n        DesignInfo,\r\n        DesignDocuments,\r\n        DesignClusters,\r\n        DesignBookingIds,\r\n        DesignNetworkSettings,\r\n        DesignEntities,\r\n        DesignFPDs,\r\n        DesignAccessories,\r\n        DesignCivilwork,\r\n        DesignDuct,\r\n        DesignCable,\r\n        DesignSpliceClosure,\r\n        DesignCosting,\r\n        DesignMap,\r\n        DesignBOM\r\n\r\n    ],\r\n    providers: [\r\n        DesignService,\r\n        DesignHelper,\r\n        BomHelper,\r\n        FTTxHelper,\r\n        BackboneHelper,\r\n        UserService,\r\n        CableService,\r\n        ChamberService,\r\n        DuctService,\r\n        ODFService,\r\n        PoleService,\r\n        SpliceClosureService,\r\n        SplitterService,\r\n        AccessoryService,\r\n       CivilworkService, fdtService, fatService, PopService\r\n    ]\r\n})\r\nexport class DesignModule { }\r\n","import { ModuleWithProviders } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { DesignList } from './views/design-list';\r\nimport { DesignDetails } from './views/design-details';\r\n\r\nexport const designRoutes: Routes = [\r\n   {\r\n      path: 'designs',\r\n      children: [\r\n         { path: '', component: DesignList },\r\n         { path: 'details', component: DesignDetails },\r\n         { path: 'details/:id', component: DesignDetails },\r\n      ]\r\n   },\r\n];\r\n\r\nexport const DesignRouting: ModuleWithProviders = RouterModule.forChild(designRoutes);\r\n","import { DbBaseEntity } from '../../common/models/dbBaseEntity';\r\nimport { Document } from '../../common/models/document';\r\nimport { BookingId } from '../../common/models/bookingId';\r\nimport { Cable } from '../../entities/models/cable';\r\nimport { Chamber } from '../../entities/models/chamber';\r\nimport { Duct } from '../../entities/models/duct';\r\nimport { Pole } from '../../entities/models/pole';\r\nimport { SpliceClosure } from '../../entities/models/spliceClosure';\r\nimport { Splitter } from '../../entities/models/splitter';\r\nimport { Accessory } from '../../accessories/models/accessory';\r\nimport { Civilwork } from '../../civilworks/models/civilwork';\r\n\r\nimport { GeoNode } from '../../common/geo/geoNode';\r\nimport { ODF } from '../../entities/models/odf';\r\nimport { FDP } from '../../entities/models/fdp';\r\nimport { Homepass } from '../../homepasses/models/homepass';\r\nimport { PoP } from '../../entities/models/pop';\r\n\r\nexport class Design extends DbBaseEntity {\r\n    referenceId: string;\r\n    name: string;\r\n    code: string;\r\n    description: string;\r\n    designType: string;\r\n    assignedTo: string;\r\n    version: number = 1;\r\n    documents: Document[] = new Array<Document>();\r\n    clusterId: string;\r\n    homepasses: Homepass[]; \r\n    bookingIds: BookingId[] = new Array<BookingId>();\r\n    networkSettings: NetworkSetting[] = new Array<NetworkSetting>();\r\n    log: string = \"\";\r\n    bluePrint?: GeoNode;\r\n    boq: Costing[];\r\n\r\n    generatedCodes: CodeId[];\r\n\r\n}\r\n\r\nexport class NetworkSetting {\r\n    id: string;\r\n    name: string;\r\n    position: number;\r\n    startNode: NodeSettings = new NodeSettings();\r\n    destinationNode: NodeSettings = new NodeSettings();\r\n    fdpNode?: NodeSettings = new NodeSettings();\r\n    cabling: Cabling = new Cabling();\r\n}\r\n\r\nexport class NodeSettings {\r\n    entitySettings: EntitySettings = new EntitySettings();\r\n    fdpSettings?: FDPSettings = new FDPSettings();\r\n    accessorySettings: AccessorySettings = new AccessorySettings();\r\n    civilworkSettings: CivilworkSettings = new CivilworkSettings();\r\n    ductSettings: DuctSettings = new DuctSettings();\r\n    equipmentSettings: EquipmentSettings = new EquipmentSettings();\r\n    fiberDrop: number;\r\n}\r\n\r\nexport class EntitySettings {\r\n    entityName: string = \"\";\r\n    dataSource: string = \"automatic\";\r\n    existingDesignId?: string;\r\n    importedFile?: string;\r\n    chambers: Chamber[] = new Array<Chamber>();\r\n    odfs: ODF[] = new Array<ODF>();\r\n    poles: Pole[] = new Array<Pole>();\r\n    spliceClosures: SpliceClosure[] = new Array<SpliceClosure>();\r\n    splitters: Splitter[] = new Array<Splitter>();\r\n    pops: PoP[] = new Array<PoP>();\r\n}\r\n\r\nexport class FDPSettings {\r\n    dataSource: string = \"import\";\r\n    existingDesignId?: string;\r\n    importedFile?: string;\r\n    fdps: FDP[] = new Array<FDP>();\r\n    aggregateFdps: FDP[] = new Array<FDP>();\r\n}\r\n\r\nexport class AccessorySettings {\r\n    entityName: string = \"\";\r\n    dataSource: string = \"automatic\";\r\n    //existingDesignId?: string;\r\n    //importedFile?: string;\r\n    accessories?: Accessory[] = new Array<Accessory>();\r\n    existingAccessories?: Accessory[] = new Array<Accessory>();\r\n}\r\n\r\nexport class CivilworkSettings {\r\n    civilworks: Civilwork[] = new Array<Civilwork>();\r\n}\r\n\r\nexport class DuctSettings {\r\n    ducts: Duct[] = new Array<Duct>();\r\n}\r\n\r\nexport class EquipmentSettings {\r\n    entityName: string = \"\";\r\n    dataSource: string = \"\";\r\n    equipments: string[] = new Array<string>();\r\n}\r\n\r\nexport class Cabling {\r\n    cableSettings: CableSettings = new CableSettings();\r\n    spliceClosureSettings: SpliceClosureSettings = new SpliceClosureSettings();\r\n    accessorySettings: AccessorySettings = new AccessorySettings();\r\n    ductSettings: DuctSettings = new DuctSettings();\r\n}\r\n\r\nexport class CableSettings {\r\n    entityName: string = \"Cable\";\r\n    cableType: string;\r\n    dataSource: string = \"\";\r\n    cables: Cable[] = new Array<Cable>();\r\n    pole: Pole = new Pole();\r\n    chamber: Chamber = new Chamber();\r\n    chamberInterval: number;\r\n    cableLoop: number;\r\n    loopInterval: number;\r\n    loopAtClosure: number;\r\n    connectionPercent: number = 100;\r\n}\r\n\r\nexport class SpliceClosureSettings {\r\n    entityName: string = \"\";\r\n    dataSource: string = \"\";\r\n    spliceClosures: SpliceClosure[] = new Array<SpliceClosure>();;\r\n    straightJoin: boolean;\r\n    drumLength: number;\r\n    intersectionJoints: boolean;\r\n}\r\n\r\nexport class CodeId {\r\n    entityType: string;\r\n    maxId: number;\r\n}\r\n\r\nexport class Costing {\r\n    levelName: string;\r\n    level: number;\r\n    entityType: string;\r\n    code: string;\r\n    description: string;\r\n    units: string;\r\n    quantity: number = 0;\r\n    materialCost: number = 0;\r\n    serviceCost: number = 0;\r\n    currency: string;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Design, CableSettings } from '../models/design';\r\nimport { HomepassService } from '../../homepasses/services/homepass.service';\r\nimport { Helper } from '../../common/helper';\r\nimport { GeoNode, Segment } from '../../common/geo/geoNode';\r\nimport { Homepass } from '../../homepasses/models/homepass';\r\nimport { HttpParams, HttpClient } from '@angular/common/http';\r\nimport { ServiceResponse } from '../../common/models/serviceResponse';\r\nimport { Splitter } from '../../entities/models/splitter';\r\nimport { GeoHelper } from '../../common/geo/geoHelper';\r\nimport { AppConfig } from '../../app.config';\r\nimport { Cable } from '../../entities/models/cable';\r\nimport { EntitiesHelper } from './entities.helper';\r\n\r\ndeclare var $: any;\r\n\r\n@Injectable()\r\nexport class BackboneHelper {\r\n\r\n   private design: Design;\r\n   private entitiesHelper: EntitiesHelper;\r\n\r\n   constructor(\r\n      private httpClient: HttpClient,\r\n      private appConfig: AppConfig,\r\n      private homepassService: HomepassService,\r\n      private helper: Helper) { }\r\n\r\n   async generateBackboneDesign(design: Design) {\r\n\r\n      this.design = design;\r\n      this.entitiesHelper = new EntitiesHelper(design.bookingIds, design.generatedCodes);\r\n\r\n      let status = false;\r\n\r\n      try {\r\n\r\n         this.helper.log(this.design, \"Information\", \"Generating Backbone design...\");\r\n\r\n         if (this.design.networkSettings[0] == null)\r\n            throw new Error('No FDTs available to process...');\r\n\r\n         let fdps = this.design.networkSettings[0].fdpNode.fdpSettings.fdps;\r\n\r\n         let geoNodes = new Array<GeoNode>();\r\n         let level = this.design.networkSettings.length + 1;\r\n\r\n         fdps.forEach(x => {\r\n            geoNodes.push({ id: x.id, level: level, levelName: \"fdps\", coordinates: x.geometry.coordinates, connections: 1 });\r\n         });\r\n\r\n         for (let index = this.design.networkSettings.length - 1; index >= 0; index--) {\r\n\r\n            let splitters = this.getSplitters(index);\r\n\r\n            if (splitters == null || splitters.length == 0) {\r\n               this.helper.log(this.design, \"Error\", \"Splitters not defined at any of the levels...\");\r\n               throw new Error('No splitters available to process...');\r\n            }\r\n\r\n            //geoNodes = GeoHelper.clustersKmeans(geoNodes, splitterCount, this.design.networkSettings[index].name);\r\n\r\n            geoNodes = await this.createClusters(geoNodes, splitters, index);\r\n\r\n            let cableSettings = this.design.networkSettings[index].cabling.cableSettings;\r\n\r\n            let preferedCable = this.getPreferedCable(cableSettings, geoNodes.length);\r\n\r\n            if (preferedCable == null) {\r\n               this.helper.log(this.design, \"Error\", \"Insufficient Cable Configuration\");\r\n               throw new Error('Insufficient cable configuration');\r\n            }\r\n\r\n            //let levelIndex = index;\r\n\r\n            geoNodes = await this.generateSegments(geoNodes);\r\n\r\n            geoNodes.forEach(x => {\r\n               this.generateSegmentEntities(preferedCable, x.segments, index);\r\n            });\r\n\r\n         }\r\n\r\n         let popCentroid = GeoHelper.center(geoNodes);\r\n\r\n         var designTree = new GeoNode();\r\n         designTree.id = Helper.generateObjectId();\r\n         designTree.levelName = \"pop\";\r\n         designTree.coordinates = popCentroid;\r\n         designTree.connections = 1;\r\n         designTree.children = geoNodes;\r\n\r\n         this.design.bluePrint = designTree;\r\n\r\n         status = true;\r\n\r\n      } catch (e) {\r\n         status = false;\r\n         this.helper.log(this.design, \"Error\", e);\r\n      }\r\n\r\n      $(\"#ajax-loading\").hide();\r\n      return status;\r\n   }\r\n\r\n   getSplitters(level: number): Splitter[] {\r\n\r\n      let splitters = [];\r\n\r\n      for (var i = level; i >= 0; i--) {\r\n\r\n         if (this.design.networkSettings[i].destinationNode.entitySettings.entityName == \"Splitter\") {\r\n            splitters = this.design.networkSettings[i].destinationNode.entitySettings.splitters;\r\n            break;\r\n         }\r\n      }\r\n\r\n      return splitters;\r\n   }\r\n\r\n   async createClusters(geoNodes: GeoNode[], splitters: Splitter[], level: number) {\r\n\r\n      let tempGeoNodes: GeoNode[];\r\n\r\n      this.helper.log(this.design, \"Information\", \"Generating clusters...\");\r\n\r\n      var resp = await this.httpClient.post<ServiceResponse>(this.appConfig.urls.Routeware.SortPoints, { Region: this.appConfig.settings.Region, Nodes: geoNodes }).toPromise();\r\n\r\n      if (resp.status.toLowerCase() == \"error\") {\r\n         this.helper.log(this.design.log, \"Error\", \"Error sorting nodes - \" + resp.message);\r\n         throw Error(\"Error sorting nodes\");\r\n      }\r\n      else {\r\n         if (resp.data != null && resp.data.length > 0) {\r\n\r\n            if (this.design.networkSettings[level].destinationNode.entitySettings.dataSource == 'automatic') {\r\n               tempGeoNodes = this.createAutomaticCluster(resp.data, splitters, level);\r\n            }\r\n            else {\r\n               tempGeoNodes = this.createCluster(resp.data, splitters, level);\r\n            }\r\n         }\r\n         else {\r\n            this.helper.log(this.design.log, \"Error\", \"Nodes not available - \" + resp.message);\r\n            throw Error(\"Nodes not available\");\r\n         }\r\n      }\r\n\r\n      this.helper.log(this.design, \"Information\", \"Sorting homepasses completed\");\r\n\r\n      return tempGeoNodes;\r\n   }\r\n\r\n   createAutomaticCluster(sortedNodes: GeoNode[], splitters: Splitter[], level: number) {\r\n\r\n      var tempClusters = new Array<GeoNode>();\r\n\r\n      let outputPorts = this.getTotalSplitterPorts(splitters);\r\n      let connections = 0;\r\n\r\n      let geoNode = new GeoNode();\r\n      geoNode.id = Helper.generateObjectId();\r\n      geoNode.levelName = this.design.networkSettings[level].name;\r\n      geoNode.level = level;\r\n      geoNode.coordinates = null;\r\n      geoNode.connections = 0;\r\n      geoNode.children = new Array<GeoNode>();\r\n\r\n      sortedNodes.forEach(x => {\r\n\r\n         if ((outputPorts - connections) <= 0) {\r\n\r\n            geoNode.coordinates = GeoHelper.center(geoNode.children);\r\n            geoNode.children.push({\r\n               id: geoNode.id,\r\n               connections: 0,\r\n               children: null,\r\n               coordinates: geoNode.coordinates,\r\n               level: geoNode.level,\r\n               segments: null\r\n            });\r\n\r\n            tempClusters.push(geoNode);\r\n\r\n            geoNode = new GeoNode();\r\n            connections = 0;\r\n\r\n            geoNode.id = Helper.generateObjectId();\r\n            geoNode.levelName = this.design.networkSettings[level].name;\r\n            geoNode.level = level;\r\n            geoNode.coordinates = null;\r\n\r\n            if (geoNode.children == null)\r\n               geoNode.children = new Array<GeoNode>();\r\n\r\n         }\r\n\r\n         geoNode.children.push(x);\r\n         connections += x.connections;\r\n         geoNode.connections = connections;\r\n\r\n      });\r\n\r\n      if (geoNode.children.length > 0) {\r\n         geoNode.coordinates = GeoHelper.center(geoNode.children);\r\n         geoNode.children.push({\r\n            id: geoNode.id,\r\n            connections: 0,\r\n            children: null,\r\n            coordinates: geoNode.coordinates,\r\n            level: geoNode.level,\r\n            segments: null\r\n         });\r\n         tempClusters.push(geoNode);\r\n      }\r\n\r\n      return tempClusters;\r\n   }\r\n\r\n   createCluster(sortedNodes: GeoNode[], splitters: Splitter[], level: number) {\r\n\r\n      var tempClusters = new Array<GeoNode>();\r\n\r\n      return tempClusters;\r\n   }\r\n\r\n   getTotalSplitterPorts(splitters: Splitter[]): number {\r\n\r\n      let outputPorts = 0;\r\n\r\n      splitters.forEach(x => {\r\n         outputPorts += parseInt(x.splitterRatio.split(\":\")[1])\r\n      });\r\n\r\n      return outputPorts;\r\n   }\r\n\r\n   getPreferedCable(cableSettings: CableSettings, splitterCount: number): Cable {\r\n\r\n      let cable = null;\r\n\r\n      if (cableSettings.cables && cableSettings.cables.length > 0) {\r\n         for (var i = 0; i < cableSettings.cables.length; i++) {\r\n            let availableConn = cableSettings.cables[i].corePerTube * cableSettings.cables[i].noOfTubes;\r\n\r\n            if (splitterCount < availableConn) {\r\n               cable = cableSettings.cables[i];\r\n               break;\r\n            }\r\n         }\r\n      }\r\n\r\n      return cable;\r\n   }\r\n\r\n   async generateSegments(geoNodes: GeoNode[]) {\r\n\r\n      let tempNodes = new Array<GeoNode>();\r\n\r\n      this.helper.log(this.design, \"Information\", \"Generating segment information...\");\r\n\r\n      var resp = await this.httpClient.post<ServiceResponse>(this.appConfig.urls.Routeware.GenerateMSTRecursive, { Region: this.appConfig.settings.Region, Nodes: geoNodes }).toPromise();\r\n\r\n      if (resp.status.toLowerCase() == \"error\") {\r\n         this.helper.log(this.design.log, \"Error\", \"Error generating segments - \" + resp.message);\r\n         throw new Error('Error generating segments..');\r\n      }\r\n      else {\r\n         if (resp.data != null && resp.data.length > 0) {\r\n            tempNodes = resp.data;\r\n         }\r\n      }\r\n\r\n      this.helper.log(this.design, \"Information\", \"Generating segment information completed\");\r\n\r\n      return tempNodes;\r\n   }\r\n\r\n   generateSegmentEntities(preferedCable: Cable, segments: Segment[], level: number) {\r\n\r\n      if (segments && segments.length > 0) {\r\n         segments.forEach(segment => {\r\n\r\n            let cableType = this.design.networkSettings[level].cabling.cableSettings.cableType;\r\n            let prefChamber = this.design.networkSettings[level].cabling.cableSettings.chamber;\r\n            let prefPole = this.design.networkSettings[level].cabling.cableSettings.pole;\r\n            let chamberInterval = this.design.networkSettings[level].cabling.cableSettings.chamberInterval;\r\n\r\n            let loopLength = this.design.networkSettings[level].cabling.cableSettings.cableLoop;\r\n            let loopEnd = this.design.networkSettings[level].cabling.cableSettings.loopAtClosure;\r\n\r\n            segment.id = Helper.generateObjectId();\r\n\r\n            //1. generate Cables\r\n            segment.cable = this.entitiesHelper.createCable(preferedCable, segment.coordinates);\r\n\r\n            //2. Generate Poles/Chambers\r\n            if (cableType.toLowerCase() == \"underground\") {\r\n               segment.chambers = this.entitiesHelper.createChambers(prefChamber, chamberInterval, segment, loopLength, loopEnd);\r\n            }\r\n            else {\r\n               segment.poles = this.entitiesHelper.createPoles(prefPole, chamberInterval, segment, loopLength, loopEnd);\r\n            }\r\n\r\n         });\r\n      }\r\n   }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { GeoNode } from '../../common/geo/geoNode';\r\nimport { Helper } from '../../common/helper';\r\nimport { Costing, Design } from '../models/design';\r\n\r\n@Injectable()\r\nexport class BomHelper {\r\n\r\n    private design: Design = new Design();\r\n\r\n    constructor(\r\n        private helper: Helper) { }\r\n\r\n    generateBOQ(design: Design) {\r\n        this.design = design;\r\n        this.design.boq = new Array<Costing>();\r\n        this.generateBOQRec(design.bluePrint, this.design.boq);\r\n    }\r\n\r\n    generateBOQRec(group: GeoNode, boq: Costing[]) {\r\n\r\n        if (group.segments) {\r\n            group.segments.forEach(x => {\r\n\r\n                //Add Cable Cost\r\n                if (x.cable) {\r\n                    var supplier = x.cable.suppliers.find(s => s.isPrefered == true);\r\n\r\n                    if (supplier) {\r\n                        boq.push({\r\n                            levelName: group.levelName,\r\n                            level: group.level,\r\n                            entityType: 'Cable',\r\n                            code: x.cable.code,\r\n                            units: 'Meters',\r\n                            quantity: x.cable.measuredLength,\r\n                            materialCost: supplier.price,\r\n                           serviceCost: supplier.serviceCost == null ? 0 : supplier.serviceCost,\r\n                            currency: supplier.currency,\r\n                            description: x.cable.name\r\n                        });\r\n                    }\r\n                    else\r\n                        this.helper.log(this.design, \"Error\", \"Supplier not available for cable - \" + x.cable.name);\r\n                }\r\n\r\n                //Add Chambers Cost\r\n                if (x.chambers) {\r\n                    supplier = x.chambers[0].suppliers.find(s => s.isPrefered == true);\r\n\r\n                    if (supplier) {\r\n                        boq.push({\r\n                            levelName: group.levelName,\r\n                            level: group.level,\r\n                            entityType: 'Chamber',\r\n                            code: \"\",\r\n                            units: 'Nos',\r\n                            quantity: x.chambers.length,\r\n                            materialCost: supplier.price,\r\n                           serviceCost: supplier.serviceCost == null ? 0 : supplier.serviceCost,\r\n                            currency: supplier.currency,\r\n                            description: x.chambers[0].name\r\n                        });\r\n                    }\r\n                    else\r\n                        this.helper.log(this.design, \"Error\", \"Supplier not available for Chamber - \" + x.chambers[0].name);\r\n                }\r\n\r\n                //Add Ducts Cost\r\n                if (x.ducts) {\r\n                    supplier = x.ducts.suppliers.find(s => s.isPrefered == true);\r\n\r\n                    if (supplier) {\r\n                        boq.push({\r\n                            levelName: group.levelName,\r\n                            level: group.level,\r\n                            entityType: 'Duct',\r\n                            code: \"\",\r\n                           units: 'meters',\r\n                           quantity: x.ducts.measuredLength,\r\n                            materialCost: supplier.price,\r\n                           serviceCost: supplier.serviceCost == null ? 0 : supplier.serviceCost,\r\n                            currency: supplier.currency,\r\n                            description: x.ducts.name\r\n                        });\r\n                    }\r\n                    else\r\n                        this.helper.log(this.design, \"Error\", \"Supplier not available for Duct - \" + x.ducts.name);\r\n                }\r\n\r\n                //Add ODF Cost\r\n                if (x.odfs) {\r\n                    supplier = x.odfs[0].suppliers.find(s => s.isPrefered == true);\r\n\r\n                    if (supplier) {\r\n                        boq.push({\r\n                            levelName: group.levelName,\r\n                            level: group.level,\r\n                            entityType: 'ODF',\r\n                            code: \"\",\r\n                            units: 'nos',\r\n                            quantity: x.odfs.length,\r\n                            materialCost: supplier.price,\r\n                           serviceCost: supplier.serviceCost == null ? 0 : supplier.serviceCost,\r\n                            currency: supplier.currency,\r\n                            description: x.odfs[0].name\r\n                        });\r\n\r\n                    }\r\n                    else\r\n                        this.helper.log(this.design, \"Error\", \"Supplier not available for ODF - \" + x.odfs[0].name);\r\n                }\r\n\r\n                //Add Poles Cost\r\n                if (x.poles) {\r\n                    supplier = x.poles[0].suppliers.find(s => s.isPrefered == true);\r\n\r\n                    if (supplier) {\r\n                        boq.push({\r\n                            levelName: group.levelName,\r\n                            level: group.level,\r\n                            entityType: 'Pole',\r\n                            code: \"\",\r\n                            units: 'nos',\r\n                            quantity: x.poles.length,\r\n                            materialCost: supplier.price,\r\n                           serviceCost: supplier.serviceCost == null ? 0 : supplier.serviceCost,\r\n                            currency: supplier.currency,\r\n                            description: x.poles[0].name\r\n                        });\r\n                    }\r\n                    else\r\n                        this.helper.log(this.design, \"Error\", \"Supplier not available for Pole - \" + x.poles[0].name);\r\n                }\r\n\r\n                //Add Splitters Cost\r\n               if (x.splitters && x.splitters[0].suppliers) {\r\n                    supplier = x.splitters[0].suppliers.find(s => s.isPrefered == true);\r\n\r\n                    if (supplier) {\r\n                        boq.push({\r\n                            levelName: group.levelName,\r\n                            level: group.level,\r\n                            entityType: 'Splitter',\r\n                            code: \"\",\r\n                            units: 'nos',\r\n                            quantity: x.splitters.length,\r\n                            materialCost: supplier.price,\r\n                           serviceCost: supplier.serviceCost == null ? 0 : supplier.serviceCost,\r\n                            currency: supplier.currency,\r\n                            description: x.splitters[0].name\r\n                        });\r\n                    }\r\n                    else\r\n                        this.helper.log(this.design, \"Error\", \"Supplier not available for Splitter - \" + x.splitters[0].name);\r\n                }\r\n\r\n                //Add Splice Closures Cost\r\n                if (x.spliceClosures) {\r\n                    supplier = x.spliceClosures[0].suppliers.find(s => s.isPrefered == true);\r\n\r\n                    if (supplier) {\r\n                        boq.push({\r\n                            levelName: group.levelName,\r\n                            level: group.level,\r\n                            entityType: 'SpliceClosure',\r\n                            code: \"\",\r\n                            units: 'nos',\r\n                            quantity: x.spliceClosures.length,\r\n                            materialCost: supplier.price,\r\n                           serviceCost: supplier.serviceCost == null ? 0 : supplier.serviceCost,\r\n                            currency: supplier.currency,\r\n                            description: x.spliceClosures[0].name\r\n                        });\r\n                    }\r\n                    else\r\n                        this.helper.log(this.design, \"Error\", \"Supplier not available for Splice Closure - \" + x.spliceClosures[0].name);\r\n                }\r\n\r\n                //Add CivilWorks Cost\r\n                //this.generateBoqEntry(boq, x.civilworks, \"Civilwork\", group, \"\");\r\n                if (x.civilworks) {\r\n                    x.civilworks.forEach(cw => {\r\n                        supplier = cw.suppliers.find(s => s.isPrefered == true);\r\n\r\n                        if (supplier) {\r\n                            boq.push({\r\n                                levelName: group.levelName,\r\n                                level: group.level,\r\n                                entityType: 'Civilwork',\r\n                                code: \"\",\r\n                                units: '',\r\n                                quantity: 1,\r\n                                materialCost: supplier.price,\r\n                               serviceCost: supplier.serviceCost == null ? 0 : supplier.serviceCost,\r\n                                currency: supplier.currency,\r\n                                description: cw.name\r\n                            });\r\n                        }\r\n                        else\r\n                            this.helper.log(this.design, \"Error\", \"Supplier not available for Civil work - \" + cw.name);\r\n\r\n                    });\r\n                }\r\n\r\n                //Add Accessories Cost\r\n                //this.generateBoqEntry(boq, x.accessories, \"Accessory\", group, \"\");\r\n                if (x.accessories) {\r\n                    x.accessories.forEach(a => {\r\n                        supplier = a.suppliers.find(s => s.isPrefered == true);\r\n\r\n                        if (supplier) {\r\n                            boq.push({\r\n                                levelName: group.levelName,\r\n                                level: group.level,\r\n                                entityType: \"Accessory\",\r\n                                code: \"\",\r\n                                units: '',\r\n                                quantity: 1,\r\n                                materialCost: supplier.price,\r\n                               serviceCost: supplier.serviceCost == null ? 0 : supplier.serviceCost,\r\n                                currency: supplier.currency,\r\n                                description: a.parentEntityType + ' - Accessories'\r\n                            });\r\n\r\n                        }\r\n                        else\r\n                            this.helper.log(this.design, \"Error\", \"Supplier not available for Accessory - \" + a.name);\r\n                    });\r\n                }\r\n\r\n            });\r\n        }\r\n\r\n        if (group.children && group.children.length > 0)\r\n            group.children.forEach(g => {\r\n                this.generateBOQRec(g, boq);\r\n            });\r\n\r\n    }\r\n\r\n    //generateBoqEntry(boq: any, entities: any, entityName: string, group: any, units: string) {\r\n\r\n    //    if (entities && entities.length > 0) {\r\n\r\n    //        entities.forEach(a => {\r\n    //            let supplier = a.suppliers.find(s => s.isPrefered == true);\r\n\r\n    //            if (supplier) {\r\n    //                boq.push({\r\n    //                    levelName: group.levelName,\r\n    //                    level: group.level,\r\n    //                    entityType: entityName,\r\n    //                    code: \"\",\r\n    //                    units: units,\r\n    //                    quantity: 1,\r\n    //                    materialCost: supplier.price,\r\n    //                    serviceCost: supplier.serviceCost,\r\n    //                    currency: supplier.currency,\r\n    //                    description: a.parentEntityType != null ? `${a.parentEntityType} - ${entityName}` : a.name\r\n    //                });\r\n    //            }\r\n    //            else\r\n    //                this.helper.log(this.design, \"Error\", `Supplier not available for ${entityName} - ${a.name}`);\r\n    //        });\r\n    //    }\r\n\r\n    //}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Helper } from '../../common/helper';\r\nimport { Costing, Design } from '../models/design';\r\nimport { BomHelper } from './bom.helper';\r\nimport { FTTxHelper } from './fttx.helper';\r\nimport { BackboneHelper } from './backbone.helper';\r\n\r\ndeclare var $: any;\r\n\r\n@Injectable()\r\nexport class DesignHelper {\r\n\r\n    private design: Design;\r\n\r\n    constructor(\r\n        private bomHelper: BomHelper,\r\n        private fttxHelper: FTTxHelper,\r\n        private backboneHelper: BackboneHelper,\r\n        private helper: Helper,) { }\r\n\r\n    async generateDesign(design: Design) {\r\n\r\n        $(\"#ajax-loading\").show();\r\n\r\n        this.design = design;\r\n\r\n        this.design.generatedCodes = null;\r\n        this.design.boq = null;\r\n        this.design.bluePrint = null;\r\n\r\n        let status = false;\r\n\r\n        if (this.design.designType == 'FTTx') {\r\n            status = await this.fttxHelper.generateFTTxDesign(this.design);\r\n        }\r\n        else\r\n            status = await this.backboneHelper.generateBackboneDesign(this.design);\r\n\r\n        if (status) {\r\n            //Generate BOQ\r\n            this.helper.log(this.design, \"Information\", \"Generating BOQ...\");\r\n\r\n            this.design.boq = new Array<Costing>();\r\n            this.bomHelper.generateBOQ(this.design);\r\n\r\n            this.helper.log(this.design, \"Information\", \"Generated BOQ...\");\r\n\r\n            this.helper.log(this.design, \"Information\", \"Design generated...\");\r\n            this.helper.showAlertMessage(\"Design Generated\", \"info\");\r\n        }\r\n        else {\r\n            this.helper.log(this.design, \"Error\", \"Error generating design...\");\r\n            this.helper.showAlertMessage(\"Error generating design.\", \"error\");\r\n        }\r\n\r\n        $(\"#ajax-loading\").hide();\r\n       \r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { AppConfig } from '../../app.config';\r\nimport { PaginationRequest, SortOrder } from '../../common/models/paginationRequest';\r\nimport { PaginationResponse } from '../../common/models/paginationResponse';\r\nimport { ServiceResponse } from '../../common/models/serviceResponse';\r\nimport { Design } from '../models/design';\r\n\r\n@Injectable()\r\nexport class DesignService {\r\n\r\n    constructor(\r\n        private http: HttpClient,\r\n        private appConfig: AppConfig) { }\r\n\r\n    getDesigns(paginationRequest?: PaginationRequest): Observable<PaginationResponse> {\r\n\r\n        if (paginationRequest == null)\r\n            paginationRequest = {\r\n                page: null,\r\n                pageSize: null,\r\n                filter: null,\r\n                order: {\r\n                    orderByProperty: \"name\",\r\n                    sortOrder: SortOrder.descending\r\n                }\r\n            };\r\n\r\n        return this.http.post<PaginationResponse>(this.appConfig.urls.Design.getDesignsApi, paginationRequest);\r\n    }\r\n\r\n    getDesign(designId): Observable<ServiceResponse> {\r\n\r\n        const params = new HttpParams()\r\n            .set('designId', designId);\r\n\r\n        return this.http.get<ServiceResponse>(this.appConfig.urls.Design.getDesignApi, { params });\r\n    }\r\n\r\n    saveDesign(design: Design): Observable<ServiceResponse> {\r\n\r\n        var formData = new FormData();\r\n\r\n        design.documents.forEach(x => {\r\n            if (x.file)\r\n                formData.append(\"DocumentFiles\", x.file, x.file.name);\r\n        });\r\n\r\n        formData.append(\"SerializedDesign\", JSON.stringify(design));\r\n\r\n        return this.http.post<ServiceResponse>(this.appConfig.urls.Design.saveDesignApi, formData);\r\n\r\n\r\n        //return this.http.post<ServiceResponse>(this.appConfig.urls.Design.saveDesignApi, design);\r\n    }\r\n\r\n    deleteDesign(designId: string): Observable<ServiceResponse> {\r\n\r\n        const params = new HttpParams()\r\n            .set('designId', designId);\r\n\r\n        return this.http.delete<ServiceResponse>(this.appConfig.urls.Design.deleteDesignApi, { params });\r\n    }\r\n\r\n    deleteDocument(designId: string, documentId: string): Observable<ServiceResponse> {\r\n        const params = new HttpParams()\r\n            .set('projectId', designId)\r\n            .set('documentId', documentId);\r\n\r\n        return this.http.get<ServiceResponse>(this.appConfig.urls.Design.deleteDocumentApi, { params });\r\n   }\r\n\r\n   exportDesign(designId): Observable<ServiceResponse> {\r\n\r\n      const params = new HttpParams()\r\n         .set('designId', designId);\r\n\r\n      return this.http.get<ServiceResponse>(this.appConfig.urls.Design.exportDesignApi, { params });\r\n   }\r\n}\r\n","import { GeoHelper } from '../../common/geo/geoHelper';\r\nimport { Position, Point, LineString } from '../../common/geo/geometry';\r\nimport { Segment } from '../../common/geo/geoNode';\r\nimport { Helper } from '../../common/helper';\r\nimport { Chamber } from '../../entities/models/chamber';\r\nimport { Pole } from '../../entities/models/pole';\r\nimport { Splitter } from '../../entities/models/splitter';\r\nimport { CodeId } from '../models/design';\r\nimport * as _ from \"lodash\";\r\nimport { Cable } from '../../entities/models/cable';\r\nimport { SpliceClosure } from '../../entities/models/spliceClosure';\r\n\r\nexport class EntitiesHelper {\r\n\r\n   bookingIds: any;\r\n   generatedCodes: any;\r\n\r\n   constructor(bookingIds, generatedCodes) {\r\n      this.bookingIds = bookingIds;\r\n      this.generatedCodes = generatedCodes;\r\n   }\r\n\r\n   createCable(prefCable: Cable, coordinates: Array<number[]>) {\r\n\r\n      var cable = _.cloneDeep(prefCable);\r\n\r\n      cable.id = Helper.generateObjectId();\r\n      cable.entityType = \"Cable\";\r\n      cable.code = this.generateEntityCode(\"Cable\");\r\n      cable.name = cable.code;\r\n      cable.geometry = new LineString(coordinates);\r\n      cable.measuredLength = GeoHelper.getLength(coordinates) *1000;\r\n      cable.isUnderground = prefCable.isUnderground;\r\n      cable.noOfTubes = prefCable.noOfTubes;\r\n      cable.corePerTube = prefCable.corePerTube;\r\n      cable.suppliers = prefCable.suppliers;\r\n      cable.customFields = prefCable.customFields;\r\n      cable.aLocation = coordinates[0][0] + \",\" + coordinates[0][1];\r\n      cable.bLocation = coordinates[coordinates.length - 1][0] + \",\" + coordinates[coordinates.length - 1][1];\r\n\r\n      return cable;\r\n\r\n   }\r\n\r\n   createChambers(prefChamber: Chamber, interval: number, segment: Segment, loopLength: number, loopEnd: number): Chamber[] {\r\n\r\n      let intervalPoints = GeoHelper.getPointsAtDistance(segment.coordinates, (interval / 1000));\r\n      let chambers = new Array<Chamber>();\r\n\r\n      for (var i = 0; i < intervalPoints.length; i++) {\r\n\r\n         if (i == intervalPoints.length - 1)\r\n            var chamber = this.createChamber(prefChamber, intervalPoints[i], (loopLength + loopEnd));\r\n         else\r\n            var chamber = this.createChamber(prefChamber, intervalPoints[i], loopLength);\r\n         chambers.push(chamber);\r\n      }\r\n\r\n      return chambers;\r\n\r\n   }\r\n\r\n   createChamber(prefChamber: Chamber, coordinate: Position, loopLength: number): Chamber {\r\n\r\n      var chamber = _.cloneDeep(prefChamber);\r\n\r\n      chamber.entityType = \"Chamber\";\r\n      chamber.id = Helper.generateObjectId();\r\n      chamber.code = this.generateEntityCode(\"Chamber\");\r\n      chamber.name = chamber.code;\r\n      chamber.geometry = new Point(coordinate);\r\n      chamber.loopLength = loopLength;\r\n      return chamber;\r\n\r\n   }\r\n\r\n   createPoles(prefPole: Pole, interval: number, segment: Segment, loopLength: number, loopEnd: number): Pole[] {\r\n\r\n      let intervalPoints = GeoHelper.getPointsAtDistance(segment.coordinates, (interval / 1000));\r\n      let poles = new Array<Pole>();\r\n\r\n      for (var i = 0; i < intervalPoints.length; i++) {\r\n\r\n         if (i == intervalPoints.length - 1)\r\n            var pole = this.createPole(prefPole, intervalPoints[i], (loopLength + loopEnd));\r\n         else\r\n            var pole = this.createPole(prefPole, intervalPoints[i], loopLength);\r\n\r\n         poles.push(pole);\r\n      }\r\n\r\n      return poles;\r\n\r\n   }\r\n\r\n   createPole(prefPole: Pole, coordinate: Position, loopLength: number): Pole {\r\n\r\n      var pole = _.cloneDeep(prefPole);\r\n\r\n      pole.entityType = \"Pole\";\r\n      pole.id = Helper.generateObjectId();\r\n      pole.code = this.generateEntityCode(\"Pole\");\r\n      pole.name = pole.code;\r\n      pole.geometry = new Point(coordinate);\r\n      pole.loopLength = loopLength;\r\n      return pole;\r\n\r\n   }\r\n\r\n   createSplitter(prefSplitter: Splitter, coordinates: Position): Splitter {\r\n\r\n      var splitter = _.cloneDeep(prefSplitter);\r\n\r\n      splitter.id = Helper.generateObjectId();\r\n      splitter.entityType = \"Splitter\";\r\n      splitter.code = this.generateEntityCode(\"Splitter\");\r\n      splitter.name = splitter.code;\r\n      splitter.geometry = new Point(coordinates);\r\n\r\n      return splitter;\r\n\r\n   }\r\n\r\n   createSpliceClosure(prefSpliceClosure: SpliceClosure, coordinates: Position): Splitter {\r\n\r\n      var spliceClosure = _.cloneDeep(prefSpliceClosure);\r\n\r\n      spliceClosure.id = Helper.generateObjectId();\r\n      spliceClosure.entityType = \"SpliceClosure\";\r\n      spliceClosure.code = this.generateEntityCode(\"SpliceClosure\");\r\n      spliceClosure.name = spliceClosure.code;\r\n      spliceClosure.geometry = new Point(coordinates);\r\n\r\n      return spliceClosure;\r\n\r\n   }\r\n   generateEntityCode(entityType: string) {\r\n\r\n      let entityCode = \"\";\r\n      let maxId = null;\r\n\r\n      let bookingId = this.bookingIds.find(x => x.entityType == entityType);\r\n\r\n      if (this.generatedCodes == null)\r\n         this.generatedCodes = new Array<CodeId>();\r\n\r\n      let codeId = this.generatedCodes.find(x => x.entityType == entityType);\r\n\r\n      if (codeId) {\r\n         maxId = codeId.maxId + bookingId.step;\r\n         entityCode = bookingId.format.replace('{code}', maxId.toString());\r\n\r\n         codeId.maxId = maxId;\r\n      }\r\n      else {\r\n         maxId = bookingId.sequenceStart;\r\n         entityCode = bookingId.format.replace('{code}', maxId.toString());\r\n\r\n         this.generatedCodes.push({ entityType: entityType, maxId: maxId });\r\n      }\r\n\r\n      return entityCode;\r\n   }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Design, CableSettings } from '../models/design';\r\nimport { HomepassService } from '../../homepasses/services/homepass.service';\r\nimport { Helper } from '../../common/helper';\r\nimport { GeoNode, Segment } from '../../common/geo/geoNode';\r\nimport { Homepass } from '../../homepasses/models/homepass';\r\nimport { HttpParams, HttpClient } from '@angular/common/http';\r\nimport { ServiceResponse } from '../../common/models/serviceResponse';\r\nimport { Splitter } from '../../entities/models/splitter';\r\nimport { GeoHelper } from '../../common/geo/geoHelper';\r\nimport { AppConfig } from '../../app.config';\r\nimport { Cable } from '../../entities/models/cable';\r\nimport { EntitiesHelper } from './entities.helper';\r\nimport { Point } from '../../common/geo/geometry';\r\nimport * as _ from \"lodash\";\r\nimport { SpliceClosure } from '../../entities/models/spliceClosure';\r\nimport { Pole } from '../../entities/models/pole';\r\nimport { Chamber } from '../../entities/models/chamber';\r\n\r\ndeclare var $: any;\r\n\r\n@Injectable()\r\nexport class FTTxHelper {\r\n\r\n    private design: Design;\r\n    private entitiesHelper: EntitiesHelper;\r\n\r\n    constructor(\r\n        private httpClient: HttpClient,\r\n        private appConfig: AppConfig,\r\n        private homepassService: HomepassService,\r\n        private helper: Helper) { }\r\n\r\n    async generateFTTxDesign(design: Design) {\r\n\r\n        this.design = design;\r\n        this.design.bluePrint = null;\r\n        this.entitiesHelper = new EntitiesHelper(design.bookingIds, design.generatedCodes);\r\n\r\n        let status = false;\r\n\r\n        try {\r\n\r\n            this.helper.log(this.design, \"Information\", \"Generating FTTX design...\");\r\n\r\n            let homepasses = await this.getHomepasses(this.design.clusterId);\r\n\r\n            if (homepasses == null || homepasses.length == 0)\r\n                throw new Error('No homepasses to process...');\r\n\r\n            let geoNodes = new Array<GeoNode>();\r\n            let homepassNodes = new Array<GeoNode>();\r\n            let level = this.design.networkSettings.length + 1;\r\n\r\n            this.design.homepasses = homepasses;\r\n\r\n            homepasses.forEach(x => {\r\n                geoNodes.push({ id: x.id, level: level, levelName: \"homepasses\", coordinates: x.geometry.coordinates, connections: x.connections });\r\n            });\r\n\r\n            for (let index = this.design.networkSettings.length - 1; index >= 0; index--) {\r\n\r\n                let splitters = this.getSplitters(index);\r\n\r\n                if (splitters == null || splitters.length == 0) {\r\n                    this.helper.log(this.design, \"Error\", \"Splitters not defined at any of the levels...\");\r\n                    throw new Error('No splitters available to process...');\r\n                }\r\n\r\n                //let outputPorts = this.getTotalSplitterPorts(splitters);\r\n                //let connections = this.getConnectionsCount(geoNodes);\r\n                //let splitterCount = Math.ceil((connections / outputPorts) * (cableSettings.connectionPercent) / 100);\r\n\r\n                //geoNodes = GeoHelper.clustersKmeans(geoNodes, splitterCount, this.design.networkSettings[index].name);\r\n\r\n\r\n                geoNodes = await this.createClusters(geoNodes, splitters, index);\r\n\r\n                let cableSettings = this.design.networkSettings[index].cabling.cableSettings;\r\n                let preferedCable = this.getPreferedCable(cableSettings, geoNodes.length);\r\n\r\n                if (preferedCable == null) {\r\n                    this.helper.log(this.design, \"Error\", \"Insufficient Cable Configuration\");\r\n                    throw new Error('Insufficient cable configuration');\r\n                }\r\n\r\n                geoNodes = await this.generateSegments(geoNodes);\r\n\r\n                geoNodes.forEach(x => {\r\n                    if (x.segments != null) {\r\n                        this.generateSegmentEntities(preferedCable, x, index);\r\n\r\n                        if (this.design.networkSettings[index].destinationNode.entitySettings.dataSource == 'automatic')\r\n                            this.placeSplitter(x.segments, x.coordinates, splitters);\r\n                    }\r\n\r\n                });\r\n\r\n            }\r\n\r\n            let popCentroid = GeoHelper.center(geoNodes);\r\n\r\n            var designTree = new GeoNode();\r\n            designTree.id = Helper.generateObjectId();\r\n            //designTree.levelName = \"pop\";\r\n            designTree.coordinates = popCentroid;\r\n            //designTree.connections = 1;\r\n            designTree.children = geoNodes;\r\n\r\n            this.design.bluePrint = designTree;\r\n\r\n            status = true;\r\n\r\n        } catch (e) {\r\n            status = false;\r\n            this.helper.log(this.design, \"Error\", e);\r\n        }\r\n\r\n        $(\"#ajax-loading\").hide();\r\n        return status;\r\n    }\r\n\r\n    async getHomepasses(clusterId): Promise<Homepass[]> {\r\n\r\n        this.helper.log(this.design, \"Information\", \"Getting home passes for cluster - \" + clusterId);\r\n\r\n        let homepasses = new Array<Homepass>();\r\n\r\n        if (this.design.designType == 'FTTx') {\r\n\r\n            const params = new HttpParams()\r\n                .set('clusterId', clusterId);\r\n\r\n            var resp = await this.httpClient.get<ServiceResponse>(this.homepassService.getHomepassesInClusterApi, { params }).toPromise();\r\n\r\n            if (resp.status.toLowerCase() == \"error\") {\r\n                this.helper.log(this.design.log, \"Error\", \"Error fetching home passes - \" + resp.message);\r\n            }\r\n            else {\r\n                if (resp.data != null && resp.data.length > 0) {\r\n                    homepasses = resp.data;\r\n                }\r\n\r\n                this.helper.log(this.design, \"Information\", \"Getting home passes completed\");\r\n            }\r\n        }\r\n\r\n        return homepasses;\r\n\r\n    }\r\n\r\n    getSplitters(level: number): Splitter[] {\r\n\r\n        let splitters = [];\r\n\r\n        for (var i = level; i >= 0; i--) {\r\n\r\n            if (this.design.networkSettings[i].destinationNode.entitySettings.entityName == \"Splitter\") {\r\n\r\n                let sptrs = this.design.networkSettings[i].destinationNode.entitySettings.splitters;\r\n\r\n                if (sptrs[0].splitterRatio) {\r\n                    splitters = sptrs\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (this.design.networkSettings[i].startNode.entitySettings.entityName == \"Splitter\") {\r\n                let sptrs = this.design.networkSettings[i].startNode.entitySettings.splitters;\r\n\r\n                if (sptrs[0].splitterRatio) {\r\n                    splitters = sptrs\r\n                    break;\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        return splitters;\r\n    }\r\n\r\n    async createClusters(geoNodes: GeoNode[], splitters: Splitter[], level: number) {\r\n\r\n        let tempGeoNodes: GeoNode[];\r\n\r\n        this.helper.log(this.design, \"Information\", \"Generating clusters...\");\r\n        try {\r\n            var resp = await this.httpClient.post<ServiceResponse>(this.appConfig.urls.Routeware.SortPoints, { Region: this.appConfig.settings.Region, Nodes: geoNodes }).toPromise();\r\n        } catch (e) {\r\n            alert(e);\r\n        }\r\n\r\n\r\n        if (resp.status.toLowerCase() == \"error\") {\r\n            this.helper.log(this.design.log, \"Error\", \"Error sorting nodes - \" + resp.message);\r\n            throw Error(\"Error sorting nodes\");\r\n        }\r\n        else {\r\n            if (resp.data != null && resp.data.length > 0) {\r\n\r\n                let sortedData = new Array<GeoNode>();\r\n\r\n                resp.data.forEach(x => {\r\n                    let i = geoNodes.find(n => x.id == n.id);\r\n\r\n                    if (i)\r\n                        sortedData.push(i);\r\n                });\r\n\r\n                if (this.design.networkSettings[level].destinationNode.entitySettings.dataSource == 'automatic') {\r\n                    //tempGeoNodes = this.createAutomaticCluster(sortedData, splitters, level);\r\n                    tempGeoNodes = this.createAutomaticCluster(geoNodes, splitters, level);\r\n                }\r\n                else {\r\n                    //tempGeoNodes = this.createExistingCluster(sortedData, splitters, level);\r\n                    tempGeoNodes = this.createExistingCluster(geoNodes, splitters, level);\r\n                }\r\n            }\r\n            else {\r\n                this.helper.log(this.design.log, \"Error\", \"Nodes not available - \" + resp.message);\r\n                throw Error(\"Nodes not available\");\r\n            }\r\n        }\r\n\r\n        this.helper.log(this.design, \"Information\", \"Sorting homepasses completed\");\r\n\r\n        return tempGeoNodes;\r\n    }\r\n\r\n    createAutomaticCluster(sortedNodes: GeoNode[], splitters: Splitter[], level: number) {\r\n\r\n        var tempClusters = new Array<GeoNode>();\r\n\r\n        let cableSettings = this.design.networkSettings[level].cabling.cableSettings;\r\n\r\n\r\n        //let outputPorts = this.getTotalSplitterPorts(splitters);\r\n        let outputPorts = parseInt(splitters[0].splitterRatio.split(\":\")[1]);\r\n\r\n\r\n\r\n        let outputPortsTemp = ((outputPorts * cableSettings.connectionPercent) / 100).toFixed();\r\n\r\n\r\n        let connections = 0;\r\n\r\n        let geoNode = new GeoNode();\r\n        geoNode.id = Helper.generateObjectId();\r\n        geoNode.levelName = this.design.networkSettings[level].name;\r\n        geoNode.level = level;\r\n        geoNode.coordinates = null;\r\n        geoNode.connections = 1;\r\n        geoNode.children = new Array<GeoNode>();\r\n\r\n        sortedNodes.forEach(x => {\r\n\r\n            if ((parseInt(outputPortsTemp) - connections) <= 0) {\r\n\r\n                geoNode.coordinates = GeoHelper.center(geoNode.children);\r\n                //geoNode.children.push({\r\n\r\n                //   id: geoNode.id,\r\n                //   connections: 0,\r\n                //   children: null,\r\n                //   coordinates: geoNode.coordinates,\r\n                //   level: geoNode.level,\r\n                //   segments: null\r\n                //});\r\n\r\n                tempClusters.push(geoNode);\r\n\r\n                geoNode = new GeoNode();\r\n                connections = 0;\r\n\r\n                geoNode.id = Helper.generateObjectId();\r\n                geoNode.levelName = this.design.networkSettings[level].name;\r\n                geoNode.level = level;\r\n                geoNode.coordinates = null;\r\n                geoNode.connections = 1;\r\n\r\n                if (geoNode.children == null)\r\n                    geoNode.children = new Array<GeoNode>();\r\n\r\n            }\r\n\r\n            geoNode.children.push(x);\r\n            connections += x.connections;\r\n            //geoNode.connections = connections;\r\n\r\n        });\r\n\r\n        if (geoNode.children.length > 0) {\r\n            geoNode.coordinates = GeoHelper.center(geoNode.children);\r\n            //geoNode.children.push({\r\n            //   id: geoNode.id,\r\n            //   connections: 0,\r\n            //   children: null,\r\n            //   coordinates: geoNode.coordinates,\r\n            //   level: geoNode.level,\r\n            //   segments: null\r\n            //});\r\n            tempClusters.push(geoNode);\r\n        }\r\n\r\n        return tempClusters;\r\n    }\r\n\r\n    createExistingCluster(sortedNodes: GeoNode[], splitters: Splitter[], level: number) {\r\n\r\n        var tempClusters = new Array<GeoNode>();\r\n\r\n        splitters.forEach(x => {\r\n            let geoNode = new GeoNode();\r\n            geoNode.id = Helper.generateObjectId();\r\n            geoNode.levelName = this.design.networkSettings[level].name;\r\n            geoNode.level = level;\r\n            geoNode.coordinates = x.geometry.coordinates;\r\n            geoNode.connections = 1;\r\n            geoNode[\"availableConnections\"] = 8;\r\n            geoNode.children = new Array<GeoNode>();\r\n\r\n            tempClusters.push(geoNode);\r\n        });\r\n\r\n        sortedNodes.forEach(x => {\r\n\r\n            let nearestSplitter = this.getNearestSplitter(x.coordinates, tempClusters, x.connections);\r\n\r\n            if (nearestSplitter && nearestSplitter[\"availableConnections\"] >= x.connections) {\r\n                if (nearestSplitter.children == null)\r\n                    nearestSplitter.children = new Array<GeoNode>();\r\n\r\n                nearestSplitter.children.push(x);\r\n                //nearestSplitter.connections += x.connections;\r\n                nearestSplitter[\"availableConnections\"] -= x.connections;\r\n            }\r\n        });\r\n\r\n        let validClusters = new Array<GeoNode>();\r\n\r\n        tempClusters.forEach(x => {\r\n            if (x.children.length > 0)\r\n                validClusters.push(x);\r\n        });\r\n\r\n        return validClusters;\r\n    }\r\n\r\n    //getTotalSplitterPorts(splitters: Splitter[]): number {\r\n\r\n    //    let outputPorts = 0;\r\n\r\n    //    splitters.forEach(x => {\r\n    //        outputPorts += parseInt(x.splitterRatio.split(\":\")[1])\r\n    //    });\r\n\r\n    //    return outputPorts;\r\n    //}\r\n\r\n    getPreferedCable(cableSettings: CableSettings, splitterCount: number): Cable {\r\n\r\n        let cable = null;\r\n\r\n        if (cableSettings.cables && cableSettings.cables.length > 0) {\r\n            for (var i = 0; i < cableSettings.cables.length; i++) {\r\n                let availableConn = cableSettings.cables[i].corePerTube * cableSettings.cables[i].noOfTubes;\r\n\r\n                if (splitterCount < availableConn) {\r\n                    cable = cableSettings.cables[i];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return cable;\r\n    }\r\n\r\n    async generateSegments(geoNodes: GeoNode[]) {\r\n\r\n        let tempNodes = new Array<GeoNode>();\r\n\r\n        this.helper.log(this.design, \"Information\", \"Generating segment information...\");\r\n\r\n        var resp = await this.httpClient.post<ServiceResponse>(this.appConfig.urls.Routeware.GenerateMSTRecursive, { Region: this.appConfig.settings.Region, Nodes: geoNodes }).toPromise();\r\n\r\n        if (resp.status.toLowerCase() == \"error\") {\r\n            this.helper.log(this.design.log, \"Error\", \"Error generating segments - \" + resp.message);\r\n            throw new Error('Error generating segments..');\r\n        }\r\n        else {\r\n            if (resp.data != null && resp.data.length > 0) {\r\n                tempNodes = resp.data;\r\n            }\r\n        }\r\n\r\n        this.helper.log(this.design, \"Information\", \"Generating segment information completed\");\r\n\r\n        return tempNodes;\r\n    }\r\n\r\n    generateSegmentEntities(preferedCable: Cable, geoNode: GeoNode, level: number) {\r\n\r\n        let sourceEntity = this.design.networkSettings[level].startNode.entitySettings.entityName;\r\n\r\n        let cableType = this.design.networkSettings[level].cabling.cableSettings.cableType;\r\n        let prefChamber = this.design.networkSettings[level].cabling.cableSettings.chamber;\r\n        let prefPole = this.design.networkSettings[level].cabling.cableSettings.pole;\r\n        let prefSpliceClosure = this.design.networkSettings[level].cabling.spliceClosureSettings.spliceClosures[0];\r\n        let chamberInterval = this.design.networkSettings[level].cabling.cableSettings.chamberInterval;\r\n        let loopLength = this.design.networkSettings[level].cabling.cableSettings.cableLoop;\r\n        let loopDistance = this.design.networkSettings[level].cabling.cableSettings.loopInterval;\r\n        let loopEnd = this.design.networkSettings[level].cabling.cableSettings.loopAtClosure;\r\n        let drumLength = this.design.networkSettings[level].cabling.spliceClosureSettings.drumLength;\r\n\r\n        geoNode.segments = this.splitSegments(geoNode.segments, drumLength, loopDistance, loopLength, loopEnd);\r\n\r\n        let segments = geoNode.segments;\r\n\r\n        if (segments && segments.length > 0) {\r\n            segments.forEach(segment => {\r\n\r\n\r\n                segment.id = Helper.generateObjectId();\r\n\r\n                //1. generate Cables\r\n                segment.cable = this.entitiesHelper.createCable(preferedCable, segment.coordinates);\r\n                segment.cable.calculatedLength = (((segment.cable.measuredLength / loopDistance)) * loopLength) + segment.cable.measuredLength + loopEnd;\r\n\r\n                //2. Generate Poles/Chambers\r\n                if (cableType.toLowerCase() == \"underground\") {\r\n                    segment.chambers = this.entitiesHelper.createChambers(prefChamber, chamberInterval, segment, loopLength, loopEnd);\r\n                }\r\n                else {\r\n                    segment.poles = this.entitiesHelper.createPoles(prefPole, chamberInterval, segment, loopLength, loopEnd);\r\n                }\r\n\r\n                //3. Place SpliceClosure at end of each segment\r\n                let cableEndPoint = segment.coordinates[segment.coordinates.length - 1];\r\n                let spliceClosure = this.entitiesHelper.createSpliceClosure(prefSpliceClosure, cableEndPoint);\r\n\r\n                if (segment.spliceClosures == null)\r\n                    segment.spliceClosures = new Array<SpliceClosure>();\r\n\r\n                segment.spliceClosures.push(spliceClosure);\r\n            });\r\n\r\n            //If not splitter, place entities near Homepasses\r\n            if (sourceEntity != \"Splitter\") {\r\n\r\n                geoNode.children.forEach(item => {\r\n\r\n                    let nearestSegment = this.getNearestSegment(segments, item.coordinates);\r\n                    let nearestPoint = GeoHelper.nearestPointOnLine(item.coordinates, nearestSegment.coordinates);\r\n\r\n                    switch (sourceEntity) {\r\n                        case \"Chamber\":\r\n                            if (nearestSegment.chambers == null)\r\n                                nearestSegment.chambers = new Array<Chamber>();\r\n\r\n                            let chamber = this.entitiesHelper.createChamber(prefChamber, nearestPoint, loopLength);\r\n                            nearestSegment.chambers.push(chamber);\r\n                            break;\r\n                        case \"Pole\":\r\n                            if (nearestSegment.poles == null)\r\n                                nearestSegment.poles = new Array<Pole>();\r\n\r\n                            let pole = this.entitiesHelper.createPole(prefPole, nearestPoint, loopLength);\r\n                            nearestSegment.poles.push(pole);\r\n                            break;\r\n                        case \"SpliceClosure\":\r\n                            if (nearestSegment.spliceClosures == null)\r\n                                nearestSegment.spliceClosures = new Array<SpliceClosure>();\r\n\r\n                            let spliceClosure = this.entitiesHelper.createSpliceClosure(prefSpliceClosure, nearestPoint);\r\n                            nearestSegment.spliceClosures.push(spliceClosure);\r\n                            break;\r\n\r\n                        default:\r\n                    }\r\n\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    splitSegments(segments: Segment[], drumLength: number, loopDistance: number, loopLength: number, loopEnd: number): Segment[] {\r\n\r\n        let tempSegments = new Array<Segment>();\r\n\r\n        let eSegmentLength = ((loopDistance * (drumLength + loopLength - loopEnd)) / (loopLength + loopDistance)) / 1000;\r\n\r\n\r\n        segments.forEach(segment => {\r\n\r\n            //let intervalPoints = GeoHelper.getPointsAtDistance(segment.coordinates, (chamberInterval / 1000));\r\n            let segmentLength = GeoHelper.getLength(segment.coordinates);\r\n\r\n\r\n            if (segmentLength <= eSegmentLength)\r\n                tempSegments.push(segment);\r\n            else {\r\n                let points = GeoHelper.lineChunk(segment.coordinates, eSegmentLength);\r\n\r\n                points.forEach(x => {\r\n                    let newSegment = new Segment();\r\n                    newSegment.id = Helper.generateObjectId();\r\n                    newSegment.coordinates = x;\r\n                    tempSegments.push(newSegment);\r\n                });\r\n            }\r\n\r\n        });\r\n\r\n        return tempSegments;\r\n    }\r\n\r\n    placeSplitter(segments: Segment[], point: number[], splitters: Splitter[]) {\r\n\r\n        if (segments && segments.length > 0) {\r\n\r\n            let nearestSegment = this.getNearestSegment(segments, point);\r\n            //let nearestPoint = GeoHelper.nearestPointOnLine(point, nearestSegment.coordinates);\r\n            let nearestPoint = null;\r\n\r\n            if (nearestSegment.chambers && nearestSegment.chambers.length > 0) {\r\n                nearestPoint = this.getNearestPoleOrChamberLocation(nearestSegment.chambers, point);\r\n            }\r\n            else {\r\n                nearestPoint = this.getNearestPoleOrChamberLocation(nearestSegment.poles, point);\r\n            }\r\n\r\n            if (nearestSegment.splitters == null)\r\n                nearestSegment.splitters = new Array<Splitter>();\r\n\r\n            let splitter = this.entitiesHelper.createSplitter(splitters[0], nearestPoint);\r\n\r\n            nearestSegment.splitters.push(splitter);\r\n        }\r\n\r\n    }\r\n\r\n    getNearestSegment(segments: Segment[], point: number[]): Segment {\r\n\r\n        let distance;\r\n        let nearestSegment: Segment;\r\n\r\n        segments.forEach(x => {\r\n\r\n            let d = GeoHelper.pointToLineDistance(point, x.coordinates);\r\n\r\n            if (distance == null) {\r\n                distance = d;\r\n                nearestSegment = x;\r\n            }\r\n            else {\r\n\r\n                if (d < distance) {\r\n                    distance = d;\r\n                    nearestSegment = x;\r\n                }\r\n            }\r\n        });\r\n\r\n        return nearestSegment\r\n    }\r\n\r\n    getNearestSplitter(point: number[], splitters: GeoNode[], connections: number): GeoNode {\r\n\r\n        let filteredSplitters = new Array<GeoNode>();\r\n\r\n        splitters.forEach(x => {\r\n            if (x[\"availableConnections\"] >= connections)\r\n                filteredSplitters.push(x);\r\n        });\r\n\r\n        //let filteredSplitters = splitters.filter(x => {\r\n        //    x[\"availableConnections\"] >= connections;\r\n        //});\r\n\r\n\r\n        let nearestSplitter = GeoHelper.nearestPoint(point, filteredSplitters);\r\n\r\n        return nearestSplitter;\r\n    }\r\n\r\n    getNearestPoleOrChamberLocation(entity, point) {\r\n\r\n        let coords = [];\r\n\r\n        entity.forEach(x => {\r\n            coords.push(x.geometry.coordinates);\r\n        });\r\n\r\n        let nearestPoint = GeoHelper.nearestPoint2(point, coords);\r\n\r\n        return nearestPoint;\r\n    }\r\n\r\n}\r\n","import { GeoNode } from '../../common/geo/geoNode';\r\n\r\nexport class GeoNodeHelper {\r\n\r\n    constructor() { }\r\n\r\n    getSegmentById() {\r\n\r\n    }\r\n\r\n    static deleteSegmentEntity(geoNode: GeoNode, entityId: string, entityType: string) {\r\n       var i = 0;\r\n        if (geoNode) {\r\n\r\n            //if (group.children)\r\n            //    group.children.forEach(x => {\r\n            //        this.removeMapObject(x);\r\n            //    });\r\n          \r\n            if (geoNode.segments) {\r\n                geoNode.segments.forEach(x => {\r\n                   i = i + 1;\r\n                   if ((entityType == \"Cable\" || x.cable.entityType ==\"Cable\") && (x.cable.id == entityId)) {\r\n                      //x.cable = null;\r\n                      //geoNode.segments.slice[i - 1];\r\n\r\n                      var index = geoNode.segments.map(x => { return x.cable.id }).indexOf(entityId);\r\n\r\n                      geoNode.segments.splice(index, 1);\r\n                    }\r\n\r\n                   if (entityType == \"Chamber\" && x.chambers) {\r\n\r\n                        let index = x.chambers.findIndex(i => i.id == entityId);\r\n\r\n                        if (index >= 0)\r\n                            x.chambers.splice(index, 1);\r\n                    }\r\n\r\n                    //if (entityType == \"Duct\") {\r\n                    //    x.ducts.forEach(duct => {\r\n                    //        if (duct.id == entityId)\r\n                    //            duct = null;\r\n                    //    })\r\n                    //}\r\n\r\n                   if (entityType == \"ODF\" && x.odfs) {\r\n\r\n                        let index = x.odfs.findIndex(i => i.id == entityId);\r\n\r\n                        if (index >= 0)\r\n                            x.odfs.splice(index, 1);\r\n                    }\r\n\r\n                   if (entityType == \"Pole\" && x.poles) {\r\n                        let index = x.poles.findIndex(i => i.id == entityId);\r\n\r\n                        if (index >= 0)\r\n                            x.poles.splice(index, 1);\r\n                    }\r\n\r\n                   if (entityType == \"Splitter\" && x.splitters) {\r\n\r\n                        let index = x.splitters.findIndex(i => i.id == entityId);\r\n\r\n                        if (index >= 0)\r\n                            x.splitters.splice(index, 1);\r\n                    }\r\n\r\n                   if (entityType == \"SpliceClosure\" && x.spliceClosures) {\r\n\r\n                        let index = x.spliceClosures.findIndex(i => i.id == entityId);\r\n\r\n                        if (index >= 0)\r\n                            x.spliceClosures.splice(index, 1);\r\n                   }\r\n                   if (entityType == \"FAT\" && x.fats) {\r\n\r\n                      let index = x.fats.findIndex(i => i.id == entityId);\r\n\r\n                      if (index >= 0)\r\n                         x.fats.splice(index, 1);\r\n                   }\r\n                   if (entityType == \"FDT\" && x.fdts) {\r\n\r\n                      let index = x.fdts.findIndex(i => i.id == entityId);\r\n\r\n                      if (index >= 0)\r\n                         x.fdts.splice(index, 1);\r\n                   }\r\n                   if ((entityType == \"MicroDuct\" || x.microduct.entityType == \"MicroDuct\") && x.microduct.id == entityId) {\r\n                      var index = geoNode.segments.map(x => { return x.microduct.id }).indexOf(entityId);\r\n                      geoNode.segments.splice(index, 1);\r\n                   }\r\n\r\n                });\r\n            }\r\n\r\n            if (geoNode.children && geoNode.children.length > 0)\r\n                geoNode.children.forEach(g => {\r\n                    this.deleteSegmentEntity(g, entityId, entityType);\r\n                });\r\n        }\r\n   }\r\n   static deleteLineSegmentEntity(geoNode: GeoNode, entityId: string, entityType: string) {\r\n      //console.log(geoNode);\r\n      //console.log(entityId);\r\n      //console.log(entityType);\r\n      if (entityType == \"Duct\") {\r\n         for (var i = 0; i <= geoNode.children.length - 1; i++) {\r\n            for (var j = 0; j <= geoNode.children[i].segments.length - 1; j++) {\r\n               if (geoNode.children[i].segments[j].ducts != undefined) {\r\n                  if (geoNode.children[i].segments[j].ducts.id == entityId) {\r\n                     geoNode.children[i].segments.splice(j,1);\r\n                     return false;\r\n                  }\r\n               }\r\n            }\r\n         }\r\n      }\r\n      if (entityType == \"MicroDuct\") {\r\n         for (var i = 0; i <= geoNode.children.length - 1; i++) {\r\n            for (var j = 0; j <= geoNode.children[i].segments.length - 1; j++) {\r\n               if (geoNode.children[i].segments[j].microduct != undefined) {\r\n                  if (geoNode.children[i].segments[j].microduct.id == entityId) {\r\n                     geoNode.children[i].segments.splice(j,1);\r\n                     return false;\r\n                  }\r\n               }\r\n            }\r\n         }\r\n      }\r\n   }\r\n\r\n   static getLastSegment(geoNode: GeoNode) {\r\n\r\n      let segment = null;\r\n\r\n      if (geoNode) {\r\n\r\n         if (geoNode.segments) {\r\n            geoNode.segments.forEach(x => {\r\n\r\n               segment = x;\r\n            });\r\n         }\r\n\r\n         if (geoNode.children && geoNode.children.length > 0)\r\n            geoNode.children.forEach(g => {\r\n               this.getLastSegment(g);\r\n            });\r\n      }\r\n\r\n      return segment;\r\n   }\r\n}\r\n","import { GMapsHelper } from '../../common/geo/googleMapsHelper';\r\nimport { GeoHelper } from '../../common/geo/geoHelper';\r\n\r\ndeclare var google: any;\r\ndeclare var GMHelper: any;\r\nexport class MapEntitiesHelper {\r\n\r\n    map: any;\r\n\r\n    constructor(map: any) {\r\n        this.map = map;\r\n    }\r\n\r\n    drawPoint(entity: any, icon: any, isEditable: boolean, attachMapObject: boolean) {\r\n\r\n        var coordinates = [];\r\n\r\n        if (entity.geometry)\r\n            coordinates = entity.geometry.coordinates;\r\n        else if (entity.coordinates)\r\n            coordinates = entity.coordinates;\r\n\r\n        let location = GeoHelper.convertToPosition(coordinates);\r\n\r\n        let marker = new google.maps.Marker({\r\n            position: location,\r\n            draggable: isEditable,\r\n            cursor: 'pointer',\r\n            id: entity.id,\r\n            data: entity,\r\n            //icon: {\r\n            //    url: icon,\r\n            //    ////origin: new google.maps.Point(96, 0),\r\n            //    ////size: new google.maps.Size(96, 96),\r\n            //    ////scaledSize: new google.maps.Size(192, 96),\r\n            //    //anchor: new google.maps.Point(10, 10)\r\n            //},\r\n            icon: icon,\r\n            map: this.map\r\n        });\r\n\r\n        //https://pepsized.com/customize-your-google-map-markers/\r\n\r\n        marker.setTitle(entity.layerName);\r\n\r\n        if (attachMapObject)\r\n         entity['mapObject'] = marker;\r\n\r\n        return marker;\r\n    }\r\n\r\n   drawLine(entity: any, lineColor: any, strokeWeight: number, isEditable: boolean, attachMapObject: boolean) {\r\n\r\n      let colour = \"#000000\";\r\n      let lineWeight = 3;\r\n\r\n      if (lineColor)\r\n         colour = lineColor;\r\n\r\n      if (strokeWeight)\r\n         lineWeight = strokeWeight;\r\n\r\n      let polyline = new google.maps.Polyline({\r\n         strokeColor: colour,\r\n         strokeOpacity: 1.0,\r\n         strokeWeight: lineWeight,\r\n         editable: isEditable,\r\n         data: entity,\r\n         id: entity.id,\r\n         map: this.map\r\n      });\r\n\r\n      let path = polyline.getPath();\r\n\r\n      polyline.setMap(this.map);\r\n\r\n      if (attachMapObject)\r\n         entity['mapObject'] = polyline;\r\n\r\n      if (entity.geometry != undefined) {\r\n         if (entity.geometry.coordinates.length > 1) {\r\n            for (var i = 0; i < entity.geometry.coordinates.length; i++) {\r\n               path.push(new google.maps.LatLng(entity.geometry.coordinates[i][1], entity.geometry.coordinates[i][0]));\r\n            }\r\n            polyline.setEditable(false);\r\n         }\r\n      }\r\n      else {\r\n\r\n         GMHelper.clearClickListener(this.map, \"click\");\r\n\r\n         GMHelper.addListener(this.map, \"click\", function (event) {\r\n            polyline.setEditable(true);\r\n            path = polyline.getPath();\r\n            path.push(event.latLng);\r\n         });\r\n\r\n         this.map.setOptions({ draggableCursor: 'crosshair' });\r\n\r\n         GMHelper.addListener(polyline, \"rightclick\", function (event) {\r\n            GMHelper.clearClickListener(polyline, \"rightclick\");\r\n\r\n            GMHelper.clearClickListener(polyline.map, \"click\");\r\n\r\n            polyline.map.setOptions({ draggableCursor: '' });\r\n\r\n            polyline.setEditable(false);\r\n\r\n            entity['mapObject'] = polyline;\r\n\r\n            return polyline;\r\n         })\r\n      }\r\n\r\n\r\n      GMapsHelper.addListener(polyline, 'mouseover', function (latlng) {\r\n         polyline.setOptions({ strokeColor: '#FF0000', strokeWeight: lineWeight + 2 });\r\n      });\r\n\r\n      GMapsHelper.addListener(polyline, 'mouseout', function (latlng) {\r\n         polyline.setOptions({ strokeColor: lineColor, strokeWeight: lineWeight });\r\n      });\r\n\r\n      return polyline;\r\n   }\r\n\r\n    drawPolygon(entity: any, lineColor: string, strokeWeight: number, isEditable: boolean, attachMapObject: boolean) {\r\n\r\n        let colour = \"#000000\";\r\n        let lineWeight = 3;\r\n\r\n        if (lineColor)\r\n            colour = lineColor;\r\n\r\n        if (strokeWeight)\r\n            lineWeight = strokeWeight;\r\n\r\n        let polygon = new google.maps.Polygon({\r\n            strokeColor: colour,\r\n            strokeOpacity: 1.0,\r\n            strokeWeight: lineWeight,\r\n            editable: isEditable,\r\n            data: entity,\r\n            id: entity.id\r\n        });\r\n\r\n        let path = polygon.getPath();\r\n\r\n        polygon.setMap(this.map);\r\n\r\n        if (attachMapObject)\r\n            entity['mapObject'] = polygon;\r\n\r\n        if (entity.geometry.coordinates.length > 1) {\r\n\r\n            for (var i = 0; i < entity.geometry.coordinates.length; i++) {\r\n                path.push(new google.maps.LatLng(entity.geometry.coordinates[i][1], entity.geometry.coordinates[i][0]));\r\n            }\r\n\r\n            polygon.setEditable(false);\r\n        }\r\n\r\n        return polygon;\r\n    }\r\n\r\n    removeMapObjects(entities: any) {\r\n\r\n        if (entities) {\r\n            if (entities.length > 0) {\r\n                entities.forEach(x => {\r\n                    if (x['mapObject']) {\r\n                        x['mapObject'].setMap(null);\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                if (entities['mapObject']) {\r\n                    entities['mapObject'].setMap(null);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    //removeLines(entities: any) {\r\n\r\n    //    if (entities) {\r\n    //        if (entities.length > 0) {\r\n    //            entities.forEach(x => {\r\n    //                if (x['mapObject']) {\r\n    //                    x['mapObject'].setMap(null);\r\n    //                }\r\n    //            });\r\n    //        }\r\n    //        else {\r\n    //            if (entities['mapObject']) {\r\n    //                entities['mapObject'].setMap(null);\r\n    //            }\r\n    //        }\r\n    //    }\r\n    //}\r\n    drawDuctLine(entity: any, lineColor: any, strokeWeight: number, isEditable: boolean, attachMapObject: boolean) {\r\n        let polyline: any;\r\n        let lineSymbol = {\r\n            path: 'M 0,-1 0,1',\r\n            strokeOpacity: 1,\r\n            scale: 4\r\n        };\r\n\r\n        polyline = new google.maps.Polyline({\r\n            strokeColor: '#FFA500',\r\n            strokeOpacity: 0,\r\n            editable: isEditable,\r\n            data: entity,\r\n            id: entity.id,\r\n            map: this.map,\r\n            icons: [{\r\n                icon: lineSymbol,\r\n                offset: '0',\r\n                repeat: '20px'\r\n            }],\r\n\r\n        });\r\n\r\n        let path = polyline.getPath();\r\n\r\n        polyline.setMap(this.map);\r\n\r\n        if (attachMapObject)\r\n            entity['mapObject'] = polyline;\r\n\r\n        if (entity.geometry != undefined) {\r\n            if (entity.geometry.coordinates.length > 1) {\r\n                for (var i = 0; i < entity.geometry.coordinates.length; i++) {\r\n                    path.push(new google.maps.LatLng(entity.geometry.coordinates[i][1], entity.geometry.coordinates[i][0]));\r\n                }\r\n                polyline.setEditable(false);\r\n            }\r\n        }\r\n        else {\r\n\r\n            GMHelper.clearClickListener(this.map, \"click\");\r\n\r\n            GMHelper.addListener(this.map, \"click\", function (event) {\r\n                polyline.setEditable(true);\r\n                path = polyline.getPath();\r\n                path.push(event.latLng);\r\n            });\r\n\r\n            this.map.setOptions({ draggableCursor: 'crosshair' });\r\n\r\n            GMHelper.addListener(polyline, \"rightclick\", function (event) {\r\n                GMHelper.clearClickListener(polyline, \"rightclick\");\r\n\r\n                GMHelper.clearClickListener(polyline.map, \"click\");\r\n\r\n                polyline.map.setOptions({ draggableCursor: '' });\r\n\r\n                polyline.setEditable(false);\r\n\r\n                entity['mapObject'] = polyline;\r\n\r\n                return polyline;\r\n            })\r\n        }\r\n\r\n\r\n        GMapsHelper.addListener(polyline, 'mouseover', function (latlng) {\r\n            polyline.setOptions({ strokeColor: '#FFA500' });\r\n        });\r\n\r\n        GMapsHelper.addListener(polyline, 'mouseout', function (latlng) {\r\n            polyline.setOptions({ strokeColor: 'FFA500' });\r\n        });\r\n\r\n        return polyline;\r\n    }\r\n    drawMicroDuctLine(entity: any, lineColor: any, strokeWeight: number, isEditable: boolean, attachMapObject: boolean) {\r\n        let polyline: any;\r\n        let lineSymbol = {\r\n            path: 'M 0,-1 0,1',\r\n            strokeOpacity: 1,\r\n            scale: 4\r\n        };\r\n\r\n        polyline = new google.maps.Polyline({\r\n            strokeColor: '#000000',\r\n            strokeOpacity: 0,\r\n            editable: isEditable,\r\n            data: entity,\r\n            id: entity.id,\r\n            map: this.map,\r\n            icons: [{\r\n                icon: lineSymbol,\r\n                offset: '0',\r\n                repeat: '20px'\r\n            }],\r\n\r\n        });\r\n\r\n        let path = polyline.getPath();\r\n\r\n        polyline.setMap(this.map);\r\n\r\n        if (attachMapObject)\r\n            entity['mapObject'] = polyline;\r\n\r\n        if (entity.geometry != undefined) {\r\n            if (entity.geometry.coordinates.length > 1) {\r\n                for (var i = 0; i < entity.geometry.coordinates.length; i++) {\r\n                    path.push(new google.maps.LatLng(entity.geometry.coordinates[i][1], entity.geometry.coordinates[i][0]));\r\n                }\r\n                polyline.setEditable(false);\r\n            }\r\n        }\r\n        else {\r\n\r\n            GMHelper.clearClickListener(this.map, \"click\");\r\n\r\n            GMHelper.addListener(this.map, \"click\", function (event) {\r\n                polyline.setEditable(true);\r\n                path = polyline.getPath();\r\n                path.push(event.latLng);\r\n            });\r\n\r\n            this.map.setOptions({ draggableCursor: 'crosshair' });\r\n\r\n            GMHelper.addListener(polyline, \"rightclick\", function (event) {\r\n                GMHelper.clearClickListener(polyline, \"rightclick\");\r\n\r\n                GMHelper.clearClickListener(polyline.map, \"click\");\r\n\r\n                polyline.map.setOptions({ draggableCursor: '' });\r\n\r\n                polyline.setEditable(false);\r\n\r\n                entity['mapObject'] = polyline;\r\n\r\n                return polyline;\r\n            })\r\n        }\r\n\r\n\r\n        GMapsHelper.addListener(polyline, 'mouseover', function (latlng) {\r\n            polyline.setOptions({ strokeColor: '#000000' });\r\n        });\r\n\r\n        GMapsHelper.addListener(polyline, 'mouseout', function (latlng) {\r\n            polyline.setOptions({ strokeColor: '000000' });\r\n        });\r\n\r\n        return polyline;\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\n\r\nimport { DesignService } from '../services/design.service';\r\nimport { Design } from '../models/design';\r\nimport { Helper } from '../../common/helper';\r\nimport { DesignHelper } from '../services/design.helper';\r\nimport { GeoNode } from '../../common/geo/geoNode';\r\nimport { BomHelper } from '../services/bom.helper';\r\n\r\ndeclare var $: any;\r\n\r\n@Component({\r\n    templateUrl: './design-details.html',\r\n    providers: [DesignService],\r\n})\r\nexport class DesignDetails implements OnInit {\r\n\r\n    referenceId: string = \"\";\r\n    design: Design = new Design();\r\n    designs: Design[] = new Array<Design>();\r\n    allDesigns: Design[] = new Array<Design>();\r\n    title: string = \"New Design\";\r\n\r\n    constructor(\r\n        private location: Location,\r\n        private route: ActivatedRoute,\r\n        private designService: DesignService,\r\n        private designHelper: DesignHelper,\r\n       private helper: Helper,\r\n       private bomHelper: BomHelper) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.route.params.subscribe(\r\n            params => {\r\n                this.referenceId = params['id'];\r\n\r\n                if (this.referenceId == null)\r\n                    this.title = \"New Design\";\r\n                else\r\n                    this.title = \"Edit Design\";\r\n\r\n                this.getFormData(this.referenceId);\r\n            });\r\n    }\r\n\r\n    getFormData(referenceId: string) {\r\n\r\n        $(\"#ajax-loading\").show();\r\n\r\n        this.designService.getDesigns().subscribe(\r\n            resp => {\r\n\r\n                if (resp.status.toLowerCase() == \"error\") {\r\n                    this.helper.showAlertMessage(resp.message, \"error\");\r\n                }\r\n                else {\r\n                    if (resp.data != null && resp.data.length > 0) {\r\n                        this.allDesigns = resp.data;\r\n\r\n                        if (this.allDesigns && this.allDesigns.length > 0)\r\n                            this.designs = this.allDesigns.filter(x => x.referenceId == referenceId);\r\n\r\n                        if (this.designs && this.designs.length > 0) {\r\n                            let latestVersion = Math.max.apply(Math, this.designs.map(function (o) { return o.version; }))\r\n                            this.design = this.designs.find(x => x.version == latestVersion);\r\n                        }\r\n\r\n                       this.allDesigns = this.allDesigns.filter(x => x.id != this.design.id);\r\n\r\n                       if (this.design.bluePrint) {\r\n                          this.bomHelper.generateBOQ(this.design);\r\n                       }\r\n\r\n                    }\r\n                }\r\n\r\n                $(\"#ajax-loading\").hide();\r\n            },\r\n            (err) => {\r\n                $(\"#ajax-loading\").hide();\r\n                let msg = `Unable to fetch design : ${err.message}`;\r\n                this.helper.showAlertMessage(msg, \"error\");\r\n            });\r\n    }\r\n\r\n    onVersionChange(event: any) {\r\n        this.design = this.designs.find(x => x.version == event);\r\n    }\r\n\r\n    async generateDesign() {\r\n        await this.designHelper.generateDesign(this.design);\r\n    }\r\n\r\n    save() {\r\n\r\n        var errorMessages = this.validateDesign(this.design);\r\n\r\n        if (errorMessages.length == 0) {\r\n\r\n            this.clearMapObjects(this.design.bluePrint);\r\n\r\n            this.designService.saveDesign(this.design).subscribe(\r\n                resp => {\r\n                    if (resp.status.toLowerCase() == \"error\") {\r\n                        this.helper.showAlertMessage(resp.message, \"error\");\r\n                    }\r\n                    else {\r\n                        if (resp.data != null) {\r\n                            this.helper.showAlertMessage(\"Design information saved\", \"success\");\r\n                            this.goBack();\r\n                        }\r\n                        else\r\n                            this.helper.showAlertMessage(\"Unable to save design information.\", \"error\");\r\n                    }\r\n                },\r\n                (err) => {\r\n                    this.helper.showAlertMessage(\"Unable to save design information.\", \"error\");\r\n                });\r\n        }\r\n        else {\r\n            var errorMessage = this.helper.getErrorMessagesText(errorMessages);\r\n            this.helper.showAlertMessage(errorMessage, \"error\");\r\n        }\r\n    }\r\n\r\n    clearMapObjects(group: GeoNode) {\r\n\r\n        if (group) {\r\n\r\n            if (group.children)\r\n                group.children.forEach(x => {\r\n                    this.removeMapObject(x);\r\n                });\r\n\r\n            if (group.segments) {\r\n                group.segments.forEach(x => {\r\n\r\n                    this.removeMapObject(x.cable);\r\n\r\n                    this.removeMapObject(x.chambers);\r\n\r\n                    this.removeMapObject(x.ducts);\r\n\r\n                    this.removeMapObject(x.odfs);\r\n\r\n                    this.removeMapObject(x.poles);\r\n\r\n                    this.removeMapObject(x.splitters);\r\n\r\n                    this.removeMapObject(x.spliceClosures);\r\n                    this.removeMapObject(x.fdts);\r\n                   this.removeMapObject(x.fats);\r\n                   this.removeMapObject(x.microduct);\r\n                });\r\n            }\r\n\r\n            if (group.children && group.children.length > 0)\r\n                group.children.forEach(g => {\r\n                    this.clearMapObjects(g);\r\n                });\r\n        }\r\n\r\n    }\r\n\r\n\r\n    removeMapObject(entities: any) {\r\n\r\n        if (entities) {\r\n            if (entities.length > 0) {\r\n                entities.forEach(x => {\r\n                    if (x['mapObject']) {\r\n                        x['mapObject'] = null;\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                if (entities['mapObject']) {\r\n                    entities['mapObject'] = null;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    saveNewVersion() {\r\n        let latestVersion = Math.max.apply(Math, this.designs.map(function (o) { return o.version; }))\r\n\r\n        this.design.id = null;\r\n        this.design.version = latestVersion + 1;\r\n\r\n        this.save();\r\n\r\n    }\r\n\r\n    validateDesign(design: Design): string[] {\r\n        var errorMessages = [];\r\n\r\n        if (design.name == null || design.name.trim() == '')\r\n            errorMessages.push(\"Design name cannot be empty\");\r\n\r\n        if (design.code == null || design.code.trim() == '')\r\n            errorMessages.push(\"Design code cannot be empty\");\r\n\r\n        return errorMessages;\r\n    }\r\n\r\n    goBack(): void {\r\n        this.location.back();\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Design } from '../models/design';\r\nimport { SearchField } from '../../common/models/SearchField';\r\nimport { SearchFilter, SortOrder, ConditionOperator, Filter } from '../../common/models/paginationRequest';\r\nimport { DesignService } from '../services/design.service';\r\nimport { Helper } from '../../common/helper';\r\n\r\ndeclare var $: any;\r\ndeclare var jBox: any;\r\n\r\n@Component({\r\n    templateUrl: './design-list.html'\r\n})\r\nexport class DesignList implements OnInit {\r\n\r\n    designs = new Array<Design>();\r\n    statusMessage: string = \"\";\r\n    pageSize = 10;\r\n    currentPage = 1;\r\n    totalPages = 1;\r\n    searchFields: SearchField[];\r\n    searchFilter: SearchFilter;\r\n    sortColumn: string;\r\n    sortOrder: SortOrder = SortOrder.descending;\r\n    previousElement: HTMLElement;\r\n\r\n    constructor(\r\n        private designService: DesignService,\r\n        private helper: Helper) {\r\n\r\n        this.searchFields = new Array<SearchField>();\r\n        this.searchFields.push({ field: 'Name', label: 'Name', dataType: \"text\", value: \"\" });\r\n        this.searchFields.push({ field: 'DesignType', label: 'Design Type', dataType: \"text\", value: \"\" });\r\n        this.searchFields.push({ field: 'Version', label: 'Version', dataType: \"number\", value: \"\" });\r\n        this.searchFields.push({ field: 'UpdatedBy', label: 'Updated By', dataType: \"text\", value: \"\" });\r\n        this.searchFields.push({ field: 'UpdatedDate', label: 'Updated On', dataType: \"date\", value: \"\" });\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.statusMessage = \"Loading Designs...\";\r\n        this.pageSize = 10;\r\n        this.currentPage = 1;\r\n        this.sortColumn = null;\r\n        this.sortOrder = SortOrder.noSort;\r\n\r\n        this.getFormData();\r\n    }\r\n\r\n    getFormData() {\r\n\r\n        $(\"#ajax-loading\").show();\r\n\r\n        this.totalPages = 1;\r\n\r\n        let paginationRequest = {\r\n            page: this.currentPage,\r\n            pageSize: this.pageSize,\r\n            filter: this.searchFilter,\r\n            order: {\r\n                orderByProperty: this.sortColumn,\r\n                sortOrder: this.sortOrder\r\n            }\r\n        };\r\n\r\n        this.designService.getDesigns(paginationRequest).subscribe(\r\n            resp => {\r\n                this.designs = null;\r\n\r\n                if (resp.status.toLowerCase() == \"error\") {\r\n                    this.statusMessage = resp.message;\r\n                    this.helper.showAlertMessage(this.statusMessage, \"error\");\r\n                }\r\n                else {\r\n                    if (resp.data != null && resp.data.length > 0) {\r\n                        this.designs = resp.data;\r\n                        this.totalPages = Math.ceil(resp.recordCount / this.pageSize);\r\n                    }\r\n                    else {\r\n                        this.statusMessage = \"There are no registered designs.\";\r\n                    }\r\n                }\r\n\r\n                $(\"#ajax-loading\").hide();\r\n            },\r\n            (err) => {\r\n                $(\"#ajax-loading\").hide();\r\n                this.designs = null;\r\n                let msg = `Unable to fetch designs : ${err.message}`;\r\n                this.helper.showAlertMessage(msg, \"error\");\r\n                this.statusMessage = \"Error fetching designs.\";\r\n            });\r\n    }\r\n\r\n    search(searchFilter) {\r\n\r\n        this.searchFilter = searchFilter;\r\n        this.getFormData();\r\n    }\r\n\r\n    onPageSizeChange(pageSize) {\r\n        this.pageSize = pageSize;\r\n        this.getFormData();\r\n    }\r\n\r\n    onPageChange(currentPage) {\r\n        this.currentPage = currentPage;\r\n        this.getFormData();\r\n    }\r\n\r\n    onColumnClick(e: HTMLElement) {\r\n\r\n        if (this.previousElement && e.getAttribute('data-column') != this.previousElement.getAttribute('data-column')) {\r\n            this.previousElement.classList.remove('table-sorter-desc');\r\n            this.previousElement.classList.remove('table-sorter-asc');\r\n        }\r\n\r\n        this.previousElement = e;\r\n\r\n        this.sortColumn = e.getAttribute('data-column');\r\n\r\n        if (e.classList.contains(\"table-sorter-asc\")) {\r\n            e.classList.remove('table-sorter-asc');\r\n            e.classList.add('table-sorter-desc');\r\n            this.sortOrder = SortOrder.descending;\r\n        }\r\n        else if (e.classList.contains(\"table-sorter-desc\")) {\r\n            e.classList.remove('table-sorter-desc');\r\n            this.sortColumn = null;\r\n            this.sortOrder = SortOrder.noSort;\r\n        }\r\n        else {\r\n            e.classList.add('table-sorter-asc');\r\n            this.sortOrder = SortOrder.ascending;\r\n        }\r\n\r\n        this.getFormData();\r\n    }\r\n\r\n    delete(design: Design) {\r\n        new jBox(\"Confirm\", {\r\n            minWidth: 500,\r\n            minHeight: 70,\r\n            title: \"<b>Delete Design</b>\",\r\n            overlay: false,\r\n            content: \"Do you want to delete design - \" + design.name,\r\n            draggable: \"title\",\r\n            confirmButton: \"Yes\",\r\n            cancelButton: \"No\",\r\n            confirm: () => {\r\n                this.designService.deleteDesign(design.id).subscribe(\r\n                    resp => {\r\n                        if (resp.status.toLowerCase() == \"error\") {\r\n                            this.helper.showAlertMessage(resp.message, \"error\");\r\n                        }\r\n                        else {\r\n                            if (resp.data != null) {\r\n                                this.helper.showAlertMessage(\"Design deleted.\", \"success\");\r\n                                this.getFormData();\r\n                            }\r\n                            else {\r\n                                this.helper.showAlertMessage(\"Error deleting design\", \"error\");\r\n                            }\r\n                        }\r\n                    },\r\n                    (err) => {\r\n                        this.helper.showAlertMessage(\"Error deleting design\", \"error\");\r\n                    });\r\n            }\r\n        }).open();\r\n   }\r\n\r\n   exportKML(design: Design) {\r\n\r\n      this.designService.exportDesign(design.id).subscribe(\r\n         resp => {\r\n            this.designs = null;\r\n\r\n            if (resp.status.toLowerCase() == \"error\") {\r\n               this.statusMessage = resp.message;\r\n               this.helper.showAlertMessage(this.statusMessage, \"error\");\r\n            }\r\n            else {\r\n               if (resp.data != null) {\r\n                  if (resp.data != \"\") {\r\n\r\n                     window.location.href = \"/Designs/Download?fileName=\" + resp.data;\r\n                  }\r\n\r\n               }\r\n               else {\r\n                  this.statusMessage = \"There are no registered designs.\";\r\n               }\r\n\r\n               this.getFormData();\r\n            }\r\n\r\n            $(\"#ajax-loading\").hide();\r\n         },\r\n         (err) => {\r\n            $(\"#ajax-loading\").hide();\r\n            this.designs = null;\r\n            let msg = `Unable to export designs : ${err.message}`;\r\n            this.helper.showAlertMessage(msg, \"error\");\r\n            this.statusMessage = \"Error export designs.\";\r\n         });\r\n   }\r\n\r\n    //getPermission(featureCode: string, accessType: string): boolean {\r\n    //   return this.accountService.getPermission(featureCode, accessType);\r\n    //}\r\n}\r\n","import { Owner } from './owner';\r\nimport { Installation } from './installation';\r\nimport { BaseNetworkEntity } from './baseNetworkEntity';\r\nimport { LineString } from '../../common/geo/geometry';\r\n\r\nexport class MicroDuct extends BaseNetworkEntity {\r\n\r\n   entityType: string = \"Duct\";\r\n   height?: number;\r\n   width?: number;\r\n   innerDiameter?: number;\r\n   outerDiameter?: number;\r\n   parentType?: string;\r\n   geometry: LineString;\r\n   measuredLength?: number;\r\n   calculatedLength?: number;\r\n   xPosition?: string;\r\n   yPosition?: string;\r\n   installation?: Installation = new Installation();\r\n   owner?: Owner = new Owner();\r\n}\r\n\r\n","import { BaseNetworkEntity } from './baseNetworkEntity';\r\nimport { Owner } from './owner';\r\nimport { Installation } from './installation';\r\nimport { Optics } from './optics';\r\nimport { Point } from '../../common/geo/geometry';\r\n\r\nexport class FDT extends BaseNetworkEntity {\r\n   entityType: string = \"FDT\";\r\n   templateCode: string;\r\n   templateName: string;\r\n   odfCount: number;\r\n   splitterCount: number;\r\n   connectionType: any;\r\n   topology: any;\r\n   geometry: Point;\r\n   optics?: Optics = new Optics();\r\n   installation?: Installation = new Installation();\r\n   owner?: Owner = new Owner();  \r\n}\r\n","import { DbBaseEntity } from '../../common/models/dbBaseEntity';\r\nimport { CustomField } from '../../common/models/customField';\r\nimport { FileAttachment } from '../../common/models/FileAttachment';\r\nimport { Supplier } from '../../common/models/supplier';\r\n\r\nexport class BaseNetworkEntity extends DbBaseEntity {\r\n\r\n    name?: string;\r\n    icon?: string;\r\n    type?: string;\r\n    brand?: string;\r\n    model?: string;\r\n    zoomLevel?: number;\r\n\r\n    code?: string;\r\n    regionId?: string;\r\n    parentId?: string;\r\n    parentEntityType?: string;\r\n    constructionStage?: string;\r\n    activationStage?: string;\r\n    accessibility?: string;\r\n    hierarchyType?: string;\r\n    customFields?: CustomField[] = new Array<CustomField>();\r\n    photos?: FileAttachment[] = new Array<FileAttachment>();\r\n    attachments?: FileAttachment[] = new Array<FileAttachment>();\r\n    suppliers?: Supplier[] = new Array<Supplier>();\r\n\r\n    constructor(id?: string, code?: string) {\r\n        super();\r\n        this.id = id;\r\n        this.code = code;\r\n    }\r\n}\r\n","import { BaseNetworkEntity } from './baseNetworkEntity';\r\nimport { Owner } from './owner';\r\nimport { Installation } from './installation';\r\nimport { Optics } from './optics';\r\nimport { LineString } from '../../common/geo/geometry';\r\n\r\nexport class Cable extends BaseNetworkEntity {\r\n\r\n    entityType: string = \"Cable\";\r\n    aLocation?: string;\r\n    bLocation?: string;\r\n    geometry: LineString;\r\n    isUnderground?: boolean;\r\n    measuredLength?: number;\r\n    calculatedLength?: number;\r\n    noOfTubes?: number;\r\n    corePerTube?: number;\r\n    optics?: Optics = new Optics();\r\n    installation?: Installation = new Installation();\r\n    owner?: Owner = new Owner();\r\n\r\n    constructor(id?:string, code?: string, isUnderground?: boolean, noOfTubes?: number, corePerTube?: number, optics?: Optics) {\r\n        super(id, code);\r\n        this.isUnderground = isUnderground;\r\n        this.noOfTubes = noOfTubes;\r\n        this.corePerTube = corePerTube;\r\n        this.optics = optics;\r\n    }\r\n}\r\n\r\n","import { BaseNetworkEntity } from './baseNetworkEntity';\r\nimport { Owner } from './owner';\r\nimport { Installation } from './installation';\r\nimport { Point } from '../../common/geo/geometry';\r\n\r\nexport class Chamber extends BaseNetworkEntity {\r\n\r\n   entityType: string = \"Chamber\";\r\n   loopLength: string = \"\";\r\n   category?: string;\r\n   closureType?: string;\r\n   spliceTrayCount?: number;\r\n   isBuried?: boolean;\r\n\r\n   geometry: Point;\r\n   installation?: Installation = new Installation();\r\n   owner?: Owner = new Owner();\r\n}\r\n\r\n","import { Owner } from './owner';\r\nimport { Installation } from './installation';\r\nimport { BaseNetworkEntity } from './baseNetworkEntity';\r\nimport { LineString } from '../../common/geo/geometry';\r\n\r\nexport class Duct extends BaseNetworkEntity {\r\n\r\n    entityType: string = \"Duct\";\r\n    height?: number;\r\n    width?: number;\r\n    innerDiameter?: number;\r\n    outerDiameter?: number;\r\n\r\n    geometry: LineString;\r\n    measuredLength?: number;\r\n    calculatedLength?: number;\r\n\r\n    installation?: Installation = new Installation();\r\n    owner?: Owner = new Owner();\r\n}\r\n\r\n","import { BaseNetworkEntity } from './baseNetworkEntity';\r\nimport { Owner } from './owner';\r\nimport { Installation } from './installation';\r\nimport { Optics } from './optics';\r\nimport { Point } from '../../common/geo/geometry';\r\n\r\nexport class FAT extends BaseNetworkEntity {\r\n   entityType: string = \"FAT\";\r\n   templateCode: string;\r\n   templateName: string;\r\n   pigtailCount: number;\r\n   splitterCount: number;\r\n   connectionType: any;\r\n   topology: any;\r\n   geometry: Point;\r\n   optics?: Optics = new Optics();\r\n   installation?: Installation = new Installation();\r\n   owner?: Owner = new Owner();\r\n}\r\n","export class Installation {\r\n    number: string;\r\n    year?: number;\r\n    company: string;\r\n    technician: string;\r\n    productionYear?: number;\r\n    date?: string;\r\n}\r\n","import { BaseNetworkEntity } from './baseNetworkEntity';\r\nimport { Owner } from './owner';\r\nimport { Installation } from './installation';\r\nimport { Point } from '../../common/geo/geometry';\r\n\r\nexport class ODF extends BaseNetworkEntity {\r\n\r\n    entityType: string = \"ODF\";\r\n    noOfPorts?: number;\r\n    mountingType?: string;\r\n    height?: number;\r\n    width?: number;\r\n    length?: number;\r\n\r\n    geometry: Point;\r\n    installation?: Installation = new Installation();\r\n    owner?: Owner = new Owner();\r\n}\r\n","export class Optics {\r\n    frequency?: number;\r\n    attenuationDb?: number;\r\n    resistanceOhm?: number;\r\n    opticalInPutPower?: number;\r\n    opticalOutputPower?: number;\r\n    wavelength?: number;\r\n}\r\n","export class Owner {\r\n    name: string;\r\n    address: string;\r\n    mobileNumber: string;\r\n    fax: string;\r\n    emailId: string;\r\n}\r\n","import { BaseNetworkEntity } from './baseNetworkEntity';\r\nimport { Owner } from './owner';\r\nimport { Installation } from './installation';\r\nimport { Point } from '../../common/geo/geometry';\r\n\r\nexport class Pole extends BaseNetworkEntity {\r\n\r\n   entityType: string = \"Pole\";\r\n   loopLength: string = \"\";\r\n   height?: number;\r\n   geometry: Point;\r\n   installation?: Installation = new Installation();\r\n   owner?: Owner = new Owner();\r\n}\r\n","import { BaseNetworkEntity } from './baseNetworkEntity';\r\nimport { Owner } from './owner';\r\nimport { Installation } from './installation';\r\nimport { Point } from '../../common/geo/geometry';\r\n\r\nexport class PoP extends BaseNetworkEntity {\r\n\r\n   entityType: string = \"PoP\";\r\n   \r\n   geometry: Point;\r\n   installation?: Installation = new Installation();\r\n   owner?: Owner = new Owner();\r\n}\r\n\r\n","import { BaseNetworkEntity } from './baseNetworkEntity';\r\nimport { Owner } from './owner';\r\nimport { Installation } from './installation';\r\nimport { Point } from '../../common/geo/geometry';\r\n\r\nexport class SpliceClosure extends BaseNetworkEntity {\r\n\r\n    entityType: string = \"SpliceClosure\";\r\n    noOfPorts?: number;\r\n    geometry: Point;\r\n    installation?: Installation = new Installation();\r\n    owner?: Owner = new Owner();\r\n}\r\n","import { BaseNetworkEntity } from './baseNetworkEntity';\r\nimport { Owner } from './owner';\r\nimport { Installation } from './installation';\r\nimport { Optics } from './optics';\r\nimport { Point } from '../../common/geo/geometry';\r\n\r\nexport class Splitter extends BaseNetworkEntity {\r\n    entityType: string = \"Splitter\";\r\n\r\n    splitterRatio?: string;\r\n    lossValue?: number;\r\n    optics?: Optics = new Optics();\r\n\r\n    geometry: Point;\r\n    installation?: Installation = new Installation();\r\n    owner?: Owner = new Owner();\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient, HttpParams } from \"@angular/common/http\";\r\nimport { SortOrder, PaginationRequest } from '../../common/models/paginationRequest';\r\nimport { ServiceResponse } from '../../common/models/serviceResponse';\r\nimport { Cable } from '../models/cable';\r\n\r\n@Injectable()\r\nexport class CableService {\r\n\r\n    getCablesApi = 'Cables/GetCables/';\r\n    getCableApi = 'Cables/GetCable/';\r\n    saveCableApi = 'Cables/SaveCable/';\r\n    deleteCableApi = 'Cables/DeleteCable/';\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    getCables(paginationRequest?: PaginationRequest): Observable<ServiceResponse> {\r\n\r\n        if (paginationRequest == null)\r\n            paginationRequest = {\r\n                page: null,\r\n                pageSize: null,\r\n                filter: null,\r\n                order: {\r\n                    orderByProperty: \"updatedDate\",\r\n                    sortOrder: SortOrder.descending\r\n                }\r\n            };\r\n\r\n        return this.http.post<ServiceResponse>(this.getCablesApi, paginationRequest);\r\n    }\r\n\r\n    getCable(cableId): Observable<ServiceResponse> {\r\n\r\n        const params = new HttpParams()\r\n            .set('cableId', cableId);\r\n\r\n        return this.http.get<ServiceResponse>(this.getCableApi, { params });\r\n    }\r\n\r\n    saveCable(cable: Cable): Observable<ServiceResponse> {\r\n        return this.http.post<ServiceResponse>(this.saveCableApi, cable);\r\n    }\r\n\r\n    deleteCable(cableId: string): Observable<ServiceResponse> {\r\n\r\n        const params = new HttpParams()\r\n            .set('cableId', cableId);\r\n\r\n        return this.http.delete<ServiceResponse>(this.deleteCableApi, { params });\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient, HttpParams } from \"@angular/common/http\";\r\n\r\nimport { ServiceResponse } from '../../common/models/serviceResponse';\r\nimport { Chamber } from '../models/chamber';\r\nimport { PaginationRequest, SortOrder } from '../../common/models/paginationRequest';\r\n\r\n@Injectable()\r\nexport class ChamberService {\r\n\r\n    getChambersApi = 'Chambers/GetChambers/';\r\n    getChamberApi = 'Chambers/GetChamber/';\r\n    saveChamberApi = 'Chambers/SaveChamber/';\r\n    deleteChamberApi = 'Chambers/DeleteChamber/';\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    getChambers(paginationRequest?: PaginationRequest): Observable<ServiceResponse> {\r\n\r\n        if (paginationRequest == null)\r\n            paginationRequest = {\r\n                page: null,\r\n                pageSize: null,\r\n                filter: null,\r\n                order: {\r\n                    orderByProperty: \"updatedDate\",\r\n                    sortOrder: SortOrder.descending\r\n                }\r\n            };\r\n\r\n        return this.http.post<ServiceResponse>(this.getChambersApi, paginationRequest);\r\n    }\r\n\r\n    getChamber(chamberId): Observable<ServiceResponse> {\r\n\r\n        const params = new HttpParams()\r\n            .set('chamberId', chamberId);\r\n\r\n        return this.http.get<ServiceResponse>(this.getChamberApi, { params });\r\n    }\r\n\r\n    saveChamber(chamber: Chamber): Observable<ServiceResponse> {\r\n        return this.http.post<ServiceResponse>(this.saveChamberApi, chamber);\r\n    }\r\n\r\n    deleteChamber(chamberId: string): Observable<ServiceResponse> {\r\n\r\n        const params = new HttpParams()\r\n            .set('chamberId', chamberId);\r\n\r\n        return this.http.delete<ServiceResponse>(this.deleteChamberApi, { params });\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient, HttpParams } from \"@angular/common/http\";\r\n\r\nimport { ServiceResponse } from '../../common/models/serviceResponse';\r\nimport { PaginationRequest, SortOrder } from '../../common/models/paginationRequest';\r\nimport { Duct } from '../models/duct';\r\n\r\n@Injectable()\r\nexport class DuctService {\r\n\r\n    getDuctsApi = 'Ducts/GetDucts/';\r\n    getDuctApi = 'Ducts/GetDuct/';\r\n    saveDuctApi = 'Ducts/SaveDuct/';\r\n    deleteDuctApi = 'Ducts/DeleteDuct/';\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    getDucts(paginationRequest?: PaginationRequest): Observable<ServiceResponse> {\r\n\r\n        if (paginationRequest == null)\r\n            paginationRequest = {\r\n                page: null,\r\n                pageSize: null,\r\n                filter: null,\r\n                order: {\r\n                    orderByProperty: \"updatedDate\",\r\n                    sortOrder: SortOrder.descending\r\n                }\r\n            };\r\n\r\n        return this.http.post<ServiceResponse>(this.getDuctsApi, paginationRequest);\r\n    }\r\n\r\n    getDuct(ductId): Observable<ServiceResponse> {\r\n\r\n        const params = new HttpParams()\r\n            .set('ductId', ductId);\r\n\r\n        return this.http.get<ServiceResponse>(this.getDuctApi, { params });\r\n    }\r\n\r\n    saveDuct(duct: Duct): Observable<ServiceResponse> {\r\n        return this.http.post<ServiceResponse>(this.saveDuctApi, duct);\r\n    }\r\n\r\n    deleteDuct(ductId: string): Observable<ServiceResponse> {\r\n\r\n        const params = new HttpParams()\r\n            .set('ductId', ductId);\r\n\r\n        return this.http.delete<ServiceResponse>(this.deleteDuctApi, { params });\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient, HttpParams } from \"@angular/common/http\";\r\n\r\nimport { ServiceResponse } from '../../common/models/serviceResponse';\r\nimport { PaginationRequest, SortOrder } from '../../common/models/paginationRequest';\r\nimport { FAT } from '../models/fat';\r\n\r\n@Injectable()\r\nexport class fatService {\r\n\r\n    getfatsApi = 'fat/Getfats/';\r\n    getfatApi = 'fat/Getfat/';\r\n    savefatApi = 'fat/Savefat/';\r\n    deletefatApi = 'fat/Deletefat/';\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    getfats(paginationRequest?: PaginationRequest): Observable<ServiceResponse> {\r\n\r\n        if (paginationRequest == null)\r\n            paginationRequest = {\r\n                page: null,\r\n                pageSize: null,\r\n                filter: null,\r\n                order: {\r\n                    orderByProperty: \"updatedDate\",\r\n                    sortOrder: SortOrder.descending\r\n                }\r\n            };\r\n\r\n        return this.http.post<ServiceResponse>(this.getfatsApi, paginationRequest);\r\n    }\r\n\r\n    getfat(fatId): Observable<ServiceResponse> {\r\n\r\n        const params = new HttpParams()\r\n            .set('fatId', fatId);\r\n\r\n        return this.http.get<ServiceResponse>(this.getfatApi, { params });\r\n    }\r\n\r\n    savefat(fat: FAT): Observable<ServiceResponse> {\r\n        return this.http.post<ServiceResponse>(this.savefatApi, fat);\r\n    }\r\n\r\n    deletefat(fatId: string): Observable<ServiceResponse> {\r\n\r\n        const params = new HttpParams()\r\n            .set('fatId', fatId);\r\n\r\n        return this.http.delete<ServiceResponse>(this.deletefatApi, { params });\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient, HttpParams } from \"@angular/common/http\";\r\n\r\nimport { ServiceResponse } from '../../common/models/serviceResponse';\r\nimport { PaginationRequest, SortOrder } from '../../common/models/paginationRequest';\r\n\r\nimport { FDT } from '../models/fdt';\r\n\r\n@Injectable()\r\nexport class fdtService {\r\n\r\n    getfdtsApi = 'Fdt/GetFdts/';\r\n   getfdtApi = 'Fdt/Getfdt/';\r\n    savefdtApi = 'fdt/Savefdt/';\r\n    deletefdtApi = 'fdt/Deletefdt/';\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    getfdts(paginationRequest?: PaginationRequest): Observable<ServiceResponse> {\r\n\r\n        if (paginationRequest == null)\r\n            paginationRequest = {\r\n                page: null,\r\n                pageSize: null,\r\n                filter: null,\r\n                order: {\r\n                    orderByProperty: \"updatedDate\",\r\n                    sortOrder: SortOrder.descending\r\n                }\r\n            };\r\n\r\n        return this.http.post<ServiceResponse>(this.getfdtsApi, paginationRequest);\r\n    }\r\n\r\n    getfdt(fdtId): Observable<ServiceResponse> {\r\n\r\n        const params = new HttpParams()\r\n            .set('fdtId', fdtId);\r\n\r\n        return this.http.get<ServiceResponse>(this.getfdtApi, { params });\r\n    }\r\n\r\n   savefdt(fdt: FDT): Observable<ServiceResponse> {\r\n        return this.http.post<ServiceResponse>(this.savefdtApi, fdt);\r\n    }\r\n\r\n    deletefdt(fdtId: string): Observable<ServiceResponse> {\r\n\r\n        const params = new HttpParams()\r\n            .set('fdtId', fdtId);\r\n\r\n        return this.http.delete<ServiceResponse>(this.deletefdtApi, { params });\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient, HttpParams } from \"@angular/common/http\";\r\n\r\nimport { ServiceResponse } from '../../common/models/serviceResponse';\r\nimport { ODF } from '../models/odf';\r\nimport { PaginationRequest, SortOrder } from '../../common/models/paginationRequest';\r\n\r\n@Injectable()\r\nexport class ODFService {\r\n\r\n    getODFsApi = 'ODFs/GetODFs/';\r\n    getODFApi = 'ODFs/GetODF/';\r\n    saveODFApi = 'ODFs/SaveODF/';\r\n    deleteODFApi = 'ODFs/DeleteODF/';\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    getODFs(paginationRequest?: PaginationRequest): Observable<ServiceResponse> {\r\n\r\n        if (paginationRequest == null)\r\n            paginationRequest = {\r\n                page: null,\r\n                pageSize: null,\r\n                filter: null,\r\n                order: {\r\n                    orderByProperty: \"updatedDate\",\r\n                    sortOrder: SortOrder.descending\r\n                }\r\n            };\r\n\r\n        return this.http.post<ServiceResponse>(this.getODFsApi, paginationRequest);\r\n    }\r\n\r\n    getODF(odfId): Observable<ServiceResponse> {\r\n\r\n        const params = new HttpParams()\r\n            .set('odfId', odfId);\r\n\r\n        return this.http.get<ServiceResponse>(this.getODFApi, { params });\r\n    }\r\n\r\n    saveODF(odf: ODF): Observable<ServiceResponse> {\r\n        return this.http.post<ServiceResponse>(this.saveODFApi, odf);\r\n    }\r\n\r\n    deleteODF(odfId: string): Observable<ServiceResponse> {\r\n\r\n        const params = new HttpParams()\r\n            .set('odfId', odfId);\r\n\r\n        return this.http.delete<ServiceResponse>(this.deleteODFApi, { params });\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient, HttpParams } from \"@angular/common/http\";\r\n\r\nimport { ServiceResponse } from '../../common/models/serviceResponse';\r\nimport { Pole } from '../models/pole';\r\nimport { PaginationRequest, SortOrder } from '../../common/models/paginationRequest';\r\n\r\n@Injectable()\r\nexport class PoleService {\r\n\r\n    getPolesApi = 'Poles/GetPoles/';\r\n    getPoleApi = 'Poles/GetPole/';\r\n    savePoleApi = 'Poles/SavePole/';\r\n    deletePoleApi = 'Poles/DeletePole/';\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    getPoles(paginationRequest?: PaginationRequest): Observable<ServiceResponse> {\r\n\r\n        if (paginationRequest == null)\r\n            paginationRequest = {\r\n                page: null,\r\n                pageSize: null,\r\n                filter: null,\r\n                order: {\r\n                    orderByProperty: \"updatedDate\",\r\n                    sortOrder: SortOrder.descending\r\n                }\r\n            };\r\n\r\n        return this.http.post<ServiceResponse>(this.getPolesApi, paginationRequest);\r\n    }\r\n\r\n    getPole(poleId): Observable<ServiceResponse> {\r\n\r\n        const params = new HttpParams()\r\n            .set('poleId', poleId);\r\n\r\n        return this.http.get<ServiceResponse>(this.getPoleApi, { params });\r\n    }\r\n\r\n    savePole(pole: Pole): Observable<ServiceResponse> {\r\n        return this.http.post<ServiceResponse>(this.savePoleApi, pole);\r\n    }\r\n\r\n    deletePole(poleId: string): Observable<ServiceResponse> {\r\n\r\n        const params = new HttpParams()\r\n            .set('poleId', poleId);\r\n\r\n        return this.http.delete<ServiceResponse>(this.deletePoleApi, { params });\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient, HttpParams } from \"@angular/common/http\";\r\n\r\nimport { ServiceResponse } from '../../common/models/serviceResponse';\r\nimport { Chamber } from '../models/chamber';\r\nimport { PaginationRequest, SortOrder } from '../../common/models/paginationRequest';\r\nimport { PoP } from '../models/pop';\r\n\r\n@Injectable()\r\nexport class PopService {\r\n\r\n   getPopsApi = 'Pop/GetPops/';\r\n   getPopApi = 'Pop/GetPop/';\r\n   savePopApi = 'Pop/SavePop/';\r\n   deletePopApi = 'Pop/DeletePop/';\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    getChambers(paginationRequest?: PaginationRequest): Observable<ServiceResponse> {\r\n\r\n        if (paginationRequest == null)\r\n            paginationRequest = {\r\n                page: null,\r\n                pageSize: null,\r\n                filter: null,\r\n                order: {\r\n                    orderByProperty: \"updatedDate\",\r\n                    sortOrder: SortOrder.descending\r\n                }\r\n            };\r\n\r\n       return this.http.post<ServiceResponse>(this.getPopsApi, paginationRequest);\r\n    }\r\n\r\n   getChamber(popId): Observable<ServiceResponse> {\r\n\r\n        const params = new HttpParams()\r\n           .set('popId', popId);\r\n\r\n       return this.http.get<ServiceResponse>(this.getPopApi, { params });\r\n    }\r\n\r\n   saveChamber(pop: PoP): Observable<ServiceResponse> {\r\n       return this.http.post<ServiceResponse>(this.savePopApi, pop);\r\n    }\r\n\r\n   deleteChamber(popId: string): Observable<ServiceResponse> {\r\n\r\n        const params = new HttpParams()\r\n           .set('popId', popId);\r\n\r\n       return this.http.delete<ServiceResponse>(this.deletePopApi, { params });\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient, HttpParams } from \"@angular/common/http\";\r\n\r\nimport { ServiceResponse } from '../../common/models/serviceResponse';\r\nimport { SpliceClosure } from '../models/spliceClosure';\r\nimport { PaginationRequest, SortOrder } from '../../common/models/paginationRequest';\r\n\r\n@Injectable()\r\nexport class SpliceClosureService {\r\n\r\n    getSpliceClosuresApi = 'SpliceClosures/GetSpliceClosures/';\r\n    getSpliceClosureApi = 'SpliceClosures/GetSpliceClosure/';\r\n    saveSpliceClosureApi = 'SpliceClosures/SaveSpliceClosure/';\r\n    deleteSpliceClosureApi = 'SpliceClosures/DeleteSpliceClosure/';\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    getSpliceClosures(paginationRequest?: PaginationRequest): Observable<ServiceResponse> {\r\n\r\n        if (paginationRequest == null)\r\n            paginationRequest = {\r\n                page: null,\r\n                pageSize: null,\r\n                filter: null,\r\n                order: {\r\n                    orderByProperty: \"updatedDate\",\r\n                    sortOrder: SortOrder.descending\r\n                }\r\n            };\r\n\r\n        return this.http.post<ServiceResponse>(this.getSpliceClosuresApi, paginationRequest);\r\n    }\r\n\r\n    getSpliceClosure(spliceClosureId): Observable<ServiceResponse> {\r\n\r\n        const params = new HttpParams()\r\n            .set('spliceClosureId', spliceClosureId);\r\n\r\n        return this.http.get<ServiceResponse>(this.getSpliceClosureApi, { params });\r\n    }\r\n\r\n    saveSpliceClosure(spliceClosure: SpliceClosure): Observable<ServiceResponse> {\r\n        return this.http.post<ServiceResponse>(this.saveSpliceClosureApi, spliceClosure);\r\n    }\r\n\r\n    deleteSpliceClosure(spliceClosureId: string): Observable<ServiceResponse> {\r\n\r\n        const params = new HttpParams()\r\n            .set('spliceClosureId', spliceClosureId);\r\n\r\n        return this.http.delete<ServiceResponse>(this.deleteSpliceClosureApi, { params });\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient, HttpParams } from \"@angular/common/http\";\r\n\r\nimport { ServiceResponse } from '../../common/models/serviceResponse';\r\nimport { Splitter } from '../models/splitter';\r\nimport { PaginationRequest, SortOrder } from '../../common/models/paginationRequest';\r\n\r\n@Injectable()\r\nexport class SplitterService {\r\n\r\n    getSplittersApi = 'Splitters/GetSplitters/';\r\n    getSplitterApi = 'Splitters/GetSplitter/';\r\n    saveSplitterApi = 'Splitters/SaveSplitter/';\r\n    deleteSplitterApi = 'Splitters/DeleteSplitter/';\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    getSplitters(paginationRequest?: PaginationRequest): Observable<ServiceResponse> {\r\n\r\n        if (paginationRequest == null)\r\n            paginationRequest = {\r\n                page: null,\r\n                pageSize: null,\r\n                filter: null,\r\n                order: {\r\n                    orderByProperty: \"updatedDate\",\r\n                    sortOrder: SortOrder.descending\r\n                }\r\n            };\r\n\r\n        return this.http.post<ServiceResponse>(this.getSplittersApi, paginationRequest);\r\n    }\r\n\r\n    getSplitter(splitterId): Observable<ServiceResponse> {\r\n\r\n        const params = new HttpParams()\r\n            .set('splitterId', splitterId);\r\n\r\n        return this.http.get<ServiceResponse>(this.getSplitterApi, { params });\r\n    }\r\n\r\n    saveSplitter(splitter: Splitter): Observable<ServiceResponse> {\r\n        return this.http.post<ServiceResponse>(this.saveSplitterApi, splitter);\r\n    }\r\n\r\n    deleteSplitter(splitterId: string): Observable<ServiceResponse> {\r\n\r\n        const params = new HttpParams()\r\n            .set('splitterId', splitterId);\r\n\r\n        return this.http.delete<ServiceResponse>(this.deleteSplitterApi, { params });\r\n    }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { CheckboxModule } from 'primeng/checkbox';\r\n\r\n//import { TreeModule } from 'primeng/tree';\r\nimport { TreeTableModule } from 'primeng/treetable';\r\n\r\nimport { HomepassList } from './views/homepass-list';\r\nimport { HomepassDetails } from './views/homepass-details';\r\nimport { HomepassService } from './services/homepass.service';\r\nimport { HomepassRouting } from './homepass.routes';\r\nimport { SharedModule } from '../shared.module';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        CheckboxModule,\r\n        TreeTableModule,\r\n        HomepassRouting,\r\n        SharedModule\r\n    ],\r\n    declarations: [\r\n        HomepassList,\r\n        HomepassDetails\r\n    ],\r\n    providers: [\r\n        HomepassService\r\n    ]\r\n})\r\nexport class HomepassModule { }\r\n","import { ModuleWithProviders } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { HomepassList } from './views/homepass-list';\r\nimport { HomepassDetails } from './views/homepass-details';\r\n\r\nexport const homepassRoutes: Routes = [\r\n   {\r\n      path: 'homepasses',\r\n      children: [\r\n         { path: '', component: HomepassList },\r\n         { path: 'details', component: HomepassDetails },\r\n         { path: 'details/:id', component: HomepassDetails },\r\n      ]\r\n   },\r\n];\r\n\r\nexport const HomepassRouting: ModuleWithProviders = RouterModule.forChild(homepassRoutes);\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient, HttpParams } from \"@angular/common/http\";\r\nimport { PaginationRequest, SortOrder } from '../../common/models/paginationRequest';\r\nimport { PaginationResponse } from '../../common/models/paginationResponse';\r\nimport { ServiceResponse } from '../../common/models/serviceResponse';\r\nimport { Homepass } from '../models/homepass';\r\n\r\n@Injectable()\r\nexport class HomepassService {\r\n\r\n    getHomepassesApi = 'Homepasses/GetHomepasses/';\r\n    getHomepassApi = 'Homepasses/GetHomepass/';\r\n    getHomepassesInClusterApi = 'Homepasses/GetHomepassesInCluster/';\r\n    getHomepassesInPolygonApi = 'Homepasses/GetHomepassesInPolygon/';\r\n    getHomepassesWithinRadiusApi = 'Homepasses/GetHomepassesWithinRadius/';\r\n    saveHomepassApi = 'Homepasses/SaveHomepass/';\r\n    saveHomepassesApi = 'Homepasses/SaveHomepasses/';\r\n    deleteHomepassApi = 'Homepasses/DeleteHomepass/';\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    getHomepasses(paginationRequest: PaginationRequest): Observable<PaginationResponse> {\r\n\r\n        if (paginationRequest == null)\r\n            paginationRequest = {\r\n                page: null,\r\n                pageSize: null,\r\n                filter: null,\r\n                order: {\r\n                    orderByProperty: \"name\",\r\n                    sortOrder: SortOrder.descending\r\n                }\r\n            };\r\n\r\n        return this.http.post<PaginationResponse>(this.getHomepassesApi, paginationRequest);\r\n    }\r\n\r\n    getHomepass(homepassId): Observable<ServiceResponse> {\r\n\r\n        const params = new HttpParams()\r\n            .set('homepassId', homepassId);\r\n\r\n        return this.http.get<ServiceResponse>(this.getHomepassApi, { params });\r\n    }\r\n\r\n    //getHomepassesInCluster(clusterId): Observable<ServiceResponse> {\r\n\r\n    //    const params = new HttpParams()\r\n    //        .set('clusterId', clusterId);\r\n\r\n    //    return this.http.get<ServiceResponse>(this.getHomepassesInClusterApi, { params });\r\n    //}\r\n\r\n    //async getHomepassesInCluster(clusterId) {\r\n\r\n    //    const params = new HttpParams()\r\n    //        .set('clusterId', clusterId);\r\n\r\n    //    return await this.http.get<ServiceResponse>(this.getHomepassesInClusterApi, { params }).toPromise();\r\n\r\n    //}\r\n\r\n    saveHomepass(homepass: Homepass): Observable<ServiceResponse> {\r\n\r\n        return this.http.post<ServiceResponse>(this.saveHomepassApi, homepass);\r\n    }\r\n\r\n    saveHomepasses(homepasses: Homepass[]): Observable<ServiceResponse> {\r\n\r\n        return this.http.post<ServiceResponse>(this.saveHomepassesApi, homepasses);\r\n    }\r\n\r\n    deleteHomepass(homepassId: string): Observable<ServiceResponse> {\r\n\r\n        const params = new HttpParams()\r\n            .set('homepassId', homepassId);\r\n\r\n        return this.http.delete<ServiceResponse>(this.deleteHomepassApi, { params });\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Location } from '@angular/common';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HomepassService } from '../services/homepass.service';\r\nimport { Helper } from '../../common/helper';\r\nimport { Homepass } from '../models/homepass';\r\nimport { GeoHelper } from '../../common/geo/geoHelper';\r\nimport { GMapsHelper } from '../../common/geo/googleMapsHelper';\r\nimport { Point, Polygon } from '../../common/geo/geometry';\r\nimport { AppConfig } from '../../app.config';\r\n\r\ndeclare var $: any;\r\ndeclare var shp: any;\r\ndeclare var toGeoJSON: any;\r\ndeclare var google: any;\r\n\r\n@Component({\r\n    templateUrl: './homepass-details.html',\r\n    providers: [HomepassService],\r\n})\r\nexport class HomepassDetails implements OnInit {\r\n\r\n    homepassId: string;\r\n    homepass: Homepass;\r\n    homepasses: Homepass[] = new Array<Homepass>();\r\n    tabTitle: string = \"Add New\";\r\n    title: string = \"New Homepass\";\r\n    isNew = true;\r\n    map: any;\r\n    polyOptions: any;\r\n\r\n    constructor(\r\n        private location: Location,\r\n        private route: ActivatedRoute,\r\n        private appConfig: AppConfig,\r\n        private homepassService: HomepassService,\r\n        private helper: Helper) {\r\n\r\n        this.polyOptions = {\r\n            strokeWeight: 0,\r\n            fillOpacity: 0.45,\r\n            editable: false,\r\n            draggable: false\r\n        };\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n        let location = GMapsHelper.getLatLng(this.appConfig.settings.MapCenter);\r\n        this.map = GMapsHelper.initializeMap('homepassMap', location, 18, 21);\r\n\r\n        this.route.params.subscribe(\r\n            params => {\r\n                this.homepassId = params['id'];\r\n\r\n                if (this.homepassId == null) {\r\n                    this.title = \"New Homepass\";\r\n                    this.isNew = true;\r\n                }\r\n                else {\r\n                    this.title = \"Edit Homepass\";\r\n                    this.tabTitle = \"Edit Homepass\";\r\n                    this.isNew = false;\r\n                }\r\n\r\n                this.getFormData(this.homepassId);\r\n            });\r\n\r\n        GMapsHelper.addListener(this.map, 'dblclick', (event) => {\r\n\r\n            this.homepass = {\r\n                name: \"\",\r\n                code: \"\",\r\n                description: \"\",\r\n                type: \"\",\r\n                geometry: new Point([event.latLng.lng(), event.latLng.lat()]),\r\n                area: null,\r\n                connections: 1,\r\n            };\r\n\r\n            this.homepasses.push(this.homepass);\r\n            this.addHomepassMarker(this.homepass);\r\n\r\n        });\r\n    }\r\n\r\n    getFormData(homepassId: string) {\r\n\r\n        this.homepassService.getHomepass(homepassId).subscribe(\r\n            resp => {\r\n\r\n                this.homepass = null;\r\n\r\n                if (resp.status.toLowerCase() == \"error\") {\r\n                    this.helper.showAlertMessage(resp.message, \"error\");\r\n                }\r\n                else {\r\n                    if (resp.data != null) {\r\n                        this.homepass = resp.data;\r\n                        this.homepasses.push(this.homepass);\r\n                        this.map.setCenter({ lat: this.homepass.geometry.coordinates[1], lng: this.homepass.geometry.coordinates[0] });\r\n\r\n                        if (this.homepass.area)\r\n                            this.addHomepassPolygon(this.homepass);\r\n                        else\r\n                            this.addHomepassMarker(this.homepass);\r\n                    }\r\n                }\r\n\r\n                $(\"#ajax-loading\").hide();\r\n            },\r\n            (err) => {\r\n                $(\"#ajax-loading\").hide();\r\n                this.homepass = null;\r\n                let msg = `Unable to fetch homepass : ${err.message}`;\r\n                this.helper.showAlertMessage(msg, \"error\");\r\n            });\r\n    }\r\n\r\n    addHomepassMarker(homepass: Homepass) {\r\n\r\n        var location = GeoHelper.convertToPosition(homepass.geometry.coordinates);\r\n\r\n        var icon = {\r\n            url: \"images/map-entities/homepass.png\",\r\n            //scaledSize: new google.maps.Size(30, 30), // scaled size\r\n            //origin: new google.maps.Point(0, 0), // origin\r\n            //anchor: new google.maps.Point(0, 0) // anchor\r\n        };\r\n\r\n        var marker = new google.maps.Marker({\r\n            position: location,\r\n            icon: icon,\r\n            draggable: false,\r\n            cursor: 'pointer',\r\n            id: homepass.id,\r\n            code: homepass.code,\r\n            data: homepass,\r\n            map: this.map\r\n        });\r\n\r\n        marker.setTitle(homepass.name);\r\n\r\n        homepass.marker = marker;\r\n\r\n        GMapsHelper.addListener(marker, \"rightclick\", (event) => {\r\n            if (marker.draggable == true) {\r\n                marker.setOptions({ draggable: false });\r\n\r\n                marker.data.geometry.coordinates[0] = event.latLng.lng();\r\n                marker.data.geometry.coordinates[1] = event.latLng.lat();\r\n                this.homepass = marker.data;\r\n            }\r\n            else\r\n                marker.setOptions({ draggable: true });\r\n        });\r\n\r\n        //GMapsHelper.addListener(marker, 'dragend', (event) => {\r\n\r\n\r\n        //});\r\n\r\n        GMapsHelper.addListener(marker, 'click', (event) => {\r\n            this.homepass = marker.data;\r\n        });\r\n    }\r\n\r\n    addHomepassPolygon(homepass: Homepass) {\r\n\r\n        var polygon = GMapsHelper.createPolygon(homepass.area.coordinates, this.polyOptions);\r\n\r\n        polygon.setMap(this.map);\r\n        polygon.data = homepass;\r\n\r\n        //polygon.setTitle(homepass.name);\r\n\r\n        homepass.marker = polygon;\r\n\r\n        this.addCentroidMarker(polygon.data);\r\n\r\n        GMapsHelper.addListener(polygon, \"rightclick\", (event) => {\r\n\r\n            if (polygon.draggable == true) {\r\n\r\n                polygon.setOptions({ draggable: false, editable: false });\r\n\r\n                if (homepass[\"centroidMarker\"])\r\n                    homepass[\"centroidMarker\"].setMap(null);\r\n\r\n                var coords = polygon.getPath().getArray();\r\n\r\n                let newCoords = new Array<number[]>();\r\n\r\n                coords.forEach(x => {\r\n                    newCoords.push([x.lng(), x.lat()]);\r\n                });\r\n\r\n                newCoords.push(newCoords[0]);\r\n\r\n                let centroid = new Point(GeoHelper.polygonCenter(new Polygon([newCoords])));\r\n\r\n                polygon.data.area.coordinates = [newCoords];\r\n\r\n                polygon.data.geometry = centroid;\r\n\r\n                this.addCentroidMarker(polygon.data);\r\n\r\n                this.homepass = polygon.data;\r\n            }\r\n            else\r\n                polygon.setOptions({ draggable: true, editable: true });\r\n        });\r\n\r\n        GMapsHelper.addListener(polygon, 'click', (event) => {\r\n            this.homepass = polygon.data;\r\n        });\r\n    }\r\n\r\n    addCentroidMarker(homepass: Homepass) {\r\n\r\n        var location = GeoHelper.convertToPosition(homepass.geometry.coordinates);\r\n\r\n        var icon = {\r\n            url: \"images/map-entities/homepass.png\",\r\n        };\r\n\r\n        var marker = new google.maps.Marker({\r\n            position: location,\r\n            icon: icon,\r\n            draggable: false,\r\n            cursor: 'pointer',\r\n            map: this.map\r\n        });\r\n\r\n        marker.setTitle(homepass.name);\r\n\r\n        homepass[\"centroidMarker\"] = marker;\r\n    }\r\n\r\n    fileChangeEvent(event: any) {\r\n\r\n        var file = event.target.files[0];\r\n\r\n        var reader = new FileReader();\r\n\r\n        var fileExt = file.name.split('.').pop().toLowerCase();\r\n\r\n        reader.onload = (e) => {\r\n\r\n            try {\r\n\r\n                if (fileExt == \"kml\") {\r\n                    let kml = reader.result as string;\r\n                    let geojson = toGeoJSON.kml((new DOMParser()).parseFromString(kml, 'text/xml'));\r\n                    this.populateHomepasses(geojson.features);\r\n                }\r\n                else if (fileExt == \"zip\") {\r\n                    shp(reader.result as ArrayBuffer).then((geojson) => {\r\n                        this.populateHomepasses(geojson.features);\r\n                    });\r\n                }\r\n                else if (fileExt == \"csv\") {\r\n                    let csv = reader.result as string;\r\n                    this.populateHomepassesCsv(csv);\r\n                }\r\n\r\n            } catch (e) {\r\n                this.helper.showAlertMessage(\"Could not parse the file.\", \"error\");\r\n            }\r\n\r\n        }\r\n\r\n        if (fileExt == \"csv\" || fileExt == \"kml\")\r\n            reader.readAsText(file);\r\n        else if (fileExt == \"zip\")\r\n            reader.readAsArrayBuffer(file);\r\n        else\r\n            this.helper.showAlertMessage(\"Invalid file format\", \"error\");\r\n    }\r\n\r\n    populateHomepasses(features: any) {\r\n\r\n        this.homepasses.length = 0;\r\n\r\n        let homepasses = new Array<Homepass>();\r\n\r\n        for (var i = 0; i < features.length; i++) {\r\n            let properties = features[i].properties;\r\n\r\n            //let latLng = GeoHelper.convertToPosition([properties.Longitude, properties.Latitude]);\r\n            //const isValid: Error = GeoHelper.validateCoordinates(latLng);\r\n\r\n            //if ((isValid instanceof Error) == false) {\r\n\r\n            let centroid = null;\r\n            let polygon = null;\r\n\r\n            if (features[i].geometry.type.toLowerCase() == 'polygon') {\r\n                polygon = features[i].geometry;\r\n                centroid = new Point(GeoHelper.polygonCenter(features[i].geometry));\r\n            }\r\n            else {\r\n                centroid = features[i].geometry;\r\n            }\r\n\r\n            let homepass = {\r\n               name: properties.Building_T,\r\n               code: properties.Id ? properties.Id : properties.Building_T,\r\n                description: \"\",\r\n                type: \"\",\r\n                geometry: centroid,\r\n                area: polygon,\r\n                connections: 1,\r\n            };\r\n\r\n            homepasses.push(homepass);\r\n\r\n            if (homepass.area)\r\n                this.addHomepassPolygon(homepass);\r\n            else\r\n                this.addHomepassMarker(homepass);\r\n            //}\r\n        }\r\n\r\n        this.homepasses = homepasses;\r\n    }\r\n\r\n    populateHomepassesCsv(csvData: any) {\r\n\r\n        this.homepasses.length = 0;\r\n\r\n        let homepasses = new Array<Homepass>();\r\n\r\n        var allRows = csvData.split(/\\r?\\n|\\r/);\r\n\r\n        for (var i = 1; i < allRows.length; i++) {\r\n\r\n            if (allRows[i].trim() == \"\") continue;\r\n\r\n            let properties = allRows[i].split(',');\r\n            let lat = parseFloat(properties[3]);\r\n            let lng = parseFloat(properties[4]);\r\n\r\n            let latLng = GeoHelper.convertToPosition([lng, lat]);\r\n\r\n            const isValid: Error = GeoHelper.validateCoordinates(latLng);\r\n\r\n            if ((isValid instanceof Error) == false) {\r\n                let homepass = {\r\n                    name: properties[1],\r\n                    code: properties[0],\r\n                    description: \"\",\r\n                    type: \"\",\r\n                    geometry: new Point([lng, lat]),\r\n                    area: null,\r\n                    connections: properties[5],\r\n                };\r\n\r\n                homepasses.push(homepass);\r\n\r\n                this.addHomepassMarker(homepass);\r\n            }\r\n        }\r\n\r\n        this.homepasses = homepasses;\r\n    }\r\n\r\n    removeUploadedHomepass(index: number) {\r\n        var homepass = this.homepasses[index];\r\n\r\n        if (homepass.marker)\r\n            homepass.marker.setMap(null);\r\n\r\n        if (this.homepasses[index][\"centroidMarker\"])\r\n            this.homepasses[index][\"centroidMarker\"].setMap(null);\r\n\r\n        this.homepasses.splice(index, 1);\r\n\r\n    }\r\n\r\n    save() {\r\n\r\n        var errorMessages = this.validateHomepass(this.homepasses);\r\n\r\n        if (errorMessages.length == 0) {\r\n\r\n            this.homepasses.forEach(x => x.marker = null);\r\n            this.homepasses.forEach(x => {\r\n                if (x[\"centroidMarker\"])\r\n                    x[\"centroidMarker\"] = null;\r\n            });\r\n\r\n            this.homepassService.saveHomepasses(this.homepasses).subscribe(\r\n                resp => {\r\n                    if (resp.status.toLowerCase() == \"error\") {\r\n                        this.helper.showAlertMessage(resp.message, \"error\");\r\n                    }\r\n                    else {\r\n                        this.helper.showAlertMessage(\"Homepass information saved\", \"success\");\r\n                        this.goBack();\r\n                    }\r\n                },\r\n                (err) => {\r\n                    this.helper.showAlertMessage(\"Unable to save homepass information.\", \"error\");\r\n                });\r\n        }\r\n        else {\r\n            var errorMessage = this.helper.getErrorMessagesText(errorMessages);\r\n            this.helper.showAlertMessage(errorMessage, \"error\");\r\n        }\r\n    }\r\n\r\n    validateHomepass(homepasses: Homepass[]): string[] {\r\n        var errorMessages = [];\r\n\r\n        this.homepasses.forEach(homepass => {\r\n\r\n            if (homepass.name == null || homepass.name.trim() == '')\r\n                errorMessages.push(\"Homepass Name cannot be empty\");\r\n\r\n            if (homepass.code == null || homepass.code.trim() == '')\r\n                errorMessages.push(\"Homepass Code cannot be empty\");\r\n        });\r\n\r\n        return errorMessages;\r\n    }\r\n\r\n    deleteHomepass() {\r\n        var index = this.homepasses.findIndex(x => x.geometry.coordinates[0] == this.homepass.geometry.coordinates[0] && x.geometry.coordinates[1] == this.homepass.geometry.coordinates[1]);\r\n\r\n        if (this.homepasses[index].marker)\r\n            this.homepasses[index].marker.setMap(null);\r\n\r\n        if (this.homepasses[index][\"centroidMarker\"])\r\n            this.homepasses[index][\"centroidMarker\"].setMap(null);\r\n\r\n        this.homepasses.splice(index, 1);\r\n\r\n        if (this.isNew == false) {\r\n            this.homepassService.deleteHomepass(this.homepass.id).subscribe(\r\n                resp => {\r\n                    if (resp.status.toLowerCase() == \"error\") {\r\n                        this.helper.showAlertMessage(resp.message, \"error\");\r\n                    }\r\n                    else {\r\n                        this.helper.showAlertMessage(\"Homepass successfully deleted\", \"success\");\r\n                        this.goBack();\r\n                    }\r\n                },\r\n                (err) => {\r\n                    this.helper.showAlertMessage(\"Unable to delete homepass information.\", \"error\");\r\n                });\r\n        }\r\n        else {\r\n            this.homepass = null;\r\n        }\r\n    }\r\n\r\n    stringify(obj: any): string {\r\n        return JSON.stringify(obj);\r\n    }\r\n\r\n    goBack(): void {\r\n        this.location.back();\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { HomepassService } from '../services/homepass.service';\r\nimport { Homepass } from '../models/homepass';\r\nimport { SearchField } from '../../common/models/SearchField';\r\nimport { SearchFilter, SortOrder, ConditionOperator, Filter } from '../../common/models/paginationRequest';\r\nimport { Helper } from '../../common/helper';\r\nimport { AuthService } from '../../common/auth/auth.service';\r\n\r\n\r\ndeclare var $: any;\r\ndeclare var jBox: any;\r\n\r\n@Component({\r\n    templateUrl: './homepass-list.html',\r\n    providers: [HomepassService]\r\n})\r\nexport class HomepassList implements OnInit {\r\n\r\n    homepasses = new Array<Homepass>();\r\n    statusMessage: string = \"\";\r\n    pageSize = 10;\r\n    currentPage = 1;\r\n    totalPages = 1;\r\n    searchFields: SearchField[];\r\n    searchFilter: SearchFilter;\r\n    sortColumn: string;\r\n    sortOrder: SortOrder = SortOrder.descending;\r\n    previousElement: HTMLElement;\r\n    permissions = { edit: false, delete: false, add: false};\r\n\r\n    constructor(\r\n        private homepassService: HomepassService,\r\n        private helper: Helper,\r\n        private authService: AuthService) {\r\n\r\n        this.searchFields = new Array<SearchField>();\r\n        this.searchFields.push({ field: 'Name', label: 'Name', dataType: \"text\", value: \"\" });\r\n        this.searchFields.push({ field: 'Description', label: 'Description', dataType: \"text\", value: \"\" });\r\n        this.searchFields.push({ field: 'Type', label: 'Type', dataType: \"text\", value: \"\" });\r\n        this.searchFields.push({ field: 'UpdatedBy', label: 'Updated By', dataType: \"text\", value: \"\" });\r\n        this.searchFields.push({ field: 'UpdatedDate', label: 'Updated On', dataType: \"date\", value: \"\" });\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.statusMessage = \"Loading Homepasses...\";\r\n        this.pageSize = 10;\r\n        this.currentPage = 1;\r\n        this.sortColumn = null;\r\n        this.sortOrder = SortOrder.noSort;\r\n\r\n        this.permissions.add = this.authService.getFunctionalityAccess(\"RND_ADD_HOMEPASS\");\r\n        this.permissions.edit = this.authService.getFunctionalityAccess(\"RND_EDIT_HOMEPASS\");\r\n        this.permissions.delete = this.authService.getFunctionalityAccess(\"RND_DELETE_HOMEPASS\");\r\n\r\n        this.getFormData();\r\n    }\r\n\r\n    getFormData() {\r\n\r\n        $(\"#ajax-loading\").show();\r\n\r\n        this.totalPages = 1;\r\n\r\n        let paginationRequest = {\r\n            page: this.currentPage,\r\n            pageSize: this.pageSize,\r\n            filter: this.searchFilter,\r\n            order: {\r\n                orderByProperty: this.sortColumn,\r\n                sortOrder: this.sortOrder\r\n            }\r\n        };\r\n\r\n        this.homepassService.getHomepasses(paginationRequest).subscribe(\r\n            resp => {\r\n                this.homepasses = null;\r\n                if (resp.status.toLowerCase() == \"error\") {\r\n                    this.statusMessage = resp.message;\r\n                    this.helper.showAlertMessage(this.statusMessage, \"error\");\r\n                }\r\n                else {\r\n                    if (resp.data != null && resp.data.length > 0) {\r\n                        this.homepasses = resp.data;\r\n                        this.totalPages = Math.ceil(resp.recordCount / this.pageSize);\r\n                    }\r\n                    else {\r\n                        this.statusMessage = \"There are no registered homepasses.\";\r\n                    }\r\n                }\r\n\r\n                $(\"#ajax-loading\").hide();\r\n            },\r\n            (err) => {\r\n                $(\"#ajax-loading\").hide();\r\n                this.homepasses = null;\r\n                let msg = `Unable to fetch homepasses : ${err.message}`;\r\n                this.helper.showAlertMessage(msg, \"error\");\r\n                this.statusMessage = \"Error fetching homepasses.\";\r\n            });\r\n    }\r\n\r\n    search(searchFilter) {\r\n\r\n        this.searchFilter = searchFilter;\r\n        this.getFormData();\r\n    }\r\n\r\n    onPageSizeChange(pageSize) {\r\n        this.pageSize = pageSize;\r\n        this.getFormData();\r\n    }\r\n\r\n    onPageChange(currentPage) {\r\n        this.currentPage = currentPage;\r\n        this.getFormData();\r\n    }\r\n\r\n    onColumnClick(e: HTMLElement) {\r\n\r\n        if (this.previousElement && e.getAttribute('data-column') != this.previousElement.getAttribute('data-column')) {\r\n            this.previousElement.classList.remove('table-sorter-desc');\r\n            this.previousElement.classList.remove('table-sorter-asc');\r\n        }\r\n\r\n        this.previousElement = e;\r\n\r\n        this.sortColumn = e.getAttribute('data-column');\r\n\r\n        if (e.classList.contains(\"table-sorter-asc\")) {\r\n            e.classList.remove('table-sorter-asc');\r\n            e.classList.add('table-sorter-desc');\r\n            this.sortOrder = SortOrder.descending;\r\n        }\r\n        else if (e.classList.contains(\"table-sorter-desc\")) {\r\n            e.classList.remove('table-sorter-desc');\r\n            this.sortColumn = null;\r\n            this.sortOrder = SortOrder.noSort;\r\n        }\r\n        else {\r\n            e.classList.add('table-sorter-asc');\r\n            this.sortOrder = SortOrder.ascending;\r\n        }\r\n\r\n        this.getFormData();\r\n    }\r\n\r\n    delete(homepass: Homepass) {\r\n        new jBox(\"Confirm\", {\r\n            minWidth: 500,\r\n            minHeight: 70,\r\n            title: \"<b>Delete Homepass</b>\",\r\n            overlay: false,\r\n            content: \"Do you want to delete homepass - \" + homepass.name,\r\n            draggable: \"title\",\r\n            confirmButton: \"Yes\",\r\n            cancelButton: \"No\",\r\n            confirm: () => {\r\n                this.homepassService.deleteHomepass(homepass.id).subscribe(\r\n                    resp => {\r\n                        if (resp.status.toLowerCase() == \"error\") {\r\n                            this.helper.showAlertMessage(resp.message, \"error\");\r\n                        }\r\n                        else {\r\n                            if (resp.data != null) {\r\n                                this.helper.showAlertMessage(\"Homepass deleted.\", \"success\");\r\n                                this.getFormData();\r\n                            }\r\n                            else {\r\n                                this.helper.showAlertMessage(\"Error deleting homepass\", \"error\");\r\n                            }\r\n                        }\r\n                    },\r\n                    (err) => {\r\n                        this.helper.showAlertMessage(\"Error deleting homepass\", \"error\");\r\n                    });\r\n            }\r\n        }).open();\r\n    }\r\n\r\n    //getPermission(featureCode: string, accessType: string): boolean {\r\n    //   return this.accountService.getPermission(featureCode, accessType);\r\n    //}\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { DTPagination } from './components/data-table/dt-pagination';\r\nimport { DTSearch } from './components/data-table/dt-search';\r\nimport { CustomFieldsGroup } from './components/cf-group/cf-group';\r\n\r\n\r\n@NgModule({\r\n    imports: [CommonModule, RouterModule, FormsModule],\r\n    declarations: [\r\n        DTSearch,\r\n        DTPagination,\r\n        CustomFieldsGroup\r\n    ],\r\n    exports: [\r\n        FormsModule,\r\n        RouterModule,\r\n        DTSearch,\r\n        DTPagination,\r\n        CustomFieldsGroup\r\n    ]\r\n})\r\n\r\nexport class SharedModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient, HttpParams } from \"@angular/common/http\";\r\n\r\nimport { User } from '../models/user';\r\nimport { ServiceResponse } from '../../common/models/serviceResponse';\r\nimport { PaginationRequest, SortOrder } from '../../common/models/paginationRequest';\r\nimport { PaginationResponse } from '../../common/models/paginationResponse';\r\n\r\n\r\n@Injectable()\r\nexport class UserService {\r\n\r\n   getUsersApi = \"Users/GetUsers/\";\r\n   getUserApi = 'Users/GetUser/';\r\n   checkLoginIdExistsApi = 'Users/CheckLoginIdExists/';\r\n   saveUserApi = 'Users/SaveUser/';\r\n   deleteUserApi = 'Users/DeleteUser/';\r\n\r\n   constructor(private http: HttpClient) { }\r\n\r\n   authenticateUser(loginCredentials: any): Observable<ServiceResponse> {\r\n\r\n      return this.http.post<ServiceResponse>('/Users/Authenticate', loginCredentials);\r\n   }\r\n\r\n   getUserProfile(): Observable<ServiceResponse> {\r\n      return this.http.get<ServiceResponse>('/Users/GetUserProfile');\r\n   }\r\n\r\n   getUser(userId: string): Observable<ServiceResponse> {\r\n\r\n      const params = new HttpParams()\r\n         .set('userId', userId);\r\n\r\n      return this.http.get<ServiceResponse>(this.getUserApi, { params });\r\n   }\r\n\r\n   getUsers(paginationRequest?: PaginationRequest): Observable<PaginationResponse> {\r\n\r\n      if (paginationRequest == null)\r\n         paginationRequest = {\r\n            page: null,\r\n            pageSize: null,\r\n            filter: null,\r\n            order: {\r\n               orderByProperty: \"name\",\r\n               sortOrder: SortOrder.descending\r\n            }\r\n         };\r\n\r\n      return this.http.post<PaginationResponse>(this.getUsersApi, paginationRequest);\r\n   }\r\n\r\n   async checkLoginIdExists(loginId: string): Promise<ServiceResponse> {\r\n\r\n      const params = new HttpParams()\r\n         .set('loginId', loginId);\r\n\r\n      return await this.http.get<ServiceResponse>(this.checkLoginIdExistsApi, { params }).toPromise();\r\n   }\r\n\r\n   saveUser(user: User): Observable<ServiceResponse> {\r\n\r\n      return this.http.post<ServiceResponse>(this.saveUserApi, user);\r\n   }\r\n\r\n   deleteUser(userId: string): Observable<ServiceResponse> {\r\n      const params = new HttpParams()\r\n         .set('userId', userId);\r\n\r\n      return this.http.delete<ServiceResponse>(this.deleteUserApi, { params });\r\n   }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n    production: false,\n    Url:\"\"\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */","/* (ignored) */","/* (ignored) */"],"sourceRoot":"webpack:///"}